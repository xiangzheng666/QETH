Value of property .
Batches a list into a list of lists with sub - lists sized by a specified batch size .
returns True if type represents C ++ array type False otherwise
Serializer for consistency
: param dt : pythone datetime . datetime : return : 1999 - 02 - 01 string type
Helper function to read bytes until a certain end byte is hit
Calculate the margin in pixels above the plot area setting border_top .
Returns True if the GET querstring contains on values but it can contain empty keys . This is better than doing not bool ( request . GET ) as an empty key will return True

Return the receiver s contribution to tree diagram .
Check whether a certain column exists
Acquire the : attr : lock asynchronously
Takes a string and dictionary . replaces all occurrences of i with j
Parses a date string formatted like YYYY - MM - DD .
Checks if value can be part of binary / bitwise operations .
Trim left - right given string
Compile and return a Module s code object .
Check if the device is on .
Format a message in the log
Strip agents from a string .
Remove duplicates from list while preserving order .
Load proxy list from configured proxy source
Will make any functions return an iterable objects by wrapping its result in a list .
Round a number to a precision
This turns off stdout buffering so that outputs are immediately materialized and log messages show up before the program exits
Reads a Python object stored in a specified YAML file .
Remove all nodes and edges from the graph .
Get the first sunday of a month .
Convert things on the way from Python to the database .
Sends plain text using _send_text () .
Batches a list into a list of lists with sub - lists sized by a specified batch size .
load an nparray object from a json filename
Helper for iterating only nonempty lines without line breaks
Raises the supplied figure number or figure window .
Convert a CSV object to a numpy array .
Generates rst codeblock for given text and language
Wrap standard function to easily pass into map processing .
Args : x : iterable of strings
Run a command and return its stdout / stderr as a string .
Flip the writability of a file and return the old mode . Returns None if the file is already writable .
Get a slice from a table column holding arrays . ( see : func : table . getcolslice )
Return True if the queue is full
Determine if a Path or string is a file on the file system .
Parse an ISO format date ( YYYY - mm - dd ) .
Convert the given list of parameters to a JSON object .
Return the encoding type .
Check if file or directory is world writable .
Parse val into a positive integer .
Computes all the integer factors of the number n
HTTP request method of interface implementation .
Print training time at end of training
Move cursor to this line in the current buffer .
Send signal to process .
A helper to create a proxy method in a class .
Helper for plotting .
Return True if the queue is full False otherwise ( not reliable! ) .
Checks if a given string is an url
Returns the column mapped by db_field name
Generate an endless sequence of random integers from permutations of the set [ 0 ... N ) .
takes flags returns indexes of True values
Compute the path distance from given set of points
Format a string for screen printing .
A non - negative integer .
Finds first file in path whose filename matches pattern ( via : func : fnmatch . fnmatch ) or raises : exc : IndexError .
Turn dict keys and values into native strings .
Check if a file exists and is non - empty .
Return unit sphere coordinates from window coordinates .
Validate if non empty string
Returns a list of names of columns that are string type .
Set foreground - and background colors and intensity .
Gets a naive datetime from a datetime .
return an iterator that returns a chunk of a string every time it is called . notice that even though bufsize_type might be line buffered we re not doing any line buffering here . that s because our StreamBufferer handles all buffering . we just need to return a reasonable - sized chunk .
Covert numpy array to tensorflow tensor
Command line interface for PyBEL .
Init a noise variable .
r Like rotate but modifies l in - place .
Returns names of object columns in the DataFrame .
Return a prettier version of obj
Max reduction op .
Split a text into a list of tokens .
Checks if the filename exists under the path .
Like argsort but returns an index suitable for sorting the the original array even if that array is multidimensional
Get a ctypes void pointer to the memory mapped region .
Checks if value is an integer long integer or float .
Pause the music
Check if the memory is too full for further caching .
Given a list of coords for 3 points Compute the area of this triangle .
The parsed cookies attached to this request .
Performs str . strip () a column of a DataFrame Parameters : df - DataFrame DataFrame to operate on col_list - list of strings names of columns to strip dest - bool default False Whether to apply the result to the DataFrame or return it . True is apply False is return .
Check if value is a valid UUID .
Format a byte sized value .
Remove a file from an AWS S3 bucket .
Returns the maximum value of the domain .
Convert datetime to epoch seconds .
Convert a Mapper 1 - complex to a networkx graph .
Determine if a Path or string is a file on the file system .
Sets up the python include paths to include src
Not recommended for use on large lists due to time complexity but it works
Left padding with zero bytes to a given block size
Convert string from snake case to camel case .
Return unique list of iterable items preserving order .
Get list of datetime objects extracted from a filename
Given a list of coords for 3 points Compute the area of this triangle .
Interpolate linearly variable x in rangeX onto rangeY .
Converts a list of Token into a list of Token asuming size == 1
Uses box coordinates to crop an image without resizing it first .
Return a list of dicionaries . See set_order .
Pretty printing for numpy matrix X
Generates RGB values from HSV values in line with a typical light spectrum .
Determine whether we re in an interactive shell . Sets interactivity off if appropriate . cf http : // stackoverflow . com / questions / 24861351 / how - to - detect - if - python - script - is - being - run - as - a - background - process
searchs a value in a dicionary and returns the key of the first occurrence
Get a value from a dict which contains just one item .
Calculate the MD5 hash for a file .
Verifies that a string path actually exists and is a file
Turn bytes into base64
Return a lowercased string with non alphabetic chars removed .
return grandparent s path string
add arrow to plot
Returns True if pip exists inside the virtual environment . Can be used as a naive way to verify that the environment is installed .
Index of the last occurrence of x in the sequence .
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
Get the HEAD commit SHA1 of repository in current dir .
Return manhattan distance between two lists of numbers .
Returns the last location of the minimal value of x . The position is calculated relatively to the length of x .
Returns the year .
Callable function for the multiprocessing pool .
Return the unique items from iterable * seq * ( in order ) .
Applies maspy . xml . clearTag () to the tag attribute of the element and recursively to all child elements .
Uses the Unix ps program to see if a process is running .
Reshape data into ( num_example batch_size )
Draw a horizontal line up to a given length .
Return True if object is defined
Convert a string of bytes into an integer as per X9 . 62 .
Adds execute permission to file . : param filename : : return :
Get the last n items in readline history .
Wanted functionality from Counters ( new in Python 2 . 7 ) .
Get the clipboard s text on OS X .
Hacked run function which installs the trace .
Return a list of the ( name value ) pairs of the enum .
Determine whether we re in an interactive shell . Sets interactivity off if appropriate . cf http : // stackoverflow . com / questions / 24861351 / how - to - detect - if - python - script - is - being - run - as - a - background - process
Return True if variable is a numpy array
Scale the input array
Returns a datetime object of a given timestamp ( in local tz ) .
Returns the result of a number raised to a power
Returns file group s create aware * datetime * in UTC format .
Returns background color rgb tuple of right line
Iterable - first replacement of Python s built - in map () function .
pops multiple keys off a dict like object
Whether this path is a symbolic link .
Add a matplotlib colormap .
Utility function to remove duplicates from a list : param seq : The sequence ( list ) to deduplicate : return : A list with original duplicates removed
Return the sum of the element - wise product of vectors x and y . >>> dotproduct ( [ 1 2 3 ] [ 1000 100 10 ] ) 1230
Return the error rate based on dense predictions and 1 - hot labels .
Insert a new row in the Series .
iterator for JSON - per - line in a file pattern
Convert spherical coordinates to cartesian unit vectors .
Create directory with template for topic of the current environment
Reads complete file contents .
Serializes and writes given Python object to the specified YAML file .
Return index of the nth match found of pattern in strings
Split a sentence into list of words .
dictionary of conversion
Performs drag a element to another elmenet .
Simple abstraction on top of the : meth : ~elasticsearch . Elasticsearch . scroll api - a simple iterator that yields all hits as returned by underlining scroll requests . By default scan does not return results in any pre - determined order . To have a standard order in the returned documents ( either by score or explicit sort definition ) when scrolling use preserve_order = True . This may be an expensive operation and will negate the performance benefits of using scan . : arg client : instance of : class : ~elasticsearch . Elasticsearch to use : arg query : body for the : meth : ~elasticsearch . Elasticsearch . search api : arg scroll : Specify how long a consistent view of the index should be maintained for scrolled search : arg raise_on_error : raises an exception ( ScanError ) if an error is encountered ( some shards fail to execute ) . By default we raise . : arg preserve_order : don t set the search_type to scan - this will cause the scroll to paginate with preserving the order . Note that this can be an extremely expensive operation and can easily lead to unpredictable results use with caution . : arg size : size ( per shard ) of the batch send at each iteration . Any additional keyword arguments will be passed to the initial : meth : ~elasticsearch . Elasticsearch . search call :: scan ( es query = { query : { match : { title : python }}} index = orders - * doc_type = books )
Check if file or directory is world writable .
Function for fast reading from sensor files .
DFS detect connected component recursive implementation
compose a list of functions
Delete all the files and subdirectories in a directory .
Wrapper on iter method callback gets an iterator result
Pull a file directly from S3 .
Return the number of entries in a table by counting them .
Helper function to unpickle data from picklefile .
Create ctypes pointer to object .
Remove duplicates from an iterable preserving the order .
Match two names .
Convert a dict of 1d array to a numpy recarray
Serialize a sequence of Python objects into a YAML stream . Produce only basic YAML tags . If stream is None return the produced string instead .
Wrapper : Creates an array bound
Print at most limit elements of list .
Provide a 2D block view to 2D array .
Take a str and transform it into a byte array .
Print an error in red text . Parameters error ( HTTPError ) Error object to print .
Return unix SECOND timestamp of num mondays ago
convert string to int or float .
Random gamma variates .
Trick sphinx into displaying the desired module in these objects documentation .
Singleton definition .
convert to datetime to UTC offset .
checks if you are on a 64 bit platform
r Return the bounding box incorporating all non - zero values in the image . Parameters ---------- img : array_like An array containing non - zero objects . Returns ------- bbox : a list of slicer objects defining the bounding box
Estimates the memory of the supplied array in bytes
A generator that combines two iterables .
Return the last n results ( or possibly less if not found ) . Note that the last results are not necessarily the best ones! Depending on the search type .
Set the exectuable bit on the given filename
True positive rate tp / ( tp + fn )
Scroll both categories Canvas and scrolling container
Set y - axis limits of a subplot .
Get an item from a dict which contains just one item .
Loads the flow from a JSON file .
Test if an array is a square matrix .
Return a datetime object from an isoformat string .
Finds first file in path whose filename matches pattern ( via : func : fnmatch . fnmatch ) or raises : exc : IndexError .
save something to a pickle file
convert a ctypes structure to a dictionary
Skip a section
will plot a stack of traces one above the other assuming marray . shape = numRows numSamples
return an iterator that returns a chunk of a string every time it is called . notice that even though bufsize_type might be line buffered we re not doing any line buffering here . that s because our StreamBufferer handles all buffering . we just need to return a reasonable - sized chunk .
A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .
Update the column width .
Return the a string with the data type of a value for Graph data
True if all the args are functions and / or subroutines
Determine whether two strings are equivalent .
Format a string for screen printing .
Verifies that a string path actually exists and is a file
Removes the write permissions for the given file for owner groups and others .
Removes trailing zeroes from indexable collection of numbers
: rtype : numpy matrix
exit without breaking pipes .
See http : // www . peterbe . com / plog / uniqifiers - benchmark Originally f8 written by Dave Kirby
Parse bytes and return a namedtuple .
Connect to MySQL with retries .
Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** .
Write the configuration dictionary to an output file .
Builds a resource object property .
Deletes all the unnamed columns
Reads the date from a string in the format YYYY / MM / DD and returns : class : datetime . date
Gets RAM memory usage
Convert comma - delimited list / string into a list of strings
Random normal variates .
Add a queue log handler to the global logger .
The title of this window
Simple function to divide two numbers
When converting Spark SQL records to Pandas DataFrame the inferred data type may be wrong . This method gets the corrected data type for Pandas if that type may be inferred uncorrectly .
Try to get a number out of a string and cast it .
Determine if unicode string only contains ASCII characters .
Autoconnect slot activated when tbSourceDir is clicked .
FOR USE BY PROCESSES THAT NEVER DIE UNLESS EXTERNAL SHUTDOWN IS REQUESTED
stack_as_string
Pass in a dictionary that has unsafe characters as the keys and the percent encoded value as the value .
Note that this code compresses into a buffer held in memory rather than a disk file . This is done through the use of cStringIO . StringIO () .
Ensures that the argument is a list that either is empty or contains only strings : param arr : list : return :
Sorts a list of strings case insensitively as well as numerically .
Return a column of the given matrix .
Callback to go to the next tab . Called by the accel key .
helper function for quick base conversions from integers to strings
Select rows where the given field is not None .
Execute a command installed into the active virtualenv .
Return True if value is an integer .
Added because the Dropbox OAuth2 flow doesn t work when scope is passed in which is empty .
Saves the case as an Excel spreadsheet .
An enum is encoded by a int representing the zero - based position of the symbol in the schema .
Output a networkx graph to a DOT file .
Format numpy array as a string .
Helper method to check if a set of types is the { AnyObject } singleton
shows JSON indented representation of d
Generate a service class for the service contained in the specified metadata class .
Convert a string to a list with sanitization .
Lists names of all blobs by their prefix .
Convert list of key value lists to dict
Returns the first value of a series .
Get adjacency matrix .
Remove prefix ( and space ) from line
Return a dataframe that is a cross between dataframes df1 and df2
Load and execute a python file .
Create NumPy array from a pointer to some memory .
Test for ReverseDNS class
Return a new : class : DataFrame containing rows only in both this frame and another frame .
Determine whether indicated file appears to be a gzipped FASTQ .
Alternate name for filter so as to not collide with the built - in python filter operator .
Checks whether all number in the sequence s lie inside the interval formed by l and r .
Convert to snake case .
Show the stretched data .
Pad the text .
When the with statement ends .
r Directly reads text data from url
Tokenizes * source * and returns the tokens as a list of lists .
check if element is present by css
Helper for matplotlib imshow
Generate image data using PIL
Wrap an AST Call node to lambda expression node . call : ast . Call node
r Close all opened windows .
Checks for local config overrides for pylint and add them in the correct pylint options format .
Write the ROI model to a FITS file .
converts Synergy Timestamp for session to UTC zone seconds since epoch
Report whether this RangeSet contains another set .
Request that the Outstation perform a cold restart . Command syntax is : restart
Is the SQLAlchemy column type one that inherits from : class : Numeric such as : class : Float : class : Decimal ?
Find the bounding box around nonzero elements in the given array
helper to clean up an input string
The distance between two skip - connections .
Reads text file contents
press to continue
Convert datetime to epoch seconds .
Put a PID into a pidfile
print_tree : prints out structure of tree Args : indent ( int ) : What level of indentation at which to start printing Returns : None
Fill an array from a list
Wrapper to make map () behave the same on Py2 and Py3 .
Deserialize s ( a str ) to a Python object .
If the statement is false raise the given exception .
Add a section a subsection and some text to the document .
: type s str
Convert a date into a datetime
Blocks until a keyboard event happens then returns that event s name or if missing its scan code .
* Get the root path for this python package - used in unit testing code *
Returns number rounded to digits digits .
Create database tables from sqlalchemy models
Fetch a subset of randomzied GUIDs from the whitelist
Validate input data with input schema .
Index of the last occurrence of x in the sequence .
Ensure the cursor is within horizontal screen bounds .
Find a number using a given regular expression . If the string cannot be found returns None . The regex should contain one matching group as only the result of the first group is returned . The group should only contain numeric characters ( [ 0 - 9 ] + ) . s - The string to search . regex - A string containing the regular expression . Returns an integer or None .
Return an enum from a name Args : enum_name ( str ) : name of the enum Returns : Enum
Display Bloch sphere and corresponding data sets .
Store the given custom value and call the setter function .
Add a read_range primitive
Connects to the voice channel associated with this Player .
Converts text that may be camelcased into an underscored format
Return the a new dict with underscores instead of hyphens in keys .
Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .
Show the received object as precise as possible .
Transforms the regular socket . socket to an ssl . SSLSocket for secure connections . Any arguments are passed to ssl . wrap_socket : http : // docs . python . org / dev / library / ssl . html#ssl . wrap_socket
Return the top - level element of a document sub - tree containing the YAML serialization of a Python object .
Saves a representation of the case in the Graphviz DOT language .
computes factorial of n
if the value is in the list move it to the front and return it .
Run a demo doitlive session .
Given a callable func trap the indicated exceptions for up to retries times invoking cleanup on the exception . On the final attempt allow any exceptions to propagate .
Put curly brackets round an indented text
writes a string to file
Return lines of a file with whitespace removed
Check if cnr or cns files are empty ( only have a header )
Removes an object / rabalist from registery . This is useful if you want to allow the garbage collector to free the memory taken by the objects you ve already loaded . Be careful might cause some discrepenties in your scripts . For objects cascades to free the registeries of related rabalists also
Transform underscore separated string to pascal case
convert column to index . Eg : ConvertInIndex ( AB ) = 28
Return a flatten version of the nested argument
Add a menu entry .
Clear all indexes in the es core
Return a random paragraph .
Parse a bool from a string .
Set value in bytearray to int
Load JSON file
Convert special characters using %xx escape .
Determine if a file is empty or not .
Validates that the object itself is some kinda string
Perform log transform log ( x + 1 ) . Parameters ---------- data : array_like
Returns a file descriptor from stdin or opening a file from a given path .
Simple measure of similarity : Number of letters in common / max length
Returns a datetime object of a given timestamp ( in UTC ) .
Return the unique elements of a collection even if those elements are unhashable and unsortable like dicts and sets
Returns the number of processors on this machine .
linear regression calculation
Return index of sub_string in string .
!
get a set of keys from redis
Detects whether a line is present within a file .
HTTP response for not - authorized access ( status code 403 )
image resize function used by quite a few image problems .
Add dots .
Returns the arithematic mean of the values in the passed list . Assumes a 1D list but will function on the 1st dim of an array ( ! ) .
Creates converts to a masked array
Update only one property in the dict
Apply a function in parallel to each element of the input
Runs the function asynchronously taking care of exceptions .
Read text from stdin and print a helpful message for ttys .
Merge two dicts and return a new dict . Much like subclassing works .
see doc in Term class
Try to get a number out of a string and cast it .
Sets the window bounds from a tuple of ( x y w h )
Does a simple validation of an email by matching it to a regexps
Executes a ( shell ) command in the background
Removes the write permissions for the given file for owner groups and others .
Helper for matplotlib imshow
Bulk insert or update .
initializes 3D plot
Python s input () is blocking which means the event loop we set above can t be running while we re blocking there . This method will let the loop run while we wait for input .
Convert camelcase to lowercase and underscore .
Can edit this object
Set x - axis limits of a subplot .
Load JSON file
Make a set of unique n - grams from a string .
Returns an empty QuerySet .
Read in file contents and set the current string .
Read and return filename in root dir of project and return string
Return whether an object is a path .
Conveinience :
Normalize name for the Statsd convention
Determine the index of the point just before two lines with common x values .
Get the contents of an object stored in S3 as string .
Align the position in the file to the next block of specified size
Iterate over all JSON input ( Generator )
If we re not on the first line ( of a multiline input ) go a line up otherwise go back in history . ( If nothing is selected . )
Convenient shorthand for toarray ( * args ** kwargs ) . view ( np . recarray ) .
This function should be called instead of direct spio . loadmat as it cures the problem of not properly recovering python dictionaries from mat files . It calls the function check keys to cure all entries which are still mat - objects
Convert a string of a calculation energy e . g . - 1 . 2345 eV to a float .
Given a dictionary and a key list remove any data in the dictionary with the given keys .
For every key value pair return the mapping for the equivalent value key pair
Render a jinja template
Print something on screen when self . verbose == True
Convert a CSV object to a numpy array .
: raises docker . exceptions . APIError
Utility method to convert list to tsv line with carriage return
React to a docstring event and append contracts to it .
Takes a nested list and returns the size of each dimension followed by the element type in the list
Close log
Returns numpy array of natural logarithms of values .
Return a shell - escaped version of the string s .
Returns the item that appears most frequently in the given list .
Removes underscores and capitalizes the neighbouring character
Returns the year .
string dict / object / value to JSON
convert iterable object into numpy array
Given two data points [ X Y ] linearly interpolate those at x .
Args : xml_str : str DataONE API XML doc .
Format a string for screen printing .
Helper function for creating hash functions .
Return the number of bytes stored in the value of key within hash name
A block of standard 2d convolutions .
Format a Python object into a pretty - printed representation .

Returns uptime in seconds or None on Syllable .
Convert file extension to lowercase .
Returns True if this node has no children or if all of its children are ParseNode instances and are empty .
left button down : report x y coords start zooming mode
return a normalized version of abmn
Inputs [ a b c ] returns { a : 0 b : 1 c : 2 } .
Simple wrapper to kubectl .
checks to see if list is equal everywhere
Creates a map of letter use in a word .
Return the nth value of array
This will equal 124 for the V1 database .
Convert seconds to hours mins and seconds .
Return the width of the table including padding and borders .
Pass in a dictionary that has unsafe characters as the keys and the percent encoded value as the value .
Apply re . sub to bunch of ( pattern repl )
Returns a proper string that should work in both Py3 / Py2
Public function that reads a local file and generates a SHA256 hash digest for it
Banana banana
Apply last 2D transforms
Slugify filename
Flush the write buffers of the stream if applicable .
Internal function to overcome pickling problem in python2 .
Download file from http url link
Updates background color
Generate odd sized truncated Gaussian
Parse an ISO format date ( YYYY - mm - dd ) .
Create an instance from a dictionary .
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
Return True if val is of integer type .
Delete a directory if it s present . If it s not present no - op .
Returns the last location of the minimal value of x . The position is calculated relatively to the length of x .
Transforms the regular socket . socket to an ssl . SSLSocket for secure connections . Any arguments are passed to ssl . wrap_socket : http : // docs . python . org / dev / library / ssl . html#ssl . wrap_socket
Returns the number of rows of the main dataframe
kill process Args : process - Popen object for process
Return the attribute name identifier
Convert a list of strings to a list of integers .
Get the file size of a given file
Return the median of numeric data unsing the mean of middle two method . If data is empty 0 is returned .
Populate axis limits GUI with current plot values .
Convert a string of bytes into an integer as per X9 . 62 .
Draw header with underline
Choose the most common item from the list or the first item if all items are unique .
Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .
Convert a CSV object to a numpy array .
Saves dictionary as CSV file .
Return True if val is of integer type .
calculate time delta from latched time and current time
Check if a string is a bytes instance
Print a colored string to the target handle .
Internal convenience function for deprecation warnings
Convert an OrderedDict containing C values to a 1D array .
Searches for the specified method and returns its descriptor .
Are two indexes equal? Checks by comparing str () versions of them . ( AM UNSURE IF THIS IS ENOUGH . )
Returns whether the specified element selector is present on the page .
Frees all resources .
Shape of histogram s data .
Extracts a function s indentation as a string In contrast to an inspect . indentsize based implementation this function preserves tabs if present .
safe version of pow
Add or update styles
Returns some subset of the features . Parameters ---------- indices : : obj : list of : obj : int indices of the features in the list
Output a networkx graph to a DOT file .
Create database tables from sqlalchemy models
Convert a list of JSON values to a list of models
how high in sorted list each key is . inverse permutation of sorter such that sorted [ rank ] == keys
Return start and end date of this month .
Adds self as child of parent then adds parent .
Check if the string is only composed of hex characters .
Closes the serial port .
iterator version of get_list_column
Convert CamelCase to camel_case
Intersect dictionaries d1 and d2 by key * and * value .
Return the Location of the center of this region
string dict / object / value to JSON
Removes all . py files .
Call a function after a delay unless another function is set in the meantime .
Removes tags from objects
Covert numpy array to tensorflow tensor
Like argsort but returns an index suitable for sorting the the original array even if that array is multidimensional
Uses numpy . load to open the underlying file
Get the last weekday in a given month . e . g :
Create an array . Keyword arguments as per : func : zarr . creation . zeros .
Random uniform variates .
Calculate the size of x along axis dimensions only .
Apply re . sub to bunch of ( pattern repl )
Retrieves and removes the first task from the heap .
Merge modified objects into parent transaction .
Convenience function for loading yaml - encoded data from disk .
Finds parent folder of file
Skip a section
Get input from the user given an input function and an input string
Square of the euclidean distance
Check if obj is a sequence but not a string or bytes .
Test if an executable is available on the system .
remove decoded instruction from instruction cache
Return the angle between vectors a and b in degrees .
Update dict with fields from obj . attributes .
Format text with color or other effects into ANSI escaped string .
A Bark logging handler logging output to a named file . At intervals specified by the when the file will be rotated under control of backupCount .
Reads a stream discarding the data read and returns its size .
Constructs the covariance matrix from PCA residuals
Left addition .
Convert to camel case .
Method to handle what to do when the stop button is pressed
Determine the largest contig for each strain : param contig_lengths_dict : dictionary of strain name : reverse - sorted list of all contig lengths : return : longest_contig_dict : dictionary of strain name : longest contig
Return a list of all parsed comments in a file . Mostly for testing & interactive use .
Removes all blank lines in @string
Coerce value to an JSON - compatible representation .
Checks if we already have an opened tab with the same name .
I convert strings into integers floats and strings!
Like dict but does not hold any null values .
Returns a bool determining if the process is in a running state or not
Add a column to a FITS file .
Convert anything to a bytearray . See - http : // stackoverflow . com / questions / 7585435 / best - way - to - convert - string - to - bytes - in - python - 3 - http : // stackoverflow . com / questions / 10459067 / how - to - convert - my - bytearrayb - x9e - x18k - x9a - to - something - like - this - x9e - x1
Sync the database with the current state of the game .
Horizontally flip the given PIL Image .
Convert to float if object is a float string .
Add widget actions to toolbar
Calculates and returns a month number basing on PESEL standard .
Return a dict where the keys are all the values listed in the values of the original dict
Check whether the passed variable is a tuple with two floats or integers
Add executable permissions to the file
Make a n + 1 dim one - hot array from n dim int - categorical array .
Get the id of the last written row in table
Validates an email address Source : Himanshu Shankar ( https : // github . com / iamhssingh ) Parameters ---------- email : str
Return a hash of the contents of a dictionary
Utility function to remove duplicates from a list : param seq : The sequence ( list ) to deduplicate : return : A list with original duplicates removed
Open a file .
Returns HTML from MediaWiki markup
Convenient shorthand for toarray ( * args ** kwargs ) . view ( np . recarray ) .
Take a US format date and return epoch .
Download an HTML page using the requests session and return the final URL after following redirects .
Region formed by taking border elements .
Draw a vertical line up to a given length .
Implements the context manager protocol . Specially useful for asserting exceptions
Coerces JSON string to boolean
Load from stored files
Get the modified time for a file as a datetime instance
Set value of the checkbox .
Generate the first value in each row .
Make the given theme current .
Check if the file - like object is readable .
Will make any functions return an iterable objects by wrapping its result in a list .
Return all rows from a cursor as a list of : class : OrderedDict objects .
Returns obj . field data as a dict
Assumes myList is sorted . Returns closest value to myNumber . If two numbers are equally close return the smallest number .
Determine if given filename is an image .
convert record array to a dictionaries
Converts query strings into native Python objects
exit without breaking pipes .
Build a C ++ binary executable
Return flattened dictionary from MultiDict .
Find the bounding box around nonzero elements in the given array
Does this filename match any of the patterns?
Load the correct module according to the version
Parses hostname from URL . : param url : URL : return : hostname
Returns the length in bytes of a given file object . Necessary because os . fstat only works on real files and not file - like objects . This works on more types of streams primarily StringIO .
Terminate all workers and threads .
Spawns a kafka continuous consumer thread
Short Time Fourier Transform for real data keeping the full FFT block .
IP address range validation and expansion .
Returns unique values in a column
Unpickle a python object from the given path .
Finds parent folder of file
Removes trailing zeroes from indexable collection of numbers
Report whether the given value is a byte or unicode string .
This function flatten given nested list . Argument : nested list Returns : flat list
Retrieve the next row .
Return True if the given object conforms to the Serializable protocol .
Get a type attribute statically circumventing the descriptor protocol .
Takes a list of ( key value ) pairs and turns it into a dict .
Returns int () of val if val is not convertable to int use default instead
Returns path to packaged static files
Returns true if the virtualenv tool is installed .
Get a single document from the collection this class is bound to . Additional arguments are processed according to _prepare_find prior to passing to PyMongo where positional parameters are interpreted as query fragments parametric keyword arguments combined and other keyword arguments passed along with minor transformation . Automatically calls to_mongo with the retrieved data . https : // api . mongodb . com / python / current / api / pymongo / collection . html#pymongo . collection . Collection . find_one
Scale the image to uint8
Value of property .
Rotates an image by deg degrees
Returns a list copy in which each item occurs only once ( in - order ) .
converts df to dict and adds a datetime field if df is datetime
Remove tags from a file .
Tokenizes * source * and returns the tokens as a list of lists .
Run unit tests .
Flip an image horizontally or vertically .
Return a dictionary of words and word counts in a string .
Remove the specified parameter from this query
Coerce value to an JSON - compatible representation .
Get line count of file
Flatten all dimensions of a except the last .
htmlify string
True if the last two moves were Pass or if the position is at a move greater than the max depth .
Return physical memory usage ( float ) Requires the cross - platform psutil ( > = v0 . 3 ) library ( https : // github . com / giampaolo / psutil )
HParams for training languagemodel_lm1b32k_packed . 880M Params .
Set limits for the x - axis .
Normalizes the given vector . The vector given may have any number of dimensions .
zfill ( x width ) - > string
Places a legend box outside a matplotlib Axes instance .
Gets last change time for a single file
Handles the specified flask request for one of the POST URLS Invokes the specified endpoint to generate a response .
Test the multiprocess
Return the dotproduct between self and another vector .
Wrapper on iter method callback gets an iterator result
Configure the logging module .
Fill NaNs with the previous value the next value or if all are NaN then 1 . 0
Store ipython references in the __builtin__ namespace .
Quit signal handler .
Close our socket .
Remove an object from the bin folder .
Test if a file is located within the given directory .
kill process Args : process - Popen object for process
Determines if a system process identifer exists in process table .
Logs the basic endpoint requested
Converts html content to plain text
Return random lognormal variates .
Returns day number of the last day of the month : param t : datetime : return : int
Clears the console .
Detokenize a string by removing spaces before punctuation .
Takes a nested list and returns the size of each dimension followed by the element type in the list
Exit the shell session .
Wrapper around Django s get_language utility . For Django > = 1 . 8 get_language returns None in case no translation is activate . Here we patch this behavior e . g . for back - end functionality requiring access to translated fields
Returns the size of a specific dimension .
r Repeat each item in iterable n times .
Like from pairs but combines duplicate key values into arrays : param pairs : : return :
Shot noise corruption to images .
Determines if value value is empty . Keyword arguments : value str -- the value of the associated field to compare
Empty a table by deleting all of its rows .
Places a legend box outside a matplotlib Axes instance .
Normalize time in arbitrary timezone to UTC naive object .
Convert input argument to bytes
Terminate all workers and threads .
Get the clipboard s text on OS X .
replace nan in a by val and returns the replaced array and the nan position
Test two dictionary is equal on values . ( ignore order )
Return the given date with nb_months substracted from it .
Choose the most common item from the list or the first item if all items are unique .
Plots a graph in graphviz dot notation .
Returns a 3x3 cross - product matrix from a 3 - element vector .
Converts a dict to an encoded URL . Example : given data = { a : 1 b : 2 } it returns a = 1&b = 2
Convert arrays of datetime . datetime and datetime . timedelta objects into datetime64 and timedelta64 according to the pandas convention .
date to unix timestamp in milliseconds
Union of masks .
Determine whether a system service is available
autoscan will check all of the serial ports to see if they have a matching VID : PID for a MicroPython board .
True if the json_element passed is present for the task specified .
Same as lazy_binmap except the parameters are flipped for the binary function
True if values are not increasing .
Build a C ++ binary executable
Returns the keys that maps to the top n max values in the given dict .
A basic check of if the program is running in interactive mode
Reads a python file and returns a awslambda . Code object : param python_file : : return :
Push item onto heap maintaining the heap invariant .
filter for dict note f should have signature : f :: key - > value - > bool
Returns a copy of the list without duplicates .
Add a blank row with only an index value to self . df . This is done inplace .
Test whether the current python environment is the correct lore env .
Perform auth request for token .
Crops and / or pads an image to a target width and height .
Dump Python object as JSON string .
Executes SQL ; returns list of first values of each row .
Like many_until but must consume at least one of these .
must be an iterable ( list array tuple )
Check whether a certain column exists
Create a timezone - aware datetime object from a datetime string .
Indent a piece of text .
Report effective gevent monkey patching on the logs .
Pyqt specific resize callback .
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Inputs [ a b c ] returns { a : 0 b : 1 c : 2 } .
Compute timestamp from a datetime object that could be timezone aware or unaware .
Fast median operation for masked array using 50th - percentile
Returns True if contents of the files are the same
Return a list of values for the given selection .
Download file from http url link
Check different items in matrix classes .
If Python 2 replace non - ascii characters and return encoded string .
Returns the value coresponding to the given enum name .
Set the exectuable bit on the given filename
Report whether the given value is a byte or unicode string .
Pre - order depth - first
For a single index and return the value
Wrapper for the requests . request () function . It accepts the same arguments as the original plus an optional retries that overrides the default retry mechanism .
Exit execution with return code and message : param msg : Message displayed prior to exit : param code : code returned upon exiting
Yield all items from iterable except the last one .
Convert the value to its string representation
Normalize data .
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
Convert cartesian to lon lat .
Runs the unit test framework . Can be overridden to run anything . Returns True on passing and False on failure .
Get tuple ( actually a generator ) of indices where the max value of array x occurs . Requires that x have a max () method as x . max () ( in the case of NumPy ) is much faster than max ( x ) . For a simpler faster argmax when there is only a single maximum entry or when knowing only the first index where the maximum occurs call argmax () on a NumPy array .
Create all your database objects ( SQLAlchemy specific ) .
r Repeat each item in iterable n times .
Validates an email address Source : Himanshu Shankar ( https : // github . com / iamhssingh ) Parameters ---------- email : str
Performs a random step without a self - loop .
A non - optimal implementation of a regex filter
Generate random id numbers .
Create a timezone - aware datetime object from a datetime string .
Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output
Primary entry point to turn kwargs into properties
Populate the ranks key .
A map to look up the index of a edge
Creates a new dict from an existing dict that only has the given keys
Sets args and kwargs that are passed when creating a subparsers group in an argparse . ArgumentParser i . e . when calling argparser . ArgumentParser . add_subparsers
Fetch a subset of randomzied GUIDs from the whitelist
Return whether two objects are equal via recursion using : func : numpy . array_equal for comparing numpy arays .
Checks if the string is a palindrome ( https : // en . wikipedia . org / wiki / Palindrome ) .
Return opened file with a specific encoding .
Return True if the method is a bound method ( attached to an class instance .
Determine whether stdin has any data to read .
Check if the folder exisits . If not create the folder
Clips a prefix from the beginning of a string if it exists .
Check if valid input tag or document .
Calls a procedure .
Called by the instance manager when a component property is modified
Writes a dictionary to a yaml file : param dictionary : the dictionary to be written : param path : the absolute path of the target yaml file : param kwargs : optional additional parameters for dumper
1x1 convolution
Check for valid instance name
Setup the flask - cache on a flask app
Helper for iterating only nonempty lines without line breaks
Cast uint32 RGB image to 4 uint8 channels .
Random uniform variates .
List APIs in account .
abstract method
A non - optimal implementation of a regex filter
Return dict mapping item - > indices .
Returns the item that appears most frequently in the given list .
Get rid of all axis ticks lines etc .
filter for dict note f should have signature : f :: key - > value - > bool
Build the header
Determine whether stdin has any data to read .
This method asserts that only one value of the provided list is True .
construct the model matrix columns for the term
Changes a column name in a DataFrame Parameters : df - DataFrame DataFrame to operate on col_name - string Name of column to change new_col_name - string New name of column
Get domain part of an url .
Build a C ++ binary executable
Check the checkbox matching the CSS selector .
Returns a list copy in which each item occurs only once ( in - order ) .
Send a POST request
Log - normal function from scipy
Google AppEngine Helper to convert a data type into a string .

internal state reset . used e . g . in unittests
A basic slug version of a given parameter list .
Parses a date string formatted like YYYY - MM - DD .
Returns the index of the earliest occurence of an item from a list in a string
Make file user readable if it is not a link .
Call a remote api method but don t raise if an error occurred .

Remove instance from model
Interpolated flux at a given wavelength ( calls np . interp ) .
Make a set of unique n - grams from a string .
Ask a yes / no question interactively .
Converts C char arrays to bytes and C NULL values to None .
Rewrite a file adding a line to its beginning .
Code due to Thomas Heller - published in Python Cookbook ( O Reilley )
Install or upgrade setuptools and EasyInstall
Add a label to the x - axis .
Remove duplicates from a list preserving the order .
Assert that a value must be a given type .
Clears the console .
Unlink the file handler association .
Checks for an empty image .
Return string with compressed whitespace .
Updates requests session user - agent with the driver s user agent
Converts markdown content to text
Try to remove all comments from a file and save it if changes were made .
Take a dataframe and string - i - fy a column of values . Turn nan / None into and all other values into strings .
Add a section a subsection and some text to the document .
Get the dimensions of a capture
Reads image specified by path into numpy . ndarray
Returns a list of keys in the database
Check that the page title matches the given one .
Updates col_widths in code_array

Creates a variation from a base value
Outputs a string to the console ( stdout ) .
Strip all color codes from a string . Returns empty string for falsey inputs .
Try to convert variables into datatypes .
Resizes the given image to fit inside a box of the given size .
Return a hash of the contents of a dictionary
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
only resize input image to target size and return scale : param im : BGR image input by opencv : param short : one dimensional size ( the short side ) : param max_size : one dimensional max size ( the long side ) : return : resized image ( NDArray ) and scale ( float )
If values in a series match a specified value change them to np . nan .
Select rows where the given field is not None .
Apply Gaussian blur to the given data .
returns the qth most probable element in the dawg .
Calculate the delay
Add a blank row with only an index value to self . df . This is done inplace .
Closes the websocket connection .
from http : // stackoverflow . com / a / 14033137 / 623735 # gets the indices of the rows with nan values in a dataframe pd . isnull ( df ) . any ( 1 ) . nonzero () [ 0 ]
Swap i and j rows
Determine if a year is leap year .
Close child subprocess
create a graphviz graph from text
Parse ISO8601 timestamps given by github API .
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
Join the given iterable with
A wrapper around tf multiplication that does more automatic casting of the input .
Keep one of the subplots completely empty .
Checks if value is an integer long integer or float .
Load JSON file
Exchange a code ( and state token ) for a bearer token
setuptools blah : it still can t run a module as a script entry_point
Linspace op .
Initializes functions that are invoked when the user or OS wants to kill this process . : return :
Deletes all files whose filename matches the glob pattern ( via : func : glob . glob ) .
Load YAML from file .
Closes the connection
Remove resource instance from internal cache
Returns True when alias already in shell config .
pops multiple keys off a dict like object
Returns a list of synsets of a word after lemmatization .
Determine if end - of - file is reached for file fd .
Helper function to get the location of a Python file .
Return a repr () for a list / tuple
Compute boxplot for given pandas Series .
Get the display length of a string . This can differ from the character length if the string contains wide characters .
Wrapper to make map () behave the same on Py2 and Py3 .
Integer to two bytes
Strip excess spaces from a string
Under UNIX : is a keystroke available?
Counts the word frequences in a list of sentences .
True if specified value exists in int enum ; otherwise False .
Print a log message to standard error .
Execute all tests ( normal and slow ) with coverage enabled .
Checks if the input data is a Swagger document
r Parses a string into a list of pairs .
String hash ( djb2 ) with consistency between py2 / py3 and persistency between runs ( unlike hash ) .
Returns the longest string size for a string entry across data .
Add a spec to a mock . spec can either be an object or a list of strings . Only attributes on the spec can be fetched as attributes from the mock .
Return the attribute name identifier
Deletes all files whose filename matches the glob pattern ( via : func : glob . glob ) .
Detects whether a line is present within a file .
Truncates a value to a number of decimals places
Wait until the user accepted or rejected the request
Saves the case as an Excel spreadsheet .
Test the multiprocess
Helper function to get the location of a Python file .
Calculates the request payload size
a normal old python function to return the Nth fibonacci number .
Se asegura de que un directorio exista .
Initialize Flask application .
determines whether the card number is valid .
Wait until all task are executed .
Returns ( first ) selected item or None
Check if a password is valid
Ensures that the argument is a list that either is empty or contains only strings : param arr : list : return :
Adapts a Numpy array into an ARRAY string to put into the database .
Normalize a field to a ( min max ) exposure range default is ( 0 255 ) . ( min max ) exposure values . Invert the image if requested .
Returns the value of the other type instance to use in an operator method namely when the method s instance is on the left side of the expression .
Computes l2 norm of params by flattening them into a vector .
Returns a sorted list of all system font names
non - recursively break spaces and remove newlines in the tag
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
Initialise sets used for uniqueness checking .
Extract the content of the zip - file at zip_path into target_folder .
Returns True if var is a list or a tuple ( but not a string! )
When converting Spark SQL records to Pandas DataFrame the inferred data type may be wrong . This method gets the corrected data type for Pandas if that type may be inferred uncorrectly .
Sends a wheel event for the provided number of clicks . May be negative to reverse direction .
Deletes all files whose filename matches the glob pattern ( via : func : glob . glob ) .
Return True if the given object conforms to the Serializable protocol .
Project points into 3d from 2d points .
Generate the first value in each row .
Context manager that causes pprint () to print OrderedDict objects as nicely as standard Python dictionary objects .
Calculates the average price between two asset states .
Pad the text .
Create the file with the given content
Downsample x by factor using striding .
consider the distance between two mapPoints ignoring all terrain pathing issues
Import a class or function given it s absolute path .
Return indices of inputs to the node with the given index .
A function that works for both Python 2 . x and Python 3 . x . It asks the user for input and returns it as a string .
Returns the flattened version of a 2D list . List - correlate to the a . flat () method of NumPy arrays .
Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line .
Check if a password is valid
quit || exit || q Stop and quit the current debugging session
Convert a dict of 1d array to a numpy recarray
valid whether the point is located in a mulitpolygon ( donut polygon is not supported )
Wrapper for iterating numpy array
Removes the extension from a filename
Pretty print an object as YAML .
Natural log of scipy norm function truncated at zero
Remove multiple elements from a list and return result . This implementation is faster than the alternative below . Also note the creation of a new list to avoid altering the original . We don t have any current use for the original intact list but may in the future ...
Convert to camel case .
Returns all files in a given directory
Return a modified list containing only the indices indicated .
Compare two nodes for equality .
Set the _force_vertical flag when rendering axes
A static value ( does not change at runtime ) which is known at compile time
g
Unpickle a pstats . Stats object
Add optparse or argparse option depending on CmdHelper initialization .
Refresh the screen . You don t need to override this except to update only small portins of the screen .
Validates that the object itself is some kinda string
Get the date that a file was created .
Array of bytes
Print n_top values from a LDA model s topic - word distributions .
Split the given comma separated value to multiple integer values .
Returns all files in a given directory
Pops the top frame off the frame stack .
Return possible range for min function .
Given a gzipped stream of data yield streams of decompressed data .
Return True if the table * name * exists in the database .
Split a text into separate words .
remove arduino / examples / all directory .
Checks if value can be part of binary / bitwise operations .
Copies file from default data directory to local directory .
Tries to encode images with ffmpeg to check if it works .
This will insert the value into the array keeping it sorted and returning the index where it was inserted
DFS detect connected component recursive implementation
splits iterables a in equal parts of size sz
Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .
Execute all tests ( normal and slow ) with coverage enabled .
detect if a model has a given field has
Get the local variables in the caller s frame .
Helper for generating tagNameConverter Makes dict that maps from key to value and back
Stops the status update thread .
Return the number of entries in a table by counting them .
Re - index every document in a named index .
Remove punctuation from string s .
If the option did not exist create a default value .
Return the channels of a colorbar .
Select item in the list
Similar to print but prints to stderr .
Return the distance between two points coord1 and coord2 . These parameters are assumed to be ( x y ) tuples .
Return the minimum of an array ignoring any NaNs .
Create database tables from sqlalchemy models
Cleanup generated document artifacts .
exactly like s but doesn t return variable names or file positions ( useful for logging )
Run verbose PyLint on source . Optionally specify fmt = html for HTML output .
Places all the child widgets in the appropriate positions .
Delete periodically workers in workers bag .
Get object if child already been read or get child .
Set the range of the colormap to [ * min_val * * max_val * ]
Retrieve the previous quarter for dt
Parse a string into a Message object model .
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
Returns a gzipped version of a previously opened file s buffer .
Gets RAM memory usage
Function to retreive all keys in a shelve Args : file_name : Shelve storage file name file_location : The location of the file derive from the os module
Context manager that causes pprint () to print OrderedDict objects as nicely as standard Python dictionary objects .
Return True if the queue is full False otherwise ( not reliable! ) .
Terminate a running script .
Converts text that may be camelcased into an underscored format
Read a block of data and parse using the given protobuf object .
The standard deviation of a set of values . Pass in the mean if you already know it .
filter for dict note f should have signature : f :: key - > value - > bool
Generate unique document id for ElasticSearch .
Handle logging .
Returns a list copy in which each item occurs only once ( in - order ) .
Under UNIX : is a keystroke available?
Recieving the JSON file from uulm
prints the top n lines of a file
Returns a list consisting of the cumulative sum of the items in the passed list .
Iterates through each image in the given directory . ( not recursive ) : param dir_path : Directory path where images files are present : return : Iterator to iterate through image files
Formats the given time into HH : MM : SS
Get single system variable from CCU / Homegear
Return the self object attributes not inherited as dict .
Load proxy list from configured proxy source
Adds passed value to node s globals
Returns seconds since 0h00 .
Recursively converts iterables into tuples .
Connect and login to an FTP server and return ftplib . FTP object .
Get all the database column names for the specified table .
Reconstruct the image from the tf example .
Uses the Unix ps program to see if a process is running .
Walk the media / static directories and syncs files to S3
Add two 3 dimensional vectors . http : // naif . jpl . nasa . gov / pub / naif / toolkit_docs / C / cspice / vadd_c . html
Convert input 3 - vector in axis - angle representation to unit quaternion
Start web application
Print out a neat targets dependency tree based on requested targets .
Matrix solve op .
Resolve which cross validation strategy is used .
Returns A and B in y = Ax^B http : // mathworld . wolfram . com / LeastSquaresFittingPowerLaw . html
Drops all of the worker output collections Args : None Returns : Nothing
Interpolate linearly variable x in rangeX onto rangeY .
Create a symbolic link
Deletes all the unnamed columns
Compute empirical covariance as baseline estimator .
Return a list of the table names in the database .
history Display a list of commands that have been entered .
Return default argument value as given by argparse s add_argument () .
Uniformly format a path .
Print emphasized good the given txt message
Read and return filename in root dir of project and return string
Validate if non empty string
Get the host s ip number .
Return a string with punctuation removed .
Finds the longest path in a dag between two nodes
Free the underlying C array
Executes SQL ; returns list of first values of each row .
Create or load an object if necessary .
Generate a unique ID that is somewhat guaranteed to be unique among all instances running at the same time .
Create an aiosqlite cursor wrapping a sqlite3 cursor object .
Set the pythonic string type .
Tokenizes * source * and returns the tokens as a list of lists .
Convenience method for setting the value of an openpyxl cell
Convert JSON string to an ordered defaultdict .
helper to clean up an input string
Returns system clipboard contents .
Check if cnr or cns files are empty ( only have a header )
The Excel worksheet reference to the X values for this chart ( not including the column label ) .
Iterates through each image in the given directory . ( not recursive ) : param dir_path : Directory path where images files are present : return : Iterator to iterate through image files
Message printer .
validate that we can store the multi - index ; reset and return the new object
remove problem characters from string
Pyglet specific key press callback . Forwards and translates the events to : py : func : keyboard_event
Returns a list of synsets of a word after lemmatization .
Test if a point is within this polygonal region
Send a test error to APM Server
Wrapper for iterating numpy array
Determines if the specified file / folder exists even if it is on a remote server .
Turn the ring for a single position . For example [ a b c d ] becomes [ b c d a ] .
Wait until all queued messages are sent .
Check if arguments are tuple type .
Checks for local config overrides for pylint and add them in the correct pylint options format .
merge two Mapping objects keeping the type of the first mapping
Register all globally visible functions .
Print fatal errors that occurred during validation runs .
Write a dict to a JSON file .
The l2 norm of an array is is defined as : sqrt ( ||x|| ) where ||x|| is the dot product of the vector .
Parse a JSON file First remove comments and then use the json module package Comments look like : // ... or / * ... * /
Calculate the circular permutation for a given list of items .
Build a C ++ binary executable
Print out memory usage at this point in time
Return an iterator over the values of a dictionary .
Returns path to packaged static files
Code due to Thomas Heller - published in Python Cookbook ( O Reilley )
If called after an update the sprite can move back
Given a list possibly nested to any level return it flattened .
Adds execute permission to file . : param filename : : return :
Determine the largest contig for each strain : param contig_lengths_dict : dictionary of strain name : reverse - sorted list of all contig lengths : return : longest_contig_dict : dictionary of strain name : longest contig
Normalized Gaussian
Render our pages as a jinja template for fancy templating goodness .
shows JSON indented representation of d
When the with statement ends .
Centre and normalize a given array .
Convert a dictionary of arguments including __argv into a list for passing to the function .
If output is string then print the string and also time used
Fill NaNs with the previous value the next value or if all are NaN then 1 . 0
Filter and ensure that the returned value is of type bool .
Check if string could be a valid python identifier
Return the names of all callable attributes of an object
Transforms an XML string it to python - zimbra dict format
Run a Tensorflow model on the Iris dataset .
Perform a O ( 1 ) memory hash of an iterable of arbitrary length .
>>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
Idempotent and None - safe version of strict_bool .
Decrease zoom factor and redraw TimeLine
convert ip v4 string to integer .
Return the index of the closest in xarr to value val
* Get the root path for this python package - used in unit testing code *
Sets the title of the console window .
Support change columns .
Given a string return true if it matches the supplied list of patterns .
Return list of the key property names for a class
Copy given string into system clipboard .
utility to set a floating value useful for converting from strings
position in 3d space
Internal function to read an XML file
Return only the part of the row which should be printed .
dictionary of conversion
Internal helper to return the values of a dictionary sorted by key .
Create ctypes pointer to object .
string dict / object / value to JSON
Convert to timestamp .
Upgrade to a later version
: return Jinja sbatch template for the current tag
Adapts a Numpy array into an ARRAY string to put into the database .
Set the exectuable bit on the given filename
Get the absolute uri for a file
Returns a file descriptor from stdin or opening a file from a given path .
Tries to encode images with ffmpeg to check if it works .
Slicing op .
generate a CamelCase string from an underscore_string .
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Returns the specified attribute for the specified field on the model class .
Remove comments and empty lines
Retrieve the previous quarter for dt
Return True if the queue is full False otherwise ( not reliable! ) .
Close our socket .
Return True if list contains either values of type vtype or None .
A non - negative integer .
Compute entropy on the string
Combine the outer and inner keys of nested dictionaries into a single ordering .
Exit execution with return code and message : param msg : Message displayed prior to exit : param code : code returned upon exiting
r Returns all local minima from an image . Parameters ---------- img : array_like The image . min_distance : integer The minimal distance between the minimas in voxels . If it is less only the lower minima is returned . Returns ------- indices : sequence List of all minima indices . values : sequence List of all minima values .
convert 3 3 a matrix to 6 element s list ( see Tauxe 1998 )
Returns a character delimited version of the provided list as a Python string
Execute the unit tests on an installed copy of unyt .
Convert numbers to floats whether the decimal point is . or
Turn dict keys and values into native strings .
Run the tests .
Writes a file if it doesn t already exist with the same content .
Validate if non empty string
Attempt to setattr but catch AttributeErrors .
Escapes a filesystem path for use as a command - line argument
Concatenate url and argument dictionary regardless of whether url has existing query parameters .
: rtype : numpy matrix
Return an image with the binarised version of the data of img .
Convert a string of a calculation energy e . g . - 1 . 2345 eV to a float .
Clears the current image
Decide if the Ipython command line is running code .
Given a set of kwargs turns them into a string which can then be passed to a command . : param kwargs : kwargs from a function call . : return : outstr : A string which is if no kwargs were given and the kwargs in string format otherwise .
Return a hash of a NumPy array .
Deletes the specified file from the local filesystem .
Returns all the keys in a s3 bucket paginator page .
Whether path is a directory to which the user has write access .
Return the number of active CPUs on a Darwin system .
Assert that a value must be a given type .
Upload a local file on the remote host .
Dispatch all HTTP methods to the proxy .
Whether this path is a symbolic link .
Update the column width .
Compute the log of the magnitude spectrum of frames
Stop logging to logfile and console .
Exit this application
Decision Tree
Returns the contents of the sql file from the given filename .
Convert a one element byte string to signed int for python 2 support .
Convert the entire image to bytes . : rtype : bytes
Given a QuerySet and the name of field containing datetimes return the latest ( most recent ) date .
Takes a string and dictionary . replaces all occurrences of i with j
Extracts all integers from a string an return them in a list
Utility method to convert list to tsv line with carriage return
Wrap itertools . groupby to make life easier .
Returns file name of file at given url .
Assumes myList is sorted . Returns closest value to myNumber . If two numbers are equally close return the smallest number .
r Like rotate but modifies l in - place .
Get the label from the last line read
Matrix inversion op .
r Checks if l is a 2D numpy array of bools
Find the index of elem in the reversed iterator .
Returns a string containing the type and text of the exception .
Convert anything to a bytearray . See - http : // stackoverflow . com / questions / 7585435 / best - way - to - convert - string - to - bytes - in - python - 3 - http : // stackoverflow . com / questions / 10459067 / how - to - convert - my - bytearrayb - x9e - x18k - x9a - to - something - like - this - x9e - x1
* A datetime stamp in MySQL format : YYYY - MM - DDTHH : MM : SS *
Whether path is a directory to which the user has write access .
Gaussian model m is [ psill range nugget ]
Download file from http url link
Cleans trailing whitespaces and replaces also multiple whitespaces with a single space .
Defines the time after which Exscript fails if it does not receive a prompt from the remote host .
Returns January 1 of the given year .
Returns whether this is a complex floating point type .
Convert CamelCase to camel_case
Sets multiple headers on the request and returns the request itself .
Time execution of function . Returns ( res seconds ) .
Lock connection from being used else where
Checks if a suspicious number ( e . g . ligand position ) is in fact a negative number represented as a 32 bit integer and returns the actual number .
Get a slice from a table column holding arrays . ( see : func : table . getcolslice )
Checks if an item is iterable ( list tuple generator ) but not string
Return a smt bit vector that represents a memory location .
Constructs wrapper for general index creation and deletion
Compute the eigvals of mat and then find the center eigval difference .
Local test .
Add subparser
r Makes sure that x is type of float
Make the Python instance take ownership of the GIBaseInfo . i . e . unref if the python instance gets gc ed .
rounds float to closest int : rtype : int : param n : float
Starts the web server .
Assumes myList is sorted . Returns closest value to myNumber . If two numbers are equally close return the smallest number .
Wrap the text on the given line length .
Pause for this many seconds
data preparation
get max for queryset .
Given a float returns a rounded int . Should give the same result on both Py2 / 3
Transforms the output of parse () into a Text object . The token parameter lists the order of tags in each token in the input string .
Debug log messages if debug = True
Bitwise xor on equal length bytearrays .
Extract the content of the zip - file at zip_path into target_folder .
Returns the Cython method header for methods without arguments except self .
Returns the keys that maps to the top n max values in the given dict .
Return a JavaRDD of Object by unpickling
List of sections .
Returns ( width height ) for the given variable
Write the configuration dictionary to an output file .
Set y - axis limits of a subplot .
Surveyed length not including excluded shots
Translate an image in fourier - space with plane waves
Returns time in seconds as a string formatted HHHH : MM : SS .
Get the display length of a string . This can differ from the character length if the string contains wide characters .
Emit a sine wave at the given frequency .
Utility method to run commands synchronously for testing .
Create a conda environment inside the current sandbox for the given list of dependencies and options .
Round a number to a precision
Symmetrical logarithmic scale .
Check if cnr or cns files are empty ( only have a header )
Set __doc__ of * method * to __doc__ of * method * in its parent class .
Return attrs with keys in keys list
Determine the number of leaves in a tree
Call java and return version information .
Get letters from string only .
Checks if key exists in datastore . True if yes False if no .
Calculate the Hamming distance between two strings . From Wikipedia article : Iterative with two matrix rows .
Clean a pandas dataframe by : 1 . Filling empty values with Nan 2 . Dropping columns with all empty values
returns a random element from seq n times . If n is None it continues indefinitly
Reads a Python object stored in a specified YAML file .
Call this method from a function that defines a literal shader string as the body argument . Dresses up a shader string in three ways : 1 ) Insert #version at the top 2 ) Insert #line number declaration 3 ) un - indents The line number information can help debug glsl compile errors . The version string needs to be the very first characters in the shader which can be distracting requiring backslashes or other tricks . The unindenting allows you to type the shader code at a pleasing indent level in your python method while still creating an unindented GLSL string at the end .
Build descriptor for Enum instance .
Slicing op .
Strip SGML / XML tags and replace adjacent whitespace by one space .
Flat nested list of lists into a single list .
Checks if the given thing represents a date
Generate the first value in each row .
I strip extra whitespace off multi - line strings if they are ready to be stripped!
Return Gaussian that truncates at the given number of std deviations .
Expand a filesystem path that may or may not contain user / env vars .
Closest distance between a line segment and a point
Whether the item is a placeholder or contains a placeholder .
Deserializes string to date .
Validates the returned positional object
Read tag data from file and return as unicode string .
Returns system clipboard contents .
Return whether num is a power of two
Yield all items from iterable except the last one .
Create an array . Keyword arguments as per : func : zarr . creation . zeros .
Get all the prime factor of given integer
Ensure a a file exists and if not make the relevant path
Remove non - alphanumerical characters from metric word . And trim excessive underscores .
Calculate table chape considering index levels .
Same as : meth : random . choice but also supports : class : set type to be passed as sequence .
Return the latitude and longitude corresponding to a screen point : param x : screen x : param y : screen y : return : latitude and longitude at x y
Maxheap version of a heappop .
Reset analyzer state
Set the number of ticks .
As a convenience turn Python lists and tuples into NumPy arrays .
Helper for pulling a keyed value off various types of objects
Parses many YAML documents into a list of Python objects .
Takes a list of ( key value ) pairs and turns it into a dict .
Command line parser .
image resize function used by quite a few image problems .
Remove the element from a set lists or dict . >>> L = [ Lucy ] ; S = set ( [ Sky ] ) ; D = { Diamonds : True } ; >>> remove_once ( L Lucy ) ; remove_once ( S Sky ) ; remove_once ( D Diamonds ) ; >>> print L S D [] set ( [] ) {}
Dump Python object as JSON string .
Return an ISO - 8601 representation of a datetime object .
Check if given string is a punctuation
Read and return filename in root dir of project and return string
Take any values coming in as a datetime and deserialize them
Rearrange the heap after the item at position i got updated .
read an image from file - PIL doesnt close nicely
simple method to determine if a url is relative or absolute
Get a random date between two dates
Create a conda environment inside the current sandbox for the given list of dependencies and options .
sample data from given histogram and min max values within range
Make an MD5 hash of a file ignoring any differences in line ending characters .

Shuffle lists consistently .
Region formed by taking border elements .
Return all ( and only ) the uppercase chars in the given string .
update () extends rather than replaces existing key lists .
return the first n sentences with highest ranking
Returns the progress ratio and percentage .
get the covarince between two points implied by Vario2d
test if object is a list or tuple
count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )
>>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7
Splits a string into parts at multiple characters
Show the x - axis tick labels for a subplot .
Yield all non - sytem collections in db .
r Like rotate but modifies l in - place .

parse the domain from the url
Generate a UUID .
ANSI Escape sequences http : // ascii - table . com / ansi - escape - sequences . php
Computes the unnormalized PDF of the normal distribution .
return memory usage of python process in MB
Returns the leading numeric part of a string .
This removes newlines and multiple spaces from a string .
Use the specified filename for streamed logging .
Return system CPU times as a namedtuple .
Get dimension of an array getting the number of rows and the max num of columns .
Get the last object in file .
Converts time strings to integer seconds : param time : %H : %M : %S string : return : integer seconds
Takes a multi - dimensional array and returns a 1 dimensional array with the same contents .
Returns True if test is True for all array elements . Otherwise returns False .
Get all the database column names for the specified table .
str to bytes ( py3k )
Returns the first matching line in a list of lines .
Retrieve a list of all system services .
Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .
Flags that a function is linear wrt all args
Add value to a set in a dictionary by key
Compiles to native Python bytecode and runs program returning the topmost value on the stack .
Converts list to string with comma separated values . For string is no - op .
Remove html code contained into the given string .
Add dots .

string dict / object / value to JSON
Set the pythonic string type .
Inputs [ a b c ] returns { a : 0 b : 1 c : 2 } .
Read tag data from file and return as numpy array .
Get the last weekday in a given month . e . g :
Acquire a lock file on linux or osx .
Checks if the given type is an enum type .
variance of the values must have 2 or more entries .
Create : class : PNG from raw bytes . : arg bytes b : The raw bytes of the PNG file . : rtype : : class : PNG
Convert a one - hot encoded array back to string
Disables legends if show_legend is disabled .
Converts a 1D list to a single long string for file output using the string . join function .
Perform sed text substitution .
Returns the number of rows of the main dataframe
Add a blank row with only an index value to self . df . This is done inplace .
print the message to the predefined log file without newline
Visible width of a potentially multiline content .
calculate time delta from latched time and current time
Creates converts to a masked array
Invert mapping of dictionary ( i . e . map values to list of keys )
Convert human readable string to datetime . datetime .
Converts camel - case identifiers to snake - case .
Checks to see if a 2D list is a valid 2D matrix
Returns the string name of an enum value .
Convert a ctypes int pointer array to a numpy array .
Writes a DOT graphviz file of the domain structure and returns the filename
Creates a new dict from an existing dict that only has the given keys
Get the list of distinct values with preserving order .
Converts list of tuples to dictionary with duplicate keys converted to lists .
r Like rotate but modifies l in - place .
Return the nth value of array
Filters given query with the below regex and returns lists of quoted and unquoted strings
Create an array . Keyword arguments as per : func : zarr . creation . zeros .
Erases n lines from the screen and moves the cursor up to follow
Save a Keras model definition to JSON with given path
Check if tag is an element we should break on .
save something to a pickle file
must be a float
Return a new Image instance filled with a color .
Returns a DataTable instance built from either the filename or STDIN if filename is None .
Performs an existence check on the remote database .
Return True if the queue is full False otherwise ( not reliable! ) .
Wait until all the threads are finished .
Return True if created today .
Return a re . match object if an empty comment was found on line .
The Euclidean distance between two vectors .
Sort input filename list by datetime
converts py2 unicode / py3 bytestring into str Args : string ( unicode byte_string ) : string to be converted Returns : ( str )
Return true if the pathname refers to an existing directory .
Saves a value to session .
Get object from string reference .
Get device state via HTTP GET .
Asynchronously run the worker does not close connections . Useful when testing .
Same order unique list using only a list compression .
Generate a docstring for the composition of fs .
Copy a file whole from input to output .
Return manhattan distance between two lists of numbers .
Last modified timestamp as a UTC datetime
Determines if a matrix is approximately orthogonal .
: API : public
Gets latest Dusty binary version using the GitHub api
rotates a 2d array to a multiple of 90 deg . 0 = default 1 = 90 deg . cw 2 = 180 deg . 3 = 90 deg . ccw
helper to clean up an input string
Removes stopwords contained in a list of words .
Convert a log record into a list of strings
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
wrapper to search_s
Connects to publisher
Return a copy of seq without duplicates .
Forcefully delete objects from memory
Tokenizes * source * and returns the tokens as a list of lists .
: return : size of the entire schema in bytes
Returns true if the path exists and false otherwise .
There s probably a way to do this with string functions but I was lazy . Replace all instances of \ r or \ n in a string with something else .
Write DOT comment .
convert 3 3 a matrix to 6 element s list ( see Tauxe 1998 )
Convert a CSV object to a numpy array .
If value is a datetime convert to timestamp
Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .
Return BGR image read by opencv
Check if required dependency is installed
Add an additional response header not removing duplicates .
Call a function after a delay unless another function is set in the meantime .
Remove a directory and it contents . Ignore any failures .
Return a base static url always ending with a /
Display productpage with normal user and test user buttons
read an image from file - PIL doesnt close nicely
Convert a string of a calculation energy e . g . - 1 . 2345 eV to a float .
Places all the child widgets in the appropriate positions .
Returns whether * obj * is iterable lazily such as generators range objects etc .
Return a hash of the contents of a dictionary
Return True if dtype is a numeric type .

Performs a mouse out the element .
Applies maspy . xml . clearTag () to the tag attribute of the element and recursively to all child elements .
Removes a : py : class : . Series from the chart .
Used when the plot method defined does not create a figure nor calls save_plot Then the plot method has to use self . fig
Finds the longest path in a dag between two nodes
Returns True if the given value is a function or method object .
must be an iterable ( list array tuple )
Replace all the ocurrences ( in a file ) of a string with another value .
Get the current time .
Method to extract keywords from the text provided .
Remove files specified multiple times in a list .
Wrap an item in optional parentheses only applying them if necessary .
Enable a default web proxy
Checks if the date is at the end of the month
Emulate what a Python set () does but keeping the element s order .
r Checks if l is a 2D numpy array of bools
Copy text to clipboard without prompts
Retrun True if x is a valid YYYYMMDD date ; otherwise return False .
Should we skip logging for this handler?
Returns true if all of the elements in the list are equal .
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
Due to the way Angular organizes it model when this Form data is sent using Ajax then for this kind of widget the sent data has to be converted into a format suitable for Django s Form validation .
Return true if the string is a mathematical symbol .
Create 2D rotation matrix
Remove and return the item at index .
Format numpy array as a string .
Given a soup pick out a title
Get the next value in the page .
Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output
Set the serial port e . g . : / dev / tty . usbserial - A4001ib8
The return type for this method in a JSON - compatible format .
Quits the application ( called when the last window is closed )
Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .
Convert CamelCase to snake_case .
Reseed factory . fuzzy s random generator .
Convert a one element byte string to signed int for python 2 support .
Like map but also chains the results .
Returns numpy array of natural logarithms of values .
Return a consistent ( key value ) iterable on dict - like objects including lists of tuple pairs .
transform mongoengine . QuerySet to json
Apply function to specified field of effect if it is not None otherwise return default .
FIXME : How to test this ?
Removes trailing zeroes from indexable collection of numbers
Returns all column names and their data types as a list .
Helper function which returns an array with the Intervals boundaries .
Get a similarity matrix of % of shared sequence
Determine whether or not obj is iterable but not a string ( eg a list set tuple etc ) .
Join the given iterable with
The Euclidean distance between two vectors .
Turns response into a properly formatted json or text object
Assert that a value must be a given type .
Strip SGML / XML tags and replace adjacent whitespace by one space .
Returns the index of a geometry in a list of geometries avoiding expensive equality checks of in operator .
Add index alias to index_name
Compute the product set of array_a and array_b and sort it .
Return a dict with swapped keys and values
Returns whether the specified element selector is present on the page .
Return the dotproduct between self and another vector .
Helper method to check if a set of types is the { AnyObject } singleton
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
Retrieves a framework or system property . As framework properties don t change while it s running this method don t need to be protected .
Rollback MySQL Transaction to database . MySQLDB : If the database and tables support transactions this rolls back ( cancels ) the current transaction ; otherwise a NotSupportedError is raised .
Retrieves all IP addresses associated to a given instance .
Set the pythonic string type .
Helper function to read bytes until a certain end byte is hit
Executes SQL ; returns the first value of the first row or None .
Returns the memory byte size of a Numpy array as an integer .
Increment the date by a certain number and return date object . as the specific string format .
Increment a metric by value .
Removes trailing whitespace on each line .
Applies maspy . xml . clearTag () to the tag attribute of the element and recursively to all child elements .
Parameters ---------- data_path : str
Idempotent and None - safe version of strict_bool .
Check if a user has a given permission .
Evaluates a piece of Javascript in the context of the current page and returns its value .
Provide the root module of a TF - 2 . 0 API for use within TensorBoard .
I convert strings into integers floats and strings!
Recursively merge dicts .
Returns True if pip exists inside the virtual environment . Can be used as a naive way to verify that the environment is installed .
Decompress a Plan 9 image file . Assumes f is already cued past the initial compressed \ n string .
return the count of objects of key
Like isin but checks whether this expression s value ( s ) are not contained in the passed values . See isin docs for full usage .
Executes SQL ; returns the first value of the first row or None .
Convert an OrderedDict containing C values to a 1D array .
Fit a Gaussian to the data
Pop the head off the iterator and return it .
: param unicode fpath : : param unicode encoding : : rtype : dict | list
Initialize the state of the object

Convert a string from snake case to camel case with the first letter capitalized . For example some_var would become SomeVar .
Fill an array from a list
Read entire contents of file into a string .
Check whether flyweight object with specified key has already been created .
Redirect standard out to file .
Recieving the JSON file from uulm
Generate the first value in each row .
Remove a file from an AWS S3 bucket .
Return string with compressed whitespace .

Resize and image to fit the passed in width keeping the aspect ratio the same
Finish up a session .
Parse ASDL from the given file and return a Module node describing it .
Set the number of significant figures used to print Pint Pandas and NumPy quantities .
Transform underscore separated string to pascal case
Simple helper hash function
Compose all given tuples together .
Randomly select some rows from table .
Write a dict to a JSON file .
Deserialize b ( instance of bytes ) to a Python object .
Convert a CSV object to a numpy array .
Emulate what a Python set () does but keeping the element s order .
Reads text file contents
Return True if this GO object has a parent GO ID .
Linear oldstyle interpolation of the transform matrix .
Fix common typos in given URL like forgotten colon .
Determine if unicode string only contains ASCII characters .
As a convenience turn Python lists and tuples into NumPy arrays .
Displayhook function for PIL Images rendered as PNG .
Generates a ruler line for separating rows from each other
Convert json string representation into class instance .
Create a conda environment inside the current sandbox for the given list of dependencies and options .
Returns a copy of dct without keys keys
Efficient conversion from scipy sparse matrix to cvxopt sparse matrix
get np array of bin edges
Run the given code line by line with printing as list of lines and return variable ans .
Mark the occurrence of a given number of events .
move cursor up
Appends a PDF to a pyPDF writer . Legacy interface .
Instantiate the object from a protocol buffer .
function to get return code of a url
Returns nr of first entry parseable to float in ll None otherwise
Check whether one of the items in the list has multiple lines .
Returns the most common element in iterable .
detect if a model has a given field has
Determine if URL is safe to redirect to .
Initializes the id of the instance .
Get the CL log prior compute function .
Exit this application
Determine if two objects are equal .
Reads text file contents
Return an JavaRDD of Object by unpickling

Retrieve core and memory information for the current machine .
Finds the index of an item in list which satisfies predicate : param predicateFn : predicate function to run on items of list : param items : list of tuples : return : first index for which predicate function returns True
Get input from the user given an input function and an input string
Return a stream handler if it exists .
Check if the folder exisits . If not create the folder
Implementation of circle border with PyCairo .
Reconnect to rabbitmq server
Return True if list contains either values of type vtype or None .
Helper function to easily create the proper json formated string from a list of strs : param cmd_list : list of strings : return : str json formatted
Move the virtual cursor .
Get zero - indexed line from an open file - like .
!
Concatenate list of columns into a string .
Load a FASTA file and return the sequences as a list of SeqRecords
Kill the process group associated with the given process . ( posix )
Remove and return the item at index .
Random generator ( PyCrypto getrandbits wrapper ) . The result is a non - negative value .
Warn if nans exist in a numpy array .
Draw a set of lines
Check features data are not empty
Returns the data as numpy . array from each partition .
Pads an image to a square then resamples to max_size
Print security object information for a pdf document
clear all files that were to be injected
Clears the default matplotlib ticks .
Test two dictionary is equal on values . ( ignore order )
Test whether a stream can be written to .
Return the number of characters in two strings that don t exactly match
Parse a bool from a string .
Update the progressbar .
Replace multiple values in a string
Align the position in the file to the next block of specified size
Remove resource instance from internal cache
Close tensorflow session . Exposes for memory management .
Delete all Labels .
Generate a random string from 0 - 9 : param n : length of the string : return : the random string
If item is not in lst add item to list at its sorted position
Return True if value is an integer .
Get an SArray that contains the last n elements in the SArray .
Remove text nodes containing only whitespace
Constructs an object holding a datetime / timestamp value .
Generate seed for random number generator
Return a new raw REST interface to stats resources
Remove legend for axes or gca .
Searches for the specified method and returns its descriptor .
Compute the log of the magnitude spectrum of frames
r Checks if l is iterable and contains only integral types
Return True if object is defined
Parse a bool from a string .
Pretty print a CSV file .
Set foreground - and background colors and intensity .
Convenience method for just changing font size .
Determine if end - of - file is reached for file fd .
Removes // - comments and single - line C - style / * * / comments .
Reads a tuple of numbers . e . g . vertices normals or teture coords .
Restores the state of the batched queue for writing .
Returns the number of processors on this machine .
Gets the median of a list of values Returns a float / int
: return : generator of tuples ( isLastFlag item )
Return the number of dimensions of a tensor
Colorize text with given color .
Get the language parameter from the current request .
Helper for pulling a keyed value off various types of objects
Resize and image to fit the passed in width keeping the aspect ratio the same
Context manager to temporarily disable certificate validation in the standard SSL library .
Pre - order depth - first
Uses box coordinates to crop an image without resizing it first .
Clear only any cached global data .
Converts a Python 2 function as lambda ( x y ) : x + y In the Python 3 format : lambda x y : x + y
Remove all unwanted characters from text .
Creates a absolute path in the file system .
Portable cast function .
Note that this code compresses into a buffer held in memory rather than a disk file . This is done through the use of cStringIO . StringIO () .
Flatten dict with defined key join symbol .
Return all filenames under recursively found in a directory
Handle keyboard interrupt and other errors .
Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output
Deeply updates a dictionary . List values are concatenated .
Returns the name of the newest file given an iterable of file names .
Check for semicolons at the end of lines .
Close connection with the database
Order - preserving sorting function .
Convenience method that works with all 2 . x versions of Python to determine whether or not something is stringlike .
Convert a byte array into an integer array . The number of bytes forming an integer is defined by num
Creates sql datetime2 object from Python datetime object ignoring timezone
Initialize python List with capacity of 10 or user given input . Python List type is a dynamic array so we have to restrict its dynamic nature to make it work like a static array .
Get the billing cycle prior to this one . May return None
u Delete the character behind the cursor . A numeric argument means to kill the characters instead of deleting them .
Decorator for simple in - place decorator mocking for tests
Fill all null values with NaN values in a column . Null values are None or en empty string
Find rightmost value less than or equal to x .
Add an additional DATETIME column with standar datetime format .
Cumulative distribution function .
write back json response
Like print_exc () but return a string . Backport for Python 2 . 3 .
Pop the heap value from the heap .
Validates that the val is in the list of values for this Enum .
convert numpy s datetime64 to datetime
reads an RDF file into a graph
Set y - axis limits of a subplot .
Given a confusion matrix returns the accuracy . Accuracy Definition : http : // research . ics . aalto . fi / events / eyechallenge2005 / evaluation . shtml
Perform a O ( 1 ) memory hash of an iterable of arbitrary length .
r Checks if l is a numpy array of floats ( any dimension
Get all input nodes from a network .
Convert any array into a 2d numpy array .
Validate if non empty string
Sample from independent normal distributions
Check if cnr or cns files are empty ( only have a header )
Create ctypes pointer to object .
Integer dots per inch for the width of this image . Defaults to 72 when not present in the file as is often the case .
Returns the keys that maps to the top n max values in the given dict .
Helper parse action to convert tokens to upper case .
Show image ( item is a PIL image )
R x M x R^ - 1
True if all the args are functions and / or subroutines
Return n size lists from a given list l
Wrapper to make map () behave the same on Py2 and Py3 .
Call it on your own endpoint s to update the back history navigation . If you bypass it the next submit or back will go over it .
Remove html code contained into the given string .
Python s input () is blocking which means the event loop we set above can t be running while we re blocking there . This method will let the loop run while we wait for input .
Utility function to allow getting the arguments for a single command for Sphinx documentation
Determine whether stdin has any data to read .
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Download a Single File from S3 into a local path
Set the serial port e . g . : / dev / tty . usbserial - A4001ib8
r Checks if l is a numpy array of integers
will plot a stack of traces one above the other assuming marray . shape = numRows numSamples
Saves the case as an Excel spreadsheet .
Updates one element of the collection
Deserialize s ( a str ) to a Python object .
Convert a grayscale image to BGR image .
Turn a list into a comma - and / or and - separated string .
This function merge another object s values with this instance
The l2 norm of an array is is defined as : sqrt ( ||x|| ) where ||x|| is the dot product of the vector .
Check if arg is a valid file that already exists on the file system .
Helper for pulling a keyed value off various types of objects
Get the file size of a given file
The function compares strings ignoring case
Return the opposite of input condition .
Represent data as a masked array .
Computes average length of words
Round a datetime object to a multiple of a timedelta dt : datetime . datetime object default now .
The l2 norm of an array is is defined as : sqrt ( ||x|| ) where ||x|| is the dot product of the vector .
Returns a gzipped version of a previously opened file s buffer .
Creates or updates a property for the instance for each parameter .
Find a single document by id
Sets a user s password in the keyring storage
Squash self . out into string .
Function used to fit the exponential decay .
save something to a pickle file
Parses given YAML file .
Load a texture from a file into a PIL image .
Returns the memory byte size of a Numpy array as an integer .
Get list of datetime objects extracted from a filename
Checks whether a variable is a numpy integer array .
Return the shape of img .
Set foreground - and background colors and intensity .
Returns the first line of a file .
Check if email is valid
Inserts spaces after each string of new lines in s and before the start of the string .
Construct the adjacency matrix of the tree : param tree : : return :
Terminate all workers and threads .
Transforma una string con elementos separados por sep en una lista .
This function returns a pretty table used to display the port results .
Moves the text cursor to given line .
Return only the part of the row which should be printed .
Return n size lists from a given list l
Convert datetime to epoch seconds .
Return a yaml file s contents as a dictionary
Remove a symlink . Used for model shortcut links .
Remove commas from a float
Determines whether the passed value is a string safe for 2 / 3 .
Utility function to print sqlite queries before executing .
gets the dimensions depending on python version and os
Returns the number of bytes to represent this dtype .
Return the number of days since January 1 of the given year .
Normalized Gaussian
Add executable permissions to the file
Initialise sets used for uniqueness checking .
Return the products from a query response as a Pandas DataFrame with the values in their appropriate Python types .
world coords to view coords ; v an eu . Vector2 returns ( float float )
Check to see if the internet is on by pinging a set address . : param address : the IP or address to hit : return : a boolean - true if can be reached false if not .
Normalize path slashes .
Return True if there s something to read on stdin ( posix version ) .
True if a line consists only of a single punctuation character .
Take a str and transform it into a byte array .
Raises a requests . exceptions . HTTPError if the response has a non - 200 status code .
Convert a ctypes int pointer array to a numpy array .
This is the same functionality as int . from_bytes in python 3
Helper function which returns an array with the Intervals boundaries .
Return the channels of a colorbar .
Check whether flyweight object with specified key has already been created .
Call a system command in the background disown it and hide it s output .
Return start and end date of this quarter .
Remove duplicates from a sequence ( of hashable items ) while maintaining order . NOTE : This only works if items in the list are hashable types .
Restore settings to default values .
Return the integer index of * series * in this sequence .

Return the distance between two points coord1 and coord2 . These parameters are assumed to be ( x y ) tuples .
Get zero - indexed line from an open file - like .
Decorator which dynamically binds static methods to the model for later use .
Checks whether the re module can compile the given regular expression .
String hash ( djb2 ) with consistency between py2 / py3 and persistency between runs ( unlike hash ) .
Helper function to restore index information after collection . Doesn t use self so we can serialize this .
Convert a list of strings to a list of integers .
Return a Cache containing the entries of self that are not in other .
Return flattened dictionary from MultiDict .
Write a numpy array to YAML .
Pad a matrix with zeros on all sides .
dialogue box for choosing directory
Returns Gaussian smoothed image .
Convert val into a local datetime for tz Europe / Amsterdam .
Converts a list into a space - separated string and puts it in a dictionary
Step over the next statement
Create a Listbox with a vertical scrollbar .
Given a target dct and a dict of { key : default value } pairs calls setdefault for all of those pairs .
Returns is seq is sequence and not string .
Runs a thing once and once only .
Connects to publisher
Returns true if the job is still running or zero - os still knows about this job ID
Function for fast reading from sensor files .
Return the path to the javascript bundle
This is to support iterators over a file - like object .
Should we skip logging for this handler?
Checks if there is an invalid digit in the input number . Args : number : An number in the following form : ( int int int ... . int int int ) ( iterable container ) containing positive integers of the input base input_base ( int ) : The base of the input number . Returns : bool True if all digits valid else False . Examples : >>> check_valid (( 1 9 6 . 5 1 6 ) 12 ) True >>> check_valid (( 8 1 15 9 ) 15 ) False
Convert a list of strings to a list of integers .

A standard compound hash .
Print a numeric value to the display . If value is negative it will be printed with a leading minus sign . Decimal digits is the desired number of digits after the decimal point .
rounds float to closest int : rtype : int : param n : float
in string astr replace all occurences of thefind with thereplace
manually set the default figure size of plots :: Arguments :: x ( float ) : x - axis size y ( float ) : y - axis size aspect ( float ) : aspect ratio scalar
Deletes all files whose filename matches the glob pattern ( via : func : glob . glob ) .
Calculates the request payload size
Generate random string of given length
Removes object obj from the index .
Return a list of all keys in the dictionary .
Converts list to string with comma separated values . For string is no - op .
Digits needed to comforatbly display values in [ minval maxval ]
Return a vector with the elements rounded to the given number of digits .
Generates a count of the number of times each unique item appears in a list
globlookup finds filesystem objects whose relative path matches the given pattern .
Find longest ORF from the given list of ORFs .
Return whether this collection contains all items .
Returns min ( val1 val2 ) returning None only if both values are None
Get the lines for a file from the cache . Update the cache if it doesn t contain an entry for this file already .
Check if the argument is a readable file - like object .
exit without breaking pipes .
Retrun True if x is a valid YYYYMMDD date ; otherwise return False .
Find the leftmost index of an element in a list using binary search .
Clear only any cached global data .
Returns files matched by all extensions in the extensions list
Helper for pulling a keyed value off various types of objects
Return the size of a multidimansional array .
Return the opposite of input condition .
Closes the session to the database .
Inserts a horizontal ( commented ) line tot the generated code .
Handle an IOError exception .
Converts query strings into native Python objects
One dimenional log parabola model function
Return a Vector as the product of the vector and a real number .
Unpacks sqlite rows as returned by fetchall into an array of simple dicts .
: rtype : numpy matrix
Take a stdout and print it s lines to output if lines are present .
Get all documents from the given index .
Transforms a DataFrame in place . Computes all outputs of the DataFrame .
Fast %Y - %m - %d parsing .
Continuous constant pulse .
MAD -- Median absolute deviation . More robust than standard deviation .
Return the high median of data .
Checks for an empty image .
Determine the number of leaves in a tree
A magic method to implement shallow copy behavior .
Set text direction left to right .
Conver a path string to a list of path elements .
Read a file into a string PRE : fname is a small file ( to avoid hogging memory and its discontents )
Report whether another set contains this set .
Applies the sofplus activation function element - wise to the input .
This turns off stdout buffering so that outputs are immediately materialized and log messages show up before the program exits

Extract from the given iterable of lines the list of words .
The relative path ( from environment root ) to python .
Returns the data where the expression is normalized so that the total count per cell is equal .
Stop the progress bar .
Note that the Executor must be close () d elsewhere or join () will never return .
Return default argument value as given by argparse s add_argument () .
Apply function to nodes
Return system CPU times as a namedtuple .
Tests if an object is a collection .
Deserialize s ( a str ) to a Python object .
Converts the table to a dict .
Compute the angle between vector x and y

convert an image by applying a contour
Simple function to add two numbers
Compare items in 2 arrays . Returns sum ( abs ( a ( i ) - b ( i )))
Convert file extension to lowercase .
Invoked when determining whether a specific key is in the dictionary using key in d .
Add all of the members of the complex abundances to the graph .
Return a dataframe that is a cross between dataframes df1 and df2
Mocked decorator needed in the case we need to mock a decorator
Remove duplicates from a list while keeping order .
Scipy norm function
generate a lower - cased camelCase string from an underscore_string . For example : my_variable_name - > myVariableName
Compress a file returning the new filename ( . gz )
Set a float option .
Convert from scientific notation using precision
Cleans trailing whitespaces and replaces also multiple whitespaces with a single space .
Choose k random elements of array .
Get the item at the given index .
Converts a 1D list to a single long string for file output using the string . join function .
Returns the keys that maps to the top n max values in the given dict .
Places a legend box outside a matplotlib Axes instance .
Iterate through all elements .
Compute the confusion matrix .
Shape a list of lists into the appropriate shape and data type
Reseed factory . fuzzy s random generator .
Return the number of rows preceding the data table for * series * in the Excel worksheet .
Annual growth given growth from start date to end date .
Convert a table row to a dictionary .
mono - exponential curve .
Set y - axis limits of a subplot .
Parse ISO8601 timestamps given by github API .
Gets the login credentials from the user if not specified while invoking the script .
Remove punctuation from string s .
Checks if key exists in datastore . True if yes False if no .
Determine if given filename is an image .
Used for debugging .
Convert a numpy row - major homogenous transformation matrix to a flat column - major GLfloat transformation .
Returns seconds since 0h00 .
Constructor for try block structures .
Mocked decorator needed in the case we need to mock a decorator
Write a dict to a JSON file .
Returns the dot source representing the database in a string .
Return the duplicates in a list .
Reads cplex file and returns glpk problem .
Retrieve a User object by ID .
Google AppEngine Helper to convert a data type into a string .
Softsign op .
read_byte_data ( addr cmd ) - > result
Add a new url route .
Checks if value is an integer long integer or float .
Stringifies a Python object into its YAML representation .
Detects whether a line is present within a file .
Find rightmost value less than x .
Return flattened dictionary from MultiDict .
Sorting logic for Quantity objects .
Determine if a file is empty or not .
Scale the image in a channel . Also see : meth : zoom_to .
Return a naive datetime object for the given timezone . A timezone is any pytz - like or datetime . tzinfo - like timezone object . If no timezone is given then UTC is assumed .
Populate axis limits GUI with current plot values .
Return frequencies for DFT
Takes in an object and a variable length amount of named attributes and checks to see if the object has each property . If any of the attributes are missing this returns false .
Convert bytes and non - string into Python 3 str
Decide if the Ipython command line is running code .
Returns the flattened version of a 2D list . List - correlate to the a . flat () method of NumPy arrays .
Returns the arithematic mean of the values in the passed list . Assumes a 1D list but will function on the 1st dim of an array ( ! ) .
: param unicode fpath : : param unicode encoding : : rtype : dict | list
Return flattened dictionary from MultiDict .
Return the sum of the element - wise product of vectors x and y . >>> dotproduct ( [ 1 2 3 ] [ 1000 100 10 ] ) 1230
Quick way to read a file content .
format mpv s title
Return a hash of the contents of a dictionary
Print at most limit elements of list .
rescales a numpy array so that min is 0 and max is 255
set colouring on if STDOUT is a terminal device off otherwise
Re - index every document in a named index .
Add a |_LineSegment| operation to the drawing sequence .
Outputs json without whitespace .
Return the minimum of an array ignoring any NaNs .
Decision Tree
Rate limit a function .
: param dt : pythone datetime . datetime : return : 1999 - 02 - 01 string type
Convert an ARF timestamp to a datetime . datetime object ( naive local time )
Helper funcation that converts text - based get response to tab separated values for additional manipulation .
Checks if invoking supplied clang - apply - replacements binary works .
Ends an indentation block leaving an empty line afterwards
: type s str
Return the size of a multidimansional array .
Encodes numpy images into gif string .
Delete this message
Intersect dictionaries d1 and d2 by key * and * value .
Square of the euclidean distance
Draw a set of lines
Begins an indented block . Must be used in a with code block . All calls to the logger inside of the block will be indented .
Write the ROI model to a FITS file .
Converts list to string with comma separated values . For string is no - op .
Applies the sofplus activation function element - wise to the input .
append item and print it to stdout
Adds points and converts to topojson string .
generate a method to write the configuration in yaml to the method desired
Check if a file exists and is non - empty .
Get a ctypes void pointer to the memory mapped region .
decode ( bytearray raw = False ) - > value
Return the unique items from iterable * seq * ( in order ) .
Drops and re - creates the SQL schema
area () - > number
Utility method to run commands synchronously for testing .
Read tag data from file and return as numpy array .
Note that this code compresses into a buffer held in memory rather than a disk file . This is done through the use of cStringIO . StringIO () .
Random normal variates .
Construct the adjacency matrix of the tree : param tree : : return :
Python2 accumulate implementation taken from https : // docs . python . org / 3 / library / itertools . html#itertools . accumulate
Remove duplicates from an iterable preserving the order .
Swap i and j rows
Trim left - right given string
cv2 Image of current window screen
split string into list of strings by specified number .
True if a line consists only of a single punctuation character .
set colouring on if STDOUT is a terminal device off otherwise
Replaces occurrences of a match string in a given list of strings and returns a list of new strings . The match string can be a regex expression .
Returns TRUE if any argument is TRUE
Extracts all integers from a string an return them in a list
Put an object into a ftps URL .
Return a serialised version of the model s fields which exist as local database columns ( i . e . excluding m2m and incoming foreign key relations )
Returns True if contents of the files are the same
Return the key ( aka database value ) of a human key ( aka Python identifier ) .
Close connection with the database
Apply a function in parallel to each element of the input
Calculates the average price between two asset states .
Order the words from vocab by distinctiveness score ( Chuang et al . 2012 ) from least to most distinctive . Optionally only return the n least distinctive words .
Read tag data from file and return as numpy array .
Draw a vertical line up to a given length .
Sorting logic for Quantity objects .
Get the display length of a string . This can differ from the character length if the string contains wide characters .
Get a random date between two dates
Creates a copy of model
Simplest required implementation of collections . Counter . Required as 2 . 6 does not have Counter in collections .
Recursivly delete a directory
This is the same functionality as int . from_bytes in python 3
Perform actions before parent main window is closed
Compare items in 2 arrays . Returns sum ( abs ( a ( i ) - b ( i )))
Return a dict from entries in a scala . collection . immutable . Map
Raise ( or re - raises ) an exception .
Returns a string representing a numpy array of 0 s and 1 s
Transform triple index into a 1 - D numpy array .
Return a string with terminal colors .
Convert bytes and non - string into Python 3 str
Return unique list of iterable items preserving order .
Wrap vertical table in a function for TabularOutputFormatter .
Filter out any values in target not in image : param image : image containing values to appear in filtered image : param target : the image to filter : rtype : 2d : class : numpy . ndarray containing only value in image and with the same dimensions as target
Like argsort but returns an index suitable for sorting the the original array even if that array is multidimensional
Emulate what a Python set () does but keeping the element s order .
Parse a JSON file First remove comments and then use the json module package Comments look like : // ... or / * ... * /
Create a new image by copying the image on a * color * background .
Pull a file directly from S3 .
Removes trailing zeros in the list of integers and returns a new list of integers
Trim left - right given string
Iterable - first replacement of Python s built - in map () function .
Generator for reading from standard input in nonblocking mode .
r Gets the string representation of the given type .
Extract the content of the zip - file at zip_path into target_folder .
Read the specified pin and return HIGH / true if the pin is pulled high or LOW / false if pulled low .
writes the line and count newlines after the line
reference to a parent class which contains this class and defined within a namespace
Determine whether or not obj is iterable but not a string ( eg a list set tuple etc ) .
Check if filename1 and filename2 point to the same file object . There can be false negatives ie . the result is False but it is the same file anyway . Reason is that network filesystems can create different paths to the same physical file .
Delete a label by name .
Get string from file .
Calculate the index rank according to Bertran s notation .
Is the current OS a Windows?
Get the value of a local variable somewhere in the call stack .
Create a Qt application .
u Returns a list of children and available helper methods .
Check if a dtype is a subclass of the numpy datetime types
Returns min ( val1 val2 ) returning None only if both values are None
Quit signal handler .
iterator for JSON - per - line in a file pattern
Returns whether this is a complex floating point type .
Parses a date string formatted like YYYY - MM - DD .
Extract text from a given lxml node .
Integer to two bytes
Primary entry point to turn kwargs into properties
Calculate angle between two vectors
Saves the Jupyter work_notebook to write_file
Merge any number of dictionaries
Returns a tuple ( hash and commit object )
To replace a list of items by a single replacement : param subject_list : list : param replacement : string : param string : string : return : string
Loads the images and latent values into Numpy arrays .
Copy the lib items into our font .
Wrapper for inserting int64 features into Example proto .

Reshape data into ( num_example batch_size )
Return a JavaRDD of Object by unpickling
Return a JSSObject for the element with ID id_
Calculates the mean and the standard deviation of the given samples .
Utility function to remove duplicates from a list : param seq : The sequence ( list ) to deduplicate : return : A list with original duplicates removed
: API : public
Convert a CSV SampleSheet to YAML run_info format .
Remove ticks tick labels and frame from axis
Find the time this file was last modified .
Fetch all remaining rows .
Go to parent directory
Get dimension of an array getting the number of rows and the max num of columns .
Return the top - level element of a document sub - tree containing the YAML serialization of a Python object .
A small helper function to convert a string to a numeric value if appropriate
Wait until all task are executed .
Given a string return true if it matches the supplied list of patterns .
Forward mouse cursor position events to the example
Categorical accuracy
Output data in excel - compatible tab - delimited format
Convert dict of ascii str / unicode to dict of str if necessary
Load the correct module according to the version
Find the leftmost index of an element in a list using binary search .
Is this a string .
Recieving the JSON file from uulm
Returns True if login_time not set or seconds since login time is greater than 200 mins .
Returns are under the ROC curve
Return the screen resolution of the primary screen .
Remove files specified multiple times in a list .
Extract a numpy array from a base64 buffer

Calculates the moving average ( rolling mean ) of an array of a certain window size .
Make bars in horizontal bar chart thinner
Try converting the README to an RST document . Return it as is on failure .
Return the dotproduct between self and another vector .
Dump string .
Indicates whether or not the given row contains valid data .
Return the unique elements of a collection even if those elements are unhashable and unsortable like dicts and sets
Retrieve the previous quarter for dt
kill process Args : process - Popen object for process
Clean the previous generated files .
in comparison to argrelmax () more simple and reliable peak finder
Scale a single point
Returns file name of file at given url .
Download and unzip from url .
Natural log of scipy norm function truncated at zero
Set dictionary array .
Wrapper for pymongo . Collection . ensure_index
Split message to list by commas and trim whitespace .
Serialize a date / time value into an ISO8601 text representation adjusted ( if needed ) to UTC timezone .

Return time in milliseconds from start_time
Given HTML markup return a list of hrefs for each anchor tag .
Validates that the object itself is some kinda string
Delete an image .
Checks if key exists in datastore . True if yes False if no .
: param dt : pythone datetime . datetime : return : 1999 - 02 - 01 string type
Return a list of tuples specifying the column name and type
Slow conversion of a recarray into a list of records with python types .
must be an iterable ( list array tuple )
Fold all values of the matrix into [ 0 1 ] .
this day last year
Under UNIX : is a keystroke available?
Return true if a value is an integer number .
Return True if the class is a date type .
Check configuration file type is JSON Return a boolean indicating wheather the file is JSON format or not
Return a generator of tuples k c such that k is the name of the python attribute for the column and c is the name of the column in the sql table .
Drops the trailinz zeros from decimal value . Returns a string
Write the given extended file descriptor to out .
filter for dict note f should have signature : f :: key - > value - > bool
Returns the default bucket from a list of buckets i . e . the largest bucket .
Update all visuals in the attached canvas .
Expire a specific object from cache .
Read text from stdin and print a helpful message for ttys .
Convert str_value to an int or a float depending on the numeric value represented by str_value .
in string astr replace all occurences of thefind with thereplace
Sort data rows and order columns
This parallel fetcher uses gevent one uses gevent
Turns a werkzeug . MultiDict or django . MultiValueDict into a dict with list values : param d : a MultiDict or MultiValueDict instance : return : a dict instance
add arrow to plot
Yield successive n - sized chunks from dictionary .
Returns the number of bytes that the multipart / form - data encoding of params will be .
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
Communicate with the child process without closing stdin .
Build argument parsers .
Compute Pearson correlation coefficient .
Last modified timestamp as a UTC datetime
Search tuple array by index and value : param t : tuple array : param i : index of the value in each tuple : param v : value : return : the first tuple in the array with the specific index / value
Whether the item is a placeholder or contains a placeholder .
Returns a list with no repeated elements .
True if specified value exists in int enum ; otherwise False .
Set authenatication .
Pull the value from the cookiejar .
Return the fully - qualified name of a function .
Parse string into Identity dictionary .
Return maximum nesting depth
Returns a list of all predecessors of the given node
Take a list of filepaths and attach the files to a MIMEMultipart .
tool to ensure input and output data have the same number of samples
Return the integer index of * series * in this sequence .
Run security . py -- demonstrate the SECURITY extension
Converts all strings in a column to uppercase .
Returns a string representing a numpy array of 0 s and 1 s
: param fields : a list which contains either 0 1 or 2 values : return : a tuple with default values of ;
generate a lower - cased camelCase string from an underscore_string . For example : my_variable_name - > myVariableName
Fast median operation for masked array using 50th - percentile
List of GPU device names detected by TensorFlow .
Yields tokens from input string .
Update dict with fields from obj . attributes .
Return True if value is an integer .
return unique rows
Returns all files in a given directory
Returns True if test is True for all array elements . Otherwise returns False .
Get resource variable .
Enforces a process memory limit .
Parse datetime .
Returns the molecular weight of the polypeptide sequence .
Checks if two images have the same height and width ( and optionally channels ) .
Print a formatted indented text .
Batches a list into a list of lists with sub - lists sized by a specified batch size .
updates the scale of all actors in the plotter
return an iterator that returns a chunk of a string every time it is called . notice that even though bufsize_type might be line buffered we re not doing any line buffering here . that s because our StreamBufferer handles all buffering . we just need to return a reasonable - sized chunk .
Attach a callback on the group pubsub
Special case of version () when the executable is a JAR file .
A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .
Compute the mean value across a list of dictionaries
Returns the directory path for the given package or module .
Read tag data from file and return as numpy array .
Creates symbolic link for either operating system . http : // stackoverflow . com / questions / 6260149 / os - symlink - support - in - windows
Slicing op .
r Clean up whitespace in column names . See better version at pugnlp . clean_columns
: type s : str : rtype : int
Registers default factories for logging standard package .
Returns the number of widgets currently displayed ( takes child splits into account ) .
Checks if key exists in datastore . True if yes False if no .
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
round to closest resolution
Callback for comboboxes : notifies us that a combobox for the given item and column has changed
Convert a ctypes float pointer array to a numpy array .
Return a dict from entries in a scala . collection . immutable . Map
Truncates a value to a number of decimals places
Returns obj . field data as a dict
Checks if a given string is an url
Compute a minimal rectangle that covers all the points .
Enforce HTML escaping . This will probably double escape variables .
Delete all the files and subdirectories in a directory .
Packs a list of triple indexes into a 2D numpy array .
Convert an numpy . string_ to str .
Returns all database table names found in an SQLAlchemy : class : MetaData object .
Same as : meth : random . choice but also supports : class : set type to be passed as sequence .
Locate the command s man page .
Ensure that path in URL with authority starts with a leading slash .
Wrapper for pymongo . Collection . ensure_index
strips any namespaces from an xml string
Ideally we shouldn t lose the first second of events
Yields file name if matches a regular expression pattern .
Find the first location in our array that is not empty
dict . update but which merges child dicts ( dict2 takes precedence where there s conflict ) .
Parse a bool from a string .
Assumes myList is sorted . Returns closest value to myNumber . If two numbers are equally close return the smallest number .
Return the number of rows preceding the data table for * series * in the Excel worksheet .
Return a str of decimal with two digits after a decimal mark .
Start web application
Return u if u! = 0 return 1 if u == 0
Determine with width in pixels of string .
Skip a single frame from the trajectory
Returns names of object columns in the DataFrame .
Pause for this many seconds
Turn dict keys and values into native strings .
Convert a string to a list with sanitization .
Read entire contents of file into a string .
Read tag data from file and return as numpy array .
Command line interface for PyBEL .
Run the unit tests .
Create an array . Keyword arguments as per : func : zarr . creation . zeros .
Run the * cmd * and exit with the proper exit code .
Root Mean Square
Read tag data from file and return as unicode string .
Remove a variable from this dataset .
: param string : String can be type resource or python case
Get domain part of an url .
Returns a sha1 of the given string
Returns True if ALL of the given argument are AST nodes of the given token ( e . g . BINARY )
Validates that the object itself is some kinda string
Makes the list have unique items only and maintains the order
Returns the first day of the given month .
Remove duplicates from a list preserving the order .
Converts camel - case identifiers to snake - case .
transpose matrix
Method to extract keywords from the text provided .
Removes trailing zeroes from indexable collection of numbers
Return a shell - escaped version of the string s .
Shortcut to create md5 hash : param s : : return :
Helper method to check if a set of types is the { AnyObject } singleton
Checks if current project has any noncommited changes .
The url of this window
close socket immediately .
Convert a list of strings to a list of integers .
Join helper
Internal function to read an XML file
Initialise sets used for uniqueness checking .
Public function that reads a local file and generates a SHA256 hash digest for it
Old style use JSONTemplateResponse instead of this .
Install or upgrade setuptools and EasyInstall
Call Imagemagick to generate a scheme .
Loads and returns foreign library .
Gets path from query string
Sort the data .
Calculates the moving average ( rolling mean ) of an array of a certain window size .
Whether any of the strings contains any of the candidates .
Loads and returns a class for a given fully qualified name .
Return whether num is a power of two
Compiles to native Python bytecode and runs program returning the topmost value on the stack .
Converts binary representation label to integer .
Get distance matrix given a matrix . Used in testing .
Make a copy of a dictionary with all keys converted to snake case . This is just calls to_snake_case on each of the keys in the dictionary and returns a new dictionary .
Return IPython s guess for the default encoding for bytes as text .
: return : int
Launches the django server at 127 . 0 . 0 . 1 : 8000
Attempts to convert given object to a string object
Print the header for the CSV table .
Get resource variable .
Entry point for the jupytext script
Remove the last NoteContainer in the Bar .
Simple function to convert naive : std : datetime . datetime object containing local time to a naive : std : datetime . datetime object with UTC time .
Public function that reads a local file and generates a SHA256 hash digest for it
Creates a new dict from an existing dict that only has the given keys
Return the dotproduct of two vectors .
Determine if a file is empty or not .
Check to see if the specified object is colliding with any of the objects currently in the Collision Manager Returns the first object we are colliding with if there was a collision and None if no collisions was found
Helper method to check if a set of types is the { AnyObject } singleton
Takes a text and drops all non - printable and non - ascii characters and also any whitespace characters that aren t space .
Instantiate a Pred from its quoted string representation .
Yield successive chunks from array / list / string . Final chunk may be truncated if array is not evenly divisible by chunk_size .
Configuration - friendly boolean type converter .
prints the top n lines of a file
Returns an image tensor .
Enable a default web proxy
Array of bytes
Takes a string and dictionary . replaces all occurrences of i with j
Returns system clipboard contents .
Like dict but does not hold any null values .
Convert a ctypes int pointer array to a numpy array .
* Get the root path for this python package - used in unit testing code *
Helper that returns if parent / item is a directory .
Fill file at
Implements string formatting along with color specified in colorama . Fore
Utility method to run commands synchronously for testing .
Raises a requests . exceptions . HTTPError if the response has a non - 200 status code .
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
Add a prefix to a list of values .
Check if git command is available .
a normal old python function to return the Nth fibonacci number .
Add a spec to a mock . spec can either be an object or a list of strings . Only attributes on the spec can be fetched as attributes from the mock .
Converts query strings into native Python objects
Take a str and transform it into a byte array .
If we re not on the first line ( of a multiline input ) go a line up otherwise go back in history . ( If nothing is selected . )
Returns the SQL typename required to store the given FieldDefinition
Compute the correlation matrix given the covariance matrix .
StringIO constructor shim for the async wrapper .
Localize a datetime object to local time .
Retrieves a tuple with the x y coordinates of the upper right point of the ellipse . Requires the radius and the coordinates to be numbers
Turns a Python unicode string list into a Java String array .
save something to a pickle file
Conform Series to new index with optional filling logic .
Get milliseconds from a timedelta .
Replace masked - out elements in an array using an iterative image inpainting algorithm .
Print list of namedtuples into a table using prtfmt .
Compute the number of edges of the CFG Args : function ( core . declarations . function . Function ) Returns : int
Return True if the given object conforms to the Serializable protocol .
Parses S3 URL .
Given a name in camelCase return in snake_case
Split a multiline string into a list excluding blank lines .
Function to split every line in a list and retain spaces for a rejoin : param orig_list : Original list : return : A List with split lines
Try popping a key from a dict . Instead of raising KeyError just return the default value .
Find the leftmost index of an element in a list using binary search .
Sets value of key key to value in both session and cookies .
Resizes an image preserving the aspect ratio .
splits iterables a in equal parts of size sz
Returns a vector of spherical bessel functions yn : x : The argument . N : values of n will run from 0 to N - 1 .
Load and parse a feature file .
Pads the output with an amount of indentation appropriate for the number of open element .
Transforms a DataFrame in place . Computes all outputs of the DataFrame .
Returns the memory byte size of a Numpy array as an integer .
Merge all the PDF files in pdf_filepaths in a new PDF file out_filepath .
Convert a dict of 1d array to a numpy recarray
Check if obj is number .
Perform actions before parent main window is closed
Get the parent directory of a filename .
Draw a horizontal line up to a given length .
r Repeat each item in iterable n times .
Return a str of decimal with two digits after a decimal mark .
calculates a rough guess of runtime based on product of parameters
Emulate what a Python set () does but keeping the element s order .
Find a reasonable editor to use by default for the system that the cmd2 application is running on .
Patch the globals to remove the objects not available on some platforms .
Return time in milliseconds from start_time
Return True if created today .
Call a C function that takes a pointer as its last argument and return the C object that it contains after the function has finished .
Pretty print a CSV file .
Fit a Gaussian to the data
Return a Vector as the product of the vector and a real number .
Delete all the files and subdirectories in a directory .
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
: param fileobj : a file object : return : a hash of the file content
Check if the folder exisits . If not create the folder
Returns the first line of a file .
str to bytes ( py3k )
Returns true if all of the elements in the list are equal .
format mpv s title
Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line .
Return the dot product of two vectors
Dumps a representation of the Model on standard output .
Checks if an item is iterable ( list tuple generator ) but not string
Translates window screen coordinates to client coordinates .
return memory usage of python process in MB
Return random lognormal variates .
Do all elements of x have a type from types?
Checks if a string is quoted : param arg : the string being checked for quotes : return : True if a string is quoted
Return whether the handler is using sys . stdout .
Send the cmd info and collected stdout to logger .
This method removes columns in data
Logarithmic loss with non - necessarily - binary labels .
Initialize a ResponseException instance .
For a given value the function finds the nearest value in the array and returns its index .
Return time in milliseconds from start_time
Will make any functions return an iterable objects by wrapping its result in a list .
Ajout d un message de log de type INFO
A handy wrapper to get a remote file content
r %autoreload = > Reload modules automatically
Discover the current time zone and it s standard string representation ( for source { d } ) .
Converts and image to matrix ( one pixel per line )
Clears the console .
Normalizes list
Establish tunnel connection early because otherwise httplib would improperly set Host : header to proxy s IP : port .
: returns the minimum of the column
Order - preserving sorting function .
Utility function to create regexp for matching escaped separators in strings .
Return a tuple that contains ( width height ) Pass in a url to an image and find out its size without loading the whole file If the image wxh could not be found the tuple will contain None values
Transform triple index into a 1 - D numpy array .
Add executable permissions to the file
Convert axis coordinate to bin index .
Coerces JSON string to boolean
Adds a positional argument named dest to the parser .
Provides the color corresponding to value x in the form of a tuple ( R G B A ) with int values between 0 and 255 .
Calls the specified Trigger of another Area with the optionally given parameters .
Represent string / bytes s as base64 omitting newlines
Calculate the margin in pixels above the plot area setting border_top .
http : // stackoverflow . com / a / 31312102 / 190597 ( SoulNibbler )
Transform list into a maxheap in - place in O ( len ( x )) time .
Marker for a token
Moves the displayed plot to the previous one
http : // www . swharden . com / blog / 2009 - 01 - 21 - signal - filtering - with - python / #comment - 16801
Register a struct definition globally
Return a : py : class : datetime . datetime instance representing the current time .
Print emphasized good the given txt message
Returns the most common element in iterable .
Get longitudes from cartesian coordinates .
Convert a CSV object to a numpy array .
Get all the database column names for the specified table .
writes the line and count newlines after the line
equivalent to scipy . preprocessing . normalize on sparse matrices but lets avoid another depedency just for a small utility function
Sort the list into natural alphanumeric order .
Return a list of indexes of substr . If substr not found list is empty .
Returns a datetime object of a given timestamp ( in UTC ) .
Create parametric ellipse from 200 points .
Set additionnal options as plain text .
Return the text for the given root node ( xml . dom . minidom ) .
Determine with width in pixels of string .
Check the validity of an IPv6 address
Print dicttree in Json - like format . keys are sorted
Redirect standard out to file .
Get width of a string in the current font
Init a noise variable .
Calcuate median datetime from datetime list
Call * func * with kwargs but only those kwargs that it accepts .
Get hue value of HSL color .
r Converts a URI parts to corresponding IRI parts in a given charset .
Helper function to restore index information after collection . Doesn t use self so we can serialize this .
Create an aiosqlite cursor wrapping a sqlite3 cursor object .
Private method that sets the value currently of the property
Modifies each item . keys () string based on the func passed in . Often used with inflection s camelize or underscore methods .
Returns a tuple for a kind name and kind display name of an entity . By default uses the app_label and model of the model object s content type as the kind .
True positive rate tp / ( tp + fn )
must be an iterable ( list array tuple )
Replace all the ocurrences ( in a file ) of a string with another value .
Returns a stringified representation of this object .
Runs the unit test framework . Can be overridden to run anything . Returns True on passing and False on failure .
Return index of sub_string in string .
Uses numpy . load to open the underlying file
Return the indices of all the val in m
Return true if outfile exists and is no older than base datetime .
Update the request headers .
Returns the absolute position of table top
Creates a datetime from GnuCash 2 . 6 date string
Parse an ISO format date ( YYYY - mm - dd ) .
Initializes an stdin input reader .
Convert a list of strings to a list of integers .
Returns a list of literal values .
Convert json string representation into class instance .
Sets cursor as beginning of next line .
Performs the vector multiplication of the elements of two vectors constructing the 3x3 matrix . : param aa : One vector of size 3 : param bb : Another vector of size 3 : return : A 3x3 matrix M composed of the products of the elements of aa and bb : M_ij = aa_i * bb_j
Check if the memory is too full for further caching .
An argparse type representing an email address .
return unique rows
Turn a list to list of list
Idempotent and None - safe version of strict_bool .
Google AppEngine Helper to convert a data type into a string .
Return a re . match object if an empty comment was found on line .
Callback for comboboxes : notifies us that a combobox for the given item and column has changed
Under UNIX : is a keystroke available?
Joins a voice channel
Return the dot product of the given vectors .
Swap the byte - ordering in a packet with N = 4 bytes per word
get max for queryset .
Return list of Logger classes .
Get mnist dataset with features and label as ndarray . Data would be downloaded automatically if it doesn t present at the specific location .
An array of all parameters ( including frozen parameters )
Synthesize white noise
Reads text file contents
A sys . stdout that accepts bytes .
Given a target dct and a dict of { key : default value } pairs calls setdefault for all of those pairs .
Returns the element with the highest probability .
Remove multiple elements from a list and return result . This implementation is faster than the alternative below . Also note the creation of a new list to avoid altering the original . We don t have any current use for the original intact list but may in the future ...
Abstraction over executemany method
Takes JSON formatted data converting it into native Python objects
Reduced Euclidean distance .
Helper for matplotlib imshow
A dict of members expressed in literals
Close the db and release memory
returns json contents as string
Try popping a key from a dict . Instead of raising KeyError just return the default value .
Get the value of a local variable somewhere in the call stack .
Rewind the file to the start of the body ( if seekable ) .
Wrapper to the jinja2 render method from a template file
Query device for all attributes that exist regardless of power state .
For Python3 compatibility of generator .
Returns the topmost parent of the current category .
Get all the database column names for the specified table .
takes a string and parses via NLP ready for mapping
calculates a rough guess of runtime based on product of parameters
Print results straight to stdout
Resets all assigned data for the current message .
Removes a : py : class : . Series from the chart .
Check if file or directory is world writable .
: param session : actually it is a sqlalchemy session : return : version number
Touches the project to trigger refreshing its cauldron . json state .
Flush all items from cache .
Creates converts to a masked array
Convert exception info into a string suitable for display .
Return random lognormal variates .
Report whether another set contains this RangeSet .
Read
Given two data points [ X Y ] linearly interpolate those at x .
Execute a stored procedure . Returns the first row of the result set or None .
Provides the color corresponding to value x in the form of a tuple ( R G B A ) with int values between 0 and 255 .
Returns given method name .
Toggle linear / log scale for Y - axis .
Generate the first value in each row .
returns a TreeLib tree
Converts a Python 2 function as lambda ( x y ) : x + y In the Python 3 format : lambda x y : x + y
Add a section a subsection and some text to the document .
Stream stdout and stderr from the task container to this process s stdout and stderr respectively .
Reset the instance
Return iterator for items in each page
Search into instance attributes properties and return values of no - args methods .
Reads text file contents
Parse a string as an integer encapsulating error handling .
Reshape data into ( num_example batch_size )
Download the page into a string
Translate a string with the current locale .
Return names as a tuple based on given month . If no month given use current one
Create new bucket .
Compute entropy on the string
Read a dictionary of strings from a file
Replace boolean variables by the characters F / T
Constructor .
Return a region from a numpy array . : param array : : class : numpy . ndarray : param identifier : value representing the region to select in the array : returns : : class : jicimagelib . region . Region
Rewind the file to the start of the body ( if seekable ) .
Centre and normalize a given array .
Index of the last occurrence of x in the sequence .
Convert string or other Python object to boolean .
Autoconnect slot activated when tbSourceDir is clicked .
r Gets the string representation of the given type .
Check if obj is number .
Return a new copied dictionary without the keys with None values from the given Mapping object .
Recursively iterate through values in nested lists .
Print out a neat targets dependency tree based on requested targets .
: rtype : bool
Skip a section
Type casting .
Sorts this RDD by the given keyfunc
Read a block of data and parse using the given protobuf object .
Parse datetime .
Captures screen area of this region at least the part that is on the screen
Returns the object s parent window . Returns None if no window found .
Generate a unique ID that is somewhat guaranteed to be unique among all instances running at the same time .

htmlify string
Print object information using a namedtuple and a format pattern .
Helper method that escapes parameters to a SQL query .
Returns a boolean index with True if the value is masked .
iterate through the noun phrases
hacky inference of kwargs keys
Delete a file safely . If it s not present no - op .
The last RQ Job this ran on
Find and kill child processes of a process .
Rate limit a function .
Returns the index of a geometry in a list of geometries avoiding expensive equality checks of in operator .
Labels plots and saves file
Get comments only .
Install or upgrade setuptools and EasyInstall
Check that a binary operator is surrounded by exactly one space .
Returns all column names and their data types as a list .
Create a sympy . Symbol with positive and integer assumptions .
Helper function to easily create the proper json formated string from a list of strs : param cmd_list : list of strings : return : str json formatted
Convert a byte value to boolean ( 0 or 1 ) if the global flag strictBool is True
Helper parse action to convert tokens to upper case .
converts py2 unicode / py3 bytestring into str Args : string ( unicode byte_string ) : string to be converted Returns : ( str )
Remove key from dict and return value .
Convert a string of a calculation energy e . g . - 1 . 2345 eV to a float .
An async result aggregator that combines all the results This gets executed in unsync . loop and unsync . thread
For list values returns the index location of element x . If x does not exist will raise an error .

Calculate the median of a list .
Shot noise corruption to images .
Returns value of a sine wave at a given frequency and framerate for a given sample i
Get image as a buffer in ( format ) . Format should be jpeg png etc .
Return the set of implemented system flags .
Transparently unzip the file handle
Get dimension of an array getting the number of rows and the max num of columns .
This is the same functionality as int . from_bytes in python 3
Returns all dates between two dates .
Returns all dates between two dates .
Returns True if the root node contains no child elements no text and no attributes other than ** type ** . Returns False if any are present .
Python version independent function to obtain the parameters of a typing . Callable object . Returns as tuple : args result . Tested with CPython 2 . 7 3 . 5 3 . 6 and Jython 2 . 7 . 1 .
Get a list of the top topn features in this : class : . Feature \ .
Utility function for sort_file_tabs_alphabetically () .
Get the local ip of this device
Parse an ISO format date ( YYYY - mm - dd ) .
Converts any object to JSON - like readable format ready to be printed for debugging purposes : param obj : Any object : return : string
Deserializes Java objects and primitive data serialized by ObjectOutputStream from a string .
>>> l = [ 1 1 1 ] >>> obj_in_list_always ( l 1 ) True >>> l . append ( 2 ) >>> obj_in_list_always ( l 1 ) False
Display both SQLAlchemy and Python help statements
Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** .
Round a float to a precision
splits iterables a in equal parts of size sz
decode ( bytearray raw = False ) - > value
Write the ROI model to a FITS file .
Pretty Prints seconds as Hours : Minutes : Seconds . MilliSeconds
Removes the venv by name
helper function for quick base conversions from strings to integers
Takes JSON formatted data converting it into native Python objects
Perform a simple check if the value is callable .

Given a float returns a rounded int . Should give the same result on both Py2 / 3
Finds the longest path in a dag between two nodes
( Point Point ) - > Point Return the point that lies in between the two input points .
r Given a list of nested lists of arbitrary depth returns a single level or flat list .
Converts an ARRAY string stored in the database back into a Numpy array .
Deserialize s ( a str ) to a Python object .
StringIO constructor shim for the async wrapper .
Remove non - alphanumerical characters from metric word . And trim excessive underscores .
Args : dt : a datetime Returns : tuple of the datetime s year and quarter
Decorator to turn tasklet to run eagerly .
Compare two strings while protecting against timing attacks
Saves a pdf of the current matplotlib figure .
Represent string / bytes s as base64 omitting newlines
Pass in a dictionary that has unsafe characters as the keys and the percent encoded value as the value .
quick and dirty appending of query parameters to a url
Update the dev_info data from a dictionary .
Get a list of the data types for each column in * data * .
convert a ctypes structure to a dictionary
Determine with width in pixels of string .
Return BGR image read by opencv
Return minimal quantum of a number as defined by precision .
Show the x - axis tick labels for a subplot .
a normal old python function to return the Nth fibonacci number .
Return the nth value of array
Close our socket .
Finds the index of an item in list which satisfies predicate : param predicateFn : predicate function to run on items of list : param items : list of tuples : return : first index for which predicate function returns True
All branches in a list
Translate dicts to scala Maps
Load logger config from file Keyword arguments : filename -- configuration filename ( Default : logging . ini ) * args -- options passed to fileConfig ** kwargs -- options passed to fileConfigg
delete ( filething )
Converts an ARRAY string stored in the database back into a Numpy array .
Like a bulk : meth : forceput .
Communicate with the child process without closing stdin .
Calculate standard deviation weighted by errors
Read entire contents of file into a string .
Return True if arg is valid value for the class . If the string value is wrong for the enumeration the encoding will fail .
Return True if there s something to read on stdin ( posix version ) .
: param sequence : Any sequence whose elements can be evaluated as booleans . : returns : true if all elements of the sequence satisfy True and x .
Uses numpy . load to open the underlying file
Returns True if test is True for all array elements . Otherwise returns False .
interpret the dtype from a scalar or array . This is a convenience routines to infer dtype from a scalar or an array
Calculates the moving average ( rolling mean ) of an array of a certain window size .
Gets next week day
Remove instance from instance list
Deserializes string to date .
Read a file into a string PRE : fname is a small file ( to avoid hogging memory and its discontents )
Banana banana
Check if the string is only composed of hex characters .
Return the cosine and sin for the given angle in degrees with special - case handling of multiples of 90 for perfect right angles
Return True if x == y and False otherwise .
Yield all items from iterable except the last one .
Return a naive datetime object for the given timezone . A timezone is any pytz - like or datetime . tzinfo - like timezone object . If no timezone is given then UTC is assumed .
Whether this path is a symbolic link .
Helper that returns if parent / item is a directory .
Simple abstraction on top of the : meth : ~elasticsearch . Elasticsearch . scroll api - a simple iterator that yields all hits as returned by underlining scroll requests . By default scan does not return results in any pre - determined order . To have a standard order in the returned documents ( either by score or explicit sort definition ) when scrolling use preserve_order = True . This may be an expensive operation and will negate the performance benefits of using scan . : arg client : instance of : class : ~elasticsearch . Elasticsearch to use : arg query : body for the : meth : ~elasticsearch . Elasticsearch . search api : arg scroll : Specify how long a consistent view of the index should be maintained for scrolled search : arg raise_on_error : raises an exception ( ScanError ) if an error is encountered ( some shards fail to execute ) . By default we raise . : arg preserve_order : don t set the search_type to scan - this will cause the scroll to paginate with preserving the order . Note that this can be an extremely expensive operation and can easily lead to unpredictable results use with caution . : arg size : size ( per shard ) of the batch send at each iteration . Any additional keyword arguments will be passed to the initial : meth : ~elasticsearch . Elasticsearch . search call :: scan ( es query = { query : { match : { title : python }}} index = orders - * doc_type = books )
A small helper function to convert a string to a numeric value if appropriate
Returns all column names and their data types as a list .
Remove the last NoteContainer in the Bar .
Make a function that checks whether a scalar or array is of a given kind ( e . g . float int datetime timedelta ) .
Context manager to temporarily disable certificate validation in the standard SSL library .
Return all ( and only ) the lowercase chars in the given string .
Returns current grid cursor cell ( row col tab )
Return True if list contains either values of type vtype or None .
Install Postgres on remote
Convert this confusion matrix into a 2x2 plain list of values .
Check if a user exists
Make a copy of a dictionary with all keys converted to snake case . This is just calls to_snake_case on each of the keys in the dictionary and returns a new dictionary .
Opens the file and reads the value
Can edit this object
Output data as a nicely - formatted python data structure
Stops iterating before yielding the specified idx .
Move cursor to this line in the current buffer .
Update the argparser namespace with any data from configuration file .
Helper function to unpickle data from picklefile .
Convert a structured NumPy array into a Table .
Convert to float if object is a float string .
Checks if the given type is a builtin one .
Advances to next line .
Create a function to map from rows with the structure of the headers to the structure of the table .
Retrieves and removes the first task from the heap .
Takes a timestamp value and rounds it to a second precision .
Cast uint32 RGB image to 4 uint8 channels .
merge two dictionaries
Google AppEngine Helper to convert a data type into a string .
Check if value is a valid UUID .
Determine whether we re in an interactive shell . Sets interactivity off if appropriate . cf http : // stackoverflow . com / questions / 24861351 / how - to - detect - if - python - script - is - being - run - as - a - background - process
Return the duplicates in a list .
The cell lengths .
Load a model from an installed package .
Fetch an image from url and convert it into a Pillow Image object
Turns a Python unicode string list into a Java String array .
Return dict mapping item - > indices .
Outputs a string to the console ( stdout ) .
Simple directory walker
ndarray containing tuples of pairwise indices .
Try to infer an object s dtype for use in arithmetic ops
Returns the value of the other type instance to use in an operator method namely when the method s instance is on the left side of the expression .
get a set of keys from redis
A very thin wrapper around textwrap . fill to consistently wrap documentation text for display in a command line environment . The text is wrapped to 99 characters with an indentation depth of 4 spaces . Each line is wrapped independently in order to preserve manually added line breaks .
Try to get __name__ first __class__ . __name__ second and finally if we can t get anything acceptable fallback to user a repr () call .
Convenience function for loading yaml - encoded data from disk .
r Like rotate but modifies l in - place .
Return the crossproduct of the two vectors as a Vec2 . Cross product doesn t really make sense in 2D but return the Z component of the 3d result .
Convert a structured NumPy array into a Table .
Read tag data from file and return as numpy array .
DEBUG FUNC modify argv to look like you ran a command
checks if you are on a 64 bit platform
Make a list of strings to pass to an SQL statement from the dictionary kw with Python types
Send a terminate request and then disconnect from the serial device .
Returns the item that appears most frequently in the given list .
Request that the Outstation perform a cold restart . Command syntax is : restart
Calculate standard deviation weighted by errors
If value is a datetime convert to timestamp
Clears the input and output buffers
Parse a bool from a string .
Disable event loop integration with wxPython .
Sum the widths of the columns that make up the span plus the extra .
must be an iterable ( list array tuple )
Validates that the object itself is some kinda string
Returns whether the provided name is a valid variable name in Python
Return the length of s when it is encoded with base64 .
Check if email is valid
Direct access to byte data .
Serializer for consistency
Dump single enum type . Keyword arguments : top -- top namespace
Convert a dict of 1d array to a numpy recarray
Get the UTC time now but with no timezone information in : class : datetime . datetime format .
Compare by iteration
Match two names .
the field member matching name or None if no such field is found
Ajout d un message de log de type DEBUG
Checks if a string is quoted : param arg : the string being checked for quotes : return : True if a string is quoted
Create an instance using the launcher .
helpful in situations where browser / app may recognize Unicode encoding in the \ u0b8e type syntax but not actual unicode glyph / code - point
Convert input argument to bytes
Returns the non - sequence features from the provided example .
Returns the index of the earliest occurence of an item from a list in a string
Finds parent folder of file
Set the exectuable bit on the given filename
Take a date object and return the first day of the month .
x is a 2D sparse matrix with it s first shape equal to 1 .
If Python 2 replace non - ascii characters and return encoded string .
Compare two strings while protecting against timing attacks
Convert a list of tuples describing a table into a HTML string
Reformat a date string to standard format .
Initialize .
A background thread to kill the process if it takes too long .
Return the number of entries in a table by counting them .
Evaluates a piece of Javascript in the context of the current page and returns its value .
Converts backslashes in path patterns to forward slashes .
Delete all records from a table . Use caution!
Remove duplicates from an iterable preserving the order .
equivalent to scipy . preprocessing . normalize on sparse matrices but lets avoid another depedency just for a small utility function
Convert a Stripe API timestamp response ( unix epoch ) to a native datetime .
Decide if the Ipython command line is running code .
docstring for argparse
Clear the displayed image .
A function to display sympy expression using display style LaTeX in PNG .
Print a colored string to the target handle .
converts a csv string into a list
Apply the coefficients from a linear fit to an array of x y positions .
Raises an AssertionError if expected is actual .
Detach from all tracked classes and objects . Restore the original constructors and cleanse the tracking lists .
Send files using the config . ini settings .
Return the approximate size of the queue ( not reliable! ) .
Returns a lowercase string with punctuation and bad chars removed : param s : string to clean
Pop the heap value from the heap .
Gets RAM memory usage
Returns public attributes of the inspected object .
Replace #hashtag and
convert notebook to python script
Return ctypes . Array an iterable array of int values in argb .
Run the final coverage report . This outputs the coverage report aggregating coverage from the unit test runs ( not system test runs ) and then erases coverage data .
Convert string to datetime object .
Get the local variables in the caller s frame .
Remove non - alphanumerical characters from metric word . And trim excessive underscores .
Pyqt specific key release callback function . Translates and forwards events to : py : func : keyboard_event .
Add suffix to a full file name
Check if we are in a tty .
disassemble Python byte - code file ( . pyc )
Creates a new dict from an existing dict that only has the given keys
Converts a comma separated string to a list
Print a log message to standard error .
: type s : str : rtype : int
Project x and y
True if all the args are functions and / or subroutines
Make a header request to the endpoint .
Pull a file directly from S3 .
Check if there is enough permissions for access
End of the Glances server session .
Calculate combined size of tiles .
Fetch an image from url and convert it into a Pillow Image object
Called when a new DropDownItem gets selected .
Reload the cached localzone . You need to call this if the timezone has changed .
Fill file at
Sets args and kwargs that are passed when creating a subparsers group in an argparse . ArgumentParser i . e . when calling argparser . ArgumentParser . add_subparsers
Clean up after connection failure detected .
Removes // - comments and single - line C - style / * * / comments .
Counts the word frequences in a list of sentences .
Checks if key exists in datastore . True if yes False if no .
Convert axis coordinate to bin index .
count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )
Returns the angle between two points .
Gets the width of the table that would be printed . : rtype : int
Writes the string to stdout
Return a legal python name for the given name for use as a unit key .
Calculate the tanimoto set similarity .
Sum reduction op .
Put curly brackets round an indented text
Similar to Python s built - in open () function .
Remove prefix ( and space ) from line
Lookup a transitive parent object that is an instance of a given class .
Returns a list of names of columns that are string type .
Rate limit a function .
Remove files specified multiple times in a list .
Return the nth value of array
Returns the shape of the region as ( x y w h )
return the key from the request
Prepare the api specification for request and response validation .
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
Return True if the table * name * exists in the database .
Count the number of non - NA in this array along the given axis or axes
Sort list elements by name .
Decide if the Ipython command line is running code .
date to unix timestamp in milliseconds
Performs a join using the union join function .
Reads the date from a string in the format YYYY / MM / DD and returns : class : datetime . date
Login to a docker registry with write permissions
Return first row and also iterable with same items as original
Converts a list into a space - separated string and puts it in a dictionary
Clean up processes after SIGTERM or SIGINT is received .
Checks if the given type is an enum type .
get the current month s last day : param year : default to current year : param month : default to current month : return : month s last day
Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line .
test if object is a list or tuple
Args : x : iterable of strings
Value of property .
Retrieve the request s User - Agent if available .
Returns number of wraps around given method .
Get adjacency matrix .
Replace boolean variables by the characters F / T
Utility function to remove duplicates from a list : param seq : The sequence ( list ) to deduplicate : return : A list with original duplicates removed
verify the validity of the given file . Never trust the End - User
Reverse the normalization done to a batch of images .
Removes trailing whitespace on each line .
Use the S3 SWAG backend .
Read text from stdin and print a helpful message for ttys .
Builds a comment .
Helper method that escapes parameters to a SQL query .
Returns files matched by all extensions in the extensions list
Gaussian model m is [ psill range nugget ]
Find the first location in our array that is not empty
check whether the item is list ( tuple ) and consist of list ( tuple ) elements
Get mnist dataset with features and label as ndarray . Data would be downloaded automatically if it doesn t present at the specific location .
Reads and iterates through each image file in the given directory
Convert datetime to epoch seconds .
Convert a list of JSON values to a list of models
Set the upper bound of a constraint .
count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )
verify the validity of the given file . Never trust the End - User
Adds execute permission to file . : param filename : : return :
Pareses the address string into coordinates to match address_to_coords return object
This removes newlines and multiple spaces from a string .
log stop
r Copy object to the system clipboard .
Round the number to the specified number of significant figures
Release the lock on the file .
Join two state vectors into a larger qubit state
Returns the topmost parent of the current category .
Remove all unwanted characters from text .
Convert axis coordinate to bin index .
Returns a temporary filename based on filename .
Trim left - right given string
Calculate the MD5 hash for a file .
Set access and modification times on a file .
Detects whether a line is present within a file .
Helps us to create a movie .
returns a tuple that contains ( screen_width screen_height )
Try to return a path to static the static files compatible all the way back to Django 1 . 2 . If anyone has a cleaner or better way to do this let me know!
Perform column - stacking on a list of 2d data blocks .
wrapper to search_s
Returns the index of the earliest occurence of an item from a list in a string
Returns this programs current memory usage in bytes
Returns True if pip exists inside the virtual environment . Can be used as a naive way to verify that the environment is installed .
Converts a string to a datetime .
Strip comments from json string .
Takes in an object and a variable length amount of named attributes and checks to see if the object has each property . If any of the attributes are missing this returns false .
Splits iterator in chunks .
Replace multiple values in a string
Removes a : py : class : . Series from the chart .
get a value from a tag ( if it exists )
The current active : class : . Window .
will plot a stack of traces one above the other assuming marray . shape = numRows numSamples
Reads a tuple of numbers . e . g . vertices normals or teture coords .
Set the modified time of a file
sample data from given histogram and min max values within range
Strip the whitespace from all column names in the given DataFrame and return the result .
Serialize every item of the list .
Reads text file contents
We have a full length slice .
search graph for cycle using DFS continuing from node path contains the list of visited nodes currently on the stack visited_nodes is the set of already visited nodes : param graph : : param node : : param path : : param visited_nodes : : return :
r Directly reads text data from url
Return the given operation as an asyncio future .
Subclassing hook to specialize how JSON data is converted to keyword arguments
Assert an alert is showing with the given text .
Convert to snake case .
Calculate the size of x along axis dimensions only .
Handle interactive exit .
Creates a variation from a base value
Returns date range for the previous full month .
Idempotent and None - safe version of strict_bool .
Wrapper for inserting int64 features into Example proto .
Format numpy array as a string .
Run Python test cases against Java runtime classes .
Generate all matches found within a string for a regex and yield each match as a string
Return a shell - escaped version of the string s .
Remove null items from a dictionary
Main window move event
Return a name which includes the module name and function name .
Generator that loops through all absolute paths of the files within folder
Apply re . sub to bunch of ( pattern repl )
Pull a file directly from S3 .
Get the magnitude of a vector .
Same as lazy_binmap except the parameters are flipped for the binary function
Clears the default matplotlib ticks .
Return a name which includes the module name and function name .
Flatten dict with defined key join symbol .
Converts the input single value into the expected Python data type raising django . core . exceptions . ValidationError if the data can t be converted . Returns the converted value . Subclasses should override this .
returns unique elements from a list preserving the original order
Squash self . out into string .
Converts a Python 2 function as lambda ( x y ) : x + y In the Python 3 format : lambda x y : x + y
Splits string into n sized chunks .
linear regression calculation
Returns a StrictRedis connection instance .
Set visible property of ticklines and ticklabels of an axis to False
Get the first sunday of a month .
Parses S3 URL .
Wrapper for inserting float features into Example proto .
Converts an dict to a Enum .
Convert a one - hot encoded array back to string
r Handles whitespace cleanup .
Are two indexes equal? Checks by comparing str () versions of them . ( AM UNSURE IF THIS IS ENOUGH . )
Convert raw input value of the field .
Exit the shell session .
Reverse the range
Serve the datasets in a directory over HTTP .
Converts SoftLayer . CLI . formatting . Table instance to a prettytable .
Quick way to read a file content .
Helper that returns if parent / item is a directory .
Return file name ( s ) from Tkinter s file open dialog .
Return the path from the root to node as a list of node names .
Replace regex with string .
Splits a list into chunks
Outputs a string to the console ( stdout ) .
Return a new copied dictionary without the keys with None values from the given Mapping object .
Discover the current time zone and it s standard string representation ( for source { d } ) .
Check if n is a prime number
Determine if given filename is an image .
Move datetime 1 year in the chosen direction . unit is a no - op to keep the API the same as the day case
Convert any timestamp to UTC ( with tzinfo ) .
Get Querystring information from uri .
A small helper function to convert a string to a numeric value if appropriate
Convert hex string like \ x0A \ xE3 to 2787 .
Changes volume
Add params to doc string
Context manager to temporarily disable certificate validation in the standard SSL library .
Check if file is a regular file and is readable .
Returns the number of rows of the main dataframe
Create database tables from sqlalchemy models
Random normal variates .
Selects n random elements from a list of ( weight item ) tuples . Based on code snippet by Nick Johnson
Close all connections .
Returns the year .
Returns a list of all the image s colors .
Get the list of distinct values with preserving order .
Set the memory per process in megabytes
Remove non - alphanumerical characters from metric word . And trim excessive underscores .
Calculate the tanimoto set similarity .
Whether the item is a placeholder or contains a placeholder .
Register a modele onto the lemmatizer
Do all elements of x have a type from types?
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
Override of PantsService . terminate () that cleans up when the Pailgun server is terminated .
given an Nxm matrix containing boundary info between simplices compute indidence info matrix not very reusable ; should probably not be in this lib
Public function that reads a local file and generates a SHA256 hash digest for it
Sets the value in the request cache if the django cached response was a hit .
This parallel fetcher uses gevent one uses gevent
Convenience method for just changing font size .
Flatten all dimensions of a except the last .
There s probably a way to do this with string functions but I was lazy . Replace all instances of \ r or \ n in a string with something else .
Checks if the filename exists under the path .
Use openpyxl to read an Excel file .
Return peak memory usage in MB
Joins two dictionaries .
Categorical accuracy
Sends a file via FTP .
Get line count of file
Returns given method name .
Replacer oslo_config . cfg . ConfigParser . parse for in - memory cfg .
Let the DBMS perform a sum on a queryset
Hex encode a binary string
Normalize path slashes .
Build query and passes to Elasticsearch then returns the raw format returned .
Localize a datetime object to local time .
Get the week start date and end date
Call callable ( * args ** kw ) fixing any type errors that come out .
: param string s : under_scored string to be CamelCased : return : CamelCase version of input : rtype : str
Add global variables to JavaScript about the location and latest version of transpiled files . Usage :: { % static_urls_js % }
Determine whether a system service is available
Returns the absolute position of table top
Grab all escape codes from a string . Returns a list of all escape codes .
Are two indexes equal? Checks by comparing str () versions of them . ( AM UNSURE IF THIS IS ENOUGH . )
Get the clipboard s text on OS X .
Lookup country for IP address .
Parses a date string formatted like YYYY - MM - DD .
Print training time at end of training
Return a json array as a list
Computes average length of words
Converts text that may be camelcased into an underscored format
Returns the default bucket from a list of buckets i . e . the largest bucket .
Get the current mouse location ( coordinates and screen number ) .
Quit signal handler .
Given a lat & lng what s the string search query .
Returns the year .
Rewind the file to the start of the body ( if seekable ) .
Calculate the SSE to the cluster center
Plot a smoothed ( by kernel density estimate ) histogram . : type data : numpy array : param data : An array containing the data to be plotted
r A function to support exiting from exit hooks .
Convert CamelCase to lower_and_underscore .
Digits needed to comforatbly display values in [ minval maxval ]
Removes trailing zeroes from indexable collection of numbers
Returns a dictionary from a URL params
Reads a csv and returns a List of Dicts with keys given by header row .
create random string of selected size
Return a flatten version of the nested argument
Checks if a key is valid and raises a ValueError if its not .
Convert a one element byte string to signed int for python 2 support .
Reset to the default text color on console window . Return bool True if succeed otherwise False .
Check features data are not empty
Create an instance from a dictionary .
Clips a prefix from the beginning of a string if it exists .
create a graphviz graph from text
Reload the device .
r Like print but a function . I . e . prints out all arguments as print would do . Specify output stream like this ::
Test for greater than .
Return the group associated to the file : param filename : : return : str
checks if you are on a 64 bit platform
Internal random datetime generator .
Disable event loop integration with wxPython .
This removes newlines and multiple spaces from a string .
Start the Django dev server .
Return a list of dictionaries which are sorted for only unique entries .
Strip agents from a string .
Simple abstraction on top of the : meth : ~elasticsearch . Elasticsearch . scroll api - a simple iterator that yields all hits as returned by underlining scroll requests . By default scan does not return results in any pre - determined order . To have a standard order in the returned documents ( either by score or explicit sort definition ) when scrolling use preserve_order = True . This may be an expensive operation and will negate the performance benefits of using scan . : arg client : instance of : class : ~elasticsearch . Elasticsearch to use : arg query : body for the : meth : ~elasticsearch . Elasticsearch . search api : arg scroll : Specify how long a consistent view of the index should be maintained for scrolled search : arg raise_on_error : raises an exception ( ScanError ) if an error is encountered ( some shards fail to execute ) . By default we raise . : arg preserve_order : don t set the search_type to scan - this will cause the scroll to paginate with preserving the order . Note that this can be an extremely expensive operation and can easily lead to unpredictable results use with caution . : arg size : size ( per shard ) of the batch send at each iteration . Any additional keyword arguments will be passed to the initial : meth : ~elasticsearch . Elasticsearch . search call :: scan ( es query = { query : { match : { title : python }}} index = orders - * doc_type = books )
Print a formatted straight line .
Old style use JSONTemplateResponse instead of this .
Returns x rounded to n significant figures .
Draw a graph and save it into a file
Return a prettier version of obj
get element by name
convert notebook to python script
Convert a list of strings to a list of integers .
Return a 3 - dimensional rotation matrix .
Checks if the given thing represents a date
Removes all blank lines in @string
Return True if variable is a set
example matrix for width = 2
Return True if the directed graph g has a cycle . The directed graph should be represented as a dictionary mapping of edges for each node .
Check whether the provided value is a valid enum constant .
Split a sentence into list of words .
Expand $vars in a string .
Format numpy array as a string .
1x1 convolution
Reads an array from bytestring with big - endian data .
Removes a : py : class : . Series from the chart .
Initialise sets used for uniqueness checking .
Compute page boundary alignment : param int length : content length : rtype : int : return : aligned byte boundary
Print all rows in this result query .
Gets the median of a list of values Returns a float / int
Returns the list of modes .
Abort everything everywhere .
Returns the size of remote files
decorator to convert a method taking a iterable to a * args one
Returns the progress ratio and percentage .
Checks if the given type is an enum type .
This is a compatibility function that takes a C { float } and converts it to an C { int } if the values are equal .
Converts a comma separated string to a list
Create a list of items seperated by seps .
takes a list of lists l and returns a flat list
updates the scale of all actors in the plotter
r Directly reads text data from url
Convert to camel case .
Removes all blank lines in @string
Process an iterable of dictionaries . For each dictionary d convert ( in place ) d [ key ] to a float . If that fails convert it to None .
Creates a datetime from GnuCash 2 . 6 date string
Similar to print but prints to stderr .
Returns the longest string size for a string entry across data .
Returns the day name
Convert a string from snake case to camel case with the first letter capitalized . For example some_var would become SomeVar .
a normal old python function to return the Nth fibonacci number .
Update the digest of a single file in a memory - efficient manner .
Send an email to this User .
Remove the prefix from the text if it exists .
Calls the specified Trigger of another Area with the optionally given parameters .
See : func : ~bitstruct . unpack_from () .
Return an ISO - 8601 formatted string from the provided datetime object
Return the width of the table including padding and borders .
For a given value the function finds the nearest value in the array and returns its index .
Log memory usage before and after a method .
Return the unique items from iterable * seq * ( in order ) .
\ kills the child and exits
Return a square grid with values of the distance from the centre of the grid to each gridpoint
Has a 50 / 50 chance of calling a function
Returns a generator that spits an iteratable into n - sized chunks . The last chunk may have less than n elements .
Return True if Glances is running in standalone mode .
Wipes compiled and cached python files . To simulate : pynt clean [ dry_run = y ]
Resets the iterator to the start .
Return the element with the specified ID .
Print at most limit elements of list .
View the quaternion array as an array of floats
Get the magnitude of a vector .
Is the last line of the cell a line with code?
Outputs a string to the console ( stdout ) .
Removes dict keys which have have self as value .
Return the high median of data .
Return a vector orthogonal to the given triangle
Get milliseconds from a timedelta .
A handy wrapper to get a remote file content
Checks if the string is a palindrome ( https : // en . wikipedia . org / wiki / Palindrome ) .
Runs the contents of the given script in hive and returns stdout .
Serialize obj as a JSON formatted stream to fp
Returns seconds since 0h00 .
Validate input data with input schema .
If pair is in search_list return the index . Otherwise return - 1
Convert an ARF timestamp to a datetime . datetime object ( naive local time )
Removes all non - printable characters from a text string
Given a callable func trap the indicated exceptions for up to retries times invoking cleanup on the exception . On the final attempt allow any exceptions to propagate .
Return indices of inputs to the node with the given index .
Returns the day name
Removes trailing zeroes from indexable collection of numbers
Remove an object from the bin folder .
Return a reversed iterable over the items in the dictionary . Items are iterated over in their reverse sort order .
Print a dictionary of attributes in the DOT format
Return the Jaccard similarity coefficient of 2 given sets .
Direct access to byte data .
Returns uptime in seconds or None on Syllable .
Convert dict of ascii str / unicode to dict of str if necessary
Turn a list into a comma - and / or and - separated string .
Return true if outfile exists and is no older than base datetime .
Retrieve core and memory information for the current machine .
Report whether this RangeSet contains another set .
This follows the validate rules for choices_form_class field used .
Is this an integer .
DOES NOT WORK WELL WITH MOPIDY Hack from https : // www . daniweb . com / software - development / python / code / 260268 / restart - your - python - program to support updating the settings since mopidy is not able to do that yet Restarts the current program Note : this function does not return . Any cleanup action ( like saving data ) must be done before calling this function
Print out a neat targets dependency tree based on requested targets .
Clean a pandas dataframe by : 1 . Filling empty values with Nan 2 . Dropping columns with all empty values
Check if we are in a tty .
Return a copy of seq without duplicates .
Advances to next line .
Simplest required implementation of collections . Counter . Required as 2 . 6 does not have Counter in collections .
Compare by iteration
Wait until the user accepted or rejected the request
Generate a UUID .
Runs the function asynchronously taking care of exceptions .
Outputs json with formatting edits + object handling .
Normalize a file / dir name for comparison purposes
Rounds a float value off to the desired precision
Returns the directory path for the given package or module .
Utility to generate enum classes used by annotations .
Directly send utf8 bytes to stdout
Simultaneously replace multiple strigns in a string
get the current month s last day : param year : default to current year : param month : default to current month : return : month s last day
gets the dimensions depending on python version and os
Decision Tree
Draws a sample of sums from a list of distributions .
Iterative mean .
Filter out duplicate items from an iterable
Just sends the request using its send method and returns its response .
Resursively create a named directory .
Remove all values that are zero .
Returns the value of the other type instance to use in an operator method namely when the method s instance is on the left side of the expression .
Flatten a 4d - tensor into a 3d - tensor by joining width and height .
Convert a object into dictionary with all of its readable attributes .
Load an object from a module by name
Check whether the provided value is a valid enum constant .
HTTP response for not - authorized access ( status code 403 )
Tells Windows this is an independent application with an unique icon on task bar .
Handle conversion of pymongo cursor into a JSON object formatted for UI consumption
Truncates a value to a number of decimals places
Converts python datetime to epoch microseconds .
Implements the === operator .
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Return an ISO - 8601 formatted string from the provided datetime object
Convert camelcase names to underscore
Return the key ( aka database value ) of a human key ( aka Python identifier ) .
Apply 2to3 tool ( Python2 to Python3 conversion tool ) to Python sources .
Returns day number of the last day of the month : param t : datetime : return : int
Takes a list of dict like objects and uses champ_id field as Id
split string * s * into list of strings no longer than * length *
download the dates file from the internet and parse it as a dates file
Inserts a horizontal ( commented ) line tot the generated code .
Make a sentence from a piece of text .
Check if required dependency is installed
Return locale from GET lang param or automatically .
Return whether two objects are equal via recursion using : func : numpy . array_equal for comparing numpy arays .
Return physical memory usage ( float ) Requires the cross - platform psutil ( > = v0 . 3 ) library ( https : // github . com / giampaolo / psutil )
Prompts the user for yes or no .
Calculate the average color from the list of colors where each color is a 3 - tuple of ( r g b ) values .
A basic document feature extractor that returns a dict of words that the document contains .
Get the help text ( signature + docstring ) for a command ( function ) .
Return a hash of a NumPy array .
Make a list a certain size
Return manhattan distance between two lists of numbers .
Will make any functions return an iterable objects by wrapping its result in a list .
docstring for argparse
Calculate equality between two ( Comparable ) objects .
Callback for closing the websocket connection
Get unit vector for a given one .
Return True if dtype is a numeric type .
Report whether the given value is a byte or unicode string .
Utility method to convert list to tsv line with carriage return
Get the language parameter from the current request .
Returns whether this is a complex floating point type .
Update the request headers .
Put the value of a column keyword . ( see : func : table . putcolkeyword )
Given a list possibly nested to any level return it flattened .
Replace my : attr : scopes for the duration of the with block .
Adds a chart to the worksheet at ( row col ) .
Choose k random elements of array .
Given a float returns a rounded int . Should give the same result on both Py2 / 3
This function flatten given nested list . Argument : nested list Returns : flat list
Return a column of the given matrix .
Run the unit tests .
Add a leading hash # at the beginning of every line in the source .
Ensure the cursor is within horizontal screen bounds .
The letter of the Excel worksheet column in which the data for a series appears .
Write GML comment .
Checks if the given type is an enum type .
Returns whether a path names an existing executable file .
Find the conda executable robustly across conda versions .
Returns a list produced by applying : func : multiple_replace to every string in stringlist .
Converts html content to plain text
Convert from whatever is given to a list of scalars for the lookup_field .
returns a dictionary of arg_name : default_values for the input function
Replace any non - word characters with a dash .
Locate the command s man page .
Return a Python date that corresponds to the specified string representation .
Private method that sets the value currently of the property
Get an SArray that contains the last n elements in the SArray .
Sets a user s password in the keyring storage
if we have a compatible fill_value and arr dtype then fill
Check that all arrays have consistent first dimensions .
We have a full length slice .
Print warning about interrupt and empty the job queue .
Strip excess spaces from a string
Convert comma - delimited list / string into a list of strings
takes flags returns indexes of True values
Array of vector lengths
Extract the CSRF token out of the Set - Cookie header of a response .
Release lock on compilation directory .
Wrap vertical table in a function for TabularOutputFormatter .
Restore settings to default values .
Time execution of function . Returns ( res seconds ) .
Reset analyzer state
Get the last object in file .
Test if the given value is a scalar .
Pretty Prints seconds as Hours : Minutes : Seconds . MilliSeconds
Attribute referencing the root node of the tree .
Pre - order depth - first
Prints the top row of a table
Return a tuple that contains ( width height ) Pass in a url to an image and find out its size without loading the whole file If the image wxh could not be found the tuple will contain None values
: rtype : tuple
Block until all jobs in the ThreadPool are finished . Beware that this can make the program run into a deadlock if another thread adds new jobs to the pool!
Parse a JSON string and build an entity .
Function that verify if the header parameter is a essential header
Adds an unordered list to the readme
Imputes data set containing Nan values
Fast median operation for masked array using 50th - percentile
Determine whether stdin has any data to read .
Set an object s field to default if it doesn t have a value
Executes a ( shell ) command in the background
Make sure that the file is writeable . Useful if our source is read - only .
A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .
Remove all properties matching both key and value .
Parses hostname from URL . : param url : URL : return : hostname
Dump single enum type . Keyword arguments : top -- top namespace
Check whether the provided array or dtype is of the string dtype .
Print a colored string to the target handle .
Establish tunnel connection early because otherwise httplib would improperly set Host : header to proxy s IP : port .
Recursively find size of a tree . Slow .
Removes // - comments and single - line C - style / * * / comments .
Check if obj is number .
Re - raises the error that was processed by prepare_for_reraise earlier .
Get the help text ( signature + docstring ) for a command ( function ) .
Create a new image by copying the image on a * color * background .
Determine if a Path or string is a file on the file system .
Is the user a system administrator
Cast to float tensor
Return the absolute path to the directory containing the package data .
Split a string with comma or space - separated elements into a list .
Find the percentile of a list of values .
Calculate equality between two ( Comparable ) objects .
A background thread to kill the process if it takes too long .
cv2 Image of current window screen
Returns the number of characters at the beginning of text that are whitespace .
Determines if a system process identifer exists in process table .
Visible width of a potentially multiline content .
Get the month start date a nd end date
set nan and inf rows from x to zero
Return the given path relative to this file .
Extract a raw_connection and determine if it should be automatically closed .
Sort input filename list by datetime
Log out the active user
Whitespace normalization :
Returns numpy array of natural logarithms of values .
Returns the first line of a file .
Execute the given multiquery .
takes a list of lists l and returns a flat list
Implements the === operator .
Begins an indented block . Must be used in a with code block . All calls to the logger inside of the block will be indented .
Daemonize the running process .
Counts the word frequences in a list of sentences .
Deletes the database file .
If pyyaml > 5 . 1 use full_load to avoid warning
Removes the venv by name
Determine if two objects are equal .
A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .
Converts a skew - symmetric cross - product matrix to its corresponding vector . Only works for 3x3 matrices .
adds information to the sequence for better debugging currently only an index property on each point in the sequence .
Remove instance from model
Create a Qt application .
Return the opposite of input condition .
Check if a password is valid
Internal random datetime generator .
Manually specify the x - axis log tick values .
There s probably a way to do this with string functions but I was lazy . Replace all instances of \ r or \ n in a string with something else .
Checks if an item is iterable ( list tuple generator ) but not string
Manually specify the x - axis tick values .
Gets the width of the table that would be printed . : rtype : int
Closest values
get max for queryset .
Parse an ISO8601 - formatted datetime string and return a datetime . time object .
print just one that returns what you give it instead of None
Converts protobuf message to a JSON dictionary .
Split a text into a list of tokens .
Invoked when determining whether a specific key is in the dictionary using key in d .
Callback to go to the next tab . Called by the accel key .
append item and print it to stdout
Creates converts to a masked array
Generalised logarithm
Format list .
Converts query strings into native Python objects
Make a list a certain size
Count the number of rows in 2D arrays that contain any nan values .
Return all ( and only ) the uppercase chars in the given string .
Extract the top level domain from an URL .
Merge two dicts and return a new dict . Much like subclassing works .
Set value of the checkbox .
Same as : meth : random . choice but also supports : class : set type to be passed as sequence .
Pad the text .
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
: param unicode fpath : : param unicode encoding : : rtype : dict | list
Return True if the sentence or fragment begins with one of the parts of speech in the list else False
Perform column - stacking on a list of 2d data blocks .
Close the db and release memory
variance of the values must have 2 or more entries .
Print emphasized good the given txt message
Computes the Poisson PMF .
returns : a triple of integers from a version tag
Remove Elasticsearch index associated to the campaign
Print warning about interrupt and empty the job queue .
Returns a list of synsets of a word after lemmatization .
generate a lower - cased camelCase string from an underscore_string . For example : my_variable_name - > myVariableName
Returns elapsed time at update .
Qt slot when the window is closed .
Gets RAM memory usage
Obtain a real address as an integer from an objectproxy .
remove problem characters from string
Remove a spent coin based on its index .
Flush all items from cache .
Pretty printing for numpy matrix X
Receive the content of url parse it as JSON and return the object .
Merge all the PDF files in pdf_filepaths in a new PDF file out_filepath .
Returns the number of processors on this machine .
Get system root directory ( application installed root directory )
Helper function to unpickle data from picklefile .
Traverse parent refs to top .
Logout from the remote server .
Replace any non - word characters with a dash .
Translate an image in fourier - space with plane waves
Checks whether the re module can compile the given regular expression .
Sends a command and an ( optional ) sequence of arguments through to the delegated serial interface . Note that the arguments are passed through as data .
Determine the number of leaves in a tree
Returns a boolean indicating if the code is executed inside softimage .
Set a restore point ( copy the object ) then call the method . : return : obj . do_method ( * args )
return an iterator that returns a chunk of a string every time it is called . notice that even though bufsize_type might be line buffered we re not doing any line buffering here . that s because our StreamBufferer handles all buffering . we just need to return a reasonable - sized chunk .
Banana banana
Test whether the current python environment is the correct lore env .
zfill ( x width ) - > string
Remove duplicates in a list .
If values in a series match a specified value change them to np . nan .
Swap i and j rows
Reads a stream discarding the data read and returns its size .
Takes a value or list of values and returns a single result joined by if necessary .
Return a list of unique items ( similar to set functionality ) .
Create an empty array with appropriate shape .
Returns number of wraps around given method .
Removes trailing zeros in the list of integers and returns a new list of integers
Create a vector randomly within the given rectangle .
given a segment ( rectangle ) and an image returns it s corresponding subimage
Matrix solve op .
Converts binary address to Ipv4 format .
Begins an indented block . Must be used in a with code block . All calls to the logger inside of the block will be indented .
Lookup country for IP address .
Unpickle a python object from the given path .
Returns the item that appears most frequently in the given list .
Shorthand for returning a URL for the requested static file .
Wrap text in an ansi escape sequence
Logs out the current session by removing it from the cache . This is expected to only occur when a session has
Reads a key from S3
Utility function which converts lists to tuples .
Get the file size of a given file
( Point Point ) - > Point Return the point that lies in between the two input points .
Calculates the moving average of an array .
Attempts to retrieve an item from the queue Q . If Q is empty None is returned . Blocks for timeout seconds in case the queue is empty so don t use this method for speedy retrieval of multiple items ( use get_all_from_queue for that ) .
Check whether the passed variable is a tuple with two floats or integers
Get domain part of an url .
Determine if two objects are equal .
Returns True if the file is binary
Ensure file deleted also on * Windows * where read - only files need special treatment .
>>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7
Data from http : // indexed . blogspot . com / 2007 / 12 / meltdown - indeed . html
Return the index of an element in the list .
Get the attributes of an object using dir .
connect to the given server e . g . : \\ connect localhost : 4200
Wraps jsonschema . validate returning the same object passed in .
See the descritpion of : func : validate for more details of parameters and return value .
Asynchronously run the worker does not close connections . Useful when testing .
return the higher parent which is not an AssignName Tuple or List node
Loads a model from specified file
Split a sentence into list of words .
Lock connection from being used else where
Return a version of the query string with the _e _k and _s values removed .
Return a DataFrame with rows where column values match match are removed .
Convert a pandas . Series into an xarray . DataArray .
Check if a port is open : param port : : param host : : return bool :
Removes object obj from the index .
RedisCache will set prefix + version as prefix for each key .
Sample a colormap from matplotlib
Wrapper on iter method callback gets an iterator result
Segmented max op .
Print a formatted indented text .
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
Returns the item that appears most frequently in the given list .
Remove and return the item at index .
I convert strings into integers floats and strings!
Return True if dtype is a real floating point type .
Generates a LaTeX table from parameter summaries .
Trim a PIL image and remove white space .
Replace placeholders in text by using the data mapping . Other placeholders that is not represented by data is left untouched .
View the quaternion array as an array of floats
Read a file and close it . Returns the file source .
searchs a value in a dicionary and returns the key of the first occurrence
Prints DB data representation of the object .
Simple measure of similarity : Number of letters in common / max length
Removes all blank lines in @string
Return the a new dict with underscores instead of hyphens in keys .
Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .
Joins two dictionaries .
Start a Pdb instance at the calling frame with stdout routed to sys . __stdout__ .
: param filename : The filename of the file to process : returns : The MD5 hash of the file
Check if something quacks like a list .
Returns the item that appears most frequently in the given list .
manually set the default figure size of plots :: Arguments :: x ( float ) : x - axis size y ( float ) : y - axis size aspect ( float ) : aspect ratio scalar
check code coverage quickly with the default Python
Return the shape of img .
Take a str and transform it into a byte array .
Validate if non empty string
Calculate the MD5 hash for a file .
Create a parser for CLI arguments and options .
Join the given iterable with
Add dots .
Read tag data from file and return as numpy array .
Python 3 input () / Python 2 raw_input ()
Standard euclidean distance .
Verify Django 1 . 11 is present if Python 2 . 7 is active
calculate the fill similarity over the image
Whether path is a directory to which the user has write access .
Takes an array add indentation to each entry and prints it .
Type casting .
Check features data are not empty
Returns the total timedelta duration in seconds .
This callback is invoked when the user checks the Use Scrollbars box in the preferences pane .
Helper function to remove the links from the input text
Make a n + 1 dim one - hot array from n dim int - categorical array .
Check if two pathes represent the same file .
Under UNIX : is a keystroke available?
Rounds a float value off to the desired precision
Context manager that suppresses stdout .
Format a Python object into a pretty - printed representation .
Remove key from dict .
Paginate queryset .
Test the multiprocess
Convert a ctypes double pointer array to a numpy array .
Return first occurrence matching f otherwise None
Read a file and close it . Returns the file source .
Helper function which returns an array with the Intervals boundaries .
Parses hostname from URL . : param url : URL : return : hostname
Return all ( and only ) the uppercase chars in the given string .
save the geometry before dialog is close to restore it later
Splits a list into chunks
Print dicttree in Json - like format . keys are sorted
Raise the open file handles permitted by the Dusty daemon process and its child processes . The number we choose here needs to be within the OS X default kernel hard limit which is 10240 .
From a list of intervals extract a list of sorted gaps in the form of [ ( g i ) ] where g is the size of the ith gap .
Remove duplicates from list while preserving order .
Whitespace normalization :
Remove unwanted list indices . First argument is the list of indices to remove . Other elements are the lists to trim .
Mark a given source line as executed count times .
Reverse the normalization done to a batch of images .
Check if email is valid
Compare differencs from two dicts
Logs out the current session by removing it from the cache . This is expected to only occur when a session has
Given two data points [ X Y ] linearly interpolate those at x .
Support change columns .
Make bars in horizontal bar chart thinner
Converts a list into a space - separated string and puts it in a dictionary
Python 3 input () / Python 2 raw_input ()
Converts a list into a space - separated string and puts it in a dictionary
Print a documented teleport version of the schema .
Plot the elements of the Pauli transfer matrix .
Turn dict keys and values into native strings .
Split a string with comma or space - separated elements into a list .
Convenient shorthand for toarray ( * args ** kwargs ) . view ( np . recarray ) .
Executes a ( shell ) command in the background
Perform log transform log ( x + 1 ) . Parameters ---------- data : array_like
Splits a string into parts at multiple characters
Upermutate 1 - D data that is sorted by indices_of_increasing .
Sorts a dict by value .
The title of this window
Initializes a filter object .
Return the absolute path to the directory containing the package data .
Assumes myList is sorted . Returns closest value to myNumber . If two numbers are equally close return the smallest number .
If called after an update the sprite can move back
Return a string of data after gzip decoding
Reads complete file contents .
Has a 50 / 50 chance of calling a function
Return relevant twitter timeline
Reads a csv and returns a List of Dicts with keys given by header row .
r Checks if l is iterable and contains only integral types
arr_out = round_array ( array_in )
Replace month strings occurrences with month number .
Returns uptime in seconds or None on Syllable .
Print in color .
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
Parse Config File from yaml file .
Convert column name to index .
Get from a list with an optional default value .
http : // stackoverflow . com / questions / 5098580 / implementing - argmax - in - python
Linspace op .
Return the duplicates in a list .
Writes a file if it doesn t already exist with the same content .
Check if the memory is too full for further caching .
Return True if the given object conforms to the Serializable protocol .
>>> _infer_interval_breaks ( np . arange ( 5 )) array ( [ - 0 . 5 0 . 5 1 . 5 2 . 5 3 . 5 4 . 5 ] )
Simple helper hash function
Translate an image in fourier - space with plane waves
Collect and serve static files .
Places all the child widgets in the appropriate positions .
Returns the last n rows in the table
Outputs a string to the console ( stdout ) .
A variant of memoized_property that allows for setting of properties ( for tests etc ) .
Convert datetime to epoch seconds .
Check if a username / password combination is valid .
Create an aiosqlite cursor wrapping a sqlite3 cursor object .
Returns sequence of integer ids given a sequence of string ids .
Get bin edges from a ROOT hist axis .
Adds self as child of parent then adds parent .
Test the multiprocess
Creates a new dict from an existing dict that only has the given keys
zfill ( x width ) - > string
Calculate the Hamming distance between two strings . From Wikipedia article : Iterative with two matrix rows .
Checks if a string is an integer . If the string value is an integer return True otherwise return False . Args : string : a string to test .
Create unique labels .
ANSI Escape sequences http : // ascii - table . com / ansi - escape - sequences . php
Digits needed to comforatbly display values in [ minval maxval ]
Return the dotproduct of two vectors .
Loads a pushdb maintained in a properties file at the given path .
Add one tick to progress bar

Read a dictionary of strings from a file
Closest distance between a line segment and a point
Guess extraction method given file name ( or path ) .
Returns whether a path names an existing executable file .
Return True if value is an integer .
Establish tunnel connection early because otherwise httplib would improperly set Host : header to proxy s IP : port .
If value is a datetime convert to timestamp
Allow \ n . join ( ... ) statements to work in Py2 and Py3 . : param sep : : param joinable : : return :
Returns a class based on class name
Close our socket .
Split a text into a list of tokens .
Return the minimum of an array ignoring any NaNs .
A function to display sympy expression using display style LaTeX in PNG .
Returns a list of names of columns that are string type .
Return a list of the ( name value ) pairs of the enum .
converts Synergy Timestamp for session to UTC zone seconds since epoch
Returns the default bucket from a list of buckets i . e . the largest bucket .
Return a vector with the elements rounded to the given number of digits .
Args : img ( PIL Image ) : Image to be padded .
Get single system variable from CCU / Homegear
Check if a file exists and is non - empty .
Return the absolute path to the directory containing the package data .
This turns off stdout buffering so that outputs are immediately materialized and log messages show up before the program exits
Get the local ip of this device
Normal cumulative density function .
Checks whether given class or instance method has been marked with the
Retrieve core and memory information for the current machine .
Turn an SQLAlchemy model into a dict of field names and values .
Terminate the pool immediately .
Returns given method name .
Output a networkx graph to a DOT file .
Format numpy array as a string .
: param dt : pythone datetime . datetime : return : 1999 - 02 - 01 string type
Places a legend box outside a matplotlib Axes instance .
Returns the key which comes before the give key .
Set the modified time of a file
Inputs [ a b c ] returns { a : 0 b : 1 c : 2 } .
Deletes an environment
r Repeat each item in iterable n times .
Determine if rollover should occur .
Set the default value for this key . Default only used when no value is provided by the user via arg config or env .
Validates RFC2822 format
Whether any of the filenames exist .
Args : points : ( nx4 ) x2 Returns : nx4 boxes ( x1y1x2y2 )
Make sure an object is JSON - serializable Use this to return errors and other info that does not need to be deserialized or does not contain important app data . Best for returning error info and such
A function to display sympy expression using display style LaTeX in PNG .
Resets the iterator to the start .
Takes a list of point objects ( which must have x and y fields ) . Returns a list of 3 - tuples : the indices of the points that form a Delaunay triangle .
Move cursor to this line in the current buffer .
Install Postgres on remote
Internal function to read an XML file
Flags that a function is linear wrt all args
Remove any duplicate item preserving order
: type s : str : rtype : int
Joins a voice channel
Python 3 input () / Python 2 raw_input ()
__init__ : Performs basic initialisations
calculate the fill similarity over the image
Deeply updates a dictionary . List values are concatenated .
Validates an email address Source : Himanshu Shankar ( https : // github . com / iamhssingh ) Parameters ---------- email : str
Find rightmost value less than x .
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
Rotates an image by deg degrees
Check if the memory is too full for further caching .
Check if n is a prime number
Remove instance from instance list
Calculate size of all files in path .
Create : class : PNG from raw bytes . : arg bytes b : The raw bytes of the PNG file . : rtype : : class : PNG
A non - negative integer .
Convenience method for just changing font size .
Gets tail
remove decoded instruction from instruction cache
Parse a bool from a string .
For list values returns the index location of element x . If x does not exist will raise an error .
DOES NOT WORK WELL WITH MOPIDY Hack from https : // www . daniweb . com / software - development / python / code / 260268 / restart - your - python - program to support updating the settings since mopidy is not able to do that yet Restarts the current program Note : this function does not return . Any cleanup action ( like saving data ) must be done before calling this function
Quit signal handler .
Returns a string composed of elements in inlist with each element separated by delimiter . Used by function writedelimited . Use \ t for tab - delimiting .
This parallel fetcher uses gevent one uses gevent
rounds float to closest int : rtype : int : param n : float
Saves a representation of the case in the Graphviz DOT language .
Return line ending .
Gets the process ID that the specified window belongs to
Return all ( and only ) the uppercase chars in the given string .
helper function for quick base conversions from integers to strings
set colouring on if STDOUT is a terminal device off otherwise
Make a list unique retaining order of initial appearance .
Returns a lowercase string with punctuation and bad chars removed : param s : string to clean
Recursivly delete a directory
Check whether a certain column exists
Round a float to a precision
Convert a byte array into an integer array . The number of bytes forming an integer is defined by num
SPSS . sav files to Pandas DataFrame through Rpy2
Make a function that checks whether a scalar or array is of a given kind ( e . g . float int datetime timedelta ) .
: return : size of the entire schema in bytes
Return extension identifying format of given filename
Check if a Django project is being managed with manage . py or django - admin scripts
Removes trailing zeroes from indexable collection of numbers
Parse identifier such as a|c|le|d|li|re|or|AT4G00480 . 1 and return tuple of prefix string ( separated at | ) and suffix ( AGI identifier )
Shape a list of lists into the appropriate shape and data type
Yield directory file names .
An iterable of column names for a particular table or view .
Return a JSSObject for the element with ID id_
Given a value wrap it in a 0 - D numpy . ndarray .
Convert comma - delimited list / string into a list of strings
Extract from the given iterable of lines the list of words .
When the with statement ends .
Returns a string representing a numpy array of 0 s and 1 s
Attempt to cast * value * into a bool returning * default * if it fails .
Returns full ISO string for the given date
Return all ( and only ) the uppercase chars in the given string .
Clears the default matplotlib ticks .
A wrapper of os . makedirs () .
Lookup a transitive parent object that is an instance of a given class .
Calculate overlap count between the values of two dictionaries
Get the file size of a given file
Simple helper hash function
Run the final coverage report . This outputs the coverage report aggregating coverage from the unit test runs ( not system test runs ) and then erases coverage data .
indents paragraphs of text for rst formatting
Checks if a given string is an url
Select rows where the given field is a member of the given value .
Helper to get bins for histplot .
Sends plain text using _send_text () .
split string into list of strings by specified number .
writes a string to file
Expand $vars in a string .
Returns key for the bottommost rightmost cell with content
Verifies that a string path actually exists and is a file
searchs a value in a dicionary and returns the key of the first occurrence
A non - optimal implementation of a regex filter
Stop the simple WSGI server running the appliation .
Count the number of non - NA in this array along the given axis or axes
Pretty print format some XML so it s readable .
Determine if two objects are equal .
Return a copy of seq without duplicates .
Calculate the median of a list .
If given environment key is defined print it out .
Report whether the given value is a byte or unicode string .
We have a full length slice .
Initialize an API .
Reads text file contents
This function prints the given String immediately and flushes the output .
Tokenizes * source * and returns the tokens as a list of lists .
Calculate the average color from the list of colors where each color is a 3 - tuple of ( r g b ) values .
Return a legal python name for the given name for use as a unit key .
From a given natural integer returns the prime factors and their multiplicity : param n : Natural integer : return :
Same order unique list using only a list compression .
Decodes a given base64 string into bytes .
Return time in milliseconds from start_time
A decorator for providing a unittest with a library and have it called only once .
Strips and filters empty or commented lines .
From : http : // stackoverflow . com / questions / 13062300 / convert - a - dict - to - sorted - dict - in - python
Returns svg from matplotlib chart
Extract the content of the zip - file at zip_path into target_folder .
Return default argument value as given by argparse s add_argument () .
Init a uniform noise variable .
Like argsort but returns an index suitable for sorting the the original array even if that array is multidimensional
Iterative mean .
visit an Ellipsis node by returning a fresh instance of it
Custom type for managing dates in the command - line .
Get the week start date and end date
Clear not used counters
set colouring on if STDOUT is a terminal device off otherwise
Reshape a multidimensional array to a vector .
return string as a comment
Serialize representation of the table for local caching .
Log out the active user
Get all the database column names for the specified table .
Parse a string of the form 305 . 48b into a Python float . The terminal letter if present indicates e . g . billions .
Return evidence codes in order shown in code2name .
Return full mask where True marks pixels within the given shape .
Normalize the length of a vector to one
A very thin wrapper around textwrap . fill to consistently wrap documentation text for display in a command line environment . The text is wrapped to 99 characters with an indentation depth of 4 spaces . Each line is wrapped independently in order to preserve manually added line breaks .
Checks if exception was raised because of too many executed requests . ( This is a temporal solution and will be changed in later package versions . )
r Gets the string representation of the given type .
Underlying synchronized wrapper .
Plot a smoothed ( by kernel density estimate ) histogram . : type data : numpy array : param data : An array containing the data to be plotted
Helper function for conversion of various data types into numeric representation .
Convert human readable string to datetime . datetime .
Create a new : class : ~ulid . ulid . ULID instance from the given : class : ~uuid . UUID value .
docstring for argparse
Cast DataArrays to np . float64 if they are of type np . float32 .
dfdatetime . Filetime : creation time or None if not set .
Calculate the average color from the list of colors where each color is a 3 - tuple of ( r g b ) values .
Return a percentile range from an array of values .
Initialize an API .
Get the parent node of node whch is located in tree s node list .
Return the list of properties specified for a model in an index .
position in 3d space

Test out all the layers on local CPU .
Helper for raising the correct exception under Python 3 while still being able to raise the same common exception class in Python 2 . 7 .
Split a string with comma or space - separated elements into a list .
Directly send utf8 bytes to stdout
Remove duplicates from list while preserving order .
Called when PyYaml encounters !include - raw
Round to sig figs
Pretty print the object s representation .
Get the current mouse location ( coordinates and screen number ) .
Returns a copy of the list without duplicates .
Wraps the dispatch method to add session support .
Return True if two numbers are equal up to the specified number of places after the decimal point .
Remove key from dict and return value .
Check if filename has changed since the last check . If this is the first check assume the file is changed .
Checks if two images have the same height and width ( and optionally channels ) .
Lasso Regression
Create a new response header replacing any previously defined headers with the same name .
Idempotent and None - safe version of strict_bool .
!
Returns the deepest level of nesting within a list of lists
Register Flask blueprints .
Print a dictionary of attributes in the DOT format
Convert a string of a calculation energy e . g . - 1 . 2345 eV to a float .
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
Gets the http method that will be called from the requests library
Use openpyxl to read an Excel file .
Function for checking a valid regex .
Returns the indices of the lexicographical sorting order of the supplied arrays .
Will make any functions return an iterable objects by wrapping its result in a list .
Utility function to remove duplicates from a list : param seq : The sequence ( list ) to deduplicate : return : A list with original duplicates removed
Returns the list of all indexes of the given array .
Restoring scrollbar position after main window is visible
Exponential function
Read a WAV file and returns the data and sample rate
Extract the archive .
Extend the list by appending all the items in the given list .
Check if filename has changed since the last check . If this is the first check assume the file is changed .
Checks if a string is an integer . If the string value is an integer return True otherwise return False . Args : string : a string to test .
Determine whether we re in an interactive shell . Sets interactivity off if appropriate . cf http : // stackoverflow . com / questions / 24861351 / how - to - detect - if - python - script - is - being - run - as - a - background - process
Returns day number of the last day of the month : param t : datetime : return : int

Return the line number parsed from the comment or 0 .
Write the given colored string to standard out .
Accepts a NumberGenerator operand an operator and optional arguments to be provided to the operator when calling it on the operand .
Returns the last location of the minimal value of x . The position is calculated relatively to the length of x .
Split a multiline string into a list excluding blank lines .
Parses a date string formatted like YYYY - MM - DD .
Test program for telnetlib .
Return a tuple from parsing a b c d - > ( a b c d )
MoveWindow from Win32 . handle : int the handle of a native window . x : int . y : int . width : int . height : int . repaint : int use 1 or 0 . Return bool True if succeed otherwise False .
Count the number of non - NA in this array along the given axis or axes
Determine the largest contig for each strain : param contig_lengths_dict : dictionary of strain name : reverse - sorted list of all contig lengths : return : longest_contig_dict : dictionary of strain name : longest contig
Returns aggregate image load time for all pages .
Determines if two rectangles each input as a tuple ( xmin xmax ymin ymax ) intersect .
Check if an element from a list is in a string .
Insert None as value for missing fields .
Parse string into Identity dictionary .
Return the index of an element in the list .
Get the host s ip number .
convert 3 3 a matrix to 6 element s list ( see Tauxe 1998 )
Convert comma - delimited list / string into a list of strings
Convert this confusion matrix into a 2x2 plain list of values .
Just the last entry .
Suppress warning about untrusted SSL certificate .
Advance the iterator without returning the old head .
Validates that the object itself is some kinda string
Always line buffer stdout so pipes and redirects are CLI friendly .
Fetch all remaining rows .
reads the zip file determines compression and unzips recursively until source files are extracted
Normalizes the given vector . The vector given may have any number of dimensions .
Get a callable that sends the actual API request internally .
Bootstrapped mean with confidence limits
Get all the prime factor of given integer
Verifies that a string path actually exists and is a file
Reads text file contents
Sets args and kwargs that are passed when creating a subparsers group in an argparse . ArgumentParser i . e . when calling argparser . ArgumentParser . add_subparsers
Decode string encoded by unicode_string
Shorcut for self . run .
( for multiline edit ) . Move cursor to the previous line .
Construct a single page PDF from the provided page in memory
Array of vector lengths
Return true if the pathname refers to an existing directory .
Helper parse action to convert tokens to lower case .
Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]
Provides an iterator over all values in a nested structure .
Returns the offset of the current cursor position in rl_line_buffer
Function for running binary search on a sorted list .
Suppress warning about untrusted SSL certificate .
expects a _n . array returns the global minimum of ( value - array ) ^2
Replaces occurrences of a match string in a given list of strings and returns a list of new strings . The match string can be a regex expression .
Go to the end of the current line and create a new line
last row or column of square A
must be a float
Debug a single doctest docstring in argument src
Return the number of dimensions of a tensor
Show the stretched data .
Return a percentile range from an array of values .
Exchange a code ( and state token ) for a bearer token
Find longest ORF from the given list of ORFs .
Convert a string from snake case to camel case with the first letter capitalized . For example some_var would become SomeVar .
Handles the specified flask request for one of the POST URLS Invokes the specified endpoint to generate a response .
expects a _n . array returns the global minimum of ( value - array ) ^2
Add an object to Javascript .
Read tag data from file and return as numpy array .

numpy . ndarray dumper .
Remove the querystring from the end of a URL .
Convert the given list of parameters to a JSON object .
Decorator that injects parsed arguments into a view function or method .
Start the Django dev server .
Find longest ORF from the given list of ORFs .
Deserialize s ( a str ) to a Python object .
Return matrix as csv data .
Convert hex string like \ x0A \ xE3 to 2787 .
Load the state from the given file moving to the file s directory during load ( temporarily moving back after loaded )
Enable a default web proxy
Check if a file exists
Expect a comment end and return the match object .
Makes the list have unique items only and maintains the order
Report whether another set contains this set .
Reverse op .
Return the high median of data .
Checks if invoking supplied clang - apply - replacements binary works .
Remove all accent from a whole string .
Appends a PDF to a pyPDF writer . Legacy interface .
Appends the prefix to the topic before sendingf
Returns the default WSGI handler for the runner .
Get the week start date and end date
Serializes a numpy array to a compressed base64 string
Helper for Django s reverse in templates .
adds a line of text to a file
Return a tuple of strings that match the regular expression pattern .
Unwrap a Python 2 . 6 SSL socket so we can call shutdown ()
Combine PDFs and return a byte - string with the result .
Uses http : // www . cplusplus . com / reference / string / to_string / for formatting
Execute the unit tests on an installed copy of unyt .
Get user input from the command line via raw_input / input .
Return the size in bytes .
Sorting logic for Quantity objects .
kwarg values always have defaults
Remove unwanted list indices . First argument is the list of indices to remove . Other elements are the lists to trim .
Main window move event
Enable a default web proxy
Return the fist ( left - hand ) digits in a string as a single integer ignoring sign ( + / - ) . >>> first_digits ( + 123 . 456 ) 123
Turns a Python unicode string list into a Java String array .
helper function for quick base conversions from strings to integers
Checks whether the remote file exists .
Is this a string .
Returns a vector of spherical bessel functions yn : x : The argument . N : values of n will run from 0 to N - 1 .
Upload the IPList as json payload .
Helper function to get the location of a Python file .
Call the handlers for the specified record .
Sorting logic for Quantity objects .
Find the percentile of a sorted list of values .
Internal helper to ask if the entity has a value for this Property .
Removes all blank lines in @string
Normalize the length of a vector to one
Get line count of file
Convert a string of a calculation energy e . g . - 1 . 2345 eV to a float .
helper function for quick base conversions from strings to integers
Add a leading hash # at the beginning of every line in the source .
Output all sections of the page .
Return unique list of items preserving order .
Returns the index of a geometry in a list of geometries avoiding expensive equality checks of in operator .

Read tag data from file and return as numpy array .
Get distance between pairs of lat - lon points
Finds the longest path in a dag between two nodes
Coerce value to an JSON - compatible representation .
Converts Matrix3 in an array : param m : Matrix3 : returns : 3x3 array
This class method could be used as decorator on subclasses it ensures update method is called after function execution .
Fill all null values with NaN values in a column . Null values are None or en empty string
Remove any duplicate entries .
Create a 20 char passphrase with easily typeable chars .
Downsample x by factor using striding .
Unpickles the classifier used
Binary operator .
A basic slug version of a given parameter list .
Jacobian matrix given Christophe s suggestion of f
Rotate a 3D vector using quaternion algebra .
imshow without interpolation like as matshow : param args : : param kwargs : : return :
Rate limit a function .
Pretty print the object s representation .
check if day is after month s 3rd friday
Convert dict of ascii str / unicode to dict of str if necessary
Move the cursor up a number of lines .
Delete all the files and subdirectories in a directory .
Get a list of the public data attributes .
Create an index field from this field
Enable the editing buttons to add / remove rows / columns and to edit the data .
: return : generator of tuples ( isLastFlag item )
Composes the passed filters into an and - joined filter .
a normal old python function to return the Nth fibonacci number .
Read
Bulk insert or update .
Call the unbound method . We essentially build a bound method and call that . This ensures that the code for managing observers is invoked in the same was as it would be for a bound method .
Return all child objects in nested lists of strings .
Compute boxplot for given pandas Series .
Returns a list consisting of the cumulative sum of the items in the passed list .
Return the amount of characters in this token list .
Isolates x from its equivalence class .
return True if the current distribution is running on debian like OS .
Trim the trailing silence of the pianoroll .
Returns whether the given name looks like the name of a builtin CSS function .
Args : img ( PIL Image ) : Image to be padded .
Coerce value to an JSON - compatible representation .
Check if the input filename with path is a file and is not empty .
Removes dict keys which have have self as value .
Select rows where the given field is a member of the given value .
Convert file extension to lowercase .
Add a link from A and B of given distance and also add the inverse link if the graph is undirected .
Calculate chi - squared .
Return the high median of data .
Return True if the given object conforms to the Serializable protocol .
Render an INPUT element of type SUBMIT which will post this form to the server .
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
Emulate lpop .
Computes the unnormalized PDF of the normal distribution .
Parses a byte array containing a JSON document and returns a Python object . : param data : The byte array containing a JSON document . : param MimeType mimetype : The mimetype chose to parse the data . : return : A Python object .
An iterable of column names for a particular table or view .
Slicing op .
Decode the contents of a value from a serialized stream .
Returns True when the graph has the given edge .
Convert an OrderedDict containing C values to a 1D array .
Sets the proxy handler given the option passed on the command line . If an empty string is passed it looks at the HTTP_PROXY environment variable .
Returns the progress ratio and percentage .
Return a modified list containing only the indices indicated .
Return a tuple of strings that match the regular expression pattern .
Init a noise variable .
Return indices of inputs to the node with the given index .
Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]
Sets all defaults for the given dictionary to those contained in a second defaults dictionary . This convenience method calls :
Return the number of dimensions of a tensor
Show tip
Return set of common words between two word sets .
Computes 2D spectrum frequencies .
Set foreground - and background colors and intensity .
Detects whether a line is present within a file .
Return a Status instance from its string representation .
Creates converts to a masked array
Check if an http server runs on a given port .
Returns a zero - based column number of the beginning of this range .
Only allows == against query_on . hash_key
Converts list to string with comma separated values . For string is no - op .
underscore to mixed case notation
Transform an underscore_case string to a mixedCase string
Return the minimum of an array ignoring any NaNs .
Within the dictionary d find a key that matches ( in case - insensitive fashion ) the key k and return it ( or None if there isn t one ) .
Helper to get bins for histplot .
Convert JSON string to an ordered defaultdict .
Reset view to the root of the tree
Commit all records .
The how well do the features plus a constant base rate sum up to the model output .
Take a stdout and print it s lines to output if lines are present .
Transpose the columns into rows remove all of the rows that are empty after the first cell then transpose back . The result is that columns that have a header but no data in the body are removed assuming the header is the first row .
Return group content .
\ kills the child and exits
Return the nth value of array
Convert special characters using %xx escape .
Draw a horizontal line up to a given length .
Fetch a subset of randomzied GUIDs from the whitelist
Close the db and release memory
Show the x - axis tick labels for a subplot .
Calculates the distance of a given image to the original image .
determine whether two sequence names from a repeatmasker alignment match .
Retrieves a list of member - like objects ( members or properties ) that are publically exposed .
Formats Python code to conform to the PEP 8 style guide .
Test two dictionary is equal on values . ( ignore order )
Compare two strings while protecting against timing attacks
Returns True if the given user is in all given groups
Clean up any temporary files .
Return a column of the given matrix .
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
Return a datetime object from an isoformat string .
sort a list of files by filename only ignoring the directory names
Returns the number of characters at the beginning of text that are whitespace .
Set the timeout to the websocket .
Open up a GUI browse dialog window and let to user pick a target directory . : return str : Target directory path
Move to the end of the input history i . e . the line currently being entered .
r Call f n times with args and kwargs . Useful e . g . for simplistic timing .
Hide the window .
Set x - axis limits of a subplot .
Seems to be significantly more expensive on cluster than locally
Round x and y down to integers .
Add one tick to progress bar
Check if the memory is too full for further caching .
Return the distance between two points coord1 and coord2 . These parameters are assumed to be ( x y ) tuples .
Matrix solve op .
Discover the current time zone and it s standard string representation ( for source { d } ) .
Portable cast function .
Utility function to create regexp for matching escaped separators in strings .
For Python3 compatibility of generator .
Read the full contents of the given stream into memory .
r Like print but a function . I . e . prints out all arguments as print would do . Specify output stream like this ::
Return IPython s guess for the default encoding for bytes as text .
Prints a summary of all objects in the database . Input string or list of strings in ** ID ** or ** unum ** for specific objects .
Converts DB - API parameter values into query parameters .
Circular standard deviation
( Point Point ) - > Point Return the point that lies in between the two input points .
Join all lines from input string and wrap it at specified width
Strip agents from a string .
Return a dict with swapped keys and values
Create a new image by copying the image on a * color * background .
Retries the passed function 3 times before failing
Assert that a value must be a given type .
Print emphasized good the given txt message
Returns a dictionary from a URL params
Returns a list of names of columns that are string type .
Strips spaces : param x : : return :
Return only the part of the row which should be printed .
Takes an array add indentation to each entry and prints it .
Return a list of the files with the commas removed .
Lock connection from being used else where
Check if the given name is used as a variadic argument .
Like isin but checks whether this expression s value ( s ) are not contained in the passed values . See isin docs for full usage .
Maps values to bins Args : values ( list or list of lists ) - list of values to map to colors res ( int ) - resolution of the color map ( default : 100 ) Returns : list of numbers representing bins
Show the received object as precise as possible .
Remove duplicates in a list .
Read a dictionary of strings from a file
Clears the console .
Output all sections of the page .
remove decoded instruction from instruction cache
Formats a list of elements using the given line style
Find the bounding box around nonzero elements in the given array
Print out a neat targets dependency tree based on requested targets .
Returns a list of PIDs currently running on the system .
Get the MIME type from the Content - Type header value or application / octet - stream if not found .
apply a function to all non - dict values in a dictionary
Runs an asynchronous function without needing to use await - useful for lambda
Adjust image balance and contrast
Provide the root module of a TF - 2 . 0 API for use within TensorBoard .
Builds sphinx docs from a given directory .
True if the json_element passed is present for the task specified .
Convert things on the way from Python to the database .
Index of the last occurrence of x in the sequence .
Return a dictionary of variables specified at CLI : param : args : Command Line Arguments namespace
steps value up / down by a single step . Single step is defined in singleStep () .
Calculates the request payload size
Generator that yields lines from standard input .
Check if string could be a valid python identifier
Saves all relevant data to . h5 file ; so state can be restored .
Checks whether the remote file exists .
Assert an alert is showing with the given text .
Normalize a field to a ( min max ) exposure range default is ( 0 255 ) . ( min max ) exposure values . Invert the image if requested .
call a func with args and kwargs print name of func and how long it took .
Create a 20 char passphrase with easily typeable chars .
is_valid_image_extension .
Return flattened dictionary from MultiDict .
Try to convert variables into datatypes .
Invoked when determining whether a specific key is in the dictionary using key in d .
Convenience function to print messages on a single line in the terminal
Creates a * Polygon * instance out of a list of lists each sublist being populated with pyowm . utils . geo . Point instances : param list_of_lists : list : type : list_of_lists : iterable_of_polygons : returns : a * Polygon * instance
Create an index from the columns of a dataframe
Discover the current time zone and it s standard string representation ( for source { d } ) .
Packs a list of triple indexes into a 2D numpy array .
Converts a Python 2 function as lambda ( x y ) : x + y In the Python 3 format : lambda x y : x + y
Returns the shape of the region as ( x y w h )
Run unit tests .
Load a new copy of a document from the database . does not replace the old one
Paginate queryset .
Rounds a float value off to the desired precision
helper function for quick base conversions from strings to integers
Determine whether or not a given path is a ( sub ) package or not .
Perform log transform log ( x + 1 ) . Parameters ---------- data : array_like
Check if arg is a valid file that already exists on the file system .
Transforma una string con elementos separados por sep en una lista .
Round a float to a precision
Unpacks sqlite rows as returned by fetchall into an array of simple dicts .
Return True if object is defined
Set the scroll region on the canvas
Count number of item in generator .
Recursively iterate through values in nested lists .
Converts from a Minigo coordinate to a GTP coordinate .
Return a JsonResponse . Make sure you have django installed first .
Returns the available ffmpeg version
Round the number to the specified number of significant figures
Make a copy of a dictionary with all keys converted to snake case . This is just calls to_snake_case on each of the keys in the dictionary and returns a new dictionary .
kill process Args : process - Popen object for process
Do j / v replacement
Provide the root module of a TF - 2 . 0 API for use within TensorBoard .
* Get the root path for this python package - used in unit testing code *
Check if filename has changed since the last check . If this is the first check assume the file is changed .
Returns type of the data for the given FeatureType .
Go to the end of the current line and create a new line
Test if a value is numeric .
Returns a random integer between two values .
Remove the least recently used file handle from the cache . The pop method removes an element from the right of the deque . Returns the name of the file that has been removed .
Convert special characters using %xx escape .
Call a system command in the background disown it and hide it s output .
Get the current mouse location ( coordinates and screen number ) .
Make a C array using the given string .
Returns True if test is True for all array elements . Otherwise returns False .
Transforma una string con elementos separados por sep en una lista .
Returns a 3x3 cross - product matrix from a 3 - element vector .
load an nparray object from a json filename
Get the parent directory of a filename .
Given the python representation of a JSONschema as defined in the swagger spec validate that the schema complies to spec . If target is provided that target will be validated against the provided schema .
Random uniform variates .

Make a n + 1 dim one - hot array from n dim int - categorical array .
Return a percentile range from an array of values .
Wraps the given string with terminal color codes .
Return the key ( aka database value ) of a human key ( aka Python identifier ) .
Returns current utcoffset for a timezone . Uses DEFAULT_LOCAL_TZ by default . That value can be changed at runtime using the func below .
Get the the number of columns required to display a string
Starts connection to server if not existent .
Is the current OS a Windows?
Extract the boundaries from a list of indexes
Add the default arguments to the parser .
Log memory usage before and after a method .
Calculate standard deviation weighted by errors
Serialize the query to a structure using the query DSL .
Convert a dict of 1d array to a numpy recarray
Check if filename has changed since the last check . If this is the first check assume the file is changed .
Convert string from snake case to camel case .
Download the page into a string
Expand $vars in a string .
Portable cast function .
Set all fields readonly .
Return a Python date that corresponds to the specified string representation .
Join the given iterable with
Returns the offset of the current cursor position in rl_line_buffer
Reads text file contents
Wrapper around Django s get_language utility . For Django > = 1 . 8 get_language returns None in case no translation is activate . Here we patch this behavior e . g . for back - end functionality requiring access to translated fields
Write a numpy array to YAML .
Add a spec to a mock . spec can either be an object or a list of strings . Only attributes on the spec can be fetched as attributes from the mock .
Return index of last character in string for which func ( char ) evaluates to True .
Check if file is a regular file and is readable .
Use the S3 SWAG backend .
Converts XY point from Spherical Mercator EPSG : 900913 to lat / lon in WGS84 Datum
The current position of the cursor .
Returns the item that appears most frequently in the given list .
Make a C array using the given string .
Call a remote api method but don t raise if an error occurred .
Convert camel case string to snake case
Return a copy of this Text instance with invalid characters removed .
Generate all matches found within a string for a regex and yield each match as a string
Checks whether all number in the sequence s lie inside the interval formed by l and r .
numpy . ndarray dumper .
get a value from a tag ( if it exists )
Plot a scatterplot matrix for a list of features colored by target value .
Short Time Fourier Transform for complex data .
Converts a Python 2 function as lambda ( x y ) : x + y In the Python 3 format : lambda x y : x + y
Gets a naive datetime from a datetime .
string dict / object / value to JSON
Get all the database column names for the specified table .
Escape data for tab - separated value ( TSV ) format .
Strip the whitespace from all column names in the given DataFrame and return the result .
Fetch all remaining rows .
Write DOT comment .
Returns the length in bytes of a given file object . Necessary because os . fstat only works on real files and not file - like objects . This works on more types of streams primarily StringIO .
Return boolean sequence or scalar indicating whether each string in the sequence or scalar starts with passed pattern . Equivalent to str . startswith () .
Clear the displayed image .
set the colors for text .
Adds passed value to node s globals
Replace regex with string .
Takes a string and dictionary . replaces all occurrences of i with j
Raises the supplied figure number or figure window .
Try to infer an object s dtype for use in arithmetic ops
If pair is in search_list return the index . Otherwise return - 1
Helper to restore button state .
Determine the largest contig for each strain : param contig_lengths_dict : dictionary of strain name : reverse - sorted list of all contig lengths : return : longest_contig_dict : dictionary of strain name : longest contig
Read a hdf5 file into a dictionary
Random normal variates .
Print emphasized neutral the given txt message
Return True if the sentence or fragment begins with one of the parts of speech in the list else False
Pause for this many seconds
Helper function to restore index information after collection . Doesn t use self so we can serialize this .
Convert a string to a list with sanitization .
Select rows where the given field is not a member of the given value .
The default urlparse . urljoin behavior look strange Standard urlparse . urljoin ( http : // a . com / foo / bar ) Expect : http : // a . com / foo / bar Actually : http : // a . com / bar This function fix that .
stupid windows . converts the backslash to forwardslash for consistency
internal state reset . used e . g . in unittests
Split message to list by commas and trim whitespace .
Convert arrays of datetime . datetime and datetime . timedelta objects into datetime64 and timedelta64 according to the pandas convention .
Return the nth value of array
Update the lastest updated date in the database .
Returns whether a path names an existing directory we can list and read files from .
Create a vector randomly within the given rectangle .
Retrieve a simple OAuth Token for use with the local http client .

Set the contents of a file .
Fill an array from a list
Run lint checks using flake8 .
Clears the default matplotlib ticks .
Read MM_HEADER tag from file and return as numpy . rec . array .
Reset to the default text color on console window . Return bool True if succeed otherwise False .
Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** .
Normalize path slashes .
if we have a compatible fill_value and arr dtype then fill
Find the RMS of the audio
Returns the index of a geometry in a list of geometries avoiding expensive equality checks of in operator .
Get a slice from a table column holding arrays . ( see : func : table . getcolslice )
Remove non - alphanumerical characters from metric word . And trim excessive underscores .
One - hot encode labels from input
int : current max id of objects
takes a list of lists l and returns a flat list
Path to tensorflow_datasets directory .
Weeks start are fixes at Monday for now .
Concatenate url and argument dictionary regardless of whether url has existing query parameters .
Function that verify if the header parameter is a essential header
inverse hyperbolic sine transformation
r Checks if l is iterable and contains only integral types
Returns is seq is sequence and not string .
Shape of histogram s data .
Check if a Django project is being managed with manage . py or django - admin scripts
Compute the shape of the dataset as ( rows cols ) .
Is this an integer .
Return the given path relative to this file .
Copy an array to the shared memory .
Remove key from dict and return value .
Returns factor and offset of linear regression function by least squares method .
Makes a classname
Max reduction op .
Return a name which includes the module name and function name .
A standard compound hash .
Close all files but the current one
Set the modified time of a file
Wrap an AST Call node to lambda expression node . call : ast . Call node
Is the current OS a Windows?
Compile and return a Module s code object .
Covert numpy array to tensorflow tensor
Log in to instagram with given username and password and internally store session object .
Return a modified list containing only the indices indicated .
Split a multiline string into a list excluding blank lines .
Test if DATABASES [ default ] exists
Substitutes the replacement string / character at the given index in the given string returns the modified string .
Test whether text contains string or matches regex .
Converts a comma separated string to a list
Clone a bitset
Get the current mouse location ( coordinates and screen number ) .
Same order unique list using only a list compression .
Handle many to many relationships
Validates that the object itself is some kinda string
Search tuple array by index and value : param t : tuple array : param i : index of the value in each tuple : param v : value : return : the first tuple in the array with the specific index / value
Return child elements of type tagName if found else []
Generates a count of the number of times each unique item appears in a list
Convert a string of bytes into an integer as per X9 . 62 .
Return the singular form of a word the reverse of : func : pluralize .
Validate str as a date and return string version of date
Cleanup the session if it was created here
Generate the lines of file in reverse order .
Returns a list consisting of the cumulative sum of the items in the passed list .
Return the channels of a colorbar .
Check if something quacks like a list .
Get adjacency matrix .
Appends tzinfo and assumes UTC if datetime object has no tzinfo already .
Gets the login credentials from the user if not specified while invoking the script .
Returns the longest string size for a string entry across data .
Synthesize white noise
Return the text for the given root node ( xml . dom . minidom ) .
Finds the value in arr that value is closest to
Decorator to ensure API calls are made and return expected data .
Check if arguments are complex numbers .
Writes the passed chunk and flushes it to the client .
Create a Primary Key constraint on a specific column when the table is already created .
Provides hook for Python2 iterator functionality .
Gets the width of the table that would be printed . : rtype : int
Encapsulating the rules for whether the request was to a Flask endpoint
Returns true if all of the elements in the list are equal .
Remove duplicates in a list .
Wrap itertools . groupby to make life easier .
Returns whether a path names an existing directory we can list and read files from .
Safely convert a single number to integer .
Get object from string reference .
Cleans trailing whitespaces and replaces also multiple whitespaces with a single space .
Use Python % format strings as template format specifiers .
Returns a function that is only callable once ; any other call will do nothing
Given a name in camelCase return in snake_case
Decorator to wrap an async function in an event loop . Use for main sync interface methods .
Handle conversion of pymongo cursor into a JSON object formatted for UI consumption
Underlying synchronized wrapper .
Show a basic reference about the GUI Console .
Remove instance from model
Sets all defaults for the given dictionary to those contained in a second defaults dictionary . This convenience method calls :
Check if a file exists and is non - empty .
Compute summary statistics of a unique ( S_TYPE_UNIQUE ) variable ( a Series ) .
Temporary helper function to link to the API routes
Test if the argument is a real number ( float or integer ) .
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Ensure that param_list is a list with the expected length . Raises a helpful ValueError if this is not the case .
Return the tensor shape of the matrix operator
Get the id of the last written row in table
Return the width of the table including padding and borders .
Update inplace widgets position when doing vertical scroll
Updates background color
Verifies that a string path actually exists and is a file
Return True if list contains either values of type vtype or None .
Forward mouse cursor position events to the example
Exit without garbage collection this speeds up exit by about 10ms for things like bash completion .
get a value from a tag ( if it exists )
Return a JsonResponse . Make sure you have django installed first .
Reshuffle the indicies of a bipartite matrix A [ ij kl ] - > A [ lj ki ] .
Set the pixel at ( x y ) to the integers in sequence color .
Computes the log relative frequency for a word form
An enum is encoded by a int representing the zero - based position of the symbol in the schema .
Pops a serialized attribute container from the list .
Iterate chunks of size chunk_size from a file - like object
Called when a new DropDownItem gets selected .

Check if * path * is a directory
Minifies the input javascript files to the output file .
Return a list of tuples specifying the column name and type
Convert a string from snake case to camel case with the first letter capitalized . For example some_var would become SomeVar .
Calcuate mean datetime from datetime list
Return a name which includes the module name and function name .
Read tag data from file and return as unicode string .
Returns a number of query results . This is faster than . count () on the query
Return a dict with swapped keys and values
Return the channels of a palettebar .
Helper function returns a truncated repr () of an object .
takes a list of lists l and returns a flat list
Get the item at the given index .
Coerce value to an JSON - compatible representation .
Converts name to lower camel case . Words are identified by capitalization dashes and underscores .
Calculate the median of a list .
Returns the number of bytes to represent this dtype .
Checks if the user is rooted .
set nan and inf rows from x to zero
Converts SoftLayer . CLI . formatting . Table instance to a prettytable .
Like argsort but returns an index suitable for sorting the the original array even if that array is multidimensional
Check if given string is a punctuation
This removes newlines and multiple spaces from a string .
Removes tags from objects
Select rows where the given field is None .
Utility function to print sqlite queries before executing .
This will equal 124 for the V1 database .
Check the syntax of the given URL .
Add a leading hash # at the beginning of every line in the source .
Converts to float representing number of seconds since 1970 - 01 - 01 GMT .
return the KL projection on the row constrints
A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .
Helper for plotting .
Gets the width of the table that would be printed . : rtype : int
Formats Python code to conform to the PEP 8 style guide .
Compute the total size of all elements in objects .
conv2d returns a 2d convolution layer with full stride .
Closes the websocket connection .
main entry point for the jardiff CLI
Find the index of elem in the reversed iterator .
Print a formatted indented text .
Run the given code line by line with printing as list of lines and return variable ans .
Check if value is a valid UUID .

Remove commas from a float
Sets main window icon to given wx . Bitmap
return True if the current distribution is running on debian like OS .
Initialize python List with capacity of 10 or user given input . Python List type is a dynamic array so we have to restrict its dynamic nature to make it work like a static array .
rounds float to closest int : rtype : int : param n : float
Schedules this publish action as a Celery task .
from a valid python module path get the run method name passed
Check if given string is a punctuation
Run Python test cases against Java runtime classes .
Flush all unwritten data to disk .
Return True if the class is a date type .
Are two indexes equal? Checks by comparing str () versions of them . ( AM UNSURE IF THIS IS ENOUGH . )
Calculates the moving average of an array .
Determine if a year is leap year .
Create environ dictionary from current os . environ and variables got from given env_file
Remove duplicities from deps list of the lists
Convert an int of form yyyymmdd to a python date object .
Move cursor to this line in the current buffer .
Simple method for handling exceptions raised by PyBankID .
Return a list of dictionaries which are sorted for only unique entries .
Remove null items from a dictionary
Fetch a subset of randomzied GUIDs from the whitelist
Word - level n - grams that match between two strings
Fit a Gaussian to the data
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
Returns a Seaborn linear regression plot
Print synchronized .

Simple function to convert naive : std : datetime . datetime object containing local time to a naive : std : datetime . datetime object with UTC time .
replace nan in a by val and returns the replaced array and the nan position
RETURN field SEQUENCE AS STRING
Return frequencies for DFT
Execute the given multiquery .
Computes eigenvalues and eigenvectors of covariance matrix of A . The rows of a correspond to observations the columns to variables .
Return the value of each QuerySet but also add the # property to each return item .
Saves a value to session .
Generate a unique ID that is somewhat guaranteed to be unique among all instances running at the same time .
sets the aspect ratio of the current zoom level of the imshow image
Given two data points [ X Y ] linearly interpolate those at x .
sample data from given histogram and min max values within range
Test whether the current python environment is the correct lore env .
Counts the word frequences in a list of sentences .
More important level : default for print and save
Sets all defaults for the given dictionary to those contained in a second defaults dictionary . This convenience method calls :
Fit a Gaussian to the data
Generator that loops through all absolute paths of the files within folder
Delete credentials from the SQLAlchemy datastore .
Given a dictionary and a key list remove any data in the dictionary with the given keys .
Categorical accuracy
Returns the variance of values in a series .
This removes newlines and multiple spaces from a string .
Call an alias given its name and the rest of the line .
Take a US format date and return epoch .
Convert comma - delimited list / string into a list of strings
Check if something quacks like a list .
Cleanup temporary directory .
Looks at the files in a git root directory and grabs the last modified timestamp
Function that verify if the header parameter is a essential header
Create an empty array with appropriate shape .
Calculcate checksum for a file .
Register service into the system . Called by Services .
Hide the window .
Helper function to read JSON file as OrderedDict
Checks if a string is an integer . If the string value is an integer return True otherwise return False . Args : string : a string to test .
Execute the given multiquery .
Create a pie chart that depicts the distribution of the allocated memory for a given snapshot . The chart is saved to filename .
split string * s * into list of strings no longer than * length *
Report whether another set contains this set .
Check whether the passed variable is a tuple with two floats or integers
simple method to determine if a url is relative or absolute
Return a list of the ( name value ) pairs of the enum .
Creates a variation from a base value
Intersect dictionaries d1 and d2 by key * and * value .
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
Convert a python_style_variable_name to lowerCamelCase .
Make a list unique retaining order of initial appearance .
Plot the empirical histogram versus best - fit distribution s PDF .
Under UNIX : is a keystroke available?
Checks if an item is iterable ( list tuple generator ) but not string
To know the allocated memory at function termination .
Checks to see if a 2D list is a valid 2D matrix
Retrieve contents of each page of PDF
Replace regex with string .
If we re not on the first line ( of a multiline input ) go a line up otherwise go back in history . ( If nothing is selected . )
Removes stopwords contained in a list of words .
Sets value of key key to value in both session and cookies .
Given a target dct and a dict of { key : default value } pairs calls setdefault for all of those pairs .
Runs a bash script in the local directory
Split a text into separate words .
Gaussian model m is [ psill range nugget ]
: type s : str : rtype : int
Uphold the spec rules about naming .
If output is string then print the string and also time used
Remove duplicated elements in a list . Args : lista : List with elements to clean duplicates .
Changes the base color of a widget ( background ) . : param widget : widget to modify : param color : the color to apply
Unpickle a pstats . Stats object
Sum the total number of cycles over a list of tokens .
Direct access to byte data .
Did the user depress and release the button to signify a click? MouseStateType is the button to query . Values found under StateTypes . py
Converts list to string with comma separated values . For string is no - op .
Return a flatten version of the nested argument
Returns whether a path names an existing executable file .
This is an asyncio adapted version of pyserial read . It provides a non - blocking read and returns a line of data read .
Returns index tuple in histogram of bin which contains value
Connects to the PTY ( pseudo - TTY ) for a given container . Blocks until the user exits the PTY .
Retrieve a User object by ID .
Compute standard deviation with ddof degrees of freedom
Function for running binary search on a sorted list .
Convert a dict of 1d array to a numpy recarray
Get the value of a local variable somewhere in the call stack .
Get the month start date a nd end date
Like map but also chains the results .
Sort files or folders by modified time
r Directly reads text data from url
Read and return an entire section
rounds float to closest int : rtype : int : param n : float
Helper function to read bytes until a certain end byte is hit
map for a directory
Return all ( and only ) the lowercase chars in the given string .
help to direct to the correct interface interacting with DB by class name only
Emit a sine wave at the given frequency .
Convert camelcase to lowercase and underscore .
manipulate json data on the fly
Generalised logarithm
Returns current time as ISO8601 formatted string in the Zulu TZ
Given an index for the text return the corresponding ( row col ) tuple . ( 0 - based . Returns ( 0 0 ) for index = 0 . )
r Repeat each item in iterable n times .
Convert JSON string to an ordered defaultdict .
Creates a Python object from a XML file
The value of Last - Modified HTTP header or None .
Compare two strings while protecting against timing attacks
Adds an object to the collection based on klass and key .
As a convenience turn Python lists and tuples into NumPy arrays .
Checks if the given type is an enum type .
Call a function after a delay unless another function is set in the meantime .
Strip out namespace data from an ElementTree .
Converts any object to JSON - like readable format ready to be printed for debugging purposes : param obj : Any object : return : string
Sends all messages to logger . [ mthd ] () for handling
Calculate the Hamming distance between two strings . From Wikipedia article : Iterative with two matrix rows .
Return True if dtype is a numeric type .
This function should be called instead of direct spio . loadmat as it cures the problem of not properly recovering python dictionaries from mat files . It calls the function check keys to cure all entries which are still mat - objects
Format a duration in seconds .
Exit this application
Concatenates blocks into a block diagonal matrix .
: return : generator of tuples ( isLastFlag item )
Transform list into a maxheap in - place in O ( len ( x )) time .
Pull comma separated string values out of a text file and converts them to float list
React to a docstring event and append contracts to it .
Determines if value value is empty . Keyword arguments : value str -- the value of the associated field to compare
Return whether num is a power of two
Convenience function that removes a dicts keys that have falsy values
I convert strings into integers floats and strings!
Rounds a float value off to the desired precision
Shape of histogram s data .
Create : class : PNG from raw bytes . : arg bytes b : The raw bytes of the PNG file . : rtype : : class : PNG
Given the python representation of a JSONschema as defined in the swagger spec validate that the schema complies to spec . If target is provided that target will be validated against the provided schema .
Return sanitized Eidos text field for human readability .
Unwrap a Python 2 . 6 SSL socket so we can call shutdown ()
Copy
Perform column - stacking on a list of 2d data blocks .
Removes tags from objects
Returns a Seaborn linear regression plot
Remove all images from the file .
Checks if the item exists .
Singleton definition .
Return an instance of RedisSet .
Given a JSON - encoded message build an object .
Method that must transform the value from string Ex : if the expected type is int it should return int ( self . _attr )
Get the forecasted float from json section .
Parse file specified by constructor .
Ideally we shouldn t lose the first second of events
Set GUI on - top flag
Return a tuple from parsing a b c d - > ( a b c d )
Removes tags from objects
Return an iterator over the values of a dictionary .
Portable cast function .
Show the y - axis tick labels for a subplot .
Like map but also chains the results .
Returns files matched by all extensions in the extensions list
Register all globally visible functions .
Return the length of s when it is encoded with base64 .
Returns the index of the earliest occurence of an item from a list in a string
Given a target dct and a dict of { key : default value } pairs calls setdefault for all of those pairs .
Convert a model s verbose name to the model class . This allows us to use the models verbose name in steps .
Get the current time .
Given a list ( l ) will removing duplicates from the list preserving the original order of the list . Assumes that the list entrie are hashable .
Return the number of active CPUs on a Darwin system .
Check if filename1 and filename2 point to the same file object . There can be false negatives ie . the result is False but it is the same file anyway . Reason is that network filesystems can create different paths to the same physical file .
Returns the absolute position of table top
An iterable of column names for a particular table or view .
Get single system variable from CCU / Homegear
Removes all blank lines in @string
Wrap vertical table in a function for TabularOutputFormatter .
sort a list of files by filename only ignoring the directory names
Matthews correlation coefficient
Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** .
Gets a naive datetime from a datetime .
Pass in a dictionary that has unsafe characters as the keys and the percent encoded value as the value .
Connect and login to an FTP server and return ftplib . FTP object .
Saves a value to session .
Get the current time .
tool to ensure input and output data have the same number of samples
Create the file with the given content
Read only access to the read preference of this instance or session .
This parallel fetcher uses gevent one uses gevent
Ensure the cursor is within horizontal screen bounds .
return the number of channels present in samples
Fit a Gaussian to the data
Return a vector with the elements rounded to the given number of digits .
Print out system information ( version MAC addrs ) .
Install Postgres on remote
Get user name provide by operating system
Wrapper to uncheck a checkbox
Return True if the class is a date type .
Conver a path string to a list of path elements .
Emulate lpush .
A helper to create a proxy method in a class .
Read the long description .
Utilize wordnet ( installed with nltk ) to get synonyms for words word is the input word returns a list of unique synonyms
Filters given query with the below regex and returns lists of quoted and unquoted strings
: param string s : under_scored string to be CamelCased : return : CamelCase version of input : rtype : str
Delete a file safely . If it s not present no - op .
Create an instance from a dictionary .
Get the list of distinct values with preserving order .
Call an external binary and return its stdout .
Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output
Transforms a list of 2 element tuples to a dictionary
Segmented min op .
Very simple grep that returns the first matching line in a file . String matching only does not do REs as currently implemented .
Determines if a system process identifer exists in process table .
Sort the data .
Return all ( and only ) the chars in the given string .
Return the number of active CPUs on a Darwin system .
Check if a given record is indexed .
Reads a Python object stored in a specified YAML file .
Imputes data set containing Nan values
Compute the mean value across a list of dictionaries
Max reduction op .
Does a string replace with a list of search and replacements
append item and print it to stdout
Return IPython s guess for the default encoding for bytes as text .
Takes a list of ( key value ) pairs and turns it into a dict .
Get dimension of an array getting the number of rows and the max num of columns .
Return True if dtype is a real floating point type .
Rotate the given point by angle
Converts an RGB image to grayscale using matlab s algorithm .
Read entire contents of file into a string .
Return the angle between vectors a and b in degrees .
Run lint checks using flake8 .
Ajoute la target au plot
Get object from string reference .
Convert a list of strings to a list of integers .
Return median
Attempts to convert given object to a string object
Parses hostname from URL . : param url : URL : return : hostname
Return the length of the longest consecutive run of identical values .
Check features data are not empty
Write a string to a file - like object .
Returns the file exif
Get the current time .
Returns true if running on windows whether in cygwin or not .
str to bytes ( py3k )
A non - negative integer .
r Replace all ( frm to ) tuples in args in string s .
Returns the first day of the current month
Recursively find size of a tree . Slow .
Calculate angle between two vectors
Removes all non - printable characters from a text string
Returns names of object columns in the DataFrame .
Returns all database table names found in an SQLAlchemy : class : MetaData object .
Runs an asynchronous function without needing to use await - useful for lambda
Return an enum from a name Args : enum_name ( str ) : name of the enum Returns : Enum
Return all ( and only ) the chars in the given string .
Shot noise corruption to images .
Decision Tree
Returns file type for given file field . Args : field ( str ) : File field
Truncates a value to a number of decimals places
Rewrite a file adding a line to its beginning .
Compiles the given source from TypeScript to ES5 using TypescriptServices . js
Deserializes string to date .
Create object .
Returns this programs current memory usage in bytes
count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )
Get a list of the top topn features in this : class : . Feature \ .
Insert None as value for missing fields .
Compute the total size of all elements in objects .
Initiates a graceful stop of the processes
Saves all relevant data to . h5 file ; so state can be restored .
Utility method to run commands synchronously for testing .
Shut down a specific process .
Make a copy of a dictionary with all keys converted to snake case . This is just calls to_snake_case on each of the keys in the dictionary and returns a new dictionary .
Turn an SQLAlchemy model into a dict of field names and values .
Helper to read an environment variable
Returns the media - type of the file at the given filepath
Return widget icon
Check the syntax of the given URL .
Center all lines of the text . It is assumed that all lines width is smaller then B { width } because the line width will not be checked . Args : text ( str ) : Text to wrap . width ( int ) : Maximum number of characters per line . Returns : str : Centered text .
Run the unit tests .
Returns the last location of the minimal value of x . The position is calculated relatively to the length of x .
reads an RDF file into a graph
move to util_iter
Removes an object / rabalist from registery . This is useful if you want to allow the garbage collector to free the memory taken by the objects you ve already loaded . Be careful might cause some discrepenties in your scripts . For objects cascades to free the registeries of related rabalists also
remove decoded instruction from instruction cache
Return whether two objects are equal via recursion using : func : numpy . array_equal for comparing numpy arays .
Forget about the given canvas . Used by the canvas when closed .
last row or column of square A
Returns the default bucket from a list of buckets i . e . the largest bucket .
Closes and waits for subprocess to exit .
convert a code sequence to HTML
Create 2D rotation matrix
Returns the variable set with the given name .
Use Python % format strings as template format specifiers .
Load and parse a feature file .
Returns the number of characters at the beginning of text that are whitespace .
Should we skip logging for this handler?
Returns the number of rows of the main dataframe
Calculate the Hamming distance between two bit strings
Return true if a value is a finite number .
Execute the SQL command and return the data rows as tuples
Get object if child already been read or get child .
Decide if the Ipython command line is running code .
This method asserts that only one value of the provided list is True .
Converts bokehJS timestamp to datetime64 .
Select rows where the given field evaluates True .
Pop the heap value from the heap .
Paints a cube at a certain position a color .
List all available backends .
Colorize text with given color .
Integer dots per inch for the width of this image . Defaults to 72 when not present in the file as is often the case .
If values in a series match a specified value change them to np . nan .
Trim a PIL image and remove white space .
Return physical memory usage ( float ) Requires the cross - platform psutil ( > = v0 . 3 ) library ( https : // github . com / giampaolo / psutil )
Construct a single page PDF from the provided page in memory
A standard compound hash .
r Like rotate but modifies l in - place .
Return a DataFrame with rows where column values match match are removed .
Saves a pdf of the current matplotlib figure .
Package up the public attributes as a dict .
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
Returns a random color between min and max .
equivalent to scipy . preprocessing . normalize on sparse matrices but lets avoid another depedency just for a small utility function
Convert list of key value lists to dict
iterator for JSON - per - line in a file pattern
Strips spaces : param x : : return :
Partition a list into equally sized pieces including last smaller parts http : // stackoverflow . com / questions / 5129102 / python - equivalent - to - clojures - partition - all
A wrapper of os . makedirs () .
Returns an ExpMatrix containing all pairwise sample correlations .
Calculate the margin in pixels above the plot area setting border_top .
Return a new dict with any empty items removed .
Force commit changes to the file and stdout
Loads a floating point value from a memory address . If 2nd arg . start with * it is always treated as an indirect value .
returns a random element from seq n times . If n is None it continues indefinitly
Chunk one big list into few small lists .
Compare by iteration
return True if the current distribution is running on debian like OS .
Args : args ( list | tuple | None ) : Arguments to represent separator ( str | unicode ) : Separator to use
Modifies column header format to be importable into a database : param column : raw column header : return : cleanedcolumn : reformatted column header
Is this an integer .
Is the SQLAlchemy column type an integer type?
Clears globals and reloads modules
Strips trailing whitespace from string lowercases it and replaces spaces with underscores
Flip an image horizontally or vertically .
Formats the sum of a and b .
Encode a python boolean ( True / False ) .
Formats the given number in decimal format using a period and commas
Create a new figure manager instance for the given figure .
Evaluates the binomial pmf .
Helper function to get the location of a Python file .
Converts python datetime to epoch microseconds .
Logs a function s run time
Clear the database .
Returns a dictionary object with keys that are 2tuples represnting a point .
!
numpy . ndarray dumper .
Parse path string .
Load the noise texture data into the current texture unit
convert a ctypes structure to a dictionary
Perform a chunked PUT request to url with requests . session This is specifically to upload files .
main entry point for the jardiff CLI
Delete all build components ; the package cache package builds bootstrap builds and distributions .
Delete index entirely ( removes all documents and mapping ) .
Returns the deepest level of nesting within a list of lists
Transparently unzip the file handle
Modified form of the g format specifier .
Short Time Fourier Transform for real data keeping the full FFT block .
Performs the permission check .
Converts list to string with comma separated values . For string is no - op .
Main entry point for assertions ( called by the wrapper ) . expect is a function the wrapper class uses to assert a given match .
Transforms an XML string it to python - zimbra dict format
Returns a list with no repeated elements .
Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .
Paginate queryset .
Yield all items from iterable except the last one .
split string * s * into list of strings no longer than * length *
update () extends rather than replaces existing key lists .
Return a dict with swapped keys and values
Return n size lists from a given list l
Takes a list of point objects ( which must have x and y fields ) . Returns a list of 3 - tuples : the indices of the points that form a Delaunay triangle .
Splits a string into parts at multiple characters
sort a list of files by filename only ignoring the directory names
Utility method to run commands synchronously for testing .
Determine if two objects are equal .
Get width and height of a PDF
start the bot
Remove duplicates from list while preserving order .
Find leftmost item greater than or equal to x .
Rounds a float value off to the desired precision
Suppress warning about untrusted SSL certificate .
Return True if val is of integer type .
Convert anything to a bytearray . See - http : // stackoverflow . com / questions / 7585435 / best - way - to - convert - string - to - bytes - in - python - 3 - http : // stackoverflow . com / questions / 10459067 / how - to - convert - my - bytearrayb - x9e - x18k - x9a - to - something - like - this - x9e - x1
Determine if a file is empty or not .
Set x - axis limits of a subplot .
Python 3 input () / Python 2 raw_input ()
Description : Returns the first index of the array ( vector ) x containing the value i . Parameters : x : one - dimensional array i : search value
Transform an underscore_case string to a mixedCase string
Attempts to parse a date formatted in ISO 8601 format
Clear the database .
parse_query_string : very simplistic . won t do the right thing with list values
Returns int () of val if val is not convertable to int use default instead
Find the closest matching key and / or value in a dictionary ( must have all string keys! )
Return the list of all cached global names
Perform auth request for token .
Convert axis coordinate to bin index .
Validate the configuration file .
Returns the file exif
Returns the number of characters at the beginning of text that are whitespace .
Get final coefficient map array .
Return the products from a query response as a Pandas DataFrame with the values in their appropriate Python types .
Compare items in 2 arrays . Returns sum ( abs ( a ( i ) - b ( i )))
Return default argument value as given by argparse s add_argument () .
Return True if there s something to read on stdin ( posix version ) .
Reads text file contents
Flush all items from cache .
DFS detect connected component recursive implementation
Format list .
Converts string presented in camel case to snake case .
Returns True when alias already in shell config .
Checks whether the re module can compile the given regular expression .
Joins two dictionaries .
Unified rounding in all python versions .
Closest values
Return the unique elements of a collection even if those elements are unhashable and unsortable like dicts and sets
Reads the date from a string in the format YYYY / MM / DD and returns : class : datetime . date
Wraps the dispatch method to add session support .
Converts array into chunks with consecutive elements of given step size . http : // stackoverflow . com / questions / 7352684 / how - to - find - the - groups - of - consecutive - elements - from - an - array - in - numpy
Return True if dtype is a numeric type .
Clean up processes after SIGTERM or SIGINT is received .
Array of vector lengths
Return the longest common substring in a list of strings . Credit : http : // stackoverflow . com / questions / 2892931 / longest - common - substring - from - more - than - two - strings - python
Return true if a value is a finite number .
Any normal python logic which runs a loop . Can take arguments .
Pull a form value from the request .
A non - negative integer .
Get the full singular value matrix of self
Runs the function asynchronously taking care of exceptions .
Add value to a set in a dictionary by key
Find earliest occurrence of one of substrings in line .
Apply the argument parser .
Select rows where the given field is a member of the given value .
Return ignored regions like strings and comments in source
Helper parse action to convert tokens to lower case .
Acquire a lock on the output file prevents collisions between multiple runs .
Return the length of the longest consecutive run of identical values .
Discover the current time zone and it s standard string representation ( for source { d } ) .
Load a geotiff raster keeping ndv values using a masked array
exit without breaking pipes .
Apply a given function to the elements of one or several asynchronous sequences .
Helper method to determine actual value based on type of feature variable .
Execute the unit tests on an installed copy of unyt .
Return a JsonResponse . Make sure you have django installed first .
Fetch a query argument as a boolean .
Parses hostname from URL . : param url : URL : return : hostname
Return a context manager that hides the cursor while inside it and makes it visible on leaving .
Return a dict with swapped keys and values
Returns ( module locals ) of the funciton depth frames away from the caller
Wraps a function to run in a given directory .
\ Asserts that two iterables contain the same values .
Concatenate two InferenceData objects .
Appends tzinfo and assumes UTC if datetime object has no tzinfo already .
Get a ctypes void pointer to the memory mapped region .
Get version information for components used by Spyder
Returns True if test is True for all array elements . Otherwise returns False .
Merge all the strings . Put space between them .
Same order unique list using only a list compression .
Get the last weekday in a given month . e . g :
Simple function to convert naive : std : datetime . datetime object containing local time to a naive : std : datetime . datetime object with UTC time .
A static value ( does not change at runtime ) which is known at compile time
average of the values must have more than 0 entries .
Removes trailing zeros in the list of integers and returns a new list of integers
A basic check of if the program is running in interactive mode
Returns day number of the last day of the month : param t : datetime : return : int
convert an image by applying a contour
Turn dict keys and values into native strings .
Normalizes list
Currently pretends to talk to an instrument and get back the magnitud and phase of the measurement .
Simplest required implementation of collections . Counter . Required as 2 . 6 does not have Counter in collections .
Returns an ExpMatrix containing all pairwise sample correlations .
Method to handle what to do when the stop button is pressed
Get system root directory ( application installed root directory )
Get the host s ip number .
Like argsort but returns an index suitable for sorting the the original array even if that array is multidimensional
Like np . unique ( item_list return_inverse = True )
Return True if the queue is full
Extract from the given iterable of lines the list of words .
get the covarince between two points implied by Vario2d
Guess string encoding .
Removes trailing zeros in the list of integers and returns a new list of integers
Get the last weekday in a given month . e . g :
A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .
Make a n + 1 dim one - hot array from n dim int - categorical array .
Returns the non - sequence features from the provided example .
Transforma una string con elementos separados por sep en una lista .
Called when the service is being shut down .
Generator for reading from standard input in nonblocking mode .
transpose matrix
Splits a %s : %d string and returns the string and number .
Returns this programs current memory usage in bytes
Transform an underscore_case string to a mixedCase string
Returns the first day of the given month .
Unpacks sqlite rows as returned by fetchall into an array of simple dicts .
Called when a new DropDownItem gets selected .
r Checks if l is a numpy array of integers
Are two SQLAlchemy columns are equal? Checks based on :
Internal helper to return the values of a dictionary sorted by key .
Sets the width ( in terms of space characters ) for tab characters .
Returns :
Matrix inversion op .
A Python decorator for printing out the execution time for a function .
Convert to timestamp .
Formats a list of elements using the given line style
Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]
Get distance matrix given a matrix . Used in testing .
For list values returns the index location of element x . If x does not exist will raise an error .
Unpickles the classifier used
Registers entity to put to datastore .
Return a new copied dictionary without the keys with None values from the given Mapping object .
Render the graph as JavaScript in a Jupyter Notebook .
Return the approximate size of the queue ( not reliable! ) .
Return the smallest index of the row ( s ) with this column equal to value .
R x M x R^ - 1
Return a new datetime . datetime object with values that represent a start of a month . : param val : Date to ... : type val : datetime . datetime | datetime . date : rtype : datetime . datetime
Convert a string from a form into an Enum value .
Forward mouse cursor position events to the example
Match and yield all the tokens of the input string .
Returns True if the GET querstring contains on values but it can contain empty keys . This is better than doing not bool ( request . GET ) as an empty key will return True
Enforce HTML escaping . This will probably double escape variables .
Call a function after a delay unless another function is set in the meantime .
return string as a comment
Return the number of characters in two strings that don t exactly match
Trick sphinx into displaying the desired module in these objects documentation .
Sort the data .
Deletes the specified file from the local filesystem .
Read a . npy array .
Intended to be used going into post mortem routines . If sys . last_traceback is set we will return that and assume that this is what post - mortem will want . If sys . last_traceback has not been set then perhaps we * about * to raise an error and are fielding an exception . So assume that sys . exc_info () [ 2 ] is where we want to look .
Create a conda environment inside the current sandbox for the given list of dependencies and options .
Closest distance between a line segment and a point
Private method for setting axis limits .
Ensures that the argument is a list that either is empty or contains only strings : param arr : list : return :
Logs the basic endpoint requested
Prints the top row of a table
Get the MachineGuid from HKEY_LOCAL_MACHINE \ Software \ Microsoft \ Cryptography \ MachineGuid
Build documentation as HTML .
Check if key is in adict . The search is case insensitive .
Connect and login to an FTP server and return ftplib . FTP object .
Internal function to read an XML file
Merge any number of dictionaries
Helper function which returns an array with the Intervals boundaries .
Closes the client connection to the database .
Command line interface for PyBEL .
Stops playback
Return random lognormal variates .
Returns the variable set with the given name .
Sets the title on the underlying matplotlib AxesSubplot .
Find the index of elem in the reversed iterator .
Rotate and flip a quadrant appropriately
Return all ( and only ) the uppercase chars in the given string .
Pop the heap value from the heap .
Resursively create a named directory .
Create ctypes pointer to object .
Get a slice from a table column holding arrays . ( see : func : table . getcolslice )
Does a string replace with a list of search and replacements
Is the SQLAlchemy column type a string type?
Returns the length in bytes of a given file object . Necessary because os . fstat only works on real files and not file - like objects . This works on more types of streams primarily StringIO .
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
Path join helper method Join paths if list passed
Return dict mapping item - > indices .
Shut down a specific process .
Simple helper hash function
Generates a count of the number of times each unique item appears in a list
Base absolute path of container .
Calculate the standard error of a .
Returns an active Redis client generated from the given database URL .
Saves the dictionary in json format : param fname : file to save to
remove duplicates from a sequence preserving order
Returns background color rgb tuple of right line
Flip an image horizontally or vertically .
Return true iff v is a number .

Reads an array from bytestring with big - endian data .
Returns nr of first entry parseable to float in ll None otherwise
docstring for argparse
Reads a key from S3
Check if the input filename with path is a file and is not empty .
Gets the user enter max and min values of where the raster points should appear on the y - axis
Strip whitespace from string columns .
Adapts a Numpy array into an ARRAY string to put into the database .
Return a shell - escaped version of the string s .
Helper to draw lines connecting a set of nodes that are scaled for the Screen .
Sample from independent normal distributions
Display productpage with normal user and test user buttons
Communicate with the child process without closing stdin .
Calculate the SSE to the cluster center
Parse HTTP status line return status ( int ) and reason .
Round a float to a precision
Formats the given number in decimal format using a period and commas
Converts vtkImageData to a vtkTexture
Return a str of decimal with two digits after a decimal mark .
Returns the object s parent window . Returns None if no window found .
Return a list of branches in the current repo .
Let the DBMS perform a sum on a queryset
Collect digits from a string
Returns date range for the previous full month .
Print out system information ( version MAC addrs ) .
Convert a list of JSON values to a list of models
Get the help text ( signature + docstring ) for a command ( function ) .
Convenience function for loading yaml - encoded data from disk .
Disconnect ( logout ) service instance
Returns a header as a list ready to write to TSV file
r Repeat each item in iterable n times .
Parses hostname from URL . : param url : URL : return : hostname
Gets the maximum length of each column in the field table
Helper to render a list of dictionaries as an HTML display object .
Return a list where the duplicates have been removed .
Pull a form value from the request .
Cleans up a test logger object by removing all of its handlers .
Sets all defaults for the given dictionary to those contained in a second defaults dictionary . This convenience method calls :
: obj : numpy . ndarray : Vector representation for this camera .
Detects whether a line is present within a file .
Return true if a value is an integer number .
Pads the output with an amount of indentation appropriate for the number of open element .
Prepare test for singleton property .
Generate unique document id for ElasticSearch .
Gets the log level from the environment variable .
Takes a value or list of values and returns a single result joined by if necessary .
Converts bokehJS timestamp to datetime64 .
Makes the given dictionary symmetric . Values are assumed to be unique .
Convert a one element byte string to signed int for python 2 support .
: param tup : a list of tuples : param di : a dictionary converted from tup : return : dictionary
Handle logging .
Determine memory specifications of the machine .
Connect to a redis instance .
Erases n lines from the screen and moves the cursor up to follow
calculate time delta from latched time and current time
Helper function to pickle data in picklefile .
Resets the combo box to the original selected value from the constructor ( or the first value if no selected value was specified ) .
Return number of empty lines at the end of the document .
For a range indicated from start to end replace with replacement .
Return the angle between vectors a and b in degrees .
Output a networkx graph to a DOT file .
Determine if a year is leap year .
Remove any duplicate entries .
Return unix SECOND timestamp of num mondays ago
Handle logging .
Returns its parameter as an integer or raises django . forms . ValidationError .
Return a list of the ( name value ) pairs of the enum .
Reads a tuple of numbers . e . g . vertices normals or teture coords .
Ensures that the argument is a list that either is empty or contains only strings : param arr : list : return :
Function for fast reading from sensor files .
Add a leading hash # at the beginning of every line in the source .
Simple function to add two numbers
Calculate equality between two ( Comparable ) objects .
Wrapper for inserting int64 features into Example proto .
returns a tuple that contains ( screen_width screen_height )
Return a list of indexes of substr . If substr not found list is empty .
function to check if input query is not None and set missing arguments to default value
Apply 2to3 tool ( Python2 to Python3 conversion tool ) to Python sources .
Returns a sorted list of all system font names
Pop - up menu and wx . EVT_CLOSE closing event
Return the number of days since January 1 of the given year .
Return index of the nth match found of pattern in strings
Fetch a subset of randomzied GUIDs from the whitelist
This is largely copied from bokeh . sphinxext . bokeh_plot . run
Se asegura de que un directorio exista .
Main funcion when executing this module as script
checks to see if list is equal everywhere
Manually shutdown the async API .
Efficient cartesian product of a list of 1D arrays returning the expanded array views for each dimensions . By default arrays are flattened which may be controlled with the flat flag . The array views can be turned into regular arrays with the copy flag .
Find rightmost value less than x .
function to get return code of a url
Removes trailing whitespace on each line .
Visible width of a potentially multiline content .
Saves the dictionary in json format : param fname : file to save to
Fetch the data field if it does not exist .
Project x and y
Set the screen clear color
Return True if list contains either values of type vtype or None .
Measure length of a string for a Base14 font .
don t want to bother with a dsn? Use this method to make an interface available
Determine if value is an instance or subclass of the class Type .
Print execution time of the function . For quick n dirty profiling .
Parse an ISO format date ( YYYY - mm - dd ) .
Return lines of a file with whitespace removed
Attempts to convert given object to a string object
Synthesize white noise
Normalize time in arbitrary timezone to UTC naive object .
Writes a file if it doesn t already exist with the same content .
Returns a method from a given class or instance . When the method doest not exist it returns None . Also works with properties and cached properties .
Get zero - indexed line from an open file - like .
Validates that the object itself is some kinda string
Convert this confusion matrix into a 2x2 plain list of values .
( Point Point ) - > Point Return the point that lies in between the two input points .
Scroll element into view
Return an appropriate positive infinity for this dtype .
Render empty responses .
Get the color of a given pixel
Return the fully - qualified name of a function .
Index all available documents using streaming_bulk for speed Args :
r Checks if l is a 2D numpy array of bools
Handle conversion of pymongo cursor into a JSON object formatted for UI consumption
given a segment ( rectangle ) and an image returns it s corresponding subimage
Stop and destroy Bloomberg connection
dictionary of conversion
Check whether the passed variable is a tuple with two floats or integers
Set y - axis limits of a subplot .
Print memory .
Return maximum nesting depth
Crops and / or pads an image to a target width and height .
Check if an http server runs on a given port .
Read a dictionary of strings from a file
r Directly reads text data from url
Returns the media - type of the file at the given filepath
Capitalizes all the words and replaces some characters in the string to create a nicer looking title .
Checks whether a variable is a numpy float array .
Return a modified list containing only the indices indicated .
Make a set of unique n - grams from a string .
Determine if two revisions have actually changed .
Perform log transform log ( x + 1 ) . Parameters ---------- data : array_like
Count the number of rows in 2D arrays that contain any nan values .
Returns True if pip exists inside the virtual environment . Can be used as a naive way to verify that the environment is installed .
Write the given colored string to standard out .
Convert native python datetime . date object to a format supported by the API
Close all connections .
Adds execute permission to file . : param filename : : return :
Main funcion when executing this module as script
Return n size lists from a given list l
Converts a dict to an encoded URL . Example : given data = { a : 1 b : 2 } it returns a = 1&b = 2
Check if obj is a sequence but not a string or bytes .
Pull a file directly from S3 .
Converts an ARRAY string stored in the database back into a Numpy array .
Return the md5 hash of the given file - object
Run manage . py using this component s specific Django settings
Convert a ConfigParser to a dictionary .
Convert string from snake case to camel case .
Wrapper for inserting int64 features into Example proto .
Proximal operator to project onto zero
Set the modified time of a file
Return the minimum of an array ignoring any NaNs .
Load : class : mongomock . database . Database from a local file .
Add an object to Javascript .
Perform a chunked PUT request to url with requests . session This is specifically to upload files .
Generate a single list from an asynchronous sequence .
Temporarily replace sys . argv with current arguments
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
Register plugin in Spyder s main window
Return a shallow copy .
in string astr replace all occurences of thefind with thereplace
Given a string ( string ) and a numeric base ( base ) decode the string into an integer .
Is this a call with exactly 1 argument where that argument is positional?
Determine whether or not obj is iterable but not a string ( eg a list set tuple etc ) .
Decide if the Ipython command line is running code .
returns a random element from seq n times . If n is None it continues indefinitly
Get all the database column names for the specified table .
Creates sql datetime2 object from Python datetime object ignoring timezone
Load a python module from its absolute filesystem path
Return the largest real value h such that all elements in x are integer multiples of h .
docstring for argparse
Calculates a Spearman rank - order correlation coefficient . Taken from Heiman s Basic Statistics for the Behav . Sci ( 1st ) p . 192 .
Change a date string from the format 2018 - 08 - 15T23 : 55 : 17 into a datetime object
Takes a decimal price and rounds to a number of decimal places
The full remote import path as used in import statements in . go source files .
Verifies that a string path actually exists and is a file
Computes the unnormalized PDF of the normal distribution .
Formats the given time into HH : MM : SS
Saves a pdf of the current matplotlib figure .
copy the dict filter_keywords
Convert list of key value lists to dict
Converts a list of lists into a flat list . Args : x : list of lists
Draws a representation of a random forest in IPython . Parameters : ----------- t : The tree you wish to draw df : The data used to train the tree . This is used to get the names of the features .
Convert a python string to C string .
Callable function for the multiprocessing pool .
Stops iterating before yielding the specified idx .
Return a flatten version of the nested argument
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
Lookup a transitive parent object that is an instance of a given class .
Find the device id
Convert string from camel case to snake case .
in comparison to argrelmax () more simple and reliable peak finder
Wrap text in an ansi escape sequence
Return a Future whose result will say whether a next item is available .
Show a basic reference about the GUI Console .
Return type may come from any boolop operand .
Return the longest common substring in a list of strings . Credit : http : // stackoverflow . com / questions / 2892931 / longest - common - substring - from - more - than - two - strings - python
Calculate the Hamming distance between two strings . From Wikipedia article : Iterative with two matrix rows .
Download the page into a string
Returns day number of the last day of the month : param t : datetime : return : int
Check if arg is a valid file that already exists on the file system .
Prints a human readable version of the filter .
Return the extension if the filename has it . None if not .
Logs a function s run time
Add suffix to a full file name
Returns a str if a bytes object is given .
Find rightmost value less than or equal to x .
Prints the specified message and exits the program with the specified exit status .
Callback for comboboxes : notifies us that a combobox for the given item and column has changed
Sanity check for csv parser : param row : param length : return : None
r Clean up whitespace in column names . See better version at pugnlp . clean_columns
Generate a new instance .
Whitespace normalization :
Compute the angle between vector x and y
Saves the updated model to the current entity db .
Builds instance from dictionary of properties .
move to util_iter
Return the products from a query response as a Pandas DataFrame with the values in their appropriate Python types .
Convert an OrderedDict containing C values to a 1D array .
Get the output shape from an array .
A generator of n - length chunks of an input iterable
Return a list of unique items ( similar to set functionality ) .
Wrapper to uncheck a checkbox
Yields file name if matches a regular expression pattern .
iterator version of get_list_column
Calculates accuracy
Recursively find size of a tree . Slow .
Convert a string of bytes into an integer as per X9 . 62 .
A function to generate the latex representation of sympy expressions .
Get list of all uppercase non - private globals ( doesn t start with _ ) .
Returns ( module locals ) of the funciton depth frames away from the caller
Called when a new DropDownItem gets selected .
A tensorflow variable tranfomed to be constrained in a L2 unit ball .
Reads text file contents
execute jobs in processes using N threads
Has a 50 / 50 chance of calling a function
View the quaternion array as an array of floats
>>> l = [ 1 1 1 ] >>> obj_in_list_always ( l 1 ) True >>> l . append ( 2 ) >>> obj_in_list_always ( l 1 ) False
Given a string return true if it matches the supplied list of patterns .
Efficient conversion from scipy sparse matrix to cvxopt sparse matrix
Remove any duplicate entries .
Return true if outfile exists and is no older than base datetime .
Pause the music
Initialize a KeyValuePair object from a json dictionary .
autoscan will check all of the serial ports to see if they have a matching VID : PID for a MicroPython board .
View the quaternion array as an array of floats
Own dumb reimplementation of textwrap . wrap () .
Called when a new DropDownItem gets selected .
This is to support iterators over a file - like object .
Send signal to process .
get element by name
Display all available logging information .
Compute average gradient norm of an image
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
Simple measure of similarity : Number of letters in common / max length
Unpickling function for auto - generated PVec / PSet field types .
Traverse parent refs to top .
Determine the path to the virtualenv python
Computes l2 norm of params by flattening them into a vector .
Return the location of the static data directory .
Retrun True if x is a valid YYYYMMDD date ; otherwise return False .
HTTP DELETE operation to API endpoint .
Returns type of the data for the given FeatureType .
Set the input or output mode for a specified pin . Mode should be either OUTPUT or INPUT .
Adds / overwrites all the keys and values from the dictionary .
Get tuple ( actually a generator ) of indices where the max value of array x occurs . Requires that x have a max () method as x . max () ( in the case of NumPy ) is much faster than max ( x ) . For a simpler faster argmax when there is only a single maximum entry or when knowing only the first index where the maximum occurs call argmax () on a NumPy array .
Reseed factory . fuzzy s random generator .
Draw a horizontal line up to a given length .
Return a tuple from parsing a b c d - > ( a b c d )
Fibonacci example function
Return True if two numbers are equal up to the specified number of places after the decimal point .
Universal indexing for numpy and pandas objects .
Return the value of a float property .
Removes all non - printable characters from a text string
Return a tuple from parsing a b c d - > ( a b c d )
Wrapper for iterating numpy array
Perform get request handling rate limiting .
Remove an object from the bin folder .
For a given value the function finds the nearest value in the array and returns its index .
Get the id of the last written row in table
Strip all the accents from the string
Deletes the specified file from the local filesystem .
Returns the longest string size for a string entry across data .
Find the RMS of the audio
Calculates the average value of a list of numbers Returns a float
Return the slice after at sub in string astr
Configuration - friendly boolean type converter .
Like netCDF4 . chartostring but faster and more flexible .
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Constructs a FastbootCommands instance .
Print all INDRA Statements collected by the processors .
zfill ( x width ) - > string
The number of days in the month of the given date
: param source : some iterable source ( list file etc ) : param lineSep : string of separators ( chars ) that must be removed : return : list of non empty lines with removed separators
renames newick from numbers to sample names
This is a compatibility function that takes a C { float } and converts it to an C { int } if the values are equal .

Configure a Domain registry entry .
Beta distirbution probability density function .
Return all ( and only ) the chars in the given string .
Indicate whether the specified image file is valid or not .
Convert seconds to human - readable time .
Returns a ketama compatible list of ( position nodename ) tuples .
Convert hex string like \ x0A \ xE3 to 2787 .
Wait until all the threads are finished .
Transform underscore separated string to pascal case
Assigns a parameter value to matching instructions in - place .
Reconstruct the image from the tf example .
return grandparent s path string
Sets the value of an attribute .
returns a a random string that represent a binary representation
Replace boolean variables by the characters F / T
Accepts a NumberGenerator operand an operator and optional arguments to be provided to the operator when calling it on the operand .
Iterable - first replacement of Python s built - in map () function .
Convenience function for loading yaml - encoded data from disk .
Return a hash of a NumPy array .
Refresh the screen . You don t need to override this except to update only small portins of the screen .
Return whether two objects are equal via recursion using : func : numpy . array_equal for comparing numpy arays .
Forcefully delete objects from memory
Return a list of indexes of substr . If substr not found list is empty .
Yield successive n - sized chunks from l .
Returns min ( val1 val2 ) returning None only if both values are None
Closest distance between a line segment and a point
This function is called when a return trap is set here .
Parse string into Identity dictionary .
Warn if nans exist in a numpy array .
Helper to render a list of dictionaries as an HTML display object .
Retrieves a list of member - like objects ( members or properties ) that are publically exposed .
Return the absolute path to the directory containing the package data .
Helper to render a list of dictionaries as an HTML display object .
Return a JSSObject for the element with ID id_
Returns all column names and their data types as a list .
Counts up sequentially from a number based on the current time
Prompt the user for input and handle any abort exceptions .
Return a list of tuples specifying the column name and type
Decorator to run a function with timing info .
Return the length of the longest consecutive run of True values .
Increment the key by the given amount .
Find the mapping given an index
Return True if the given extension is one of the watched extensions
Clean up processes after SIGTERM or SIGINT is received .
React to a docstring event and append contracts to it .
Call an external binary and return its stdout .
Get all unique links in the html of the page source . Page links include those obtained from : a - > href img - > src link - > href and script - > src .
Starts the web server .
must be a float
Get the python representation of the obj
conveniently styles your text as and resets ANSI codes at its end .

Serializes and writes given Python objects to a multi - document YAML file .
Return start and end date of this quarter .
Yield successive distinct permutations of the elements in * iterable * .
Confusion matrix plot
Try to infer an object s dtype for use in arithmetic ops
Given a list of 2 - tuples ( find repl ) this function performs all replacements on the input and returns the result .
Convert string from snake case to camel case .
Does a string replace with a list of search and replacements
Check if a dtype is a subclass of the numpy datetime types
Nested lists to single - level list does not split strings
Returns the first line of a file .
Finds the index of an item in list which satisfies predicate : param predicateFn : predicate function to run on items of list : param items : list of tuples : return : first index for which predicate function returns True
Compare two strings while protecting against timing attacks
Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .
r Checks if l is a 2D numpy array of bools
Closest values
Checks if the string is a palindrome ( https : // en . wikipedia . org / wiki / Palindrome ) .
Return the shape of img .
Add a column to the current table .
Can add this object
Advance the iterator without returning the old head .
Skip a section
Colorize text with given color .
Return whether an object is a path .
convert iterable object into numpy array
Updates text font color button
Return the dot product of two vectors
Print Confirmation Message and Get Y / N response from user .
read an image from file - PIL doesnt close nicely
Remove instance from model
Generate a random walk and return True if the walker has returned to the origin after taking n steps .
Return the longest common substring in a list of strings . Credit : http : // stackoverflow . com / questions / 2892931 / longest - common - substring - from - more - than - two - strings - python
Restore settings to default values .
Can edit this object
Return the sum of the element - wise product of vectors x and y . >>> dotproduct ( [ 1 2 3 ] [ 1000 100 10 ] ) 1230
Private method for setting axis limits .
Marker for a token
Test for greater than .
Iterable - first replacement of Python s built - in map () function .
Requests - mock requests . post wrapper .
Return random lognormal variates .
Return a repr () for a list / tuple
Helper function to return a scalar value representing the most likely outcome given a probability distribution
To know the allocated memory at function termination .
Unified rounding in all python versions .
Returns a prettified version of the SQL as a list of lines to help in creating a useful diff between two SQL statements .
Converts the string representation of a json number into its python object equivalent an int long float or whatever type suits .
Flush all items from cache .
Remove and return the item at index .
Plot the empirical histogram versus best - fit distribution s PDF .
Check whether flyweight object with specified key has already been created .
Flat nested list of lists into a single list .
Return checker .
Return standard deviation .
Set an object s field to default if it doesn t have a value
Double click on a given square in the map
non - recursively break spaces and remove newlines in the tag
Return the largest real value h such that all elements in x are integer multiples of h .
closeEvent reimplementation
Convert json string representation into class instance .
Get all attribute members ( attribute property style method ) .
Insert many items at once into a temporary table .
Return a modified list containing only the indices indicated .
Check if a given file is available in the cache or not
Convert datetime to epoch seconds .
Finds an approximate centroid for a region that is within the region . Parameters ---------- region : np . ndarray ( shape = ( m n ) dtype = bool ) mask of the region .
Convert numbers to floats whether the decimal point is . or
This is builtin in python2 but we have to roll our own on py3 .
Dump bel specification dictionary using YAML
decode ( bytearray raw = False ) - > value
Return a hash of the contents of a dictionary
renames newick from numbers to sample names
Move datetime 1 year in the chosen direction . unit is a no - op to keep the API the same as the day case
0 . Empty row returns False .
Description : Returns the first index of the array ( vector ) x containing the value i . Parameters : x : one - dimensional array i : search value
A function that works for both Python 2 . x and Python 3 . x . It asks the user for input and returns it as a string .
Same order unique list using only a list compression .
Begins an indented block . Must be used in a with code block . All calls to the logger inside of the block will be indented .
Return a list of string which don t match the given regex .
Constructs an object holding a datetime / timestamp value .
Helper to check valid options
Receive the content of url parse it as JSON and return the object .
Generates an mxn sparse d matrix with round ( a * m * n ) nonzeros .
Get the absolute uri for a file
Raises the supplied figure number or figure window .
Returns indices of the maximum values along an axis
Helper for plotting .
Stop the resolver threads .
Determine the number of leaves in a tree
Encode the given tensor to given image shape .
Use the specified filename for streamed logging .
Returns whether a path names an existing executable file .
Given a callable func trap the indicated exceptions for up to retries times invoking cleanup on the exception . On the final attempt allow any exceptions to propagate .
Takes a snake_field_name and returns a camelCaseFieldName
Helper that clears the composition .
A list of functions declared or defined in this module .
Write DOT comment .
Execute the unit tests on an installed copy of unyt .
Given a callable func trap the indicated exceptions for up to retries times invoking cleanup on the exception . On the final attempt allow any exceptions to propagate .
Get all versions of req from PyPI .
Return all ( and only ) the chars in the given string .
Remove punctuation from string s .
Instantiate an anonymous file - based Bucket around a single key .
Reads text file contents
Add dots .
Return a list of the table names in the database .
Converts array into chunks with consecutive elements of given step size . http : // stackoverflow . com / questions / 7352684 / how - to - find - the - groups - of - consecutive - elements - from - an - array - in - numpy
Call a remote api method but don t raise if an error occurred .
Pick an unused port . There is a slight chance that this wont work .
Current thread ident . If current thread is main thread then it returns None .
Choose k random elements of array .
Return a new copied dictionary without the keys with None values from the given Mapping object .
Wrap text in an ansi escape sequence
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Return matrix as csv data .
Get the modified time for a file as a datetime instance
Wrapper for inserting float features into Example proto .
splits iterables a in equal parts of size sz
Aggregation function to get the first non - zero value .
Recursive topological sort implementation .
Return list of Logger classes .
Verifies that a string path actually exists and is a file
Given a lambda_name and stage_name return a valid API URL .
Clean a pandas dataframe by : 1 . Filling empty values with Nan 2 . Dropping columns with all empty values
Returns the module name associated with a frame num_frames_back in the call stack . This function adds 1 to account for itself so num_frames_back should be given relative to the caller .
last row or column of square A
split string into list of strings by specified number .
Last modified timestamp as a UTC datetime
All commits with that message ( in current branch )
Rotates an image by deg degrees
Proximal operator to project onto zero
Generate a random walk and return True if the walker has returned to the origin after taking n steps .
Strips a figure into multiple figures with a trace on each of them
Check different items in matrix classes .
Rotates an image by deg degrees
Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** .
String hash ( djb2 ) with consistency between py2 / py3 and persistency between runs ( unlike hash ) .
Returns set of the ancestors of a node as DAGNodes .
gets a horiztonal line
Gaussian pdf . : param x : free variable . : param mu : mean of the distribution . : param sig : standard deviation of the distribution . : return : sympy . Expr for a Gaussian pdf .
gets the dimensions depending on python version and os
A convenience function for plotting a vertical bar plot from a Counter
simple method to determine if a url is relative or absolute
Return True if the input is a comma separated list of names .
helper function for quick base conversions from integers to strings
Call this to give this Widget the input focus .
Handle the + operator .
Return a set of strings .
Calculates the probability matrix of substitutions i - > j over time t given the normalised generator diagonalisation .
Checks if a target name matches with an input regular expression .
Raises an AssertionError if expected is actual .
Compute the eigvals of mat and then find the center eigval difference .
Gaussian model m is [ psill range nugget ]
Emit a sine wave at the given frequency .
Update inplace widgets position when doing vertical scroll
Return a list of the files with the commas removed .
Print out a neat targets dependency tree based on requested targets .
Reads a tif file to a 2D NumPy array
Render the plot with bokeh . io and push to notebook .
Return a new Vec2 with x and y from vec and multiplied by amount .
Returns all column names and their data types as a list .
Save object as json on CNS .
Does openat read - only then does fdopen to get a file object
Split a multiline string into a list excluding blank lines .
This function flatten given nested list . Argument : nested list Returns : flat list
DEBUG FUNC modify argv to look like you ran a command
function : to be called with each stream element as its only argument
Shutdown the service with a reason .
Covert numpy array to tensorflow tensor
Reshape data into ( num_example batch_size )
Order - preserving sorting function .
Return opened file with a specific encoding .
Return a function that will call a named method on the target object with optional positional and keyword arguments .
Stops the process status RPC server .
Lock connection from being used else where
Format the UTC timestamp for Elasticsearch eg . 2014 - 07 - 09T08 : 37 : 18 . 000Z
Set y limits for plot .
>>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7
Index of the last occurrence of x in the sequence .
Represent data as a masked array .
Called when a new DropDownItem gets selected .
Get string from file .
Call this on an lxml . etree document to remove all namespaces
Return a view into the memory
Copy an array to the shared memory .
Convert camelcase names to underscore
Remove duplicates from a list preserving the order .
Paints a cube at a certain position a color .
return a boolean if we have a nested object e . g . a Series with 1 or more Series elements
see doc in Term class
Return current free memory on the machine for windows .
Kill the browser .
Return peak memory usage in MB
Closes the root Dataset .
Check features data are not empty
Converts a list into a space - separated string and puts it in a dictionary
Checks if value is an integer long integer or float .
This is a workaround where Collections are no longer iterable when using JPype .
The fraction of n - grams matching between two sequences
\ kills the child and exits
Return a json array as a list
A non - negative integer .
: param dt : pythone datetime . datetime : return : 1999 - 02 - 01 string type
Strips spaces : param x : : return :
Rate limit a function .
Finds index of nearest value in array . Args : array : numpy array value : Returns : int http : // stackoverflow . com / questions / 2566412 / find - nearest - value - in - numpy - array
Determine whether or not obj is iterable but not a string ( eg a list set tuple etc ) .
Probability density function ( normal distribution )
Returns a list containing first n digits of Pi
Replace all the ocurrences ( in a file ) of a string with another value .
calculates a rough guess of runtime based on product of parameters
convert a ctypes structure to a dictionary
Close our socket .
Open a file .
Calculates the average value of a list of numbers Returns a float
Load the search_freq from JSON file
View the quaternion array as an array of floats
helper function used for joins builds left and right join list for join function
helper function for quick base conversions from strings to integers
Return the absolute value of a number .
Verifies that a string path actually exists and is a file
Ensures : attr : subject contains * other * .
Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .
Truncates a value to a number of decimals places
Rebuild list_object removing duplicated and keeping order
Hex encode a binary string
given a DataFrame where records are stored row - wise rearrange it such that records are stored column - wise .
The AST comments .
Get the name of an object including the module name if available .
Returns a string representing a numpy array of 0 s and 1 s
Get the value of a local variable somewhere in the call stack .
Convert snake case to camel case
Replace placeholders in text by using the data mapping . Other placeholders that is not represented by data is left untouched .
Opens the file and reads the value
Return a list of all parsed comments in a file . Mostly for testing & interactive use .
Check if file is a regular file and is readable .
Check if arg is a valid file that already exists on the file system .
Return view of the recarray with all int32 cast to int64 .
Compute average gradient norm of an image
Return lines of a file with whitespace removed
Shuffle the data .
Combine the outer and inner keys of nested dictionaries into a single ordering .
Return true if the socket managed by this connection is connected
Fill NaNs with the previous value the next value or if all are NaN then 1 . 0
Erases n lines from the screen and moves the cursor up to follow
From a given natural integer returns the prime factors and their multiplicity : param n : Natural integer : return :
Ensure the cursor is within horizontal screen bounds .
Transforms the regular socket . socket to an ssl . SSLSocket for secure connections . Any arguments are passed to ssl . wrap_socket : http : // docs . python . org / dev / library / ssl . html#ssl . wrap_socket
Pdf evaluated at the peak .
Iterable - first replacement of Python s built - in map () function .
Generate a UUID .
get rid of parenthesis around timezone : ( GMT ) = > GMT
Count the number of non - NA in this array along the given axis or axes
Roll a die .
Send a close message to the external process and join it .
Wrapper to uncheck a checkbox
py . test for replace_colon
calculates a rough guess of runtime based on product of parameters
Takes a string and dictionary . replaces all occurrences of i with j
Shutdown the service with a reason .
Return the sum of the element - wise product of vectors x and y . >>> dotproduct ( [ 1 2 3 ] [ 1000 100 10 ] ) 1230
An async result aggregator that combines all the results This gets executed in unsync . loop and unsync . thread
Convert from canvas to screen coordinates
Given a list possibly nested to any level return it flattened .
Redirect the stdout
helper function for quick base conversions from integers to strings
Remove a symlink . Used for model shortcut links .
Builds instance from dictionary of properties .
Helper to render a list of dictionaries as an HTML display object .
Return password from pipe if not on TTY else False .
webargs error handler that uses Flask - RESTful s abort function to return a JSON error response to the client .
Return file name ( s ) from Tkinter s file open dialog .
Convert string column into datetime column
Improve deepcopy speed .
Finds common values
Deserializes a JSONified : obj : numpy . ndarray that was created using numpy s : obj : save function .
>>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7
Checks if a string is an integer . If the string value is an integer return True otherwise return False . Args : string : a string to test .
Set x - axis limits of a subplot .
Initialize python List with capacity of 10 or user given input . Python List type is a dynamic array so we have to restrict its dynamic nature to make it work like a static array .
if we have a compatible fill_value and arr dtype then fill
Process a matplotlib image object and call renderer . draw_image
>>> sort_key (( name ( ROUTE URL ))) - 3
Return the size of a multidimansional array .
Any reduction op .
Short Time Fourier Transform for real data keeping the full FFT block .
Perform actions before parent main window is closed
Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .
Convert anything to a bytearray . See - http : // stackoverflow . com / questions / 7585435 / best - way - to - convert - string - to - bytes - in - python - 3 - http : // stackoverflow . com / questions / 10459067 / how - to - convert - my - bytearrayb - x9e - x18k - x9a - to - something - like - this - x9e - x1
This method performs an I2C write at a given I2C address : param command : { method : i2c_write_request params : [ I2C_DEVICE_ADDRESS [ DATA_TO_WRITE ]] } : returns : No return message .
get the number of quartets as n - choose - k . This is used in equal splits to decide whether a split should be exhaustively sampled or randomly sampled . Edges near tips can be exhaustive while highly nested edges probably have too many quartets
Returns the total length of all of the flattened variables .
Can edit this object
Returns the list of field names of the model .
Return a list of the files with the commas removed .
Pretty print an object as YAML .
checks to see if list is equal everywhere
Raise the open file handles permitted by the Dusty daemon process and its child processes . The number we choose here needs to be within the OS X default kernel hard limit which is 10240 .
Converts a millisecond accuracy timestamp to a datetime
Return the height of the given line . ( The height that it would take if this line became visible . )
Get distance between pairs of lat - lon points
Shuffle the data .
Turn a list into a comma - and / or and - separated string .
Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output
Return the file extension for an abi3 - compliant Extension ()
Wait until thread exit
This function returns the summary for a given model
Is this a string .
Conveinience :
Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output
Takes a decimal price and rounds to a number of decimal places
Like dict ( ** kwargs ) but where the source key is special .
Covert numpy array to tensorflow tensor
Set the scroll region on the canvas
Partition a list into equally sized pieces including last smaller parts http : // stackoverflow . com / questions / 5129102 / python - equivalent - to - clojures - partition - all
Returns x rounded to n significant figures .
Clears globals and reloads modules
Find rightmost value less than or equal to x .
convert an image by applying a contour
Compute the log of the magnitude spectrum of frames
Pull a file directly from S3 .
Creates a map of letter use in a word .
Render a jinja template
Initialize python List with capacity of 10 or user given input . Python List type is a dynamic array so we have to restrict its dynamic nature to make it work like a static array .
webargs error handler that uses Flask - RESTful s abort function to return a JSON error response to the client .
Convert this confusion matrix into a 2x2 plain list of values .
Determine the path to the virtualenv python
Push a new value into heap .
Return the screen resolution of the primary screen .
Return all child objects in nested lists of strings .
Strip the whitespace from all column names in the given DataFrame and return the result .
Shortcut to create md5 hash : param s : : return :
Return true if a value is an integer number .
Time execution of function . Returns ( res seconds ) .
Serialize obj as a JSON formatted stream to the given filename ( pretty printing version )
Calculates factorial iteratively . If mod is not None then return ( n! % mod ) Time Complexity - O ( n )
Return all ( and only ) the chars in the given string .
Converts a skew - symmetric cross - product matrix to its corresponding vector . Only works for 3x3 matrices .
Pause for this many seconds
Returns the number of processors on this machine .
Pull a form value from the request .
Wrapper to make map () behave the same on Py2 and Py3 .
Return whether this collection contains all items .
Check if a given file is available in the cache or not
is_valid_image_extension .
Pull comma separated string values out of a text file and converts them to float list
count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )
Returns True if the file is binary
Restores the state of the batched queue for writing .
Matches a paren .
Reads a tif file to a 2D NumPy array
create a graphviz graph from text
Calculate the median of a list .
Convolve 2d gaussian .
Integrate a Gaussian profile .
Create an empty array with appropriate shape .
Return the number of dimensions of a tensor
Return true if the socket managed by this connection is connected
Select rows where the given field is not None .
Read a PNG file and decode it into flat row flat pixel format .
Callback to go to the next tab . Called by the accel key .
Validates an email address Source : Himanshu Shankar ( https : // github . com / iamhssingh ) Parameters ---------- email : str
Pyqt specific resize callback .
Takes in an object and a variable length amount of named attributes and checks to see if the object has each property . If any of the attributes are missing this returns false .
Get input from the user given an input function and an input string
Calculate how much variance in returns do the values explain
Hacked run function which installs the trace .
Moves the text cursor to given line .
Get authentication .
Check if given string is a punctuation
Convert a scalar validator in a list validator
>>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7
Convert a list of strings to a list of integers .
Convert a string to a list with sanitization .
Remove the element from a set lists or dict . >>> L = [ Lucy ] ; S = set ( [ Sky ] ) ; D = { Diamonds : True } ; >>> remove_once ( L Lucy ) ; remove_once ( S Sky ) ; remove_once ( D Diamonds ) ; >>> print L S D [] set ( [] ) {}
r Return variable as a string to print with given precision .
move to util_iter
Returns Gaussian smoothed image .
Convert jamo characters in a string into hcj as much as possible .
Flush the buffer and finalize the file .
Read a dictionary of strings from a file
Removes trailing zeros in the list of integers and returns a new list of integers
Raises a requests . exceptions . HTTPError if the response has a non - 200 status code .
a conversion function for boolean
Convert the table to a structured NumPy array .
Reimplement Qt method to send focus change notification
The Euclidean distance between two vectors .
Linear model m is [ slope nugget ]
Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output
Cast value to bool .
Decorator which dynamically binds static methods to the model for later use .
Generator for reading from standard input in nonblocking mode .
This function is called when a return trap is set here .
A quick and dirty way to get a unique string
Close connection with the database
Take a US format date and return epoch .
Convert to lowercase and strip spaces
Retrieve a simple OAuth Token for use with the local http client .

Fill missing data in a column of df with the median and add a { name } _na column which specifies if the data was missing . Parameters : ----------- df : The data frame that will be changed . col : The column of data to fix by filling in missing data . name : The name of the new filled column in df . na_dict : A dictionary of values to create na s of and the value to insert . If name is not a key of na_dict the median will fill any missing data . Also if name is not a key of na_dict and there is no missing data in col then no { name } _na column is not created . Examples : --------- >>> df = pd . DataFrame ( { col1 : [ 1 np . NaN 3 ] col2 : [ 5 2 2 ] } ) >>> df col1 col2 0 1 5 1 nan 2 2 3 2 >>> fix_missing ( df df [ col1 ] col1 {} ) >>> df col1 col2 col1_na 0 1 5 False 1 2 2 True 2 3 2 False >>> df = pd . DataFrame ( { col1 : [ 1 np . NaN 3 ] col2 : [ 5 2 2 ] } ) >>> df col1 col2 0 1 5 1 nan 2 2 3 2 >>> fix_missing ( df df [ col2 ] col2 {} ) >>> df col1 col2 0 1 5 1 nan 2 2 3 2 >>> df = pd . DataFrame ( { col1 : [ 1 np . NaN 3 ] col2 : [ 5 2 2 ] } ) >>> df col1 col2 0 1 5 1 nan 2 2 3 2 >>> fix_missing ( df df [ col1 ] col1 { col1 : 500 } ) >>> df col1 col2 col1_na 0 1 5 False 1 500 2 True 2 3 2 False
Return the key ( aka database value ) of a human key ( aka Python identifier ) .
Split text into list of sentences .
decorator to convert a method taking a iterable to a * args one
A tensorflow variable tranfomed to be constrained in a L2 unit ball .
Calculates perplexity by loss
Run application tests
Pops the top frame off the frame stack .
https : // picamera . readthedocs . io / en / release - 1 . 13 / recipes1 . html#capturing - to - a - pil - image

Calculate the short - time Fourier transform magnitude .
Set of hyperparameters .
Outputs json with formatting edits + object handling .
Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]
returns the yaml output of the dict .
Find longest ORF from the given list of ORFs .
Detects whether a line is present within a file .
r Checks if l is a numpy array of integers
Check if a given file is available in the cache or not
returns : a triple of integers from a version tag
Begin logging of a task
Returns a list consisting of the cumulative sum of the items in the passed list .
treats the 2 sets are sets of taxon IDs on the same ( unstated ) universe of taxon ids . Returns True clades implied by each are compatible and False otherwise
List all available backends .
create random string of selected size
Decision Tree
Return the products from a query response as a Pandas DataFrame with the values in their appropriate Python types .
Pause for this many seconds
arr_out = round_array ( array_in )
Places a legend box outside a matplotlib Axes instance .
Setup the flask - cache on a flask app
Convert a CSV object to a numpy array .
Init a noise variable .
Retrieves the Python library directory path .
Download file from S3 Bucket
Write a dict to a JSON file .
Remove null items from a dictionary
Return a 3 - dimensional rotation matrix .
Return true if a value is an integer number .
Calculates the request payload size
Remove all unwanted characters from text .
Digits needed to comforatbly display values in [ minval maxval ]
Try to get a number out of a string and cast it .
Show the received object as precise as possible .
Return the attribute of namespace corresponding to value .
Guess the input type of the parameter based off the default value if unknown use text
Generate all matches found within a string for a regex and yield each match as a string
Returns the value of a property or the default one
Print results straight to stdout
Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line .
Redraw event handler for the figure panel
int : current max id of objects
Convert a number of second into a time
Check if cnr or cns files are empty ( only have a header )
Attempt to guess the title from the filename
clear plot
Check if file or directory is world writable .
Check whether flyweight object with specified key has already been created .
Convert an integer list into a string list .
Receive the content of url parse it as JSON and return the object .
Make a dict that accumulates the values for each key in an iterator of doubles .
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
Get a list of the top topn features in this : class : . Feature \ .
Render our pages as a jinja template for fancy templating goodness .
Stop redrawing the canvas at the previously set timed interval .
Draw a horizontal line up to a given length .
Given a datetime . timedelta object return the delta in milliseconds
Converts and image to matrix ( one pixel per line )
print just one that returns what you give it instead of None
Note that the Executor must be close () d elsewhere or join () will never return .
Normalize s into ASCII and replace non - word characters with delimiter .
Returns an updated copy of the dictionary without modifying the original
Serializes a K8S resource to YAML - formatted file .
function : to be called with each stream element as its only argument
Get a list of the top topn features in this : class : . Feature \ .
Scale the image down by one scale step .
split string into list of strings by specified number .
Get a list of the data types for each column in * data * .
Return true if the string is a mathematical symbol .
Apply WHERE filter to input dataset : param input : : param params : : return : filtered data
Convert any timestamp to UTC ( with tzinfo ) .
Create a queue based on the provided parallel arguments .
Move to the end of the input history i . e . the line currently being entered .
Get the local variables in the caller s frame .
Given a name in camelCase return in snake_case
If Python 2 replace non - ascii characters and return encoded string .
Load the state from the given file moving to the file s directory during load ( temporarily moving back after loaded )
Quits the application ( called when the last window is closed )
Closes and waits for subprocess to exit .
Creates an AWS Chalice project for deployment to AWS Lambda .
Deletes all files whose filename matches the glob pattern ( via : func : glob . glob ) .
Places all the child widgets in the appropriate positions .
adds information to the sequence for better debugging currently only an index property on each point in the sequence .
Check if email is valid
Updates requests session user - agent with the driver s user agent
get an x and y numpy . ndarray that spans the + / - 4 standard deviation range of a gaussian distribution with a given mean and standard deviation . useful for plotting
Purely a debugging aid : Ascii - art picture of a tree descended from node
Take a date object and return the first day of the month .
Test the multiprocess
Render our pages as a jinja template for fancy templating goodness .
Returns a boolean indicating if the code is executed inside softimage .
attempt to draw str on screen and ignore errors if they occur
Parameters ---------- data_path : str
Get attribute from the target object
Hex encode a binary string
Pull a querystring value from the request .
Convert a string to bytes .
Check if arg is a valid file that already exists on the file system .
Whether any of the strings contains any of the candidates .
Magnitude of a complex matrix .
Extract table names from an SQL query .
Removes occurrence of character ( sep ) from a line of text
Sum the total number of cycles over a list of tokens .
Returns True if var is a list or a tuple ( but not a string! )
Get letters from string only .
Perform column - stacking on a list of 2d data blocks .
Return manhattan distance between two lists of numbers .
Set the terminal window size of the child tty .
Generate a random string from a - zA - Z : param n : length of the string : return : the random string
Returns a list with no repeated elements .
Show exception with traceback .
Put a PID into a pidfile
Serialises a protobuf object as json
read an image from file - PIL doesnt close nicely
Detect the presence of the dot utility to make a png graph .
Return file name ( s ) from Tkinter s file open dialog .
Choose k random elements of array .
check if the step table exists
Iterator that allow for piecemeal processing of a file .
in comparison to argrelmax () more simple and reliable peak finder
must be an iterable ( list array tuple )
Downsample x by factor using striding .
Removes all non - printable characters from a text string
Check whether the passed variable is a tuple with two floats or integers
Merge all columns and place text string in widened cell .
Add an object to Javascript .
Simple helper hash function
Helper method to generate map from key to entity object for given list of dicts .
Wrapper for iterating numpy array
Sorts a dict by value .
Add a menu entry .
Get the number of coded value from a key . If several keys of the same name are present the total sum is returned .
Check if enough time has elapsed to perform a check () .
Helper that returns if parent / item is a directory .
Wrapper for inserting int64 features into Example proto .
Determine the largest contig for each strain : param contig_lengths_dict : dictionary of strain name : reverse - sorted list of all contig lengths : return : longest_contig_dict : dictionary of strain name : longest contig
Check if this database is in a transactional context .
Remove html code contained into the given string .
Note that the Executor must be close () d elsewhere or join () will never return .
Return standard deviation .
Connect to FTP server login and return an ftplib . FTP instance .
extract features in a sentence
Callback to go to the next tab . Called by the accel key .
This is a compatibility function that takes a C { float } and converts it to an C { int } if the values are equal .
Reseed factory . fuzzy s random generator .
Return this consoles current blend mode .
Get the MachineGuid from HKEY_LOCAL_MACHINE \ Software \ Microsoft \ Cryptography \ MachineGuid
docstring for argparse
Finds the index of an item in list which satisfies predicate : param predicateFn : predicate function to run on items of list : param items : list of tuples : return : first index for which predicate function returns True
Initializes functions that are invoked when the user or OS wants to kill this process . : return :
Scan through string looking for a location where this word produces a match and return a corresponding MatchObject instance . Return None if no position in the string matches the pattern ; note that this is different from finding a zero - length match at some point in the string .
Read a public RSA key from a PEM file .
Returns all column names and their data types as a list .
Estimates the memory of the supplied array in bytes
Return an image with the binarised version of the data of img .
Decodes the given JSON as primitives
: return Jinja sbatch template for the current tag
Returns the type of obj as a string . More descriptive and specific than type ( obj ) and safe for any object unlike __class__ .
Returns whether the stream object seems to have a working fileno ()
HTTP response for not - authorized access ( status code 403 )
Exit without garbage collection this speeds up exit by about 10ms for things like bash completion .
Perform column - stacking on a list of 2d data blocks .
docstring for argparse
Joins a voice channel
Get a property by name
Auto - scales the axes to fit all the data in plot index n . If n == None auto - scale everyone .
Convert an int of form yyyymmdd to a python date object .
Confusion matrix plot
Exit without garbage collection this speeds up exit by about 10ms for things like bash completion .
Get a property by name
Return the default local index file from the download cache
Return all ( and only ) the uppercase chars in the given string .
Find rightmost value less than x .
Convert a Stripe API timestamp response ( unix epoch ) to a native datetime .
determines whether the card number is valid .
Return first row and also iterable with same items as original
Align text labels based on the x - and y - axis coordinate values .
Converts a list of lists into a flat list . Args : x : list of lists
Read a file into a string PRE : fname is a small file ( to avoid hogging memory and its discontents )
Returns a thread local stack uniquified by the given name .
Remove any duplicate item preserving order
Sets the cursor to the desired position .
Remove any duplicate entries .
Returns the string name of an enum value .
Execute the given multiquery .
Loads the images and latent values into Numpy arrays .
Convert hex string like \ x0A \ xE3 to 2787 .
Unified rounding in all python versions .
Implementation of map that recurses . This tests the same keys at every level of dict and in lists : param f : 2 - ary function expecting a key and value and returns a modified key : param dct : Dict for deep processing : return : Modified dct with matching props mapped
Generator for reading from standard input in nonblocking mode .
Returns the index of the earliest occurence of an item from a list in a string
Return base64 encoded binarystring .
Asynchronously run the worker does not close connections . Useful when testing .
Matrix multiplication using binary
Converts an ARRAY string stored in the database back into a Numpy array .
Removes trailing zeroes from indexable collection of numbers
Sets limits for this config value
Get domain part of an url .
initializes 3D plot
checks to see if list is equal everywhere
Used with lambda to sort fields
Reads a tuple of numbers . e . g . vertices normals or teture coords .
Function for running binary search on a sorted list .
read a simple text file from a private location to get username and password
Logarithmic loss with non - necessarily - binary labels .
SPSS . sav files to Pandas DataFrame through Rpy2
Yield all items from iterable except the last one .
Convert a timestamp string into a microseconds value : param timestamp : return time in microseconds
Sets the terminal to the passed color . : param color : one of the availabe colors .
Get longitudes from cartesian coordinates .
http : // www . swharden . com / blog / 2009 - 01 - 21 - signal - filtering - with - python / #comment - 16801
Skip a section
Check for Python 3 . 5 matrix multiplication .
As a convenience turn Python lists and tuples into NumPy arrays .
Strips zeros while handling - M and empty strings
Validates that value is an instance of basestring for Python 2 or str for Python 3 .
Determine whether : tag : is a valid callable string tag .
Replace any non - word characters with a dash .
1x1 convolution
Get the next value in the page .
Return the number of dimensions of a tensor
Compile and return a Module s code object .
Connects to publisher
Draw a round corner
Fibonacci example function
Add an object to Javascript .
Main window move event
Encodes a list of strings to a single string . : type strs : List [ str ] : rtype : str
Convert an ARF timestamp to a datetime . datetime object ( naive local time )
Replace regex with string .
Put curly brackets round an indented text
Execute the unit tests on an installed copy of unyt .
takes a list of lists l and returns a flat list
Return a list of the REST API versions supported by the array
Get the last object in file .
Convert a list of strings to a list of integers .
A Bark logging handler logging output to a named file . At intervals specified by the when the file will be rotated under control of backupCount .
Return a dataframe that is a cross between dataframes df1 and df2
Return an iterator over the values of a dictionary .
Perform column - stacking on a list of 2d data blocks .
Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .
Returns a pretty - printed string for this object .
Remove non - alphanumerical characters from metric word . And trim excessive underscores .
Removes all non - printable characters from a text string
Populate axis limits GUI with current plot values .
Test if two objects are equal based on a comparison of the specified attributes attrs .
Set an object s field to default if it doesn t have a value
Integer to two bytes
Extract table names from an SQL query .
Output a networkx graph to a DOT file .
Return a yaml file s contents as a dictionary
Return a : py : class : datetime . datetime instance representing the current time .
Swap the methods atom to include method with key .
Return the approximate size of the queue ( not reliable! ) .
Raises the supplied figure number or figure window .
Get image as a buffer in ( format ) . Format should be jpeg png etc .
Utility to print something only if verbose = True is given
Implements the === operator .
Set the scroll region on the canvas
Match two names .
Retries function until it doesn t raise an EINTR error
if the value is in the list move it to the front and return it .
Underline the input
Retrieve the previous quarter for dt
Determines whether the passed value is a string safe for 2 / 3 .
assert that the mock was called only once .
Return a list of the table names in the database .
Makes a classname .
Returns the number of processors on this machine .
Returns the last week as a period string
Pretty print an object as YAML .
Return random disposition point .
Configure a Domain registry entry .
generate a method to write the configuration in yaml to the method desired
Send data to statsd .
Print a dictionary of attributes in the DOT format
Validate a |Subsystem| .
Return view of the recarray with all int32 cast to int64 .
Checks if invoking supplied clang - apply - replacements binary works .
Get the number of factor levels for each categorical column .
Return a stream handler if it exists .

Add global variables to JavaScript about the location and latest version of transpiled files . Usage :: { % static_urls_js % }
Convert to camel case .
Split Python source into chunks .
Run a playbook .
Save a Keras model definition to JSON with given path
Connect to MySQL with retries .
Segmented max op .
Method to validate if the value is valid for exact match type evaluation .
returns the rows columns of terminal
A dialog to get a directory name . Returns the name of a directory or None if user chose to cancel . If the default argument specifies a directory name and that directory exists then the dialog box will start with that directory .
Send a complete request to the server .
Returns the code object for this BUILD file .
Sets the cursor to the desired position .
SetCursorPos from Win32 . Set mouse cursor to point x y . x : int . y : int . Return bool True if succeed otherwise False .
Convert a CSV object to a numpy array .

Returns True if the given object is a Pandas Data Frame .
Split text into list of sentences .
Push item onto heap maintaining the heap invariant .
Probability density function ( normal distribution )
Verifies that a string path actually exists and is a file
Align the given integer number to the closest page offset which usually is 4096 bytes .
Return true if a is a subdirectory of b
Banana banana
Convert a grayscale image to BGR image .
checks to see if list is equal everywhere
unload the previously loaded shared library
If Python 2 replace non - ascii characters and return encoded string .
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Strips trailing whitespace from string lowercases it and replaces spaces with underscores
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
Returns the absolute position of table top
dialogue box for choosing directory
Log memory usage before and after a method .
Return a single boolean for arg1 == arg2 even for numpy arrays using element - wise comparison .
!
A version of squeeze that works with dynamic axis .
Yield all items from iterable except the last one .
Order the words from vocab by distinctiveness score ( Chuang et al . 2012 ) from least to most distinctive . Optionally only return the n least distinctive words .
Get the magnitude of a vector .
Convert comma - delimited list / string into a list of strings
Converts a 1D list to a single long string for file output using the string . join function .
Decorator which adds correct MIME type for python source to the decorated bottle API function .
: return : the string value of the element or element tree
Pretty print the object s representation .
updates the scale of all actors in the plotter
Decode base64 string to byte array .
Pure - Python implementation of itertools . combinations ( l 2 ) .
Is an object iterable like a list ( and not a string ) ?
Convert to camel case .
Recursively iterate through values in nested lists .
Forcefully delete objects from memory
Removes stopwords contained in a list of words .
Strip all color codes from a string . Returns empty string for falsey inputs .
Helper parse action to convert tokens to lower case .
Converts an dict to a Enum .
Snap coordinates on the grid with integer coordinates
Return pinyin of string the string must be unicode
Runs sphinx - apidoc to auto - generate documentation .
Called when asyncio . Protocol loses the network connection .
Creates a absolute path in the file system .
Return current free memory on the machine for windows .
Add dots .
Round a number to a precision
Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .
Get the numpy dtype for the image
Sets a HTTP header for future requests .
generate a CamelCase string from an underscore_string .
: deprecated : use self . statement to execute properly - formatted sql statements
Ensures that the argument is a list that either is empty or contains only strings : param arr : list : return :
Return True if the given string starts with one of the prefixes in the given list otherwise return False .
Strips spaces : param x : : return :
linear regression calculation
Pre - order depth - first
Returns whether the provided name is a valid variable name in Python
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
Returns a given response header .
Return a stream handler if it exists .
Strip apostrophe and s from the end of a string .
writes the line and count newlines after the line
Return an interable of nodes with no edges pointing at them . This is helpful to find all nodes without dependencies .
Return type may come from any boolop operand .
Read entire contents of file into a string .
Convert a numpy row - major homogenous transformation matrix to a flat column - major GLfloat transformation .
Replace month strings occurrences with month number .
Returns True if all sequences in the list have the same length .
gets the dimensions depending on python version and os
Check if file is a regular file and is readable .
Skip a single frame from the trajectory
Return total data length of the list and its headers .
Return manhattan distance between two lists of numbers .

Transforms a DataFrame in place . Computes all outputs of the DataFrame .
Changes a column name in a DataFrame Parameters : df - DataFrame DataFrame to operate on col_name - string Name of column to change new_col_name - string New name of column
I check to see if a method on a TestCase has been disabled via nose s convention for disabling a TestCase . This makes it so that users can mix nose s parameterized tests with green as a runner .
Return the encoding type .
Check for whether VC is available in this bot .
Take a str and transform it into a byte array .
Convert a path to its canonical case - normalized absolute version .
Convert a Stripe API timestamp response ( unix epoch ) to a native datetime .
Returns the SQL typename required to store the given FieldDefinition
Last modified timestamp as a UTC datetime
Function used to fit the exponential decay .
Check if the input filename with path is a file and is not empty .
Decorator to run a function with timing info .
Join helper
Tries to load an encoded json string back into an object : param json_string : : return :
Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output
Requests - mock requests . request wrapper .
* A datetime stamp in MySQL format : YYYY - MM - DDTHH : MM : SS *
Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]
Calculates the distance of a given image to the original image .
Set value in the pandas DataFrame
Return a view into the memory
>>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7
Returns the item that appears most frequently in the given list .
Retrieve contents of each page of PDF
Send signal to process .
Sorting logic for Quantity objects .
renders context aware template
Determines the number of bytes required to store a NumPy array with the specified shape and datatype .
This function executes the request with the provided json payload and return the json response
Read a WAV file and returns the data and sample rate
Write a numpy array to YAML .
Return the number of active CPUs on a Darwin system .
Load and execute a python file .
Return True if value is an integer .
Execute a python code object in the given environment .
Converts a datetime to a millisecond accuracy timestamp
Compress a file returning the new filename ( . gz )
Remove files specified multiple times in a list .
HTTP POST operation to API endpoint .
Return a flatten version of the nested argument
This is a workaround where Collections are no longer iterable when using JPype .
Returns a list of all the image s colors .
Output data in excel - compatible tab - delimited format
Reads an array from bytestring with big - endian data .
takes flags returns indexes of True values
Set foreground - and background colors and intensity .
Return the number of leading spaces in line .
Compile and return a Module s code object .
Write to given samples to a wav file . The samples are expected to be floating point numbers in the range of - 1 . 0 to 1 . 0 .
Confusion matrix plot
Toggle fullscreen from outside the GUI causes the GUI to updated and run all its actions .
Toggle linear / log scale for Y - axis .
Return a list of indexes of substr . If substr not found list is empty .
Time execution of function . Returns ( res seconds ) .
>>> find_index ( [[ 0 1 2 ] [ 3 4 ] [ 5 6 7 ]] 0 ) 0 >>> find_index ( [[ 0 1 2 ] [ 3 4 ] [ 5 6 7 ]] 1 ) 0 >>> find_index ( [[ 0 1 2 ] [ 3 4 ] [ 5 6 7 ]] 5 ) 2 >>> find_index ( [[ 0 1 2 ] [ 3 4 ] [ 5 6 7 ]] 6 ) 2
The current active : class : . Window .
Wrapper on iter method callback gets an iterator result
Displayhook function for PIL Images rendered as PNG .
Determine whether a system service is available
Returns the first day of the given month .
Split a text into separate words .
Returns the number of processors on this machine .
The virtual screen is the bounding box containing all monitors .
Scale the image so that the smallest axis is of size targ .
Executes a method until the retry limit is hit or not None is returned .
Return ( and memoize ) a database session
Set foreground - and background colors and intensity .
Return list of Logger classes .
Return all child objects in nested dict .
A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .
Fast median operation for masked array using 50th - percentile
Return a vector with the elements rounded to the given number of digits .
Helper function to turn a string representation of true into boolean True .
Convert Matrix attributes which are array - like or buffer to array .
SNAGGED FROM traceback . py
Check if given string is a punctuation
Tries to encode images with ffmpeg to check if it works .
Old style use JSONTemplateResponse instead of this .
Helper to get bins for histplot .
True if the json_element passed is present for the task specified .
This strategy uses an exponential approximation for cut - off frequency calculation found by matching the one - pole Laplace lowpass filter and mirroring the resulting filter to get a highpass .
Skip a single frame from the trajectory
Round a datetime object to a multiple of a timedelta dt : datetime . datetime object default now .
Get a callable that sends the actual API request internally .
Sorts the rows of a matrix by hierarchical clustering .
Extend the list by appending all the items in the given list .
Converts markdown content to text
Convert to timestamp .
Given a float returns a rounded int . Should give the same result on both Py2 / 3
Initialize python List with capacity of 10 or user given input . Python List type is a dynamic array so we have to restrict its dynamic nature to make it work like a static array .
Read tag data from file and return as numpy array .
Generalised logarithm
Converts from hex to hsv
Return true if a value is a finite number .
Return lines of a file with whitespace removed
Method to handle what to do when the stop button is pressed
Convert a timestamp string into a microseconds value : param timestamp : return time in microseconds
Return dict mapping item - > indices .
convert GPU arras to numpy and return them
Swap the methods atom to remove method with key .
Joins two dictionaries .
Helper parse action to convert tokens to upper case .
Try to infer an object s dtype for use in arithmetic ops
Patch the modules with gevent
Idempotent and None - safe version of strict_bool .
Removes trailing whitespace on each line .
Returns whether this is a ( non - quantized real ) floating point type .
Delete a file or directory path only if it exists .
Represent data as a masked array .
Returns a string representing a numpy array of 0 s and 1 s
Helper function to read JSON file as OrderedDict
Provide the root module of a TF - 2 . 0 API for use within TensorBoard .
New record with renamed keys including keys only found in key_map .
return an iterator that returns a chunk of a string every time it is called . notice that even though bufsize_type might be line buffered we re not doing any line buffering here . that s because our StreamBufferer handles all buffering . we just need to return a reasonable - sized chunk .
Takes a multi - dimensional array and returns a 1 dimensional array with the same contents .
Test if value is an instance of float .
Waits until all outstanding tasks are completed .
Key function used to sort transcripts . Taking the negative of protein sequence length and nucleotide sequence length so that the transcripts with longest sequences come first in the list . This couldn t be accomplished with reverse = True since we re also sorting by transcript name ( which places TP53 - 001 before TP53 - 002 ) .
Determine whether or not obj is iterable but not a string ( eg a list set tuple etc ) .
Check if string could be a valid python identifier
Sample a colormap from matplotlib
The title of this window
Uses the Unix ps program to see if a process is running .
Returns a str if a bytes object is given .
Downloads and returns the full text of a particular page in the document .
Returns the last n rows in the table
Custom validation function which inserts a timestamp for when the validation occurred
Returns all files in a given directory
Is the SQLAlchemy column type a string type?
Initializes functions that are invoked when the user or OS wants to kill this process . : return :
Validates an email address Source : Himanshu Shankar ( https : // github . com / iamhssingh ) Parameters ---------- email : str
Takes JSON formatted data converting it into native Python objects
Return a dict with swapped keys and values
Convert a string to bytes .
Add a histogram for the data to the axes .
Wait until all task are executed .
Determine whether indicated file appears to be a gzipped FASTQ .
Takes a list and returns the median .
Returns a boolean from a string imput of true or false
Returns a copy of dct without keys keys
Is this an integer .
Serializes a numpy array to a compressed base64 string
Set window top - left corner position and size
read the lines from a file into a list
Return a name which includes the module name and function name .
Apply last 2D transforms
Convert a python string to C string .
Check the syntax of the given URL .
Function used to fit the exponential decay .
Takes a list of ( key value ) pairs and turns it into a dict .
Function used internally to format string data for output to XML . Escapes back - slashes and quotes and wraps the resulting string in quotes .
Return the shape of img .
Write a dict to a JSON file .
Determine whether a system service is available
Places all the child widgets in the appropriate positions .

Is the SQLAlchemy column type an integer type?
Does a string replace with a list of search and replacements
Shape a list of lists into the appropriate shape and data type
: return : New branch / head instance
Creates a new dict from an existing dict that only has the given keys
Return a name which includes the module name and function name .
Remove comments and empty lines
Deserialize b ( instance of bytes ) to a Python object .
Max reduction op .
Set cursor position
Convolve 2d gaussian .
Get an appropriate null value for this field s type . This is used internally when setting the field to None .
Ensures preceding predicates ( specifically : meth : called_with () ) result in * expected_exception * being raised and the string representation of * expected_exception * must match regular expression * expected_regexp * .
Deletes all files whose filename matches the glob pattern ( via : func : glob . glob ) .
Hook into Gunicorn to display message after launching .
Advances to next line .
Opens the file and reads the value
Return True if the given extension is one of the watched extensions
Calculates and returns a month number basing on PESEL standard .
Return all rows from a cursor as a dict .
Small transformer model with small batch size for fast step times .
Returns a datetime object of a given timestamp ( in local tz ) .
Originally used to calculate color based on module name .
Stop the instance .
Returns whether a path names an existing executable file .
Convert audio data into a frequency - amplitude table using fast fourier transformation .
Implements the === operator .
Get the date from a value that could be a date object or a string .
Segmented min op .
Normal cumulative density function .
Pull the value from the cookiejar .
Return the screen resolution of the primary screen .
Connect to FTP server login and return an ftplib . FTP instance .
Converts from a Minigo coordinate to a GTP coordinate .
Convert human readable string to datetime . datetime .
Start web application
Convert dict of ascii str / unicode to dict of str if necessary
Create a random API key for a user : param username : : return : Hex encoded SHA512 random string
Using the size of the y axis return a fraction of that size .
Print warning about interrupt and empty the job queue .
Returns the size of a file - like object .
Run the event loop .
Load the pickled model weights .
Allocate device memory .
Return a list of the table names in the database .
A quick and dirty way to get a unique string
http : // www . swharden . com / blog / 2009 - 01 - 21 - signal - filtering - with - python / #comment - 16801
arr_out = round_array ( array_in )
Encode one categorical column into labels .
Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** .
inverse hyperbolic sine transformation
Decorator to make sure that user is root .
Returns the keys that maps to the top n max values in the given dict .
Writes a . wav file .
returns the type of the ( sub ) tree : Root Nucleus or Satellite
Turns a werkzeug . MultiDict or django . MultiValueDict into a dict with list values : param d : a MultiDict or MultiValueDict instance : return : a dict instance
Python s input () is blocking which means the event loop we set above can t be running while we re blocking there . This method will let the loop run while we wait for input .
Moved out to make testing easier .
Discover the current time zone and it s standard string representation ( for source { d } ) .
Send signal to process .
Write a modbus register .
Given k kilobytes report back the correct format as string .
If pair is in search_list return the index . Otherwise return - 1
Shut down a specific process .
Connect and login to an FTP server and return ftplib . FTP object .
Submits the packaged application to spark using a spark - submit subprocess
Exit on system end of file character
print just one that returns what you give it instead of None
Internal method to directly add a _NamespaceInfo object to this set . No sanity checks are done ( e . g . checking for prefix conflicts ) so be sure to do it yourself before calling this .
Calculate angle between two vectors
Check if obj is number .
Dump Python object as JSON string .
Parse the code parameter from the a URL
Converts a list of lists into a flat list . Args : x : list of lists
Get the last modified time of path as a Timestamp .
Gets a global variable given its name .
Aggregation function to get the first non - zero value .
Returns a boolean index with True if the value is masked .
Detach from all tracked classes and objects . Restore the original constructors and cleanse the tracking lists .
Fetch an image from url and convert it into a Pillow Image object
!
Cleans the column names on a DataFrame Parameters : df - DataFrame The DataFrame to clean
Returns the deepest level of nesting within a list of lists
Try to get a number out of a string and cast it .
Convert this confusion matrix into a 2x2 plain list of values .
Writes a file if it doesn t already exist with the same content .
Helper parse action to convert tokens to upper case .
Normalize the string according to normalization list
Logs out the current session by removing it from the cache . This is expected to only occur when a session has
Create directory with template for topic of the current environment
Returns type of the data for the given FeatureType .
Checks if a target name matches with an input regular expression .
Generate M random numbers in [ - pi pi ) .
Initialize from iterable
Return the group associated to the file : param filename : : return : str
Delete a file safely . If it s not present no - op .
Display Bloch sphere and corresponding data sets .
Load JSON file
Get dimension of an array getting the number of rows and the max num of columns .
True if the json_element passed is present for the task specified .
Take a date object and return the first day of the month .
Close our socket .
Perform singular value decomposition for dimensionality reduction of the input matrix .
Get the modified time for a file as a datetime instance
Creates a new dict from an existing dict that only has the given keys
Hacky workaround for old installs of the library on systems without python - future that were keeping the 2to3 update from working after auto - update .
Checks if two images have the same height and width ( and optionally channels ) .
Return the inner product between two tensors
Make a tweepy auth object
Convert a list of tuples describing a table into a HTML string
Returns all column names and their data types as a list .
Pads an input string to a given block size . : param s : string : returns : The padded string .
Delete a file safely . If it s not present no - op .
A fast approximation of sigmoid
Set value of the checkbox .
Kill the browser .
Returns the last number_of_bytes of filename
Indicates whether or not the given row contains valid data .
Sends a command and an ( optional ) sequence of arguments through to the delegated serial interface . Note that the arguments are passed through as data .

Set the serial port e . g . : / dev / tty . usbserial - A4001ib8
Returns symbol instances corresponding to variables of the current scope .
Get attribute from the target object
Converts a list of lists into a flat list . Args : x : list of lists
Encode ndarray to base64 string image data Parameters ---------- arr : ndarray ( rows cols depth ) kwargs : passed directly to matplotlib . image . imsave
Converts an RGB image to grayscale using matlab s algorithm .
Compress object to bytes .
Load an object from disk at explicit path
List all RDS thingys .
Print message via subprocess . call function .
function to get return code of a url
Apply re . sub to bunch of ( pattern repl )
Convert a list of JSON values to a list of models
Are two indexes equal? Checks by comparing str () versions of them . ( AM UNSURE IF THIS IS ENOUGH . )
Get the single element of iterable or raise an error .
Strips trailing whitespace from string lowercases it and replaces spaces with underscores
: param vector_a : A list of numbers . : param vector_b : A list of numbers . : returns : The euclidean distance between the two vectors .
A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .
Execute the given multiquery .
Call Java Function
Remove a node from this network .
Generate random string of given length
Populate axis limits GUI with current plot values .
A Bark logging handler logging output to a named file . At intervals specified by the when the file will be rotated under control of backupCount .
Validates the returned positional object
Raises an AssertionError if expected is actual .
Read text from file automatically detect encoding . chardet required .
Download file from http url link
Returns data as : class : numpy . recarray .
Convert file extension to lowercase .
Try to identify whether this is an ActivityPub request .
Calculate the MD5 hash for a file .
Retrun True if x is a valid YYYYMMDD date ; otherwise return False .
Set up neccessary environment variables
Make a set of unique n - grams from a string .
Convert a date into a datetime
Transpose the columns into rows remove all of the rows that are empty after the first cell then transpose back . The result is that columns that have a header but no data in the body are removed assuming the header is the first row .
Return the longest common substring in a list of strings . Credit : http : // stackoverflow . com / questions / 2892931 / longest - common - substring - from - more - than - two - strings - python
Return true if a value is a finite number .
decorator to convert a * args method to one taking a iterable
Write a lisst of Text instances as JSON corpus on disk . A JSON corpus contains one document per line encoded in JSON .
Compute the mean value across a list of dictionaries
Return a function that will call a named method on the target object with optional positional and keyword arguments .
: param sequence : Any sequence whose elements can be evaluated as booleans . : returns : true if all elements of the sequence satisfy True and x .
Add a blank row with only an index value to self . df . This is done inplace .
Takes a text and drops all non - printable and non - ascii characters and also any whitespace characters that aren t space .
zfill ( x width ) - > string
Setup the RAM buffer from the C ++ code .
Python2 accumulate implementation taken from https : // docs . python . org / 3 / library / itertools . html#itertools . accumulate
Download file from S3 Bucket
reads the zip file determines compression and unzips recursively until source files are extracted
Convert special characters using %xx escape .
Return a tuple of ( start end ) indices of an item from its index .
Formats a list of elements using the given line style
A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .
Convert list of key value lists to dict
Gets a naive datetime from a datetime .
Max reduction op .
Adapts a Numpy array into an ARRAY string to put into the database .
Calculate overlap count between the values of two dictionaries
r Transform a simple index into a human - readable position in a string .
I strip extra whitespace off multi - line strings if they are ready to be stripped!
Whether path is a directory to which the user has write access .
linear regression calculation
Returns a random color between min and max .
Calculates the request payload size
Delete all whitespace from the end of the line .
Check if all values in a sequence are equal .
Returns the default stream encoding if not found .
Decorator to explicitly mark functions that are exposed in a lib .
Iterate through marshmallow schema fields .
Sort the updatable objects according to ascending order
Convert numbers to floats whether the decimal point is . or
Reshape data into ( num_example batch_size )
Save / override the latest model after every epoch .
Unlinks all of the specified items from the tree .
Remove all values that are zero .
Adds an accuracy op to the model
Get a property of the experiment by name .
Reset analyzer state
Return the dotproduct of two vectors .
Fill missing values in pandas objects and numpy arrays .
prune all but the first ( = best ) n items
Returns indices to select the kth nearest neighbour
Returns day number of the last day of the month : param t : datetime : return : int
Converts camel - case identifiers to snake - case .
Removes the extension from a filename
Under UNIX : is a keystroke available?
Sets the title on the underlying matplotlib AxesSubplot .
Determines if two rectangles each input as a tuple ( xmin xmax ymin ymax ) intersect .
Return all child objects in nested lists of strings .
Creates symbolic link for either operating system . http : // stackoverflow . com / questions / 6260149 / os - symlink - support - in - windows
Helper function to unpickle data from picklefile .
Like dict ( ** kwargs ) but where the source key is special .
Returns data as : class : numpy . recarray .
Synthesize white noise
get a list and return a string with comma separated list values Examples [ to ta ] will return to ta .
Copy the lib items into our font .
Check whether this letter contains Jongsung
Takes a multi - dimensional array and returns a 1 dimensional array with the same contents .
Is this a string .
Returns numpy array of natural logarithms of values .
Calculates the Jaccard similarity between two sets of nodes . Called by mroc .
function to get return code of a url
Show the received object as precise as possible .
For use with SELECT ( or SELECT - like PRAGMA ) statements .
Check whether the package is registered on pypi
Call a C function that takes a pointer as its last argument and return the C object that it contains after the function has finished .
This is a workaround where Collections are no longer iterable when using JPype .
x is a 2D sparse matrix with it s first shape equal to 1 .
Internal function to read an XML file
Clean up name so it works for a Python identifier .
Read currency from windows registry
Validates data is a timestamp
Convert unix timestamp to human readable date / time string
Go to parent directory
Convert a one element byte string to signed int for python 2 support .
Return true if a value is an integer number .
Convert list of key value lists to dict
Return random disposition point .
Convert numbers to floats whether the decimal point is . or
Get all the database column names for the specified table .
Calls the specified Trigger of another Area with the optionally given parameters .
Read a dictionary of strings from a file
Return a modified list containing only the indices indicated .
Used when the plot method defined does not create a figure nor calls save_plot Then the plot method has to use self . fig
Remove legend for axes or gca .
List of GPU device names detected by TensorFlow .
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
return grandparent s path string
Temporarily replace sys . argv with current arguments
Debug a single doctest docstring in argument src
Return the * bipartite * ( rectangular ) distance matrix between the observations in the first and the second list .
Connect to MySQL with retries .
Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** .
Return file name ( s ) from Tkinter s file open dialog .
Locate the command s man page .
Converts a native Python dictionary to a raw DynamoDB item .
Draw a horizontal line up to a given length .
Calculate column - wise Pearson correlations using numpy . ma . corrcoef
Find the percentile of a list of values .
Grab data in TensorProto and convert to numpy array .
Calculates the moving average ( rolling mean ) of an array of a certain window size .
Returns the module name associated with a frame num_frames_back in the call stack . This function adds 1 to account for itself so num_frames_back should be given relative to the caller .
Simple method for handling exceptions raised by PyBankID .
Detects whether a line is present within a file .
Removes trailing zeros in the list of integers and returns a new list of integers
Write DOT comment .
Returns a copy of the given string ( or list of strings ) in which all occurrences of the given source are replaced by the given dest .
More important level : default for print and save
Given a list ( l ) will removing duplicates from the list preserving the original order of the list . Assumes that the list entrie are hashable .
Return the index of an element in the list .
Converts a millisecond accuracy timestamp to a datetime
Return True if the given string starts with one of the prefixes in the given list otherwise return False .
Pull the value from the cookiejar .
Return a dict with swapped keys and values
Creates a PDF by embedding the first page from the given image and writes some text to it .
Suppress warning about untrusted SSL certificate .
Show a 3D surface plot .
consider the distance between two mapPoints ignoring all terrain pathing issues
Return a JsonResponse . Make sure you have django installed first .
Returns the current xy coordinates of the mouse cursor as a two - integer tuple by calling the GetCursorPos () win32 function .
Finds an if expression as a statement
Clears the console .
Convert a CSV object to a numpy array .
I strip extra whitespace off multi - line strings if they are ready to be stripped!
Makes the list have unique items only and maintains the order
Returns the arithematic mean of the values in the passed list . Assumes a 1D list but will function on the 1st dim of an array ( ! ) .
Pop the heap value from the heap .
Return sanitized Eidos text field for human readability .
: raises docker . exceptions . APIError
Return a list of the files with the commas removed .
Return a generator of tuples k c such that k is the name of the python attribute for the column and c is the name of the column in the sql table .
Add a blank row with only an index value to self . df . This is done inplace .
Uses box coordinates to crop an image without resizing it first .
Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line .
Takes a multi - dimensional array and returns a 1 dimensional array with the same contents .
Indent given text using custom spacing default is set to 4 .
Parse file specified by constructor .
Check whether interface exists .
Returns a digraph string fragment based on the passed - in module
Attempt to guess the title from the filename
Counts the word frequences in a list of sentences .
Return the difference in seconds between now and the given time .
Remove files specified multiple times in a list .
Get domain part of an url .
Return the sum of the element - wise product of vectors x and y . >>> dotproduct ( [ 1 2 3 ] [ 1000 100 10 ] ) 1230
Read a given number of 32 - bits unsigned integers from the given file with the given endianness .
Last time step available .
updates the query context with this clauses values
Add a section a subsection and some text to the document .
Calculate the tanimoto set similarity .
Note that the Executor must be close () d elsewhere or join () will never return .
Resets the scale on this image . Correctly aligns time scale undoes manual scaling
Returns day number of the last day of the month : param t : datetime : return : int
Check whether a certain column exists
Return password from pipe if not on TTY else False .
Takes a text and drops all non - printable and non - ascii characters and also any whitespace characters that aren t space .
Argument class constructor should be used inside a class that inherits the BaseAction class .
Return a tuple that contains ( width height ) Pass in a url to an image and find out its size without loading the whole file If the image wxh could not be found the tuple will contain None values
Push item onto heap maintaining the heap invariant .
Print a list in tabular format Based on https : // stackoverflow . com / a / 8356620
close socket immediately .
Format a byte sized value .
Cache the first return value of a function for all subsequent calls .
Command line interface for PyBEL .
helper function to make a dict from a coordinate for logging
Return the average vector of a list of vectors .
splits iterables a in equal parts of size sz
Given a float returns a rounded int . Should give the same result on both Py2 / 3
Get the number of factor levels for each categorical column .
Return unit sphere coordinates from window coordinates .
For Python3 compatibility of generator .
Helper for pulling a keyed value off various types of objects
Logarithmic loss with non - necessarily - binary labels .
Return only the part of the row which should be printed .
Return a tuple of axis dimensions
Plot the empirical histogram versus best - fit distribution s PDF .
Removes all non - printable characters from a text string
string dict / object / value to JSON
Installs a Blended plugin from GitHub
Simple function to convert naive : std : datetime . datetime object containing local time to a naive : std : datetime . datetime object with UTC time .
Drops and re - creates the SQL schema
Update context menu
reduces a multiline string to a single line of text .
Hessian of func wrt two parameters p0 and p1 . ( see _graddoc )
Interpolate the given slice of the larger array .
Dump Python object as JSON string .
Process command line arguments and walk inputs .
Can edit this object
Given a key prefix return whether this prefix is the prefix of an existing key in the trie .
Calculates the request payload size
Convert CamelCase to lower_and_underscore .
Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .
Parameters ---------- data_path : str
Load JSON file
Delete object from parent object .
Test if array is an array of real numbers .
Convolve 2d gaussian .
update () extends rather than replaces existing key lists .
Returns a boolean indicating if the code is executed inside softimage .
Return a sort lambda function for the sortedbykey
Sets up the python include paths to include src
Print dicttree in Json - like format . keys are sorted
Return a main config value or default if it does not exist .
Ensures that the argument is a list that either is empty or contains only strings : param arr : list : return :
Returns the adjacency matrix of a bipartite graph whose biadjacency matrix is A .
Return a dict where the keys are all the values listed in the values of the original dict
Return the number of active CPUs on a Darwin system .
Find the signed distance from a mesh to a list of points .
Prints the specified message and exits the program with the specified exit status .
Creates a datetime from GnuCash 2 . 6 date string
Convert arrays of datetime . datetime and datetime . timedelta objects into datetime64 and timedelta64 according to the pandas convention .
Context manager that causes pprint () to print OrderedDict objects as nicely as standard Python dictionary objects .
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
Log out the active user
Like pretty but print to stdout .
Check if * path * is a directory
Returns seconds since 0h00 .
From itertools cookbook . [ a b c ... ] - > ( a b ) ( b c ) ...
HTTP PUT operation to API endpoint .
Appends a PDF to a pyPDF writer . Legacy interface .
Convert a python string to c array .
Find the RMS of the audio
Converts a dict to an encoded URL . Example : given data = { a : 1 b : 2 } it returns a = 1&b = 2
Parses hostname from URL . : param url : URL : return : hostname
Callback to go to the next tab . Called by the accel key .
Get targets for loadable modules .
find the common elements in two lists . used to support auto align might be faster with sets
Remove element e from model
Takes a string and dictionary . replaces all occurrences of i with j
Return the largest real value h such that all elements in x are integer multiples of h .
Create : class : PNG from raw bytes . : arg bytes b : The raw bytes of the PNG file . : rtype : : class : PNG
add arrow to plot
generate a method to write the configuration in yaml to the method desired
Get distance matrix given a matrix . Used in testing .
Returns whether this is a complex floating point type .
Provide a command prompt .
MoveWindow from Win32 . handle : int the handle of a native window . x : int . y : int . width : int . height : int . repaint : int use 1 or 0 . Return bool True if succeed otherwise False .
Annual growth given growth from start date to end date .
Simple function to convert naive : std : datetime . datetime object containing local time to a naive : std : datetime . datetime object with UTC time .
Convert an integer list into a string list .
searchs a value in a dicionary and returns the key of the first occurrence
List APIs in account .
safe version of pow
Returns a copy of the list without duplicates .
Get screen width and height
Args : xml_str : str DataONE API XML doc .
Check if an element from a list is in a string .
Efficient conversion from scipy sparse matrix to cvxopt sparse matrix
Return a repr () for a list / tuple
Returns a string representation of the traceback .
Advance the iterator without returning the old head .
Parameters ---------- sub : str sup : str
Removes all non - printable characters from a text string
Sort data rows and order columns
Stops the playing thread and close
Install Postgres on remote
Return True if there s something to read on stdin ( posix version ) .
Tuple describing range to read from the ndarray - closed : open
When converting Spark SQL records to Pandas DataFrame the inferred data type may be wrong . This method gets the corrected data type for Pandas if that type may be inferred uncorrectly .
Release lock on compilation directory .
Try to automatically detect an image field
Helper function to read JSON file as OrderedDict
Extracts all integers from a string an return them in a list
returns a random element from seq n times . If n is None it continues indefinitly
Build a C ++ binary executable
Transpose the columns into rows remove all of the rows that are empty after the first cell then transpose back . The result is that columns that have a header but no data in the body are removed assuming the header is the first row .
Create a shared memory array with the same shape and type as a given array filled with value .
replace nan in a by val and returns the replaced array and the nan position
Return all rows from a cursor as a dict .
Shortcut fot boolean like fields
Generate all matches found within a string for a regex and yield each match as a string
Method to extract keywords from the text provided .
Test if two objects are equal based on a comparison of the specified attributes attrs .
Return the group associated to the file : param filename : : return : str
Remove the element from a set lists or dict . >>> L = [ Lucy ] ; S = set ( [ Sky ] ) ; D = { Diamonds : True } ; >>> remove_once ( L Lucy ) ; remove_once ( S Sky ) ; remove_once ( D Diamonds ) ; >>> print L S D [] set ( [] ) {}
Return a DataFrame with the duplicated values of the column col_name in df .
decorator to convert a method taking a iterable to a * args one
Under UNIX : is a keystroke available?
helpful in situations where browser / app may recognize Unicode encoding in the \ u0b8e type syntax but not actual unicode glyph / code - point
Write a single property to the file in Java properties format .
Call callable ( * args ** kw ) fixing any type errors that come out .
Command line interface for PyBEL .
Did the user depress and release the button to signify a click? MouseStateType is the button to query . Values found under StateTypes . py
Redirect standard out to file .
Loads a model from specified file
Shuffle the data .
Compatibility wrapper for the loop . create_task () call introduced in 3 . 4 . 2 .
add arrow to plot

Check if an http server runs on a given port .
Cumulative product of a list .
!
Conveinience :
Check if an element from a list is in a string .
delete all the eggs in the directory specified
Build the lexer .
Check configuration file type is JSON Return a boolean indicating wheather the file is JSON format or not
converts a base64 string to a file
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
Add a section a subsection and some text to the document .
Compute the eigvals of mat and then find the center eigval difference .
Takes a multi - dimensional array and returns a 1 dimensional array with the same contents .
Splits on multiple given separators .
convert string to int or float .
Reads a key from S3
Return file name ( s ) from Tkinter s file open dialog .
Batches a list into a list of lists with sub - lists sized by a specified batch size .
Return the last n results ( or possibly less if not found ) . Note that the last results are not necessarily the best ones! Depending on the search type .
Split a multiline string into a list excluding blank lines .
initializes 3D plot
Returns HTML from MediaWiki markup
Do all elements of x have a type from types?
Pull a file directly from S3 .
Tokenize an input string into a list of words ( with punctuation removed ) .
Ensure all logging output has been flushed
return the usage string for available options
Detects whether a line is present within a file .
Search tuple array by index and value : param t : tuple array : param i : index of the value in each tuple : param v : value : return : the first tuple in the array with the specific index / value
Get the parent directory of a filename .
Replace multiple values in a string
Re - raises the error that was processed by prepare_for_reraise earlier .
Log memory usage before and after a method .
Returns the progress ratio and percentage .
Populates an object s attributes using the provided dict
Decide if the Ipython command line is running code .
Returns a filtered image after applying the Fourier - space filters
Return a repr () for a list / tuple
Dump bel specification dictionary using YAML
Delete all records from a table . Use caution!
Returns True if the root node contains no child elements no text and no attributes other than ** type ** . Returns False if any are present .
This loads a geojson file into a geojson python dictionary using the json module . Note : to load with a different text encoding use the encoding argument .
Converts a dict to a querystring suitable to be appended to a URL .
extract features in a sentence
shutdown : to be run by atexit handler . All open connection are closed .
Convolve 2d gaussian .
Returns all column names and their data types as a list .
Coroutine called by MapAsync . It s wrapping the call of run_in_executor to run the synchronous function as thread
compose a list of functions
Convert a vtk matrix to a numpy . ndarray
Get the local ip of this device
Check if a Django project is being managed with manage . py or django - admin scripts
Return a re . match object if an empty comment was found on line .
Search into instance attributes properties and return values of no - args methods .
Stops the analysis as soon as possible .
Transparently unzip the file handle
Rotates an image by deg degrees
Download file from S3 Bucket
Raw print to sys . __stdout__ otherwise identical interface to print () .
Read tag data from file and return as numpy array .
Yields file name if matches a regular expression pattern .
Computes SSIM .
Given a sequence convert it to a comma separated string . If however the argument is a single object return its string representation .
Strips trailing whitespace from string lowercases it and replaces spaces with underscores
Removes underscores and capitalizes the neighbouring character
Determines if two rectangles each input as a tuple ( xmin xmax ymin ymax ) intersect .
Return default argument value as given by argparse s add_argument () .
Check if the currently running Python version is new enough .
Return a column of the given matrix .
Removes dict keys which have have self as value .
Generate a list of words given text removing punctuation .
returns a random element from seq n times . If n is None it continues indefinitly
Find the index of elem in the reversed iterator .
Return dict mapping item - > indices .
Report whether the given value is a byte or unicode string .
Creates a yaml file with the given content .
Logarithmic loss with non - necessarily - binary labels .
Add up a list of freq counts to get the total counts .
Code due to Thomas Heller - published in Python Cookbook ( O Reilley )
Close all connections .
Move the turtle forward .
Asks for a simple string
Convert string column into datetime column
Load and execute a python file .
printdict
Run python eval on the input string .
Return a tuple from parsing a b c d - > ( a b c d )
Show the received object as precise as possible .
Strip trailing component trailing from content if it exists . Used when generating names from view classes .
Simple measure of similarity : Number of letters in common / max length
Determines the height and width of the console window
Get a slice from a table column holding arrays . ( see : func : table . getcolslice )
Yields file name if matches a regular expression pattern .
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
Downloads and returns the full text of a particular page in the document .
format mpv s title
Convert the entire image to bytes . : rtype : bytes
Round a number to a precision
Return a position in a file which is known to be read & handled . It assumes a buffered file and streaming processing .
Execute the given multiquery .
Note that the Executor must be close () d elsewhere or join () will never return .
Double click on a given square in the map
Return a hash of the contents of a dictionary
if we have a compatible fill_value and arr dtype then fill
count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )
Return the haversine of an angle
r Checks if l is iterable and contains only integral types
gets a param from kwargs or uses a default_value . if found it s removed from kwargs
Make dictionary version of enumerated class .
Instanciates a new * Document * from this collection
arr_out = round_array ( array_in )
Create new bucket .
Calculate equality between two ( Comparable ) objects .
Remove element from the RangeSet if it is a member .
A function to display sympy expression using display style LaTeX in PNG .
Toggle linear / log scale for Y - axis .
Run manage . py using this component s specific Django settings
Sort files or folders by modified time
Converts a list of lists into a flat list . Args : x : list of lists
Images must be either 2D or 3D .
Build argument parsers .
Convert camelCase ( used in PHP ) to Python - standard snake_case .
Helper function to read JSON file as OrderedDict
Whether the pattern matches anywhere in the string s .
Check if the memory is too full for further caching .
Pure - Python implementation of itertools . combinations ( l 2 ) .
evaluates expression in current context and returns its value
Return current free memory on the machine for windows .

Executes self . function to convert LazyString instance to a real str .
Get the current mouse location ( coordinates and screen number ) .
Transforms an XML string it to python - zimbra dict format
attempt to draw str on screen and ignore errors if they occur
Return the path always without the \\ ? \ prefix .
Return a tuple that contains ( width height ) Pass in a url to an image and find out its size without loading the whole file If the image wxh could not be found the tuple will contain None values
Get list of datetime objects extracted from a filename
Redirect stdout back to the original stdout .
Request the power state of the server .
Removes the last line of the document .
Transforms a DataFrame in place . Computes all outputs of the DataFrame .
must be a float
Turns a Python unicode string list into a Java String array .
Remove ( and un - index ) an object
The maximum integer value of a value - set . It is only defined when there is exactly one region .
Register callbacks for button press events and selection changed
If block = False ( the default ) die hard and fast if another process has already grabbed the lock for this file .
Google AppEngine Helper to convert a data type into a string .
Get the path of java executable
This wraps a function that would normally only accept an array and allows it to operate on a DataFrame . Useful for applying numpy functions to DataFrames .
Item assignment sets the return value and removes any side effect
Compute the mean value across a list of dictionaries
Replace regex with string .
Flip an image horizontally or vertically .
Splits on multiple given separators .
Connect to a redis instance .
Return a Flask Response object containing a JSON representation of * resource * .
Will make any functions return an iterable objects by wrapping its result in a list .
Wrapper over time module to produce Unix epoch time as a float
Like : meth : items but returns an iterator .
Reverse the broadcasting operation .
Return the index of an element in the list .
Filter the dict * d * to remove keys not in * keys * .
Return all child objects in nested dict .
Search into instance attributes properties and return values of no - args methods .
Execute all tests ( normal and slow ) with coverage enabled .
Encodes a list of strings to a single string . : type strs : List [ str ] : rtype : str
At least one of the items in value should match
Load and execute a python file .
Support instance methods
Get letters from string only .
Parameters ---------- data_path : str
Turns a werkzeug . MultiDict or django . MultiValueDict into a dict with list values : param d : a MultiDict or MultiValueDict instance : return : a dict instance
If pyyaml > 5 . 1 use full_load to avoid warning
Linspace op .
Return true if a value is a finite number .
Replace {{ variable - name }} with stored value .
Returns the arithematic mean of the values in the passed list . Assumes a 1D list but will function on the 1st dim of an array ( ! ) .
Find a model reference by its table name
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
implementation of safe dumper using Ordered Dict Yaml Dumper
iterator for JSON - per - line in a file pattern
Run a playbook .
Returns the year .
Convolve 2d gaussian .
Bytes are encoded as a long followed by that many bytes of data .
Generate nonce number
Convert human readable string to datetime . datetime .
Return a dictionary of words and word counts in a string .
Sets up the python include paths to include src
Load the correct module according to the version
If file is locked then terminate program else lock file .
Find a check box and uncheck it . The check box can be found via name id or label text . ::
Configuration - friendly boolean type converter .
Function that gets relative path to the filename
Checks if value is an integer long integer or float .
Returns a string containing the type and text of the exception .
A tensorflow variable tranfomed to be constrained in a L2 unit ball .
Map prediction tensor to labels .
Returns True when the graph has the given edge .
Uses the default Plone sortable_text index lower - case
Logs a function s run time
Cast integer and strings to timestamps
\ Asserts that two iterables contain the same values .
Return the largest real value h such that all elements in x are integer multiples of h .
Drops the trailing zeros in a float that is printed .
Return group content .
Call a function after a delay unless another function is set in the meantime .
Takes a nested list and returns the size of each dimension followed by the element type in the list
Convert a value to str on Python 3 and unicode on Python 2 .
Get the number of rows in a particular table .
Return an enum from a name Args : enum_name ( str ) : name of the enum Returns : Enum
Check if a given file is available in the cache or not
Compare two strings while protecting against timing attacks
Cleans up the file entry .
Unpickles the classifier used
Initialize Flask application .
Returns a character delimited version of the provided list as a Python string
Load graph as defined by a DOT file . The file is assumed to be in DOT format . It will be loaded parsed and a Dot class will be returned representing the graph .
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
Checks if the given thing represents a date
equivalent to scipy . preprocessing . normalize on sparse matrices but lets avoid another depedency just for a small utility function
Get the list of distinct values with preserving order .
Print out a neat targets dependency tree based on requested targets .
Quits the application ( called when the last window is closed )
Perform re . sub with the patterns in the given dict Args : dict_ : { pattern : repl } source : str
Generate new UUID
Returns all column names and their data types as a list .
Return True if dtype is a numeric type .
Redirect stdout back to the original stdout .
returns a function that extracts the value for a column .
Return the width of the table including padding and borders .
Returns the latest modification time of all files / subdirectories in a directory
Get adjacency matrix .
Is the SQLAlchemy column type one that inherits from : class : Numeric such as : class : Float : class : Decimal ?
Returns a list of all the image s colors .
A socket attached to the stdin / stdout of a container . The object returned contains a get_socket () function to get a socket . socket object and close_socket () to close the connection
Check to see if the internet is on by pinging a set address . : param address : the IP or address to hit : return : a boolean - true if can be reached false if not .
Convert a one element byte string to signed int for python 2 support .
Get the file name from an url Parameters ---------- url : str
Scale the image to uint8
gets the dimensions depending on python version and os
Update the dev_info data from a dictionary .
Sets all defaults for the given dictionary to those contained in a second defaults dictionary . This convenience method calls :
Decode the contents of a value from a serialized stream .
Returns a bool determining if the process is in a running state or not
Tests if an object is a collection .
Get width and height of a PDF
Convert to snake case .
Downsample x by factor using striding .
Prints given string to stderr .
Return a virtual concatenate of several NumPy arrays .
split string * s * into list of strings no longer than * length *
Pre - order depth - first
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
Convenience wrapper for database UPDATE .
Write the given colored string to standard out .
Inserts a single document into a mongo collection https : // api . mongodb . com / python / current / api / pymongo / collection . html#pymongo . collection . Collection . insert_one
Returns min ( val1 val2 ) returning None only if both values are None
Removes trailing zeroes from indexable collection of numbers
The function compares strings ignoring case
Yields tokens from input string .
Replaces occurrences of a match string in a given list of strings and returns a list of new strings . The match string can be a regex expression .
Ensure the widget is shown . Calling this method will also set the widget visibility to True .
Calculate equality between two ( Comparable ) objects .
Resets the iterator to the start .
A non - optimal implementation of a regex filter
date to unix timestamp in milliseconds
Will make any functions return an iterable objects by wrapping its result in a list .
Entry point for tappy command .
Returns method or function arguments .
Test if an array is a square matrix .
Select rows where the given field is a member of the given value .
Sets the indent for standardized output : param message : ( str ) : return : ( str )
Generate a unique ID that is somewhat guaranteed to be unique among all instances running at the same time .
Returns path as an absolute path with ~user and env var expansion applied .
: type s str
Return a set of attributes for a multiple items in multiple tables using their primary keys .
Get the id of the last written row in table
Explicitly reload context with DB usage to get access to complete DB object .
Checks if key exists in datastore . True if yes False if no .
Yaml either have automatically converted it to a datetime object or it is a string that will be validated later .
Add enough tabs to align in two columns
Private method for setting axis limits .
Set value in the pandas DataFrame
Confirms that the uploaded image is of supported format .
Return the products from a query response as a Pandas DataFrame with the values in their appropriate Python types .
A magic method to implement shallow copy behavior .
Sets the caption_found and plot_found variables to False .
Returns the TextFSMValue object natching the requested name .
pops multiple keys off a dict like object
Returns min ( val1 val2 ) returning None only if both values are None
Exit the shell session .
Parses an HTTP date into a datetime object .
Checks if the king of the other side is attacked . Such a position is not valid and could only be reached by an illegal move .
equivalent to scipy . preprocessing . normalize on sparse matrices but lets avoid another depedency just for a small utility function
print the message to the predefined log file without newline
Find longest ORF from the given list of ORFs .
Given a name in camelCase return in snake_case
Take stderr bytes returned from MicroPython and attempt to create a non - verbose error message .
HTTP request method of interface implementation .
Delete this message
I strip extra whitespace off multi - line strings if they are ready to be stripped!
Match two names .
Move datetime 1 year in the chosen direction . unit is a no - op to keep the API the same as the day case
Checks whether the re module can compile the given regular expression .
Run the Webserver / SocketIO and app
Configure session for particular device
Selectively log an accepted request .
function to get return code of a url
return the usage string for available options
Return all ( and only ) the uppercase chars in the given string .
Returns the estimated standard error of the mean ( sx - bar ) of the values in the passed list . sem = stdev / sqrt ( n )
Apply re . sub to bunch of ( pattern repl )
Merge any number of dictionaries
Set yaxis limits .
This is a compatibility function that takes a C { float } and converts it to an C { int } if the values are equal .
Remove dangerous URL schemes like javascript : and escape afterwards .
Return all ( and only ) the chars in the given string .
Get rid of all axis ticks lines etc .
Remove legend for axes or gca .
Toggle linear / log scale for Y - axis .
Split a text into a list of tokens .
Split a text into separate words .
Get domain part of an url .
Check that the image width is superior to width
Update the dev_info data from a dictionary .
Get trace_id from flask request headers .
Called by remote workers . Useful to populate main module globals () for interactive shells . Retrieves the serialized function .
Ajoute la target au plot
Reimplement Qt method
Make setuptools . Extension .
Scipy norm function
This function flatten given nested list . Argument : nested list Returns : flat list
Compile the pattern to regex .
Returns a 3x3 cross - product matrix from a 3 - element vector .
Read tag data from file and return as unicode string .
Transform a range of years ( two ints ) to a DateRange object .
Returns a random positive integer ( for a Django PositiveIntegerField )
Converts from hex to hsv
Create directories if they do not exist otherwise do nothing .
Same as : meth : random . choice but also supports : class : set type to be passed as sequence .
Return a list of the table names in the database .
Return a tuple of ( start end ) indices of an item from its index .
Get the modified time for a file as a datetime instance
Return dict mapping item - > indices .
Return indices of inputs to the node with the given index .
Retrive first element in List .
Returns the index of the value at the Qth percentile in array a .
Returns a list of string names of all available GPUs
Determine if end - of - file is reached for file fd .
Imputes data set containing Nan values
convert 3 3 a matrix to 6 element s list ( see Tauxe 1998 )
Set an object s field to default if it doesn t have a value
Replace accentuated chars in string by their non accentuated equivalent .

Scattering form - factor amplitude of a sphere normalized to F ( q = 0 ) = V
Reads a tif file to a 2D NumPy array
return the last stack element and delete it from the list
Presenter to force yaml . dump to use multi - line string style .
Removes object obj from the index .
Discover the current time zone and it s standard string representation ( for source { d } ) .
returns json contents as string
Returns nr of first entry parseable to float in ll None otherwise
Whether path is a directory to which the user has write access .
Convert anything to a bytearray . See - http : // stackoverflow . com / questions / 7585435 / best - way - to - convert - string - to - bytes - in - python - 3 - http : // stackoverflow . com / questions / 10459067 / how - to - convert - my - bytearrayb - x9e - x18k - x9a - to - something - like - this - x9e - x1
1x1 convolution
Calculate the short - time Fourier transform magnitude .
Helper for iterating only nonempty lines without line breaks
Coerce value to an JSON - compatible representation .
Convert a string to a list with sanitization .
Return a tuple from parsing a b c d - > ( a b c d )
Start web application
A background thread to kill the process if it takes too long .
assumes that a figure is open
Extract the boundaries from a list of indexes
Get the modified time of the RPM Database .
Generate Android device id
Official way to get the extension of compiled files ( . pyc or . pyo )
numpy . ndarray dumper .
Checks if the filename exists under the path .
Attempt to setattr but catch AttributeErrors .
Split text into list of sentences .
Matrix multiplication using binary
Shorcut for self . run .
Helper for iterating only nonempty lines without line breaks
Whether the item is a placeholder or contains a placeholder .
Turn a list into a comma - and / or and - separated string .
if we have a compatible fill_value and arr dtype then fill
Split data into chunks of num chars each
Calculate the SSE to the cluster center
Calculate the Hamming distance between two strings . From Wikipedia article : Iterative with two matrix rows .
Checks if the string is a palindrome ( https : // en . wikipedia . org / wiki / Palindrome ) .
Read a file and close it . Returns the file source .
Extract text from a given lxml node .
Choose the most common item from the list or the first item if all items are unique .
Simple function to convert naive : std : datetime . datetime object containing local time to a naive : std : datetime . datetime object with UTC time .
Convert a object into dictionary with all of its readable attributes .
Returns uptime in seconds or None on Syllable .
Loads a model from specified file
Concatenates blocks into a block diagonal matrix .
An enum is encoded by a int representing the zero - based position of the symbol in the schema .
Start a Pdb instance at the calling frame with stdout routed to sys . __stdout__ .
Decorator which adds correct MIME type for python source to the decorated bottle API function .
Converts array into chunks with consecutive elements of given step size . http : // stackoverflow . com / questions / 7352684 / how - to - find - the - groups - of - consecutive - elements - from - an - array - in - numpy
Print dicttree in Json - like format . keys are sorted
Create database tables from sqlalchemy models
Split text into list of sentences .
Register service into the system . Called by Services .
read an image from file - PIL doesnt close nicely
Whether this path is a symbolic link .
Saves the updated model to the current entity db .
Converts a list of lists into a flat list . Args : x : list of lists
Truncates a value to a number of decimals places
matching of datetimes in time columns for data filtering
Helper to run tasks in the event loop
Open a file .
Convert list of key value lists to dict
Write a dict to a JSON file .
Returns the topmost parent of the current category .
Shape a list of lists into the appropriate shape and data type
Return list of the key property names for a class
Return True if dtype is a numeric type .
Checks if key exists in datastore . True if yes False if no .
Flatten dict with defined key join symbol .
Cast uint32 RGB image to 4 uint8 channels .
Center all lines of the text . It is assumed that all lines width is smaller then B { width } because the line width will not be checked . Args : text ( str ) : Text to wrap . width ( int ) : Maximum number of characters per line . Returns : str : Centered text .
Print Confirmation Message and Get Y / N response from user .
Propagate a mean through linear Gaussian transformation .
Fast median operation for masked array using 50th - percentile
Uses dynamic programming to infer the location of spaces in a string without spaces .
Provides the color corresponding to value x in the form of a tuple ( R G B A ) with int values between 0 and 255 .
Yields tokens from input string .
Determine whether or not obj is iterable but not a string ( eg a list set tuple etc ) .
Copy the lib items into our font .
Segmented min op .
Returns a random positive integer ( for a Django PositiveIntegerField )
Check if we should use Unix style .
: return Jinja sbatch template for the current tag
Create the empty database ( tables ) .
This function should be called instead of direct spio . loadmat as it cures the problem of not properly recovering python dictionaries from mat files . It calls the function check keys to cure all entries which are still mat - objects
Compute the log of the magnitude spectrum of frames
Reads and iterates through each image file in the given directory
Convert a list of strings to a list of integers .
Enable a default web proxy
Aggregation function to get the first non - zero value .
Pull a file directly from S3 .
Squash self . out into string .
Convert anything to a bytearray . See - http : // stackoverflow . com / questions / 7585435 / best - way - to - convert - string - to - bytes - in - python - 3 - http : // stackoverflow . com / questions / 10459067 / how - to - convert - my - bytearrayb - x9e - x18k - x9a - to - something - like - this - x9e - x1
Return all ( and only ) the uppercase chars in the given string .
Return a list where the duplicates have been removed .
Add plots to an existing plot
Returns the item that appears most frequently in the given list .
A basic check of if the program is running in interactive mode
Raise a new exception using the preserved traceback of the last one .
unload the previously loaded shared library
Convenient interface to the ecstasy package .
Return data as a JSON string .
Helper to draw lines connecting a set of nodes that are scaled for the Screen .
Prints a human readable version of the filter .
Flags that a function is linear wrt all args
Returns OK then waits approximately 1 second and restarts container
Returns is seq is sequence and not string .
Returns the item that appears most frequently in the given list .
Return the hash .
Safely convert a single number to integer .
Create a symbolic link
Given a list ( l ) will removing duplicates from the list preserving the original order of the list . Assumes that the list entrie are hashable .
Clips a prefix from the beginning of a string if it exists .
Cleans trailing whitespaces and replaces also multiple whitespaces with a single space .
Check if obj is number .
Get a member from an object by ( string ) name
Returns a random positive integer ( for a Django PositiveIntegerField )
Get the file size of a given file
Indent given text using custom spacing default is set to 4 .
Sends a command and an ( optional ) sequence of arguments through to the delegated serial interface . Note that the arguments are passed through as data .
Pretty print format some XML so it s readable .
Retrieve requested URL
Upload a directory on the remote host .
Helper function for creating hash functions .
Return true if given node is inside lambda
Convert an ISO 8601 formatted string in UTC into a timezone - aware datetime object .
Go to parent directory
Get user name provide by operating system
returns a tuple that contains ( screen_width screen_height )
Simple merge of samplesets .
Manufacture decorator that filters return value with given function .
Create the file with the given content
Equivalent of the apply () builtin function . It blocks till the result is ready .
rounds float to closest int : rtype : int : param n : float
Removes object obj from the index .
convert to datetime to UTC offset .
Remove a spent coin based on its index .
Convert spherical coordinates to cartesian unit vectors .
A helper function that finds the position of the most significant bit in a 1darray of 1s and 0s i . e . the first position where a 1 appears reading left to right .
Empty a table by deleting all of its rows .
Convert CamelCase to snake_case .
: return : list (( option value ) ... ) pairs of all items in the given section
Bitwise xor on equal length bytearrays .
Return the location of the static data directory .
Replace #hashtag and
Compute the total size of all elements in objects .
Return block of normal random numbers
str to bytes ( py3k )
Return evidence codes in order shown in code2name .
Reads text file contents
Given an index for the text return the corresponding ( row col ) tuple . ( 0 - based . Returns ( 0 0 ) for index = 0 . )
Define a new macro
Callable function for the multiprocessing pool .
Return the indices of all the val in m
Get a property by name
Extract a numpy array from a base64 buffer
Save a given signal sig to file fname as a 16 - bit one - channel wave with the given rate sample rate .
Get from a list with an optional default value .
Apply 2to3 tool ( Python2 to Python3 conversion tool ) to Python sources .
Remove all unwanted characters from text .
Python2 accumulate implementation taken from https : // docs . python . org / 3 / library / itertools . html#itertools . accumulate
converts a object to list if object is a list it creates a comma seperated string .
Set value in the pandas DataFrame
Not meant to be used directly use : meth : Instaloader . save_session_to_file .
Extract a set of variables by name from another frame .
Helper method that escapes parameters to a SQL query .
Args : xml_str : str DataONE API XML doc .
Convert a grayscale image to BGR image .
Max reduction op .
convert iterable object into numpy array
Restores the object from the given JSON .
Get string from file .
Write data with column headers to a CSV .
( Point Point ) - > Point Return the point that lies in between the two input points .
Like many_until but must consume at least one of these .
Trim left - right given string
Wrapper on iter method callback gets an iterator result
Return true if the socket managed by this connection is connected
Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line .
Returns the topmost parent of the current category .
docstring for argparse
Wrap an AST Call node to lambda expression node . call : ast . Call node
Execute a python code object in the given environment .
Appends a PDF to a pyPDF writer . Legacy interface .
Get the number of coded value from a key . If several keys of the same name are present the total sum is returned .
Connect and login to an FTP server and return ftplib . FTP object .
Step over the next statement
Convert to snake case .
Determine if end - of - file is reached for file fd .
r Handles whitespace cleanup .
Generate n values between start and end .
Performs a join using the union join function .
Get user name provide by operating system
Evaluates the binomial pmf .
Index of the last occurrence of x in the sequence .
Wait for a proc to shut down then terminate or kill it after timeout .
Same to log but this one centralizes the message first .
Return whether an object is a path .
Return possible range for min function .
Loads UTF8 string : param reader : : return :
helper function used for joins builds left and right join list for join function
Warn if nans exist in a numpy array .
Try to read a value named key from the headers .
Returns the greatest common divisor for a sequence of numbers . Uses a numerical tolerance so can be used on floats
Returns dictionary with number of connections for each database .
Log the exc_info tuple in the server log .
Get the modified time for a file as a datetime instance
Select a subset of features from the example dict .
Method to handle what to do when the stop button is pressed
HTTP response for not - authorized access ( status code 403 )
Close all open / active plotters
Converts a millisecond accuracy timestamp to a datetime
Find the conda executable robustly across conda versions .
A basic document feature extractor that returns a dict of words that the document contains .
Probability density function ( normal distribution )
One - hot encode labels from input
Round the number to the specified number of significant figures
Calculate area of bounding box .
Pass in a dictionary that has unsafe characters as the keys and the percent encoded value as the value .
Die on SIGTERM or SIGINT
Show revision list
Given a field or enum value node get deprecation reason as string .
Prints the top row of a table
Checks if two images have the same height and width ( and optionally channels ) .
Print in color .
Order - preserving sorting function .
Sophisticated simulation of multiplication
Returns the latest modification time of all files / subdirectories in a directory
Test if the given fasta file contains sequences with duplicate sequence names .
Gaussian noise corruption to images .
Magic method dispatcher
simple method to determine if a url is relative or absolute
Clear screen and go to 0 0
Helper function which returns an array with the Intervals boundaries .
: param list_of_points : : return : list_of_points with None s removed
Extract text from a given lxml node .
Gets the login credentials from the user if not specified while invoking the script .
Return True if the given object conforms to the Serializable protocol .
Gather a list of proxies to use .
Split a sentence into list of words .
Return leading whitespace .
Manufacture decorator that filters return value with given function .
Gets tail
Transforms an XML string it to python - zimbra dict format
Private method for setting axis limits .
Requests - mock requests . post wrapper .
Declares that the double can only be called with the provided arguments .
Order - preserving sorting function .
Write to given samples to a wav file . The samples are expected to be floating point numbers in the range of - 1 . 0 to 1 . 0 .
Whitespace normalization :
Split a string with comma or space - separated elements into a list .
Convert string from camel case to snake case .
Sort files or folders by modified time
Reseed factory . fuzzy s random generator .
generate random string with specified length
Get ( and maybe create ) a set by name .
Normalizes list
generate random string with specified length
Compile the pattern to regex .
Takes JSON formatted data converting it into native Python objects
print just one that returns what you give it instead of None
Suppress warning about untrusted SSL certificate .
Returns path to packaged static files
Function to calculate the Fourier transform of data . Parameters ---------- data : numpy . ndarray 1D or 2D array containing time series . tbin : float Bin size of time series ( in ms ) . Returns ------- freqs : numpy . ndarray Frequency axis of signal in Fourier space . fft : numpy . ndarray Signal in Fourier space .
Split a comma separated option into a list .
Finds parent folder of file
Converts Timestamp to datetime .
Internal function to read an XML file
Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line .
Validates data is a timestamp
Save a matrix ( list of lists ) to a file as a CSV
Returns database SQL datatype for a column : e . g . VARCHAR .
Creates a datetime from GnuCash 2 . 6 date string
Return the base directory
Wrap vertical table in a function for TabularOutputFormatter .
Divide a number into a list of numbers as even as possible .
Tokenizes * source * and returns the tokens as a list of lists .
Return opened file with a specific encoding .
Calculates the moving average of an array .
Make a list a certain size
Lookup country for IP address .
helper function for quick base conversions from integers to strings
Get the absolute uri for a file
expects a _n . array returns the global minimum of ( value - array ) ^2
Integer to two bytes
Set the pythonic string type .
Wraps os . environ to filter out non - encodable values .
Takes a datetime object and returns a string
Sorting logic for Quantity objects .
Return the unique elements of a collection even if those elements are unhashable and unsortable like dicts and sets
Returns x rounded to n significant figures .
Returns path to packaged static files
Pretty output of nested dictionaries .
Deserialize the object from a JSON string .

Checks if the filename exists under the path .
return grandparent s path string
Return the union of two RangeSets as a new RangeSet .
Download the page into a string
Asks an SQLAlchemy class how its attribute names correspond to database column names .
Convert string from snake case to camel case .
Combine data and a fits header to write a fits file .
Creates a new dict from an existing dict that only has the given keys
Resize all the colummns to its contents .
Convert a ctypes int pointer array to a numpy array .
Initialise sets used for uniqueness checking .
A method used to round a number in the way that UsefulUtils rounds .
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
Create a spectra . Color object in the CMYK color space .
Check the text .
Get input from the user given an input function and an input string
Return opened file with a specific encoding .
Invert mapping of dictionary ( i . e . map values to list of keys )
Parse the input JSON data string into a python data structure . Args : data : An input data string lexer : An optional ply . lex instance that overrides the default lexer . Returns : A python dict or list representing the input JSON data .
Constructs a numpy - compatible polygon from a page representation .
Upermutate 1 - D data that is sorted by indices_of_increasing .
Run Python test cases against Java runtime classes .
Return true if a value is a finite number .
Replace accentuated chars in string by their non accentuated equivalent .
Return the number of characters in two strings that don t exactly match
Set python logging library config .
Like xdo_get_focused_window but return the first ancestor - or - self window * having a property of WM_CLASS . This allows you to get the real or top - level - ish window having focus rather than something you may not expect to be the window having focused .
Return the unique elements of a collection even if those elements are unhashable and unsortable like dicts and sets
Wraps the given dictionary such that the given fallback function will be called when a nonexistent key is accessed .
Intersect dictionaries d1 and d2 by key * and * value .
writes a string to file
Fetch the value of a binary key .
A background thread to kill the process if it takes too long .
Takes a decimal price and rounds to a number of decimal places
Add suffix to a full file name
Remove all unwanted characters from text .
Serializes a numpy array to a compressed base64 string
Load a javascript file and minify .
To know the allocated memory at function termination .
Returns the name of the newest file given an iterable of file names .
Returns system clipboard contents .
Check whether flyweight object with specified key has already been created .
Returns the default bucket from a list of buckets i . e . the largest bucket .
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
remove the last . in the string it it ends with a . for the url structure must follow the flask routing format it should be / model / method instead of / model / method /
Add a read_range primitive
Correct text in one language that is incorrectly - typed with a keyboard layout in another language . ( type Thai with English keyboard )
Replace one entire document matching the selector criteria .
Strip agents from a string .
convert notebook to python script
Returns names of object columns in the DataFrame .
Wrapper for session . request Handle connection reset error even from pyopenssl
Pre - order depth - first
helper to clean up an input string
Reimplement Qt method to send focus change notification
Convert bytes and non - string into Python 3 str
Empty the range from start to stop .
Converts and image to matrix ( one pixel per line )
Detokenize a string by removing spaces before punctuation .
round to closest resolution
manipulate json data on the fly
Check configuration file type is JSON Return a boolean indicating wheather the file is JSON format or not
Saves a pdf of the current matplotlib figure .
Chain & sort ranges .
Concatenate a sequence of arrays .
Create a folder recursive .
Takes a nested list and returns the size of each dimension followed by the element type in the list
Get the forecasted float from json section .
itertools . starmap for deferred callables using cooperative multitasking
Convenience function for loading yaml - encoded data from disk .
Calls a function . If an error of the given exception type with interrupted system call ( EINTR ) occurs calls the function again .
cv2 Image of current window screen
Compute boxplot for given pandas Series .
Converts a list of lists into a flat list . Args : x : list of lists
Remove the last NoteContainer in the Bar .
Changes the base color of a widget ( background ) . : param widget : widget to modify : param color : the color to apply
Return a list of unique items ( similar to set functionality ) .
Makes the given dictionary symmetric . Values are assumed to be unique .
Releases this resource back to the pool it came from .
Any normal python logic which runs a loop . Can take arguments .

Get a random ( i . e . unique ) string identifier
Print security object information for a pdf document
Return a list where the duplicates have been removed .
Make a list a certain size
Return a tuple of ( start end ) indices of an item from its index .
Discover the current time zone and it s standard string representation ( for source { d } ) .
Determine the number of leaves in a tree
Return the shape of img .
Applies maspy . xml . clearTag () to the tag attribute of the element and recursively to all child elements .
returns the shape after scaling ( should be the same as ndimage . zoom
Yields all permutations with replacement : list ( product ( cat repeat = 2 )) = > [ ( c c ) ( c a ) ( c t ) ( a c ) ( a a ) ( a t ) ( t c ) ( t a ) ( t t ) ]
checks to see if list is equal everywhere
Check if two pathes represent the same file .
Returns the last dimension s index or default_dim if x has no shape .

OFFSET
Union any overlapping intervals in the given set .
Determine the path to the virtualenv python
Split s by sep unless it s inside a quote .
Checks if USB is on and device is ready by verifying adb devices .
delete all the eggs in the directory specified
Directly send utf8 bytes to stdout
Does openat read - only then does fdopen to get a file object
Check if a file exists and is non - empty .
Returns background color rgb tuple of right line
Fetch & return a new Domain object representing the domain s current state
Centre and normalize a given array .
validate that we can store the multi - index ; reset and return the new object
Is the SQLAlchemy column type a string type?
Check the syntax of the given URL .
Generates RGB values from HSV values in line with a typical light spectrum .
Uses numpy . load to open the underlying file
Callable function for the multiprocessing pool .
Round a number to a precision
Tags the current version .
Identify clusters using K - Means algorithm .
Gets RAM memory usage
Stops all containers used by this instance of the backend .
Convert a CSV object to a numpy array .
Print a message indicating failure in red color to STDERR .
Given a sequence convert it to a comma separated string . If however the argument is a single object return its string representation .
Re - index every document in a named index .
A function that works for both Python 2 . x and Python 3 . x . It asks the user for input and returns it as a string .
Override Qt method
Sum reduction op .
Converts a list of lists into a flat list . Args : x : list of lists
Parse an int robustly ignoring commas and other cruft .
Returns the last number_of_bytes of filename
If item is not in lst add item to list at its sorted position
Convenience method for just changing font size .

Encodes numpy images into gif string .
Return True if the class is a date type .
Finds the closest object of a given type .
Converts query strings into native Python objects
Test if value is an instance of int .
Convenience method that works with all 2 . x versions of Python to determine whether or not something is stringlike .
Converts a dict to a querystring suitable to be appended to a URL .
Linear oldstyle interpolation of the transform matrix .
Return a new copied dictionary without the keys with None values from the given Mapping object .
Return dict mapping item - > indices .
Like map but also chains the results .
Pure - Python implementation of itertools . combinations ( l 2 ) .
Get all the database column names for the specified table .
takes a list of lists l and returns a flat list
Resizes an image preserving the aspect ratio .
Resizes an image preserving the aspect ratio .
Return unit sphere coordinates from window coordinates .
Create 2D rotation matrix
Adds self as child of parent then adds parent .
r Replace all ( frm to ) tuples in args in string s .
Replace masked - out elements in an array using an iterative image inpainting algorithm .
Increment some indices in a 1D vector of non - negative integers . Repeated indices are taken into account .
Get a ctypes void pointer to the memory mapped region .
HTTP PUT operation to API endpoint .
Check if the file - like object is readable .
Internal helper to return the values of a dictionary sorted by key .
Return a string with punctuation removed .
Return a stream handler if it exists .
Calculates the mean and the standard deviation of the given samples .
Check if a user exists
Under UNIX : is a keystroke available?
Given a string return true if it matches the supplied list of patterns .
Resizes an image preserving the aspect ratio .
Indicate whether the specified image file is valid or not .
Like map but also chains the results .
From a given natural integer returns the prime factors and their multiplicity : param n : Natural integer : return :
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
Runs the function associated with the given MenuEntry .
Print emphasized neutral the given txt message
Join the list of images into the out file
Returns all column names and their data types as a list .
iterator for JSON - per - line in a file pattern
Wrap text in an ansi escape sequence
Convert a list of strings to a list of integers .
Aggregation function to get the first non - zero value .
Writes text to a file .
Convert an integer list into a string list .
Purely a debugging aid : Ascii - art picture of a tree descended from node
Serializes the JSON for the Polling Event Model .
Return file contents as string .
Asserts if a given values implements a valid iterable interface .
Add a blank row with only an index value to self . df . This is done inplace .
: param min_value : minimum value for update ( .. ) : param format : format specifier for the output : param width : width of the progress bar s ( excluding extra text ) : param barchar : character used to print the bar : param output : where to write the output to
View the quaternion array as an array of floats
Returns all column names and their data types as a list .
Removes dict keys which have have self as value .
get the number of quartets as n - choose - k . This is used in equal splits to decide whether a split should be exhaustively sampled or randomly sampled . Edges near tips can be exhaustive while highly nested edges probably have too many quartets
Simple function to divide two numbers
Context manager to temporarily disable certificate validation in the standard SSL library .
Return a context manager that hides the cursor while inside it and makes it visible on leaving .
Convert an unsigned integer to a numpy binary array with the first element the MSB and the last element the LSB .
Parse datetime .
Return only the part of the row which should be printed .
Redirect the stdout
Return random disposition point .
Add suffix to a full file name
Serve the datasets in a directory over HTTP .
Print the values of all this object s Parameters .
The Euclidean distance between two vectors .
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
Move the cursor up a number of lines .
Like dict but does not hold any null values .
Pop - up menu and wx . EVT_CLOSE closing event
Check whether flyweight object with specified key has already been created .
Read text from stdin and print a helpful message for ttys .
Automatically resizes widget to display at most max_height_items items
A static value ( does not change at runtime ) which is known at compile time
Resizes an image preserving the aspect ratio .
Transforms the regular socket . socket to an ssl . SSLSocket for secure connections . Any arguments are passed to ssl . wrap_socket : http : // docs . python . org / dev / library / ssl . html#ssl . wrap_socket
Replace accentuated chars in string by their non accentuated equivalent .

Compute the gradient of the current model using the training set
Original doc : A file to get the name of a file to save . Returns the name of a file or None if user chose to cancel .
Determine if URL is safe to redirect to .
Split a number from its unit 1px - > ( q px ) Args : value ( str ) : input returns : tuple
Converts list to string with comma separated values . For string is no - op .
Get the list of distinct values with preserving order .
Construction from a string raise a TypeError if not possible
Returns int () of val if val is not convertable to int use default instead
append item and print it to stdout
disassemble Python byte - code file ( . pyc )
takes a list of lists l and returns a flat list
Check if something quacks like a list .
Read and return a view of size bytes from memory starting at start_position .
Return a name which includes the module name and function name .
Format numpy array as a string .
Scrolls up to element
composion of preprocessing functions
Read a string from a file - like object .
Perform actions before parent main window is closed
write a cache object to the fileobj as a lal cache file
Return the number of bytes stored in the value of key within hash name
Sort data rows and order columns
: param l : List of strings to join : param arg : A pipe - separated list of final_join ( and ) and initial_join ( ) strings . For example : return : A string that grammatically concatenates the items in the list .
Generate the first value in each row .
Rearrange the heap after the item at position i got updated .
Display kwargs .
To know the allocated memory at function termination .
Return the number of days since January 1 of the given year .
Clear only any cached global data .
Add data to send queue .
Function that gets relative path to the filename
given a DataFrame where records are stored row - wise rearrange it such that records are stored column - wise .
Pretty print an object as YAML .
Make a function that checks whether a scalar or array is of a given kind ( e . g . float int datetime timedelta ) .
Given a list possibly nested to any level return it flattened .
Simple helper hash function
Simple abstraction on top of the : meth : ~elasticsearch . Elasticsearch . scroll api - a simple iterator that yields all hits as returned by underlining scroll requests . By default scan does not return results in any pre - determined order . To have a standard order in the returned documents ( either by score or explicit sort definition ) when scrolling use preserve_order = True . This may be an expensive operation and will negate the performance benefits of using scan . : arg client : instance of : class : ~elasticsearch . Elasticsearch to use : arg query : body for the : meth : ~elasticsearch . Elasticsearch . search api : arg scroll : Specify how long a consistent view of the index should be maintained for scrolled search : arg raise_on_error : raises an exception ( ScanError ) if an error is encountered ( some shards fail to execute ) . By default we raise . : arg preserve_order : don t set the search_type to scan - this will cause the scroll to paginate with preserving the order . Note that this can be an extremely expensive operation and can easily lead to unpredictable results use with caution . : arg size : size ( per shard ) of the batch send at each iteration . Any additional keyword arguments will be passed to the initial : meth : ~elasticsearch . Elasticsearch . search call :: scan ( es query = { query : { match : { title : python }}} index = orders - * doc_type = books )
property () but encapsulates it in a list if it s a single - element property .
The Euclidean distance between two vectors .
Represent string / bytes s as base64 omitting newlines
Remove duplicates from a list while keeping order .
Return a vector with the elements rounded to the given number of digits .
convert naive datetime to timezone - aware datetime
Return all ( and only ) the uppercase chars in the given string .
Reads a python file and returns a awslambda . Code object : param python_file : : return :
Check if value is a valid UUID .
Load JSON file
Delete the key and return true if the key was deleted else false
Remove a file from an AWS S3 bucket .
Discover the current time zone and it s standard string representation ( for source { d } ) .
Pyglet specific mouse motion callback . Forwards and traslates the event to the example
1x1 convolution
Returns True if test is True for all array elements . Otherwise returns False .
Disable event loop integration with wxPython .
docstring for argparse
Establishes access of GettableProperty values
Choose the most common item from the list or the first item if all items are unique .
Checks if a target name matches with an input regular expression .
Normalize the string according to normalization list
Is this attribute present?
Parse file specified by constructor .
assert that the mock was called at least once
Validates the returned positional object
Truncates a value to a number of decimals places
Starts the web server .
Make text tex safe
Returns all files in a given directory
This will equal 124 for the V1 database .
Make a copy of a dictionary with all keys converted to snake case . This is just calls to_snake_case on each of the keys in the dictionary and returns a new dictionary .
set colouring on if STDOUT is a terminal device off otherwise
Helper function returns a truncated repr () of an object .
Return a list of tuples specifying the column name and type
Iterate through the results but if an exception occurs stop processing the results and instead replace the results with the output from the exception handler .
Extract tag s attributes into a dict .
Converts a dict to a querystring suitable to be appended to a URL .
Returns given method name .
Return the index of an element in the list .
Determine whether a system service is available
Set the modified time of a file
Returns whether the specified element selector is present on the page .
Paste before cursor .
Get the contents of an object stored in S3 as string .
Attempt to guess the title from the filename
Return all ( and only ) the lowercase chars in the given string .
Returns this programs current memory usage in bytes
Returns True if the GET querstring contains on values but it can contain empty keys . This is better than doing not bool ( request . GET ) as an empty key will return True
wrapper for : py : func : json . load
Return dict mapping item - > indices .
Yield all items from iterable except the last one .
prints the top n lines of a file
Delete a directory if it s present . If it s not present no - op .
Returns the length in bytes of a given file object . Necessary because os . fstat only works on real files and not file - like objects . This works on more types of streams primarily StringIO .
Return the text for the given root node ( xml . dom . minidom ) .
Initialise sets used for uniqueness checking .
Decode a JSON int64 to bson . int64 . Int64 .
Because standard distinct used on the all fields are very slow and works only with PostgreSQL database this method provides alternative to the standard distinct method . : return : qs with unique objects
A wrapper of os . makedirs () .
Removes the venv by name
Save a Keras model definition to JSON with given path
Cleanup the output directory

Standard first line in a PDF .
Render our pages as a jinja template for fancy templating goodness .
Initializes an stdin input reader .
helper to clean up an input string
Removes stopwords contained in a list of words .
Print each field and its value .
r Checks if l is a 2D numpy array of bools
Remove ticks tick labels and frame from axis
Pyglet specific mouse motion callback . Forwards and traslates the event to the example
Load an object from a module by name
Compute the i - th unfolding of a tensor .
Correct the timezone information on the given datetime
Return the sum of the element - wise product of vectors x and y . >>> dotproduct ( [ 1 2 3 ] [ 1000 100 10 ] ) 1230
Returns a DataTable instance built from either the filename or STDIN if filename is None .
Determines if a system process identifer exists in process table .
Heuristic check if an object is a namedtuple .
Clean up processes after SIGTERM or SIGINT is received .
Returns a bool determining if the process is in a running state or not
An exception is passed in and this function returns the proper string depending on the result so it is readable enough .
Is the SQLAlchemy column type a string type?
Use top_k to sort a Tensor along the last dimension .
Remove duplicated elements in a list . Args : lista : List with elements to clean duplicates .
Convert a structured NumPy array into a Table .
The distance between two skip - connections .
Check if valid input tag or document .
Does this filename match any of the patterns?
return string as a comment
Recursively computes true depth of the subtree . Should only be needed for debugging . Unless something is wrong the depth field should reflect the correct depth of the subtree .
Return the absolute path to the directory containing the package data .
A map to look up the index of a edge
Converts the string representation of a json number into its python object equivalent an int long float or whatever type suits .
Very simple grep that returns the first matching line in a file . String matching only does not do REs as currently implemented .

Convert anything to a bytearray . See - http : // stackoverflow . com / questions / 7585435 / best - way - to - convert - string - to - bytes - in - python - 3 - http : // stackoverflow . com / questions / 10459067 / how - to - convert - my - bytearrayb - x9e - x18k - x9a - to - something - like - this - x9e - x1
The current position of the cursor .
Returns a field descriptor by field name .
Convert a grayscale image to BGR image .
Resizes an image preserving the aspect ratio .
print_tree : prints out structure of tree Args : indent ( int ) : What level of indentation at which to start printing Returns : None
Return a tuple of this array s dimensions . This is done by querying the Dim children . Note that once it has been created it is also possible to examine an Array object s . array attribute directly and doing that is much faster .
Adjust image balance and contrast
Convert CamelCase to lower_and_underscore .
Convert input argument to bytes
Convert this confusion matrix into a 2x2 plain list of values .
Create an array . Keyword arguments as per : func : zarr . creation . empty .
Temporarily hide the terminal cursor .
Continuous constant pulse .
Find rightmost value less than or equal to x .
Given a sequence convert it to a comma separated string . If however the argument is a single object return its string representation .
Split a text into a list of tokens .
returns a random element from seq n times . If n is None it continues indefinitly
Parse datetime .
Convert a pandas . Series into an xarray . DataArray .
List APIs in account .
Does this filename match any of the patterns?
This method asserts that only one value of the provided list is True .
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
Copy a file whole from input to output .
Return whether two objects are equal via recursion using : func : numpy . array_equal for comparing numpy arays .
Confusion matrix plot
Converts binary address to Ipv6 format .
Get the parent directory of a filename .
Return the unique elements of a collection even if those elements are unhashable and unsortable like dicts and sets
Qt slot when the window is closed .
count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )
Pull a querystring value from the request .
Get the contents of an object stored in S3 as bytes
Display both SQLAlchemy and Python help statements
Removes trailing whitespace on each line .
Print out memory usage at this point in time
u Delete the character behind the cursor . A numeric argument means to kill the characters instead of deleting them .
Converts a millisecond accuracy timestamp to a datetime
Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]
A wrapper of os . makedirs () .
Cleanup any active connections and free all DDEML resources .
JSON serializer for objects not serializable by default json code
Reads a tuple of numbers . e . g . vertices normals or teture coords .
Get a property by name
Perform Z - Normalization on each numeric column of the given table .
Makes a HEAD requests to the URI .
Given a string return true if it matches the supplied list of patterns .
Connect to a redis instance .
Takes a datetime object and returns a string
Equivalent Noise Bandwidth in bins ( Processing Gain reciprocal ) .
Returns a list copy in which each item occurs only once ( in - order ) .
Remove html code contained into the given string .
Applies the sofplus activation function element - wise to the input .
Quit and Restart Spyder application . If reset True it allows to reset spyder on restart .
Wrap a function as an attribute .
Segmented max op .
Delete all whitespace from the end of the line .
Load the correct module according to the version
Serialize representation of the column for local caching .
Call win32 API to refresh the whole Window .
Strip the whitespace from all column names in the given DataFrame and return the result .
Recursively loop through a directory to find all python script files . When one is found it is analyzed for import statements : param path : string : return : generator
Get a Dictionary Cursor for executing queries
Cleans up the name according to the rules specified in this exact function . Uses self . naughty a list of naughty characters .
Updates Camera . aspect to match the viewport s aspect ratio .
Instanciate a singleton per scope .
Simple helper hash function
Wrapper to make map () behave the same on Py2 and Py3 .
Stop the progress bar .
Returns a string representation of the traceback .
Converts a list into a space - separated string and puts it in a dictionary
Show the received object as precise as possible .
Loads and returns foreign library .
For a given value the function finds the nearest value in the array and returns its index .
Return an array of K - Means cluster classes for an array of shapely . geometry . Point objects .
Convert numbers to floats whether the decimal point is . or
Prepare a context for the serialization .
Remove text nodes containing only whitespace
convert a ctypes structure to a dictionary
Move the turtle forward .
I strip extra whitespace off multi - line strings if they are ready to be stripped!
Return a dictionary of distances keyed by the keys in the given dict .
Select rows of length n .
A handy wrapper to get a remote file content
Call spell checker with arguments .
Delete task ( in any state ) permanently .
Transforma una string con elementos separados por sep en una lista .
Exit execution with return code and message : param msg : Message displayed prior to exit : param code : code returned upon exiting
Retry the request a few times before we determine it failed .
Segmented min op .
Private method for setting axis limits .
Loads a floating point value from a memory address . If 2nd arg . start with * it is always treated as an indirect value .
Process command line arguments and walk inputs .
Change a date string from the format 2018 - 08 - 15T23 : 55 : 17 into a datetime object
Read the configuration file and return a section .
apply a function to all non - dict values in a dictionary
Conveinience :
Tries to load an encoded json string back into an object : param json_string : : return :
Determine if end - of - file is reached for file fd .
Skip the specified number of elements in the list .
Drops ( deletes ) a column from an existing table .
Create a function to map from rows with the structure of the headers to the structure of the table .
Return receiver s content type .
Store the user session for a client .
Returns a list consisting of the cumulative sum of the items in the passed list .
Helper function to post a tweet
Returns the most common element in iterable .
wraps ( instancemethod ) returns a function not an instancemethod so its repr () is all messed up ; we want the original repr to show up in the logs therefore we do this trick
This function returns a pretty table used to display the port results .
Flush the file and close it .
Process an iterable of dictionaries . For each dictionary d convert ( in place ) d [ key ] to a float . If that fails convert it to None .
Get actual tree selection object and all respective models of selected rows
Normal cumulative density function .
Serialize every item of the list .
Update conda packages in a conda env
Check whether the passed variable is a tuple with two floats or integers
Return a serialised version of the model s fields which exist as local database columns ( i . e . excluding m2m and incoming foreign key relations )
Called when websocket connection is closed
Tokenizes a given text into sentences applying filters and lemmatizing them . Returns a SyntacticUnit list .
Convert CamelCase to snake_case .
Create the toolkit widget for the proxy object .
Remove password from printed connection URLs .
Intersect dictionaries d1 and d2 by key * and * value .
string dict / object / value to JSON
Split a string with comma or space - separated elements into a list .
Does a string replace with a list of search and replacements
Reshuffle the indicies of a bipartite matrix A [ ij kl ] - > A [ lj ki ] .
Extract the 2D region of an array corresponding to the rectangle encompassing all unmasked values .
Returns the first location of the maximum value of x . The position is calculated relatively to the length of x .
This method validate the parsing and schema return a boolean
Formats the given time into HH : MM : SS
Print an error message
Checks if the given type is a builtin one .
Returns a str if a bytes object is given .
Report whether another set contains this RangeSet .
Yield all items from iterable except the last one .
Retrieves a list of member - like objects ( members or properties ) that are publically exposed .
Given a value wrap it in a 0 - D numpy . ndarray .
Helper method that escapes parameters to a SQL query .
Returns this programs current memory usage in bytes
Convert a list of strings to a list of integers .
Returns the greatest common divisor for a sequence of numbers . Uses a numerical tolerance so can be used on floats
Return a list of the table names in the database .
Get tuple ( actually a generator ) of indices where the max value of array x occurs . Requires that x have a max () method as x . max () ( in the case of NumPy ) is much faster than max ( x ) . For a simpler faster argmax when there is only a single maximum entry or when knowing only the first index where the maximum occurs call argmax () on a NumPy array .
Return a modified list containing only the indices indicated .
count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )
Read a block of data and parse using the given protobuf object .
Returns the cached object list under the appropriate key or None if not set .
Change a date string from the format 2018 - 08 - 15T23 : 55 : 17 into a datetime object
: param Path path :
Check if two pathes represent the same file .
Returns a Boto connection to the provided S3 bucket .
Return True if the given object conforms to the Serializable protocol .
Given a list of coords for 3 points Compute the area of this triangle .
Convert a string to a list with sanitization .
Quit signal handler .
Given a numpy dtype determines whether it is a string . Returns True if the dtype is string or unicode .
Deletes key cell
Matrix solve op .
Lock connection from being used else where
Returns True if test is True for all array elements . Otherwise returns False .
MIME type of the asset .
Ends an indentation block leaving an empty line afterwards
Turn dict keys and values into native strings .
Reads the date from a string in the format YYYY / MM / DD and returns : class : datetime . date
Move the cursor to the last item on the page .
Create a slug for each Event already in the DB .
Sends control values directly to the engines overriding control loops .
transpose matrix
Gets the user enter max and min values of where the raster points should appear on the y - axis
Returns whether * obj * is iterable lazily such as generators range objects etc .
Returns True if user answers y
Encodes a given string with the proper standard out encoding If sys . stdout . encoding isn t specified it this defaults to @default
Write the given colored string to standard out .
Generates a count of the number of times each unique item appears in a list
Computes average length of words
Creates a datetime from GnuCash 2 . 6 date string
Convert a ctypes double pointer array to a numpy array .
Log in to the API .
Check whether flyweight object with specified key has already been created .
Check if git command is available .
Validate str as a date and return string version of date
Adds widget attributes to a bound form field .
Convert a ctypes double pointer array to a numpy array .
Calculates the average value of a list of numbers Returns a float
Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .
reads an RDF file into a graph
Is the SQLAlchemy column type an integer type?
convert from arange to linspace
Make a n + 1 dim one - hot array from n dim int - categorical array .
Remove duplicates from an iterable preserving the order .
Earth orientation as a rotating matrix
iterator version of get_list_column
Return dict mapping item - > indices .
Show the x - axis tick labels for a subplot .
Get line count of file
This turns off stdout buffering so that outputs are immediately materialized and log messages show up before the program exits
Returns the index of the earliest occurence of an item from a list in a string
Disconnect from target .
Remove non - alphanumerical characters from metric word . And trim excessive underscores .
Deletes all the unnamed columns
Se asegura de que un directorio exista .
Serialize obj as a JSON formatted stream to fp
Reset all parameters to their default values .
Get width and height of a PDF
Return an inverted dictionary where former values are keys and former keys are values .
If pair is in search_list return the index . Otherwise return - 1
stupid windows . converts the backslash to forwardslash for consistency
Return a new datetime . datetime object with values that represent a start of a month . : param val : Date to ... : type val : datetime . datetime | datetime . date : rtype : datetime . datetime
Generates a count of the number of times each unique item appears in a list
Return the SHA1 hash of the given a file - like object as file . This will seek the file back to 0 when it s finished .
Checks if an item is iterable ( list tuple generator ) but not string
Apply 2to3 tool ( Python2 to Python3 conversion tool ) to Python sources .
Returns a character delimited version of the provided list as a Python string
Formats the given time into HH : MM : SS
Return the receiver s contribution to tree diagram .
Convert a ctypes float pointer array to a numpy array .
Move datetime 1 year in the chosen direction . unit is a no - op to keep the API the same as the day case
Returns a list produced by applying : func : multiple_replace to every string in stringlist .
Checks if the given type is a builtin one .
Determines if a matrix is approximately orthogonal .
Expand $vars in a string .
Round a time DOWN to half nearest half - hour .
Checks object if it s a peewee model and unique .
Decode base64 string to byte array .
Set focus to next item in sequence
Check if the folder exisits . If not create the folder

Increment ( or add ) numeric suffix to identifier .
Return locale from GET lang param or automatically .
Apply last 2D transforms
Check element for required attributes . Raise NotValidXmlException on error .
Compare two strings if all contiguous whitespace is coalesced .
Trace every executed line .
Checks if the response has been rate limited by CARTO APIs
Set the serial port e . g . : / dev / tty . usbserial - A4001ib8
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Locate the command s man page .
Ajout d un message de log de type DEBUG
A background thread to kill the process if it takes too long .
Output all sections of the page .
Determine if a Path or string is a file on the file system .
Return True if val is either a subclass or instance of class_ .
read a simple text file from a private location to get username and password
Handle many to many relationships
Get the output shape from an array .
Key function used to sort transcripts . Taking the negative of protein sequence length and nucleotide sequence length so that the transcripts with longest sequences come first in the list . This couldn t be accomplished with reverse = True since we re also sorting by transcript name ( which places TP53 - 001 before TP53 - 002 ) .
Return ( first column model index last column model index ) tuple for a configTreeItem
Flatten a nested list by yielding its scalar items .
Yield code with useless pass lines removed .
Populates an object s attributes using the provided dict
For a range indicated from start to end replace with replacement .
Get adjacency matrix .
StringIO constructor shim for the async wrapper .
Return the md5 hash of the given file - object
Remove the querystring from the end of a URL .
convert record array to a dictionaries
Load JSON file
Implementaton of : func : scipy . linalg . cho_factor using a function supported in cupy .
Returns the variable set with the given name .
Generator for reading from standard input in nonblocking mode .
: rtype : bool
r Like rotate but modifies l in - place .
Converts a 1D list to a single long string for file output using the string . join function .
Is an object iterable like a list ( and not a string ) ?
Get the embeddings for a given JPEG image .
Determine whether stdin has any data to read .
Like argsort but returns an index suitable for sorting the the original array even if that array is multidimensional
Returns a symbolic fourier series of order n .
test if object is a list or tuple
Return an ISO - 8601 formatted string from the provided datetime object
Ensures that the external tool is available . Asserts upon failure .
Chunk one big list into few small lists .
Get the local variables in the caller s frame .
Let user select a directory .
Wrapper for pymongo . Collection . ensure_index
Log memory usage before and after a method .
Merge two dicts and return a new dict . Much like subclassing works .
Read tag data from file and return as numpy array .
Reads text file contents
Checks if key exists in datastore . True if yes False if no .
Sends multiple non - blocking requests . Returns a list of responses .
Run the * cmd * and exit with the proper exit code .
returns the name of an EVREvent enum value
Given a numpy dtype determines whether it is a string . Returns True if the dtype is string or unicode .
Retrieves the Python library directory path .
r Checks if l is a 2D numpy array of bools
Helps remove extraneous whitespace from the lines of a file
Ensure the cursor is within horizontal screen bounds .
Get letters from string only .
Whether this path is a symbolic link .
Read tag data from file and return as numpy array .
Display both SQLAlchemy and Python help statements
Returns the string name of an enum value .
Given a name in camelCase return in snake_case
Merge two dicts and return a new dict . Much like subclassing works .
: return : int
Imports from javascript source file . globals is your globals ()
Compute boxplot for given pandas Series .
Return a prettier version of obj
Converts protobuf message to a JSON dictionary .
Covert numpy array to tensorflow tensor
Returns the index of a geometry in a list of geometries avoiding expensive equality checks of in operator .
Write to given samples to a wav file . The samples are expected to be floating point numbers in the range of - 1 . 0 to 1 . 0 .
Show help on all commands .
Reads an array from bytestring with big - endian data .
Yield compressed chunks from a data array
Returns true if all of the elements in the list are equal .
Harmonic mean of an array returns the closest int
Returns True if the file is binary
Display Bloch sphere and corresponding data sets .
Information about Cauldron and its Python interpreter .
Reverse sorts a #dict by a given key optionally returning it as a #tuple . By default the @dict is sorted by it s value .
Extract table names from an SQL query .
Print a formatted indented text .
Visualize the persistence image
: param unicode fpath : : param unicode encoding : : rtype : dict | list
Load proxy list from configured proxy source
Simple helper hash function
Add a matplotlib colormap .
Returns whether the given platform is a Unix - like platform with the usual Unix filesystem . When the parameter is omitted it defaults to sys . platform
Fill file at
Read a WAV file and returns the data and sample rate
Joins two dictionaries .
Convert a zeep object to a dictionary .
Return the opposite of input condition .
Value of property .
Convert a UUID object to a 22 - char BUID string
Remove the element from a set lists or dict . >>> L = [ Lucy ] ; S = set ( [ Sky ] ) ; D = { Diamonds : True } ; >>> remove_once ( L Lucy ) ; remove_once ( S Sky ) ; remove_once ( D Diamonds ) ; >>> print L S D [] set ( [] ) {}
Retrun True if x is a valid YYYYMMDD date ; otherwise return False .
Return a list of unique items ( similar to set functionality ) .
Converts query strings into native Python objects
quit crash
Turn a query into a string for printing . Useful for debugging .
remove arduino / examples / all directory .
Converts a millisecond accuracy timestamp to a datetime
Remove resource instance from internal cache
Quit and Restart Spyder application . If reset True it allows to reset spyder on restart .
Verifies that a string path actually exists and is a file
Places a legend box outside a matplotlib Axes instance .
Strip out namespace data from an ElementTree .
generator of list folder in the path . folders only
initializes 3D plot
iterator for JSON - per - line in a file pattern
Split a text into a list of tokens .
Retrieve core and memory information for the current machine .
Whether the item is a placeholder or contains a placeholder .
Adds execute permission to file . : param filename : : return :
Return a dict from entries in a scala . collection . immutable . Map
Copy a file whole from input to output .
read an image from file - PIL doesnt close nicely
Selectively log an accepted request .
Retrieve legend title header string from definitions .
Optional
Simple measure of similarity : Number of letters in common / max length
Coerce value to an JSON - compatible representation .
Replace masked - out elements in an array using an iterative image inpainting algorithm .
Connects to an Access database via ODBC with the DSN prespecified .
Callback to redraw the plot to reflect the new parameter values .
Returns all rows from a cursor as a dict ( rather than a headerless table )
Fill all null values with NaN values in a column . Null values are None or en empty string
Return ( first channel data sample frequency sample width ) from a . wav file .
Is this a string .
Insert many items at once into a temporary table .
Select a subset of features from the example dict .
Remove any duplicate item preserving order
gets a horiztonal line
Take a str and transform it into a byte array .
Extract all union queries from table .
Returns the latest modification time of all files / subdirectories in a directory
Populates the ListView with a string list .
First order phase correction .
Get the current desktop . Uses _NET_CURRENT_DESKTOP of the EWMH spec .
convert a code sequence to HTML
This is the same functionality as int . from_bytes in python 3
Check that value is in values
Displayhook function for PIL Images rendered as PNG .
Checks for local config overrides for pylint and add them in the correct pylint options format .
Choose k random elements of array .
Get the local ip of this device
Performs drag a element to another elmenet .
http : // www . swharden . com / blog / 2009 - 01 - 21 - signal - filtering - with - python / #comment - 16801
Get a list of the top topn features in this : class : . Feature \ .
Toggle pause mode
function : to be called with each stream element as its only argument
Reverse the normalization done to a batch of images .
Returns sequence of integer ids given a sequence of string ids .
r A function to support exiting from exit hooks .
This is used to ensure that the return value of arr . tostring () is actually a string . This will prevent lots of if - checks in calling code . As of numpy v1 . 6 . 1 ( in Python 3 . 2 . 3 ) the tostring () function still returns type bytes not str as it advertises .
Get mnist dataset with features and label as ndarray . Data would be downloaded automatically if it doesn t present at the specific location .
Provide a password prompt .
Wrap itertools . groupby to make life easier .
Tiny hparams suitable for CIFAR / etc .
Return the largest real value h such that all elements in x are integer multiples of h .
r Repeat each item in iterable n times .
similar to blockshaped but splits an array into n0 * n1 blocks
docstring for argparse
The function compares strings ignoring case
Report whether this RangeSet contains another set .
Join helper
Load and pre - process the images specified with absolute paths .
Strips a figure into multiple figures with a trace on each of them
Pad a matrix with zeros on all sides .
Utility method to run commands synchronously for testing .
matching of datetimes in time columns for data filtering
Check if an http server runs on a given port .
Return list of Logger classes .
Return manhattan distance between two lists of numbers .
Whether the item is a placeholder or contains a placeholder .
Format numpy array as a string .
Helper function to read JSON file as OrderedDict
Write the given colored string to standard out .
Convert an int of form yyyymmdd to a python date object .
Returns a random color between min and max .
Shortcut to create md5 hash : param s : : return :
Check if file is a regular file and is readable .
Converts a millisecond accuracy timestamp to a datetime
Empty the range from start to stop .
Takes a list of rows and a column name and returns a list containing a single row ( dict from columns to cells ) that has the maximum numerical value in the given column . We return a list instead of a single dict to be consistent with the return type of select and all_rows .
Split a comma separated option into a list .
Argument class constructor should be used inside a class that inherits the BaseAction class .
Remove . postXXXX postfix from version
Drops the trailinz zeros from decimal value . Returns a string
Returns the most common element in iterable .
The number of days in the month of the given date
Return file name ( s ) from Tkinter s file open dialog .
Centre and normalize a given array .
Fill missing values in pandas objects and numpy arrays .
Read and return the data from a corpus json file .
Directory where to store output
Create ctypes pointer to object .
rescales a numpy array so that min is 0 and max is 255
Args : x : iterable of strings
Compute average gradient norm of an image
returns a a random string that represent a binary representation
Filter a set of entities based on method return . Use keyword arguments . Example : filtmeth ( entities id = 123 ) filtmeth ( entities name = bart )
Return true if a value is an integer number .
Error handler
Check if string could be a valid python identifier
Convert version like string to a tuple of integers .
Convert a python string to C string .
Adds execute permission to file . : param filename : : return :
Compute Pearson correlation coefficient .
Utility function which converts lists to tuples .
Strips spaces : param x : : return :
Given a set of kwargs turns them into a string which can then be passed to a command . : param kwargs : kwargs from a function call . : return : outstr : A string which is if no kwargs were given and the kwargs in string format otherwise .
Returns whether a path names an existing directory we can list and read files from .
Send signal to process .
Start a Pdb instance at the calling frame with stdout routed to sys . __stdout__ .
Search tuple array by index and value : param t : tuple array : param i : index of the value in each tuple : param v : value : return : the first tuple in the array with the specific index / value
Calculate the MD5 hash for a file .
Return the type for the requested function
Handles the specified flask request for one of the POST URLS Invokes the specified endpoint to generate a response .
Adds params to url
zoom out full data range
Check if n is a prime number
Move datetime 1 year in the chosen direction . unit is a no - op to keep the API the same as the day case
Return frequencies for DFT
Strip out namespace data from an ElementTree .
Creates converts to a masked array
remove arduino / examples / all directory .
Removes comments ( # ... ) from python code .
Natural log of scipy norm function truncated at zero
Convert a string of a calculation energy e . g . - 1 . 2345 eV to a float .
Remove all elements of another set from this RangeSet .
Takes in an object and a variable length amount of named attributes and checks to see if the object has each property . If any of the attributes are missing this returns false .
Path to tensorflow_datasets directory .
Promise an object of class cls with content members .
Handle the mouse move event for a drag operation .
Helper method to check if a set of types is the { AnyObject } singleton
r Like rotate but modifies l in - place .
Determine whether stdin has any data to read .
Returns whether this is a ( non - quantized ) integer type .
Wrap text to terminal width with default indentation
Calls the shots based on signals
Last modified timestamp as a UTC datetime
Delete an object from the redis table
Rewrite a file adding a line to its beginning .
Increments the main progress bar by amount .
print the message to the predefined log file without newline
React to a docstring event and append contracts to it .
Bernstein polynomial .
Set limits for the x - axis .
Validates that the object itself is some kinda string
Create a SHA256 hash from a Numpy array .
Let the DBMS perform a sum on a queryset
Returns the thumbnail dimensions depending on the images format .
Extracts all integers from a string an return them in a list
Return the screen resolution of the primary screen .
Validates that the object itself is some kinda string
Return the value for key of membersuite_object_data .
return True if callback is a vanilla plain jane function
Monkey - patch urllib3 with SecureTransport - backed SSL - support .
Similar to : attr : . Guild . me except it may return the : class : . ClientUser in private message contexts .
Join the list of images into the out file
Coroutine called by MapAsync . It s wrapping the call of run_in_executor to run the synchronous function as thread
Convert an OrderedDict containing C values to a 1D array .
Remove the element from a set lists or dict . >>> L = [ Lucy ] ; S = set ( [ Sky ] ) ; D = { Diamonds : True } ; >>> remove_once ( L Lucy ) ; remove_once ( S Sky ) ; remove_once ( D Diamonds ) ; >>> print L S D [] set ( [] ) {}
Custom type for managing dates in the command - line .
Forcibly terminates all Celery processes .
Return the slice after at sub in string astr
Convert a one element byte string to signed int for python 2 support .
Execute init tasks for all components ( virtualenv pip ) .
guess_file_class : determines what file the content is Args : filepath ( str ) : filepath of file to check Returns : string indicating file s class
Create database tables from sqlalchemy models
Return a copy of this list with each element copied to new memory
Generates RGB values from HSV values in line with a typical light spectrum .
Get terminal width
Returns the element with the highest probability .
Turns a werkzeug . MultiDict or django . MultiValueDict into a dict with list values : param d : a MultiDict or MultiValueDict instance : return : a dict instance
Return lines of a file with whitespace removed
Check if filename has changed since the last check . If this is the first check assume the file is changed .
Indent given text using custom spacing default is set to 4 .
prints the top n lines of a file
Pass in a dictionary that has unsafe characters as the keys and the percent encoded value as the value .
The title of this window
Creates a new dict from an existing dict that only has the given keys
Read helper method
: returns the minimum of the column
Matrix inversion op .
Return the index of the closest in xarr to value val
generate random string with specified length
Removes all blank lines in @string
A non - optimal implementation of a regex filter
Connect to a redis instance .
Return if the token is in the list or not .
Deinitialises the PulseIn and releases any hardware and software resources for reuse .
Creates sql datetime2 object from Python datetime object ignoring timezone
Get the date that a file was created .
Wrapper to uncheck a checkbox
Split input / output value into two values .
Register callbacks for button press events and selection changed
Applies the sofplus activation function element - wise to the input .
Strip the whitespace from all column names in the given DataFrame and return the result .
Parse a line of text into an MLlib LabeledPoint object .
Returns number of days in the given month . 1 - based numbers as arguments . i . e . November = 11
Return True if the dataset name is valid .
Returns the 1 - based index of the last object on this page relative to total objects found ( hits ) .
Get an item from a dict which contains just one item .
Skip the specified number of elements in the list .
Return opened file with a specific encoding .
Returns the topmost parent of the current category .
helper function used for joins builds left and right join list for join function
Make a copy of a dictionary with all keys converted to snake case . This is just calls to_snake_case on each of the keys in the dictionary and returns a new dictionary .
Release lock on compilation directory .
Like many_until but must consume at least one of these .
helper function to make a dict from a coordinate for logging
Assumes myList is sorted . Returns closest value to myNumber . If two numbers are equally close return the smallest number .
Checks if the filename exists under the path .
Creates an AWS Chalice project for deployment to AWS Lambda .
Get width and height of a PDF
Takes a decimal price and rounds to a number of decimal places
Redirect standard out to file .
Stop stream .
Sort list elements by name .
Get unit vector for a given one .
Accepts a binary string and returns the detected filetype . Return value is the mimetype if mime = True otherwise a human readable name .
Loads a model from specified file
Get width and height of a PDF
filter to keep bolts
apply a function to all non - dict values in a dictionary
Return the features dimension raise if error
Formats the given number in decimal format using a period and commas
Stream stdout and stderr from the task container to this process s stdout and stderr respectively .
Truncates a value to a number of decimals places
Get the length longest line in a paragraph
Download file from http url link
Gets RAM memory usage
Renders a template from the given template source string with the given context .
Check if n is a prime number
Will test whether the ACS service is up and alive .
Remove duplicates from a list preserving the order .
Fast %Y - %m - %d parsing .
Print escape codes to set the terminal color .
Deletes all files whose filename matches the glob pattern ( via : func : glob . glob ) .
rounds float to closest int : rtype : int : param n : float
Retrieve core and memory information for the current machine .
Determine ES type names from request data .
The title of this window
determines whether the card number is valid .
Replace all the ocurrences ( in a file ) of a string with another value .
Set limits for the point meta ( colormap ) .
Mark a given source line as executed count times .
Check if a password is valid
Set yaxis limits .
Returns data as : class : numpy . recarray .
Update dict with fields from obj . attributes .
Ajout d un message de log de type INFO
Construction from a string raise a TypeError if not possible
Run a function in Matlab and return the result .
Returns a random color between min and max .
Match and yield all the tokens of the input string .
Handles the specified flask request for one of the POST URLS Invokes the specified endpoint to generate a response .
Return a random string of ASCII letters and digits .
Make a C array using the given string .
Delete credentials from the SQLAlchemy datastore .
Close child subprocess
Small transformer model with small batch size for fast step times .
The full remote import path as used in import statements in . go source files .
>>> _isbool ( True ) True >>> _isbool ( False ) True >>> _isbool ( 1 ) False
Return view of the recarray with all int32 cast to int64 .
Return view of the recarray with all int32 cast to int64 .
Decision Tree
gets a horiztonal line
Given a datetime . timedelta object return the delta in milliseconds
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
Get the output shape from an array .
Will copy the selected ( upper or lower ) triangle of a square matrix to the opposite side so that the matrix is symmetrical . Alters in place .
New event for light .
return geohash for given point with self . precision : param point : GeoPoint instance : return : string
Whether this path is a symbolic link .
Get an SArray that contains the last n elements in the SArray .
Calculates shannon entropy in bits .
Hides the main window of the terminal and sets the visible flag to False .
Helper function to get the location of a Python file .
Get from a list with an optional default value .
Find the percentile of a sorted list of values .
Return a tuple from parsing a b c d - > ( a b c d )
Yields all permutations with replacement : list ( product ( cat repeat = 2 )) = > [ ( c c ) ( c a ) ( c t ) ( a c ) ( a a ) ( a t ) ( t c ) ( t a ) ( t t ) ]
Helper to get bins for histplot .
This removes newlines and multiple spaces from a string .
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
Pretty print format some XML so it s readable .
Finds index of nearest value in array . Args : array : numpy array value : Returns : int http : // stackoverflow . com / questions / 2566412 / find - nearest - value - in - numpy - array
Perform actions before parent main window is closed
Horizontally flip the given PIL Image .
Convert an ARF timestamp to a datetime . datetime object ( naive local time )
Split a text into a list of tokens .
Creates a percentage string representation from the given number . The number is multiplied by 100 before adding a % character .
Delete index entirely ( removes all documents and mapping ) .
Generate a unique ( within the graph ) identifer internal to graph generation .
Public function that reads a local file and generates a SHA256 hash digest for it
Calculates the Jaccard similarity between two sets of nodes . Called by mroc .
Merge modified objects into parent transaction .
Validates that the object itself is some kinda string
Imputes data set containing Nan values
Returns the variable set with the given name .
Get the last object in file .
Tries to load an encoded json string back into an object : param json_string : : return :
Returns True if the exception is always safe to retry .
mono - exponential curve .
Efficient cartesian product of a list of 1D arrays returning the expanded array views for each dimensions . By default arrays are flattened which may be controlled with the flat flag . The array views can be turned into regular arrays with the copy flag .
: type root : TreeNode : rtype : int
Computes the log of the binomial coefficient .
Draw header with underline
Get the parent directory of a filename .
Register a callback to be invoked when a new device appears .
Fill an array from a list
Get elements in this document which matches condition .
List the usb id of all android devices connected to the computer that are detected by adb .
Merges two with identical columns .
Get a ctypes void pointer to the memory mapped region .
Get the the number of columns required to display a string
Convenience function to replace all occurrences of a with b under the given field . See also : func : convert .
Shorcut for self . run .
Respond to the client with a 301 message and redirect them with a Location header .
Pretty Prints seconds as Hours : Minutes : Seconds . MilliSeconds
Set the size of the label .
filter for dict note f should have signature : f :: key - > value - > bool
Close all files but the current one
r This function chooses whether to use ascii characters to represent a symbolic expression in the notebook or to use sympy s pprint .
Convert documentation to HTML
Drops the trailinz zeros from decimal value . Returns a string
unicode to bytes
Coerce value to an JSON - compatible representation .
Sum the total number of cycles over a list of tokens .
This is the same functionality as int . from_bytes in python 3
Joins a voice channel
Serializes a numpy array to a compressed base64 string
Returns a list of literal values .
Serialize obj as a JSON formatted stream to fp
parse_query_string : very simplistic . won t do the right thing with list values
Remove non - alphanumerical characters from metric word . And trim excessive underscores .
Returns the length of the list .
Applies the sofplus activation function element - wise to the input .
Check to see if we are colliding with the player .
Return a Python date that corresponds to the specified string representation .
Checks if the given thing represents a date
Saves dictionary as CSV file .
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
prints the top n lines of a file
Wait until thread exit
in comparison to argrelmax () more simple and reliable peak finder
Ensures that the argument is a list that either is empty or contains only strings : param arr : list : return :
Submit the form having given id .
Converts a Python 2 function as lambda ( x y ) : x + y In the Python 3 format : lambda x y : x + y
Returns the first day of the given month .
Given a list ( l ) will removing duplicates from the list preserving the original order of the list . Assumes that the list entrie are hashable .
Removes all blank lines in @string
Wrap vertical table in a function for TabularOutputFormatter .
Gets the returned Celery result from the Airflow task ID provided to the sensor and returns True if the celery result has been finished execution .
Refresh the screen . You don t need to override this except to update only small portins of the screen .
Implements the === operator .
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Initialize the state of the object
parse the domain from the url
Restores CMD and ENTRYPOINT values of the image
Checks if value is an integer long integer or float .
Retrun True if x is a valid YYYYMMDD date ; otherwise return False .
Get random binary tree node .
Calculates the request payload size
Transform relative pathnames into absolute pathnames .
Get distance matrix given a matrix . Used in testing .
This function uses a PIL routine to get the bounding box of the rendered image .
r Return the area of a triangle .
Removes // - comments and single - line C - style / * * / comments .
execute jobs in processes using N threads
Strips spaces : param x : : return :
Wrapper to make map () behave the same on Py2 and Py3 .
Compute Pearson correlation coefficient .
Writes log out at any arbitray level .
Get a ctypes void pointer to the memory mapped region .
remove arduino / examples / all directory .
Return a string with terminal colors .
Wrap a string at a line length
Invert mapping of dictionary ( i . e . map values to list of keys )
dict . update but which merges child dicts ( dict2 takes precedence where there s conflict ) .
Print the values of all this object s Parameters .
Simultaneously replace multiple strigns in a string
Parses format string looking for substitutions
Return a list of the ( name value ) pairs of the enum .
Normalize the data to be in the [ 0 1 ] range .
This method removes columns in data
Deprecated see make_2D_samples_gauss
Specify that this function returns a typed value .
Returns the last location of the minimal value of x . The position is calculated relatively to the length of x .
Decorator which adds correct MIME type for python source to the decorated bottle API function .
Make sympy symbols q0 q1 ... Args : n ( int ) m ( int optional ) : If specified both n and m returns [ qn q ( n + 1 ) ... qm ] Only n is specified returns [ q0 q1 ... qn ] .
Check if the memory is too full for further caching .
Exit this application
Convert a list of strings to a list of integers .
Generate a unique ID that is somewhat guaranteed to be unique among all instances running at the same time .
in string astr replace all occurences of thefind with thereplace
Make bars in horizontal bar chart thinner
Get a property of the device .
Yaml either have automatically converted it to a datetime object or it is a string that will be validated later .
Load JSON file
writes a string to file
Apply transformation and return if an update happened .
Generates a LaTeX table from parameter summaries .
Returns a list of synsets of a word after lemmatization .
Returns True if numbers in the list are consecutive
Checks whether a variable is a numpy integer array .
Concatenate url and argument dictionary regardless of whether url has existing query parameters .
Returns xlwt . pattern for pyspread style
Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .
Gets a global variable given its name .
For Python3 compatibility of generator .
Initial state of the network
Determine whether or not obj is iterable but not a string ( eg a list set tuple etc ) .
An argparse type representing an email address .
Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]
Serializer for consistency
Pretty print a CSV file .
Fetch a subset of randomzied GUIDs from the whitelist
Get user name provide by operating system
Implements the === operator .
manipulate json data on the fly
Show ( print out ) current environment variables .
Get longitudes from cartesian coordinates .
If Python 2 replace non - ascii characters and return encoded string .
Sort the data .
Returns the name of the current git branch
split string * s * into list of strings no longer than * length *
Return the domain : port part of the URL without scheme . Eg : facebook . com 127 . 0 . 0 . 1 : 8080 etc .
Takes in an object and a variable length amount of named attributes and checks to see if the object has each property . If any of the attributes are missing this returns false .
Args : img ( PIL Image ) : Image to be padded .
Print the header for the CSV table .
Use the S3 SWAG backend .
Take a stdout and print it s lines to output if lines are present .
Print warning about interrupt and empty the job queue .
Adds noise to Y
Computes all the integer factors of the number n
Convert an int of form yyyymmdd to a python date object .
Value of property .
The current position of the cursor .
Return a dict with swapped keys and values
r Close last created figure alias to plt . close () .
Get the the number of columns required to display a string
Return the value of each QuerySet but also add the # property to each return item .
Get the month start date a nd end date
Convert a pandas . Series into an xarray . DataArray .
Returns a temporary filename based on filename .
Get the last weekday in a given month . e . g :
convert record array to a dictionaries
a normal old python function to return the Nth fibonacci number .
Scale the image in a channel . Also see : meth : zoom_to .
Return all ( and only ) the lowercase chars in the given string .
Raise this exception with the original traceback
>>> argmax ( [ 4 2 - 5 ] ) 0 >>> argmax ( [ 4 2 - 5 ] key = abs ) 2 >>> argmax ( [ 4 2 - 5 ] key = abs both = True ) ( 2 5 )
how high in sorted list each key is . inverse permutation of sorter such that sorted [ rank ] == keys
Return a copy of this list with each element copied to new memory
Take the union of a list of lists .
Return the line number parsed from the comment or 0 .
Convert CamelCase to camel_case
Check features data are not empty
Read a dictionary of strings from a file
takes a list of lists l and returns a flat list
( str ) - > int All the digits in a given string are concatenated and converted into a single number .
1 - farthest apart ( same number of words all diff ) . 0 - same
Applies the sofplus activation function element - wise to the input .
load an nparray object from a json filename
Read the sphinx environment . pickle file at path pth .
Returns the first line of a file .
Deserializes a JSONified : obj : numpy . ndarray that was created using numpy s : obj : save function .
Open and load JSON from file .
Calculate the Hamming distance between two strings . From Wikipedia article : Iterative with two matrix rows .
Returns True if test is True for all array elements . Otherwise returns False .
Get a random ( i . e . unique ) string identifier
Matrix multiplication using binary
Return a new PSet with elements in iterable added
Closest distance between a line segment and a point
Run verbose PyLint on source . Optionally specify fmt = html for HTML output .
Return the number of dimensions of a tensor
Uses OLS to fit the regression .
last row or column of square A

Crazy set of hyperparameters to test memory optimizations .
Add a matplotlib colormap .
Test whether a path exists and is readable . Returns None for broken symbolic links or a failing stat () and False if the file exists but does not have read permission . True is returned if the file is readable .
The standard deviation of a set of values . Pass in the mean if you already know it .
Get list of all uppercase non - private globals ( doesn t start with _ ) .
Check if the memory is too full for further caching .
Returns system clipboard contents .
Given a list find the last occurance of a sublist within it .
Saves the dictionary in json format : param fname : file to save to
Sets up the python include paths to include src
Report whether another set contains this set .
Rebuilds the pathing based on the parts .
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
Cumulative product of a list .
Shot noise corruption to images .
Returns the maximum length between the example inputs and targets .
return an iterator that returns a chunk of a string every time it is called . notice that even though bufsize_type might be line buffered we re not doing any line buffering here . that s because our StreamBufferer handles all buffering . we just need to return a reasonable - sized chunk .
prints the top n lines of a file
Create a slug for each Work already in the DB .
Raises django . core . exceptions . ValidationError if any validation error exists
Overloads iter ( condition ) and also for bit in condition . The values yielded by the iterator are True ( 1 ) False ( 0 ) or None ( # ) .
Return the top - level element of a document sub - tree containing the YAML serialization of a Python object .
Check if the memory is too full for further caching .
Hide the window .
Click the element
r Like print but a function . I . e . prints out all arguments as print would do . Specify output stream like this ::
Converts query strings into native Python objects
Calculates and returns a month number basing on PESEL standard .
Returns one value if the condition evaluates to TRUE and another value if it evaluates to FALSE
Rounds a float value off to the desired precision
Check if given function has more arguments than given . Call it with context as last argument or without it .
Sets args and kwargs that are passed when creating a subparsers group in an argparse . ArgumentParser i . e . when calling argparser . ArgumentParser . add_subparsers
Convert json string representation into class instance .
Provide the root module of a TF - 2 . 0 API for use within TensorBoard .
Convert to byte string .
Remove the element from a set lists or dict . >>> L = [ Lucy ] ; S = set ( [ Sky ] ) ; D = { Diamonds : True } ; >>> remove_once ( L Lucy ) ; remove_once ( S Sky ) ; remove_once ( D Diamonds ) ; >>> print L S D [] set ( [] ) {}
Reads image specified by path into numpy . ndarray
Utility to generate enum classes used by annotations .
dictionary of conversion
A Bark logging handler logging output to a named file . At intervals specified by the when the file will be rotated under control of backupCount .
Check if the given cached item is invalid .
Get the first sunday of a month .
Forward mouse cursor position events to the example
Matrix multiplication using binary
Function that gets relative path to the filename
Simple helper hash function
Return the integer index of * series * in this sequence .
Return a set of strings .
Clone a directory try by copying it .
Makes the given dictionary symmetric . Values are assumed to be unique .
Return the attribute name identifier
Grabs image data and converts it to a numpy array
Forget all loaded coordinates .
Are two indexes equal? Checks by comparing str () versions of them . ( AM UNSURE IF THIS IS ENOUGH . )
Perform actions before parent main window is closed
Verifies that a string path actually exists and is a file
Add executable permissions to the file
Set value of the checkbox .
Returns a string containing the type and text of the exception .
Return the a new dict with underscores instead of hyphens in keys .
Calculates the distance between two points on earth .
Does this filename match any of the patterns?
Case in - sensitive comparison of two strings . Required arguments : * first - The first string to compare . * second - The second string to compare .
Suppress warning about untrusted SSL certificate .
Converts a list of lists into a flat list . Args : x : list of lists
Use openpyxl to read an Excel file .
Given a sequence convert it to a comma separated string . If however the argument is a single object return its string representation .
Find the RMS of the audio
Create an argument parser
Replace masked - out elements in an array using an iterative image inpainting algorithm .
Check whether a certain column exists
Calcuate mean datetime from datetime list
Add Builders and construction variables for SGI MIPS C ++ to an Environment .
The function compares strings ignoring case
Return a dictionary of key / values from os . environ .
Flip an image horizontally or vertically .
sort a list of files by filename only ignoring the directory names
extract features in a sentence
Run all Tests [ nose ]
reads an RDF file into a graph
Read a list of indexes .
A tensorflow variable tranfomed to be constrained in a L_inf unit ball .
Convert comma - delimited list / string into a list of strings
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
Return the current branch
Try to remove all comments from a file and save it if changes were made .
Helper function to turn a string representation of true into boolean True .
Remove multiple elements from a list and return result . This implementation is faster than the alternative below . Also note the creation of a new list to avoid altering the original . We don t have any current use for the original intact list but may in the future ...
Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]
Like dict but does not hold any null values .
Validates data is a timestamp
Executes a ( shell ) command in the background
Emulate lpop .
Are two indexes equal? Checks by comparing str () versions of them . ( AM UNSURE IF THIS IS ENOUGH . )
Return a list of token strings from the given sentence .
Apply the coefficients from a linear fit to an array of x y positions .
Loads a model from specified file
Start a Pdb instance at the calling frame with stdout routed to sys . __stdout__ .
Is this attribute present?
given a segment ( rectangle ) and an image returns it s corresponding subimage
Construction from a string raise a TypeError if not possible
Updates text font color button
Get width and height of a PDF
Returns a boolean indicating if the attribute name is valid or not
Removes trailing zeroes from indexable collection of numbers
Nested lists to single - level list does not split strings
Select item in the list
Check whether one of the items in the list has multiple lines .
Take a list of strings and clear whitespace on each one . If a value in the list is not a string pass it through untouched .
Download the given JSON file and pretty - print before we output it .
Pull a file directly from S3 .
Wrap text with markdown specific flavour .
Apply transforms to the data and predict with the final estimator
Sets up the python include paths to include src
detect if a model has a given field has
Takes input from user . Works for Python 2 and 3 .
iterator for JSON - per - line in a file pattern
Return True if the given extension is one of the watched extensions

Provides the color corresponding to value x in the form of a tuple ( R G B A ) with int values between 0 and 255 .
Compute boxplot for given pandas Series .
Sets the title of the console window .
Discover the current time zone and it s standard string representation ( for source { d } ) .
Converts a datetime to a millisecond accuracy timestamp
Gets the median of a list of values Returns a float / int
Logarithmic loss with non - necessarily - binary labels .
Yield num_chars - character chunks from string .
Pull a file directly from S3 .
Split a text into a list of tokens .
Print object information using a namedtuple and a format pattern .
Wraps jsonschema . validate returning the same object passed in .
Close our socket .
Set value of the checkbox .
Parse markdown sintaxt to html .
gets the dimensions depending on python version and os
This removes newlines and multiple spaces from a string .
Searches for the specified method and returns its descriptor .
copy the dict filter_keywords
http : // stackoverflow . com / questions / 5098580 / implementing - argmax - in - python
Test if the argument is a string representing a valid hexadecimal digit .
r Checks if l is a 2D numpy array of bools
Looks at the files in a git root directory and grabs the last modified timestamp
Are we being asked to look up a list of things instead of a single thing? We check for the __iter__ attribute so that this can cover types that don t have to be known by this module such as NumPy arrays .
Convert CamelCase to camel_case
Removes the extension from a filename
Split a sentence into list of words .
Calculate standard deviation weighted by errors
variance of the values must have 2 or more entries .
Returns the progress ratio and percentage .
docstring for argparse
Show ( print out ) current environment variables .
Try popping a key from a dict . Instead of raising KeyError just return the default value .
Purge the named cache of all values . If no cache exists for object_type nothing is done
: type aws_access_key_id : string : param aws_access_key_id : Your AWS Access Key ID
Spawns a kafka continuous consumer thread
Return a new datetime . datetime object with values that represent a start of a month . : param val : Date to ... : type val : datetime . datetime | datetime . date : rtype : datetime . datetime
Return a string that matches a named route
Find the percentile of a list of values .
Return a tuple from parsing a b c d - > ( a b c d )
Run func with argument fobj and measure execution time .
Convert a microsecond timestamp to a UTC datetime instance .
Builds instance from dictionary of properties .
Set an object s field to default if it doesn t have a value
Get version information for components used by Spyder
Perform check_array ( X ) after removing infinite values ( numpy . inf ) from the given distance matrix .
Removes all blank lines in @string
in string astr replace all occurences of thefind with thereplace
Round a float to a precision
Return the last item of a sequence .
Partial objects do not serialize correctly in python2 . x -- this fixes the bugs
Checks if a given string is an url
Return return information indicated in docstring .
get the current month s last day : param year : default to current year : param month : default to current month : return : month s last day
function : to be called with each stream element as its only argument
Directly gets a variable from a parent frame - scope .
Returns date range for the previous full month .
Moves the text cursor to given line .
Determine if a file is empty or not .
Check the checkbox matching the CSS selector .
it returns a 500 http response
Determines whether the passed value is a string safe for 2 / 3 .
Generate a list of words given text removing punctuation .
Banana banana
If the requirement is frozen to a github url check for new commits .
Returns file name of file at given url .
Return True if Cython or Pyrex can be imported .
Conveinience :
Returns a string for various input types
Get all instances matching a tag .
Strip the whitespace from all column names in the given DataFrame and return the result .
Fibonacci example function
Copy
Returns whether * obj * is iterable lazily such as generators range objects etc .
Set the exectuable bit on the given filename
Builds a comment .
Cleans trailing whitespaces and replaces also multiple whitespaces with a single space .
Return a string of data after gzip decoding
If given environment key is defined print it out .
Converts a millisecond accuracy timestamp to a datetime
Given a target dct and a dict of { key : default value } pairs calls setdefault for all of those pairs .
Display all available logging information .
Generate n values between start and end .
return the last stack element and delete it from the list
Apply re . sub to bunch of ( pattern repl )
Natural logarithm
Return a JsonResponse . Make sure you have django installed first .
Raises a requests . exceptions . HTTPError if the response has a non - 200 status code .
Parse ISO8601 timestamps given by github API .
A more low - level form of open_websocket_server . You are responsible for closing this websocket .
Return a dict with swapped keys and values
Given a sequence convert it to a comma separated string . If however the argument is a single object return its string representation .
r Checks if l is a numpy array of integers
Wrap standard function to easily pass into map processing .
Log - normal function from scipy
Only return cursor instance if configured for multiselect
This is a hack to monkey patch sdproperty to work as expected with instance methods .
execute jobs in processes using N threads
Returns a 3x3 cross - product matrix from a 3 - element vector .
convert record array to a dictionaries
Does openat read - only then does fdopen to get a file object
Read 4 bytes from bytestream as an unsigned 32 - bit integer .
Compute timestamp from a datetime object that could be timezone aware or unaware .
Given HTML markup return a list of hrefs for each anchor tag .
Calculate the SSE to the cluster center
Return start and end date of the current week .
Directly send utf8 bytes to stdout
Pass in a dictionary that has unsafe characters as the keys and the percent encoded value as the value .
Drops and re - creates the SQL schema
Helper that clears the composition .
Special case of version () when the executable is a JAR file .
http : // www . swharden . com / blog / 2009 - 01 - 21 - signal - filtering - with - python / #comment - 16801
Removes // - comments and single - line C - style / * * / comments .
Convert to camel case .
create a new page in x if key is not a page of x otherwise add value to x [ key ]
Given a task waits for it until it finishes : param task : Task : return :
Scroll both categories Canvas and scrolling container
Remove the last NoteContainer in the Bar .
Gets the median of a list of values Returns a float / int
Create a bigquery table . The caller must supply a callback that takes one argument a google . cloud . bigquery . Table and mutates it .
Estimates the memory of the supplied array in bytes
Discover the current time zone and it s standard string representation ( for source { d } ) .
Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** .
detect if a model has a given field has
Returns the appropriate IPython code magic when called with an alias for a language .
Takes two clicks and returns the slope .
Get the toplevel widget from a gtk . Builder file .
Deserializes a JSONified : obj : numpy . ndarray that was created using numpy s : obj : save function .
Convert napoleon docstring to plain sphinx string .
Remove duplicates from an iterable preserving the order .
This turns off stdout buffering so that outputs are immediately materialized and log messages show up before the program exits
Hex encode a binary string
Write text . An additional attribute terminator with a value of None is added to the logging record to indicate that StreamHandler should not add a newline .
Not meant to be used directly use : meth : Instaloader . save_session_to_file .
Runs command on the system with given args .
Get single system variable from CCU / Homegear
Disable event loop integration with wxPython .
A tensorflow variable tranfomed to be constrained in a L2 unit ball .
Returns all database table names found in an SQLAlchemy : class : MetaData object .
load an nparray object from a json filename
Parse an ISO format date ( YYYY - mm - dd ) .
Serialize a sequence of Python objects into a YAML stream . Produce only basic YAML tags . If stream is None return the produced string instead .
Returns the last n rows in the table
Return true if a value is a finite number .
zfill ( x width ) - > string
Clears the default matplotlib ticks .
Bernstein polynomial .
Generate a fresh id
Stops iterating before yielding the specified idx .
Return True if val is of integer type .
: param list_of_points : : return : list_of_points with None s removed
Delete a mongo document collection using pymongo . Mongo daemon assumed to be running .
Raises the supplied figure number or figure window .
Align the position in the file to the next block of specified size
Pull a file directly from S3 .
Go to parent directory
Extend the list with another list . Each member of the list must be a string .
update () extends rather than replaces existing key lists .
Reads a tif file to a 2D NumPy array
Create a new instance from a file .
Helper function to read bytes until a certain end byte is hit
Get all groups of a user
Public function that reads a local file and generates a SHA256 hash digest for it
returns a function to convert a string to a datetime . date instance using the formatting string fmt as in time . strftime
Called when closing this window .
Because standard distinct used on the all fields are very slow and works only with PostgreSQL database this method provides alternative to the standard distinct method . : return : qs with unique objects
Set the pixel at ( x y ) to the integers in sequence color .
Find longest ORF from the given list of ORFs .
Convert version like string to a tuple of integers .
Convert the entire image to bytes . : rtype : bytes
A helper to create a proxy method in a class .
average of the values must have more than 0 entries .
Create database tables from sqlalchemy models
Compute a minimal rectangle that covers all the points .

Return the window that owns selection ( an atom ) or X . NONE if there is no owner for the selection . Can raise BadAtom .
If the database is empty generate a random vector .
For JSON the source it the file path
If value is a datetime convert to timestamp
Transparently unzip the file handle
Converts a camelcase string to a list .
Return line ending .
Get line count of file
Calls a procedure .
Checks if we already have an opened tab with the same name .
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Makes the list have unique items only and maintains the order
Get list of all uppercase non - private globals ( doesn t start with _ ) .
Mocked decorator needed in the case we need to mock a decorator
Logs out the current session by removing it from the cache . This is expected to only occur when a session has
Check for filelikeness of an object .
Updates one element of the collection
Return a cleaned string with token sorted .
Helper function to turn a string representation of true into boolean True .
Return a copy of the tuple as a list
Output a networkx graph to a DOT file .
Simplified check to see if the text appears to be a URL .
Normalize s into ASCII and replace non - word characters with delimiter .
Starts the web server .
Show revision list
Computes average length of words
Retrun True if x is a valid YYYYMMDD date ; otherwise return False .
Log - normal function from scipy
Instantiate the given extension class and register as a public attribute of the given base .
Converts the specified datetime object into its appropriate protocol value . This is the number of milliseconds from the epoch .
cgi . FieldStorage from wsgi . input .
given a bytes object should return a base python data structure that represents the object .
Return the modulo value .
Test that a and b are close and match in shape .
Finds the longest path in a dag between two nodes
Remove the querystring from the end of a URL .
Retrun True if x is a valid YYYYMMDD date ; otherwise return False .
Returns a substring delimited by start and end position .
Yield one date per day from starting date to ending date .
Exit the shell session .
Detects whether a line is present within a file .
1 - farthest apart ( same number of words all diff ) . 0 - same
zeros out states that should be identical
Pause the music
Copy text to clipboard without prompts
Returns a string containing the type and text of the exception .
Return imaginary part of quaternion .
Returns a new random state .
Return the longest common substring in a list of strings . Credit : http : // stackoverflow . com / questions / 2892931 / longest - common - substring - from - more - than - two - strings - python
Truncates a value to a number of decimals places
Compress a file returning the new filename ( . gz )
Has a 50 / 50 chance of calling a function
I convert strings into integers floats and strings!
Sets the title of the console window .
Returns a 3x3 cross - product matrix from a 3 - element vector .
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
Re - raises the error that was processed by prepare_for_reraise earlier .
Apply 2to3 tool ( Python2 to Python3 conversion tool ) to Python sources .
Return the dot product of two vectors
Returns the column mapped by db_field name
Whether any of the strings contains any of the candidates .
Calculate a delay to retry using an exponential backoff algorithm .
Simple method for handling exceptions raised by PyBankID .
Returns the deepest level of nesting within a list of lists
convert record array to a dictionaries
Tag the given document . Parameters ---------- nerdoc : estnltk . estner . Document The document to be tagged .
: type s str
Return the dotproduct between self and another vector .
Coerce value to an JSON - compatible representation .
Indicate whether the specified image file is valid or not .
Remove all unwanted characters from text .
Return a list of branches in the current repo .
Gets the width of the table that would be printed . : rtype : int
Runs a bash script in the local directory
Assert that text has n errors of type check .
This is a compatibility function that takes a C { float } and converts it to an C { int } if the values are equal .
Stops the analysis as soon as possible .
Ability to provide dynamic styling of the cell based on its value . : param cbfct : function ( cell_value ) should return a dict of format commands to apply to that cell : return : self
Fetch an image from url and convert it into a Pillow Image object
Clean up processes after SIGTERM or SIGINT is received .
Return a dict with swapped keys and values
generate a CamelCase string from an underscore_string .
Sets up the python include paths to include src
Sets value of key key to value in both session and cookies .
Make bars in horizontal bar chart thinner
Internal function to overcome pickling problem in python2 .
Run the event loop .
Closes the session to the database .
Raise a new exception using the preserved traceback of the last one .
Change a date string from the format 2018 - 08 - 15T23 : 55 : 17 into a datetime object
Returns the index of the earliest occurence of an item from a list in a string
Args : img ( PIL Image ) : Image to be padded .
Extract the boundaries from a list of indexes
Args : img ( PIL Image ) : Image to be padded .
Region formed by taking border elements .
Display the difference between modules in a file and imported modules .
Assumes myList is sorted . Returns closest value to myNumber . If two numbers are equally close return the smallest number .
Use all decompressor possible to make the stream
Returns the coverage object of pytest - cov .
Decorator that turns a synchronous function into one returning a future .
Remove ticks tick labels and frame from axis
A non - negative integer .
Returns the most common element in iterable .
Returns a Bokeh glyph object .
Wrap standard function to easily pass into map processing .
string dict / object / value to JSON
Converts a Python 2 function as lambda ( x y ) : x + y In the Python 3 format : lambda x y : x + y
Takes a datetime object and returns a string
Get an SArray that contains the last n elements in the SArray .
Click the element matching the CSS selector .
Get dimension of an array getting the number of rows and the max num of columns .
Add Builders and construction variables for SGI MIPS C ++ to an Environment .
Strip tweet message .
Yield a series of batches from iterable each size elements long .
Create a lambda code archive for running custodian .
Iterate through lines of file .
add the field with endianness to the buffer
Return all child objects in nested lists of strings .
Read a WAV file and returns the data and sample rate
Find and kill child processes of a process .
Quit and Restart Spyder application . If reset True it allows to reset spyder on restart .
docstring for argparse
Return the distance between two points .
Calculates the average value of a list of numbers Returns a float
Queries should be a list of GraphQL objects
Convenience function that removes a dicts keys that have falsy values
Download an HTML page using the requests session and return the final URL after following redirects .
Like dict . update but does not overwrite items
Save object as json on CNS .
Output data as a nicely - formatted python data structure
Refresh the screen . You don t need to override this except to update only small portins of the screen .
Check the text .
Return lines of a file with whitespace removed
Return the error rate based on dense predictions and 1 - hot labels .
Outputs a string to the console ( stdout ) .
Returns the index of column 0 of the current item in the underlying model . See also the notes at the top of this module on current item vs selected item ( s ) .
There s probably a way to do this with string functions but I was lazy . Replace all instances of \ r or \ n in a string with something else .
Unpacks sqlite rows as returned by fetchall into an array of simple dicts .
Returns the memory byte size of a Numpy array as an integer .
Returns a list with the order that features requested appear in dataset
Return True if the given extension is one of the watched extensions
Return a string of the form [ basename - TIMESTAMP . ext ] where TIMESTAMP is of the form YYYYMMDD - HHMMSS - MILSEC
find a path from start to end node on grid using the A * algorithm : param start : start node : param end : end node : param grid : grid that stores all possible steps / tiles as 2D - list : return :
Return a list of all parsed comments in a file . Mostly for testing & interactive use .
Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .
Log all data received from RFLink to file .
SwitchToThisWindow from Win32 . handle : int the handle of a native window .
Run the tests .
Converts a list of string ranges to a list of [ low high ] tuples .
Split message to list by commas and trim whitespace .
Center all lines of the text . It is assumed that all lines width is smaller then B { width } because the line width will not be checked . Args : text ( str ) : Text to wrap . width ( int ) : Maximum number of characters per line . Returns : str : Centered text .
Finds parent folder of file
Return True if the given string starts with one of the prefixes in the given list otherwise return False .
Remove legend for axes or gca .
Return the channels of a colorbar .
Remove duplicates from list while preserving order .
Computes the centroid of set of points
Cached search compile .
Add value to a set in a dictionary by key
Return peak memory usage in MB
Return True if Glances is running in client mode .
underscore to mixed case notation
Utility function to remove duplicates from a list : param seq : The sequence ( list ) to deduplicate : return : A list with original duplicates removed
Determines if value value is empty . Keyword arguments : value str -- the value of the associated field to compare
check if day is after month s 3rd friday
remove problem characters from string
Called to implement the built - in function complex () .
Add suffix to a full file name
Check for Python 3 nonlocal statement .
Initiates a graceful stop of the processes
Get the first sunday of a month .
Returns an ExpMatrix containing all pairwise sample correlations .
Returns all column names and their data types as a list .
Convert instances of textx types and match rules to python types .
r Call f n times with args and kwargs . Useful e . g . for simplistic timing .
Compute the log of the magnitude spectrum of frames
Generalised logarithm
Trim a PIL image and remove white space .
Write DOT comment .
Convert a string to a list with sanitization .
Convert a list of strings to a list of integers .
Parse string into Identity dictionary .
Returns true if the guessed mimetyped isnt t in text group .
Calculates the distance between two points on earth .
Join list of columns into a string for a SQL query
Strip excess spaces from a string
Public function that reads a local file and generates a SHA256 hash digest for it
convert datetime / str to date : param arg : : return :
Runs a bash script in the local directory
writes the line and count newlines after the line
Extracts the session data from cookie .
Context manager that causes pprint () to print OrderedDict objects as nicely as standard Python dictionary objects .
autoscan will check all of the serial ports to see if they have a matching VID : PID for a MicroPython board .
Displays a simple message box with text and a single OK button . Returns the text of the button clicked on .
For Python3 compatibility of generator .
Create : class : PNG from raw bytes . : arg bytes b : The raw bytes of the PNG file . : rtype : : class : PNG
This is builtin in python2 but we have to roll our own on py3 .
ceil a number to within a given rounding accuracy
A function that works for both Python 2 . x and Python 3 . x . It asks the user for input and returns it as a string .
Returns names of object columns in the DataFrame .
Convert a UTC datetime to a Unix timestamp
Creates a dictionary mapping aliases to their respective name . import_alias_names is used in module_definitions . py and visit_Call
Convert string column into datetime column
Returns the item that appears most frequently in the given list .
Connect and login to an FTP server and return ftplib . FTP object .
Convert any array into a 2d numpy array .
Joins two dictionaries .
Get the modified time for a file as a datetime instance
Like map but also chains the results .
http : // stackoverflow . com / questions / 1230669 / subprocess - deleting - child - processes - in - windows
Convert a python string to c array .
Check the checkbox matching the CSS selector .
Process an iterable of dictionaries . For each dictionary d change ( in place ) d [ key ] to value .
Read text from file automatically detect encoding . chardet required .
Return a new : class : DataFrame containing rows only in both this frame and another frame .
Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .
Change a date string from the format 2018 - 08 - 15T23 : 55 : 17 into a datetime object
Create directory with template for topic of the current environment
If output is string then print the string and also time used
Returns the keys that maps to the top n max values in the given dict .
Check if arguments are str type .
Interpolate linearly variable x in rangeX onto rangeY .
Close session shutdown pool .
Efficient cartesian product of a list of 1D arrays returning the expanded array views for each dimensions . By default arrays are flattened which may be controlled with the flat flag . The array views can be turned into regular arrays with the copy flag .
Push thing to the stack writing the thing to memory and adjusting the stack pointer .
Python 3 input () / Python 2 raw_input ()
execute jobs in processes using N threads
Set the serial port e . g . : / dev / tty . usbserial - A4001ib8
Double integrate .
Log - normal function from scipy
searchs a value in a dicionary and returns the key of the first occurrence
Replace #hashtag and
Splits a string into parts at multiple characters
Get rid of all axis ticks lines etc .
Pad a matrix with zeros on all sides .
Square of the euclidean distance
Get all the prime factor of given integer
Converts a camelcase string to a list .
When converting Spark SQL records to Pandas DataFrame the inferred data type may be wrong . This method gets the corrected data type for Pandas if that type may be inferred uncorrectly .
Calculate the Hamming distance between two strings . From Wikipedia article : Iterative with two matrix rows .
Similar to : attr : . Guild . me except it may return the : class : . ClientUser in private message contexts .
Returns the default stream encoding if not found .
Format list .
Removes non - alpha characters and converts spaces to hyphens . Useful for making file names . Source : http : // stackoverflow . com / questions / 5574042 / string - slugification - in - python
Compare by iteration
Load JSON file
Calculate equality between two ( Comparable ) objects .
Test if a file is located within the given directory .
Convert a python string to C string .
Check if cnr or cns files are empty ( only have a header )
Get the week start date and end date
Convert from whatever is given to a list of scalars for the lookup_field .
Uses CREATE INDEX CONCURRENTLY to create a duplicate index then tries to swap the new index for the original .
Returns a random positive integer ( for a Django PositiveIntegerField )
Load and parse a feature file .
Close log
Get rid of all axis ticks lines etc .
>>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7
Serializes a numpy array to a compressed base64 string
for a list of samples return the value of a global option
Downsample x by factor using striding .
String hash ( djb2 ) with consistency between py2 / py3 and persistency between runs ( unlike hash ) .
Run Python test cases against Java runtime classes .
Remove duplicates from a list preserving the order .
Returns the topmost parent of the current category .
Return the index of the closest in xarr to value val
Determine True / False from argument
Returns the last location of the minimal value of x . The position is calculated relatively to the length of x .
Make a list unique retaining order of initial appearance .
Return no more than k indices of smallest values .
Run server with provided command line arguments .
Closes and waits for subprocess to exit .
date to unix timestamp in milliseconds
Helper function to turn a string representation of true into boolean True .
Probability density function ( normal distribution )
Return the unique elements of a collection even if those elements are unhashable and unsortable like dicts and sets
Find the conda executable robustly across conda versions .
Return a dataframe that is a cross between dataframes df1 and df2
Lookup country for IP address .
Join the given iterable with
Stops the status update thread .
Temporary helper function to link to the API routes
Unwrap a Python 2 . 6 SSL socket so we can call shutdown ()
Rewrite a file adding a line to its beginning .
Paste before cursor .
Conver a path string to a list of path elements .
Try to infer an object s dtype for use in arithmetic ops
>>> _numbers_units ( 45 ) 123456789012345678901234567890123456789012345
Determine if a file is empty or not .
Runs a bash script in the local directory
Convert None values to 0 so the data works with Matplotlib : param ts : : return : a list with 0s where Nones existed
Format a duration in seconds .
Strip accents to prepare for slugification .
Creates sql datetime2 object from Python datetime object ignoring timezone
Serialises a protobuf object as json
Loads and returns foreign library .
Get a random ( i . e . unique ) string identifier
This should only be used for testing . The primary mode of operation is as an imported library .
Hacked run function which installs the trace .
area () - > number
Make a copy of a dictionary with all keys converted to snake case . This is just calls to_snake_case on each of the keys in the dictionary and returns a new dictionary .
Check if obj is number .
Get the week start date and end date
A non - negative integer .
Perform auth request for token .
Encodes Unicode strings to byte strings if necessary .
Add Builders and construction variables for SGI MIPS C ++ to an Environment .
Returns the offset of the current cursor position in rl_line_buffer
Remove resource instance from internal cache
Convert human readable string to datetime . datetime .
Return a string with punctuation removed .
Remove a file from an AWS S3 bucket .
Resursively create a named directory .
Process an iterable of dictionaries . For each dictionary d delete d [ key ] if it exists .
Set value in the pandas DataFrame
Load Context with data
Write image data to PNG JPG file
Add a matplotlib colormap .
Hides the main window of the terminal and sets the visible flag to False .
Create ctypes pointer to object .
Pads a hex string up to the given bit_size
Delete all the files and subdirectories in a directory .
Encodes numpy images into gif string .
Count the number of rows in 2D arrays that contain any nan values .
Utility function to remove duplicates from a list : param seq : The sequence ( list ) to deduplicate : return : A list with original duplicates removed
Get the last object in file .
This method allows printing several images in one shot . This is useful if the client code does not want the printer to make pause during printing
Get the magnitude of a vector .
Calculates the Jaccard similarity between two sets of nodes . Called by mroc .
Compute tokenwise ( elementwise ) accuracy .
Places a legend box outside a matplotlib Axes instance .
Run the * cmd * and exit with the proper exit code .
Formats the given number in decimal format using a period and commas
A datetime - version that takes datetime object list as x_axis
Print a dictionary of attributes in the DOT format
convert string to int or float .
variance of the values must have 2 or more entries .
Creates a help string for names_list grouped by prefix .
Encode from strings to token ids .
Get rid of all axis ticks lines etc .
in comparison to argrelmax () more simple and reliable peak finder
Convert JSON string to an ordered defaultdict .
Return true if given node is inside lambda
r Calculate the voxel coordinates of a straight line between the two given end points
Close the db and release memory
Helper that clears the composition .
Read tag data from file and return as numpy array .
Returns a string for various input types
Round a number to a precision
Returns a SndRcv list filtered by a truth function
Request that the Outstation perform a cold restart . Command syntax is : restart
Start the Django dev server .
Select rows where the given field evaluates True .
Find the lowest common multiple of 2 numbers
Checks if the given type is an enum type .
Return a unique string with length n .
Decorator to make sure that user is root .
Removes non - alpha characters and converts spaces to hyphens . Useful for making file names . Source : http : // stackoverflow . com / questions / 5574042 / string - slugification - in - python
Warn if nans exist in a numpy array .
Utility method to run commands synchronously for testing .
Calculate the distance between two Vectors
Return a unique string with length n .
Remove all items .
implementation of safe dumper using Ordered Dict Yaml Dumper
Enable or disable automatic rate - limit handling .
Generate an empty texture in OpenGL
helper function used for joins builds left and right join list for join function
Determines if the current process is running in Windows - On - Windows 64 bits .
A helper to create a proxy method in a class .
Creates a mapping from indices to labels .
Opens the file and reads the value
detect if a model has a given field has
Check if cnr or cns files are empty ( only have a header )
Returns the default stream encoding if not found .
Validate if non empty string
Returns the scalar product of this vector with the given other vector .
Parses a date string formatted like YYYY - MM - DD .
Returns a character delimited version of the provided list as a Python string
Creates a datetime from GnuCash 2 . 6 date string
Convert version like string to a tuple of integers .

Searches for the specified method and returns its descriptor .
Scipy norm function
Validates that the object itself is some kinda string
Upermutate 1 - D data that is sorted by indices_of_increasing .
Wrap a function as a method .
Check if the string is only composed of hex characters .
Reads an array from bytestring with big - endian data .
Determine if a Path or string is a file on the file system .
Return a json string representing the python object obj .
Return a lowercased string with non alphabetic chars removed .
Get string from file .
Ensures well - formedness of a key .
print the message to the predefined log file without newline
Returns January 1 of the given year .
Is this a call with exactly 1 argument where that argument is positional?
Reformat a date string to standard format .
Is this attribute present?
Get the X / Y coordinate limits for the full resulting image
>>> list = [ 0 0 7 ] >>> list_to_str ( list ) 0 0 7
Monkey - patch urllib3 with SecureTransport - backed SSL - support .
Returns the keys that maps to the top n max values in the given dict .
Returns given method name .
Print the given item and all children items
Converts markdown content to text
Write the configuration dictionary to an output file .
( Point Point ) - > Point Return the point that lies in between the two input points .
convert iterable object into numpy array
Return a modified list containing only the indices indicated .
Returns the name of the object s type . For some recognized singletons the name of the object is returned instead . ( For example for None and Ellipsis ) .
Return the attribute name identifier
Join list of columns into a string for a SQL query
Checks if a string is quoted : param arg : the string being checked for quotes : return : True if a string is quoted
Determines if a list is sorted
r Checks if l is a 2D numpy array of bools
Return wrapper to named api method .
Print emphasized good the given txt message
Load a python module from its absolute filesystem path
Makes a naive datetime . datetime in a given time zone aware .
Returns whether the given platform is a Unix - like platform with the usual Unix filesystem . When the parameter is omitted it defaults to sys . platform
The bounding box ( ymin xmin ymax xmax ) of the minimal rectangular region containing the source segment .
Return an SMTP servername guess from outgoing email address .
Creates a datetime from GnuCash 2 . 6 date string
Helper method that escapes parameters to a SQL query .
Compute Pearson correlation coefficient .
Assume fdata has even rows
unset _instance for this class and singleton parents .
Restores the state of the batched queue for writing .
Run the final coverage report . This outputs the coverage report aggregating coverage from the unit test runs ( not system test runs ) and then erases coverage data .
Convert anything to a bytearray . See - http : // stackoverflow . com / questions / 7585435 / best - way - to - convert - string - to - bytes - in - python - 3 - http : // stackoverflow . com / questions / 10459067 / how - to - convert - my - bytearrayb - x9e - x18k - x9a - to - something - like - this - x9e - x1
Official way to get the extension of compiled files ( . pyc or . pyo )
Maxheap version of a heappop .
Add executable permissions to a file .

Convert a table row to a dictionary .
mono - exponential curve .
Converts binary representation label to integer .
Iterate through lines of file .
Callback to go to the next tab . Called by the accel key .
check if we need graphviz for different output format
Helper method to check if a set of types is the { AnyObject } singleton
Plot the empirical histogram versus best - fit distribution s PDF .
Helper function which returns an array with the Intervals boundaries .
The url of this window
Detects whether a line is present within a file .
Saves dictionary as CSV file .
Return the number of bytes stored in the value of key within hash name
Internal helper to return the values of a dictionary sorted by key .
Get hue value of HSL color .
Cleans the column names on a DataFrame Parameters : df - DataFrame The DataFrame to clean
Verifies that a string path actually exists and is a file
Get list of all uppercase non - private globals ( doesn t start with _ ) .
Convenience method for just changing font size .
Write file with current process ID .
Returns a dictionary from a URL params
r Repeat each item in iterable n times .
Invokes callback for KEY_DOWN event related to the given key . For details see hook .
Returns file name of file at given url .
Serialize obj as a JSON formatted stream to fp
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
Modified form of the g format specifier .
Remove text nodes containing only whitespace
Iterable - first replacement of Python s built - in map () function .
Display the first and last n elements of a DataFrame .
Just sends the request using its send method and returns its response .
Simplified check to see if the text appears to be a URL .
returns a dictionary of arg_name : default_values for the input function
Save pickled model to file .
Convert string in boolean
Extract a set of variables by name from another frame .
Calculate the index rank according to Bertran s notation .
Read a string from a file - like object .
Accurate float rounding from http : // stackoverflow . com / a / 15398691 .
Configure the logging module .
Fill missing values in pandas objects and numpy arrays .
Convenience function for loading yaml - encoded data from disk .
Returns ( module locals ) of the funciton depth frames away from the caller
Run asyncio ( should be called in a thread ) and close the loop and the zmq context when the thread ends : param loop : : param zmq_context : : return :
Is the SQLAlchemy column type an integer type?
Check if arg is a valid file that already exists on the file system .
Take a str and transform it into a byte array .
Returns the window bounds as a tuple of ( x y w h )
Returns a str if a bytes object is given .
Sum the total number of cycles over a list of tokens .
This turns off stdout buffering so that outputs are immediately materialized and log messages show up before the program exits
Return the slice after at sub in string astr
Translate an image in fourier - space with plane waves
raise a descriptive exception on a bad request response
Converts a dict to a querystring suitable to be appended to a URL .
Closes the connection .
Makes the given dictionary symmetric . Values are assumed to be unique .
Convenience method for just changing font size .
Erases n lines from the screen and moves the cursor up to follow
Replace masked - out elements in an array using an iterative image inpainting algorithm .
Checks if the filename exists under the path .
Underline the input
Helper function for conversion of various data types into numeric representation .
Get the python representation of the obj
create a graphviz graph from text
Returns current utcoffset for a timezone . Uses DEFAULT_LOCAL_TZ by default . That value can be changed at runtime using the func below .
Clears the default matplotlib ticks .
Take a US format date and return epoch .

Set the strict mode active / disable
Run a Tensorflow model on the Iris dataset .
shotcut to pull out useful info for interactive use
Return file type icon
Function for fast reading from sensor files .
check if day is after month s 3rd friday
Convenient shorthand for toarray ( * args ** kwargs ) . view ( np . recarray ) .
Return the minimum of an array ignoring any NaNs .
Get the path of java executable
Add a page to the page cache .
Function used to fit the exponential decay .
Helper function for conversion of various data types into numeric representation .
When the with statement ends .
>>> _isint ( 123 ) True >>> _isint ( 123 . 45 ) False
remove duplicates from a sequence preserving order
Match two names .
Like isin but checks whether this expression s value ( s ) are not contained in the passed values . See isin docs for full usage .
Pause for this many seconds
Converts data back into original format .
Return the channels of a palettebar .
Report whether this RangeSet contains another set .
Ensures that the argument is a list that either is empty or contains only strings : param arr : list : return :
Uses OLS to fit the regression .
Move cursor to this line in the current buffer .
Round the number to the specified number of significant figures
Create the chart bounds with min max horizontal and vertical values
Convenience method for setting the value of an openpyxl cell
Returns the indices of the lexicographical sorting order of the supplied arrays .
return True if the current distribution is running on debian like OS .
Not meant to be used directly use : meth : Instaloader . save_session_to_file .
Test program for telnetlib .
Uses box coordinates to crop an image without resizing it first .
Modified form of the g format specifier .
Return True if variable is a numpy array
Check if a wav contains data
Evaluate smooth term in Vf .
Error handler
Returns is seq is sequence and not string .
Saves dictionary as CSV file .
Determine the parenthetical change of level ( num closes - num opens ) .
The l2 norm of an array is is defined as : sqrt ( ||x|| ) where ||x|| is the dot product of the vector .
Write file with current process ID .
Is an object iterable like a list ( and not a string ) ?
Hides the main window of the terminal and sets the visible flag to False .
Set a related object for an instance .
Respond to requests for the server s primary web page .
Resets the namespace by removing all names defined by the user
Replace any non - word characters with a dash .
Returns a character delimited version of the provided list as a Python string
True if this is a primary key ; False if this is a subkey
Return the index of the parent for a given index of the child . Unfortunately the name of the method has to be parent even though a more verbose name like parentIndex would avoid confusion about what parent actually is - an index or an item .
Read text from stdin and print a helpful message for ttys .
Merge all the strings . Put space between them .
Set window top - left corner position and size
Returns x rounded to n significant figures .
Push a new value into heap .
Add pytest unit tests to be built as part of build / test / output .
Run the tests .
Return a consistent ( key value ) iterable on dict - like objects including lists of tuple pairs .
Advances to next line .
Yield one date per day from starting date to ending date .
Replaces from a string ** input ** all the occurrences of some symbols according to mapping ** repls ** .
Return the high median of data .
Returns a stringified representation of this object .
Determine with width in pixels of string .
Return the distance between two points .
Set limits for the x - axis .
Make a list a certain size
Opens file attempts to identify content based off magic number and will return the file extension . If mime is True it will return the mime type instead .
Create a deep copy of the node
Nested lists to single - level list does not split strings
Pull comma separated string values out of a text file and converts them to float list
Return a column of the given matrix .
Natural log of scipy norm function truncated at zero
Hacky workaround for old installs of the library on systems without python - future that were keeping the 2to3 update from working after auto - update .
Remove any duplicate entries .
Return a list of unique items ( similar to set functionality ) .
Right replaces count occurrences of old with new in string . For example ::
Utility function to print sqlite queries before executing .
Generate a unique ID that is somewhat guaranteed to be unique among all instances running at the same time .
Get a single document from the collection this class is bound to . Additional arguments are processed according to _prepare_find prior to passing to PyMongo where positional parameters are interpreted as query fragments parametric keyword arguments combined and other keyword arguments passed along with minor transformation . Automatically calls to_mongo with the retrieved data . https : // api . mongodb . com / python / current / api / pymongo / collection . html#pymongo . collection . Collection . find_one
Pretty - print an error .
Return a new Image instance with the given size .
Set an object s field to default if it doesn t have a value
Returns inverse of transformation .
Replace all the ocurrences ( in a file ) of a string with another value .
Split message to list by commas and trim whitespace .
Builds sphinx docs from a given directory .
abstract method
Load and pre - process the images specified with absolute paths .
Convert an OrderedDict containing C values to a 1D array .
convert a timedelta to seconds .
Check if the folder exisits . If not create the folder
Convert file extension to lowercase .
Recursively loop through a directory to find all python script files . When one is found it is analyzed for import statements : param path : string : return : generator
Clean up processes after SIGTERM or SIGINT is received .
Close log
%D .
Convert a CSV object to a numpy array .
Remove duplicates in a list .
Helper function to get the location of a Python file .
Flushes the prompt before requesting the input
Directory where to store output
Get the last weekday in a given month . e . g :
Escapes a filesystem path for use as a command - line argument
Removes all blank lines in @string
Run application tests
Print list of strings to the predefined stdout .
printdict
These actions will be done after SIGTERM .
Given a file - like object loads it up into a PIL . Image object and returns it .
Convert a string to a list with sanitization .
Transform a query line into a ( lng lat ) pair of coordinates .
Delete the index if it exists .
An auxiliary function to construct a dictionary of Criteria
: param str s : string with tabs : param str replace : e . g . 4 spaces : rtype : str
Calls the specified Trigger of another Area with the optionally given parameters .
Writes the string to stdout
Given a callable func trap the indicated exceptions for up to retries times invoking cleanup on the exception . On the final attempt allow any exceptions to propagate .
Internal helper to clone self . _properties if necessary .
Return a json array as a list
Print out a log message only if verbose mode .
Sort input filename list by datetime
Apply Gaussian blur to the given data .
Transform an underscore_case string to a mixedCase string
Sets the title of the console window .
An argparse type representing an email address .
Go to the end of the current line and create a new line
This is a dirty little template function generator that turns single - brace Mustache - style template strings into functions that interpolate dict keys :
bytes to unicode
Return unit sphere coordinates from window coordinates .
Check if the memory is too full for further caching .
Return the base directory
Determine if end - of - file is reached for file fd .
Time execution of function . Returns ( res seconds ) .
Imputes data set containing Nan values
If called after an update the sprite can move back
Context manager that causes pprint () to print OrderedDict objects as nicely as standard Python dictionary objects .
rounds float to closest int : rtype : int : param n : float
Shot noise corruption to images .
Take a date object and return the first day of the month .
WeChat access token
Force compilation of expression for the SQLite target
Adds the supplied dict as a new entity
Read a public RSA key from a PEM file .
Same as : meth : random . choice but also supports : class : set type to be passed as sequence .
Return minimal quantum of a number as defined by precision .
Try to infer an object s dtype for use in arithmetic ops
Returns the total timedelta duration in seconds .
Connect to FTP server login and return an ftplib . FTP instance .
Parses hostname from URL . : param url : URL : return : hostname
Return index of sub_string in string .
Return a list of tuples specifying the column name and type
Returns the arithematic mean of the values in the passed list . Assumes a 1D list but will function on the 1st dim of an array ( ! ) .
Returns day number of the last day of the month : param t : datetime : return : int
rotates a 2d array to a multiple of 90 deg . 0 = default 1 = 90 deg . cw 2 = 180 deg . 3 = 90 deg . ccw
convert 3 3 a matrix to 6 element s list ( see Tauxe 1998 )
Encodes Unicode strings to byte strings if necessary .
Optimized function for calculating the distance between each pair of points in positions1 and positions2 .
This removes newlines and multiple spaces from a string .
Perform a simple check if the value is callable .
Plot the empirical histogram versus best - fit distribution s PDF .
arr_out = round_array ( array_in )
Shape of histogram s data .
check whether the item is list ( tuple ) and consist of list ( tuple ) elements
Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]
Apply gzip compression to a response .
Get data from json file
Init connection and consumer with openstack mq .
Return the location of the static data directory .
SQLite3 doesn t support direct truncate so we just use delete here
Close all files but the current one
Converts datetimeoffset object into Python s datetime . datetime object
Return an ISO - 8601 formatted string from the provided datetime object
Split text into list of sentences .
Helper function to add timezone information to datetime so that datetime is comparable to other datetime objects in recent versions that now also have timezone information .
Configure a Domain registry entry .
Returns a string representing a numpy array of 0 s and 1 s
Convert string from snake case to camel case .
Check if a given file is available in the cache or not
Find the centroid for a set of vectors
Get the help text ( signature + docstring ) for a command ( function ) .
Method to handle what to do when the stop button is pressed
Checks if given value is a list tries to convert if it is not .
kill process Args : process - Popen object for process
Find the conda executable robustly across conda versions .
Increment a frame of the animation .
Return a single boolean for arg1 == arg2 even for numpy arrays using element - wise comparison .
return string as a comment
save the current session override if session was saved earlier
Bulk load docs
Return the text for the given root node ( xml . dom . minidom ) .
Return true if the object is any kind of function or method .
Checks whether the remote file exists .
Splits a string into parts at multiple characters
Load JSON file
Aggregation function to get the first non - zero value .
Resets all assigned data for the current message .
Update inplace widgets position when doing vertical scroll
Return the dot product of two vectors
Ensures well - formedness of a key .
Unpacks sqlite rows as returned by fetchall into an array of simple dicts .
r Return the bounding box incorporating all non - zero values in the image . Parameters ---------- img : array_like An array containing non - zero objects . Returns ------- bbox : a list of slicer objects defining the bounding box
Tries to load an encoded json string back into an object : param json_string : : return :
Returns a DataFrame with the required format for a surface ( sine wave ) plot
Determine if two line segments meet .
Efficient conversion from scipy sparse matrix to cvxopt sparse matrix
This function returns a pretty table used to display the port results .
Get the parent directory of a filename .
Determine if end - of - file is reached for file fd .
Deletes the line content after the cursor
Transforms an XML string it to python - zimbra dict format
Apply a delaunay 2D filter along the best fitting plane . This extracts the grid s points and perfoms the triangulation on those alone .
Is this attribute present?
Function for fast reading from sensor files .
Remove key from dict and return value .
Original doc : A dialog to get a file name . Returns the name of a file or None if user chose to cancel .
Wrap a function as a method .
A background thread to kill the process if it takes too long .
Crunch a 64 - bit int ( 8 bool bytes ) into a bitfield .
Get all the database column names for the specified table .
get pull request info by number
Return the products from a query response as a Pandas DataFrame with the values in their appropriate Python types .
Returns the sql query
Computes 2D spectrum frequencies .
Is the last line of the cell a line with code?
There s probably a way to do this with string functions but I was lazy . Replace all instances of \ r or \ n in a string with something else .
print a binary tree
Update dict with fields from obj . attributes .
Try to get a number out of a string and cast it .
Return the sum of the element - wise product of vectors x and y . >>> dotproduct ( [ 1 2 3 ] [ 1000 100 10 ] ) 1230
Set cursor position
Determine if unicode string only contains ASCII characters .
\ Asserts that two iterables contain the same values .
Sends Modify_DNS_Record request
Print msg to stdout and option log at info level .
Encodes numpy images into gif string .
Join list of columns into a string for a SQL query
Shape a list of lists into the appropriate shape and data type
Pyqt specific key press callback function . Translates and forwards events to : py : func : keyboard_event .
Turns a werkzeug . MultiDict or django . MultiValueDict into a dict with list values : param d : a MultiDict or MultiValueDict instance : return : a dict instance
Return string with compressed whitespace .
: param string s : under_scored string to be CamelCased : return : CamelCase version of input : rtype : str
Install some packages on the remote host .
Returns a snake cased version of a string .
Return scaled image size in ( width height ) format . The scaling preserves the aspect ratio . If PIL is not found returns None .
Sets main window icon to given wx . Bitmap
Function called everytime a new file is modified .
Return a tuple that contains ( width height ) Pass in a url to an image and find out its size without loading the whole file If the image wxh could not be found the tuple will contain None values
Calls the specified Trigger of another Area with the optionally given parameters .
Callable function for the multiprocessing pool .
Get a value from a dict which contains just one item .
Convert a python string to c array .
Adapts a Numpy array into an ARRAY string to put into the database .
Check for filelikeness of an object .
Run the event loop .
Run the unit tests .
Invert mapping of dictionary ( i . e . map values to list of keys )
Whether any of the strings contains any of the candidates .
Print security object information for a pdf document
Returns the progress ratio and percentage .
Strips comments and filter empty lines .
Takes in an object and a variable length amount of named attributes and checks to see if the object has each property . If any of the attributes are missing this returns false .
Heuristic check if an object is a namedtuple .
Convert input argument to bytes
Return the sum of the element - wise product of vectors x and y . >>> dotproduct ( [ 1 2 3 ] [ 1000 100 10 ] ) 1230
Convert a CSV object to a numpy array .
Helper for iterating only nonempty lines without line breaks
Check if something quacks like a list .
Get a list of the data types for each column in * data * .
Hacked run function which installs the trace .
http : // www . swharden . com / blog / 2009 - 01 - 21 - signal - filtering - with - python / #comment - 16801
Additional check for the dimension model to ensure that attributes given as the key and label attribute on the dimension exist .
Returns the first location of the maximum value of x . The position is calculated relatively to the length of x .
must be an iterable ( list array tuple )
Joins the coordinator thread and all worker threads .
Pause the music
Remove text nodes containing only whitespace
Returns the year .
Split a sentence into list of words .
Check that value is in values
Returns all column names and their data types as a list .
Save variable on given path using Pickle Args : variable : what to save path ( str ) : path of the output
Returns system clipboard contents .
Test if the given value is a scalar .
Retrieve core and memory information for the current machine .
Compare two strings while protecting against timing attacks
DEBUG FUNC modify argv to look like you ran a command
Searches for the specified method and returns its descriptor .
Read text from stdin and print a helpful message for ttys .
Resolve all html entities to their corresponding unicode character
Returns mean of non - None elements of the list
average of the values must have more than 0 entries .
Remove unsafe unicode characters from a piece of text .
move to util_iter
Returns file name of file at given url .
The main machinery of the Pipe calling the chosen callable with the recorded arguments .
Perform get request handling rate limiting .
writes a string to file
Return the largest real value h such that all elements in x are integer multiples of h .
Convert an image to PNG format with Pillow . : arg file - like fp : The image file . : rtype : bytes
Parse an int robustly ignoring commas and other cruft .
Tokenizes * source * and returns the tokens as a list of lists .
Given a list possibly nested to any level return it flattened .
Converts array to a json string
Return a list of indexes of substr . If substr not found list is empty .
Return a dictionary of words and word counts in a string .
Returns index tuple in histogram of bin which contains value
Generate the first value in each row .
Return True if the given DataFrame has a column of the given name ( string ) and there exists at least one non - NaN value in that column ; return False otherwise .
Removes all blank lines in @string
generic plotting method overplotting any existing plot
write the html file contents to disk
Returns index tuple in histogram of bin which contains value
Split a multiline string into a list excluding blank lines .
A messy way to import library - specific classes . TODO : I should really make a factory class or something but I m lazy . Plus factories remind me a lot of java ...
Root Mean Square
filter to keep bolts
Check whether one of the items in the list has multiple lines .
Convert val out of numpy time for use in to_dict . Needed because of numpy bug GH#7619
Print a list in tabular format Based on https : // stackoverflow . com / a / 8356620
Register name as a type to validate as an instance of class cls .
Return dictionary d s repr but with the items sorted . >>> pretty_dict ( { m : M a : A r : R k : K } ) { a : A k : K m : M r : R } >>> pretty_dict ( { z : C y : B x : A } ) { x : A y : B z : C }
Split a text into a list of tokens .
Query the configured LDAP server .
Return a column of the given matrix .
Register a modele onto the lemmatizer
Returns the day name
Delete log file .
Generate a unique ( within the graph ) identifer internal to graph generation .
Calculate the byte wise exclusive of of two : class : bytes objects of the same length .
Return the 2 - D size of a Jacobian matrix in tuple
Create 2D rotation matrix
Convolve an array with a kernel using FFT . Implemntation based on the convolve_fft function from astropy .
Convert a Stripe API timestamp response ( unix epoch ) to a native datetime .
Deletes an object ( line triangle image etc ) from the drawing .
Get all the database column names for the specified table .
Cast uint32 RGB image to 4 uint8 channels .
Turn bytes into base64
Return human readable string .
Determine if a file is empty or not .
Take a date object and return the first day of the month .
Get from a list with an optional default value .
Returns a list consisting of the cumulative sum of the items in the passed list .
Returns a stringified representation of this object .
Pop - up menu and wx . EVT_CLOSE closing event
Make sure thre is no whitespace in the given string . Will raise a ValueError if whitespace is detected
Retrieves a value by name .
Raw print to sys . __stdout__ otherwise identical interface to print () .
Returns the value of the cell on the given row and column .
Remove the element from a set lists or dict . >>> L = [ Lucy ] ; S = set ( [ Sky ] ) ; D = { Diamonds : True } ; >>> remove_once ( L Lucy ) ; remove_once ( S Sky ) ; remove_once ( D Diamonds ) ; >>> print L S D [] set ( [] ) {}
Skip a single frame from the trajectory
Get the billing cycle prior to this one . May return None
str to bytes ( py3k )
Gets tail
Helper to render a list of dictionaries as an HTML display object .
Convert snake case string to camel case .
Determine whether a system service is available
Just the last entry .
Returns True if pip exists inside the virtual environment . Can be used as a naive way to verify that the environment is installed .
Finds the index of an item in list which satisfies predicate : param predicateFn : predicate function to run on items of list : param items : list of tuples : return : first index for which predicate function returns True
Break lists into small lists for processing : w
Is this attribute present?
Remove punctuation from string s .
Wrap an AST Call node to lambda expression node . call : ast . Call node
Return a prettier version of obj
Invoke pytest replacing argv . Return result code .
An iterable of column names for a particular table or view .
View the quaternion array as an array of floats
Get the value of a local variable somewhere in the call stack .
Update the column width .
Test if string matches this argument s format .
Remove html code contained into the given string .
Helper function to unpickle data from picklefile .
If output is string then print the string and also time used
Return the length of the longest consecutive run of identical values .
Diag op .
Return n_clusters centroids of points
Returns a temporary filename based on filename .
Does a string replace with a list of search and replacements
Normalized Gaussian
Converts a list of lists into a flat list . Args : x : list of lists
The function compares strings ignoring case
Test two dictionary is equal on values . ( ignore order )
Clean a pandas dataframe by : 1 . Filling empty values with Nan 2 . Dropping columns with all empty values
Splits string into n sized chunks .
Returns the size of the layer with the border size already subtracted .
transpose matrix
String hash ( djb2 ) with consistency between py2 / py3 and persistency between runs ( unlike hash ) .
Returns the normalized mean square error of a and b
computes factorial of n
Create a run . log within folder . This file contains the time of the latest successful run .
Install venv + deps .
Returns the index of the earliest occurence of an item from a list in a string
Toggle linear / log scale for Y - axis .
Returns the estimated standard error of the mean ( sx - bar ) of the values in the passed list . sem = stdev / sqrt ( n )
For Python3 compatibility of generator .
Perform a O ( 1 ) memory hash of an iterable of arbitrary length .
Sets all defaults for the given dictionary to those contained in a second defaults dictionary . This convenience method calls :
r Determine the intersection of two line segments .
Get the category of the item .
shows structured information of a object list tuple etc
Refresh the screen . You don t need to override this except to update only small portins of the screen .
Get line count of file
Attempts to convert given object to a string object
Returns int () of val if val is not convertable to int use default instead
Perform actions before parent main window is closed
Converts array into chunks with consecutive elements of given step size . http : // stackoverflow . com / questions / 7352684 / how - to - find - the - groups - of - consecutive - elements - from - an - array - in - numpy
check if we need graphviz for different output format
attempt to draw str on screen and ignore errors if they occur
Checks if given value is a list tries to convert if it is not .
Whether any of the strings contains any of the candidates .
Return a : py : class : datetime . datetime instance representing the current time .
Format numpy array as a string .
Returns a bs4 object of the page requested
If value is a datetime convert to timestamp
Normalize a file / dir name for comparison purposes
Decode base64 string to byte array .
Returns a random string of length string_length .
Render the plot with bokeh . io and push to notebook .
Centre and normalize a given array .
Check for app updates and print / log them .
x is a 2D sparse matrix with it s first shape equal to 1 .
Format a duration in seconds .
helper function to make a dict from a coordinate for logging
Boolean property if this action has expired
Given a target dct and a dict of { key : default value } pairs calls setdefault for all of those pairs .
Replace all the ocurrences ( in a file ) of a string with another value .
Return a dict from entries in a scala . collection . immutable . Map
Move the cursor up a number of lines .
Split data into chunks of num chars each
convert to datetime to UTC offset .
str to bytes ( py3k )
Get the date that a file was created .
Returns Gaussian smoothed image .
Return type depend from both operand of the binary operation .
get element by name
Check if string could be a valid python identifier
Transform a ( multidimensional ) variable access to a flattend sympy expression .
Take a US format date and return epoch .
Get primary key properties for a SQLAlchemy cls . Taken from marshmallow_sqlalchemy
Combine data and a fits header to write a fits file .
Merge this range object with another ( ranges need not overlap or abut ) .
to get states from multiprocessing . queue
Formats the text input with newlines given the user specified width for each line .
Return only future Day objects .
Push a new value into heap .
Is this a string .
Remove non - alphanumerical characters from metric word . And trim excessive underscores .
Check if we are on a Lyon machine
Convert all keys of the dict d to ( ascii - ) strings .
Set the scroll region on the canvas
Choose k random elements of array .
Return a string with terminal colors .
Returns a dictionary from a URL params
Return a reversed iterable over the items in the dictionary . Items are iterated over in their reverse sort order .
Imputes data set containing Nan values
Saves a pdf of the current matplotlib figure .
The current position of the cursor .
Sends Modify_DNS_Record request
Return a tuple of strings that match the regular expression pattern .
Update the request headers .
Display productpage with normal user and test user buttons
Gets names of all methods implemented in specified object .
Like pretty but print to stdout .
Queries should be a list of GraphQL objects
Get all documents from the given index .
Normalize the string according to normalization list
Splits string into n sized chunks .
>>> l = [ 1 1 1 ] >>> obj_in_list_always ( l 1 ) True >>> l . append ( 2 ) >>> obj_in_list_always ( l 1 ) False
Return array - like containing only true / non - NaN values possibly empty .
Returns a string for various input types
return unique rows
Parse a bool from a string .
Return a virtual concatenate of several NumPy arrays .
Compute boxplot for given pandas Series .
use before any custom printing when using the progress iter to ensure your print statement starts on a new line instead of at the end of a progress line
takes a list of lists l and returns a flat list
Composes the passed filters into an and - joined filter .
Shutdown the service with a reason .
Retrieve the previous quarter for dt
Clear the displayed image .
Find and kill child processes of a process .
Get distance between pairs of lat - lon points
get the current month s last day : param year : default to current year : param month : default to current month : return : month s last day
split string into list of strings by specified number .
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
Multiprocess mapping the given function on the given iterable .
Create a conda environment inside the current sandbox for the given list of dependencies and options .
Checks if the given type is an enum type .
Converts a string to a string that is safe for a filename Args : string ( str ) : A string to make safe for a filename
Adjust image balance and contrast
Returns True if pip exists inside the virtual environment . Can be used as a naive way to verify that the environment is installed .
Checks to see if a 2D list is a valid 2D matrix
Makes a HEAD request to find the final destination of a URL after following any redirects
Returns True if test is True for all array elements . Otherwise returns False .
Given a numpy dtype determines whether it is a string . Returns True if the dtype is string or unicode .
Extracts the subject line from an EmailMessage object .
Takes a list of ( key value ) pairs and turns it into a dict .
DOES NOT WORK WELL WITH MOPIDY Hack from https : // www . daniweb . com / software - development / python / code / 260268 / restart - your - python - program to support updating the settings since mopidy is not able to do that yet Restarts the current program Note : this function does not return . Any cleanup action ( like saving data ) must be done before calling this function
Parse datetime .
Return an old style protocol buffer object .
Formats the given number in decimal format using a period and commas
Upgrade all packages skip obsoletes if obsoletes = 0 in yum . conf .
Apply Gaussian blur to the given data .
Remove duplicates from list while preserving order .
Returns the negated mask . If elements of input mask have 0 and non - zero values then the returned matrix will have all elements 0 ( 1 ) where the original one has non - zero ( 0 ) . : param mask : Input mask : type mask : np . array : return : array of same shape and dtype = int8 as input array : rtype : np . array
Generates RGB values from HSV values in line with a typical light spectrum .
Return all ( and only ) the uppercase chars in the given string .
Retrieves the Python library directory path .
Ensure val is Nx ( n_col ) usually Nx3
Return the value of a float property .
Memory usage of my values
Get width and height of a PDF
Return flattened dictionary from MultiDict .
Get the billing cycle prior to this one . May return None
Get a property by name
r Like rotate but modifies l in - place .
Checks whether a variable is a numpy integer array .
Set the size of the label .
Return manhattan distance between two lists of numbers .
Intercept standard output in a with - context : return : cStringIO instance
Remove all HTTP / 1 . 1 Hop - by - Hop headers from a list or : class : Headers object . This operation works in - place .
bytes to unicode
Get the clipboard s text on OS X .
Adds an action to the parser cli .
Like map but also chains the results .
Return the location of the static data directory .
Matrix multiplication using binary
Raises a requests . exceptions . HTTPError if the response has a non - 200 status code .
Convenience function for loading yaml - encoded data from disk .
Converts a 1D list to a single long string for file output using the string . join function .
Return string with compressed whitespace .
Delayed close - won t close immediately but on the next reactor loop .
Perform a simple check if the value is callable .
Raise the elements of an asynchronous sequence to the given power .
Function that prune the decision tree .
Gets the user enter max and min values of where the raster points should appear on the y - axis
Compute Pearson correlation coefficient .
Uses OLS to fit the regression .
Populates the ListView with a string list .
DFS detect connected component recursive implementation
helpful in situations where browser / app may recognize Unicode encoding in the \ u0b8e type syntax but not actual unicode glyph / code - point
Returns the length in bytes of a given file object . Necessary because os . fstat only works on real files and not file - like objects . This works on more types of streams primarily StringIO .
Toggle linear / log scale for Y - axis .
Return first row and also iterable with same items as original
Linear model m is [ slope nugget ]
Yield directory file names .
From a list of intervals extract a list of sorted gaps in the form of [ ( g i ) ] where g is the size of the ith gap .
Strip SGML / XML tags and replace adjacent whitespace by one space .
Python 3 input () / Python 2 raw_input ()
Checks if the user is rooted .
Convert a Stripe API timestamp response ( unix epoch ) to a native datetime .
dictionary of conversion
Saves the dictionary in json format : param fname : file to save to
Check if this enum has a particular name among its values .
Create an instance from a dictionary .
Returns a list with no repeated elements .
Converts a Python 2 function as lambda ( x y ) : x + y In the Python 3 format : lambda x y : x + y
Remove empty utterances from a list of utterances Args : utterances : The list of utterance we are processing
Convert to lowercase and strip spaces
Implements the context manager protocol . Specially useful for asserting exceptions
Determines if a list is sorted
Similar to #itertools . chain . from_iterable () .
Helper for plotting .
Normalizes the given vector . The vector given may have any number of dimensions .
Reads text file contents
Round a float to a precision
Generate a UUID .
rounds float to closest int : rtype : int : param n : float
Return all child objects in nested lists of strings .
Convert datetime to epoch seconds .
Determine if two objects are equal .
Completer function for Python s readline / libedit implementation .
count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )
numeric denotes typed literals with datatypes xsd : integer xsd : decimal xsd : float and xsd : double .
Test the multiprocess
get a collection of records by table name . returns a dict ( the json map ) for python 3 . 4
Return a list of dictionaries which are sorted for only unique entries .
Returns True if test is True for all array elements . Otherwise returns False .
Method to extract keywords from the text provided .
Convert string from snake case to camel case .
x is a 2D sparse matrix with it s first shape equal to 1 .
Get the html for a Bokeh chart
iterator version of get_list_column
Convert a dict of 1d array to a numpy recarray
shotcut to pull out useful info for interactive use
Error handler
takes a list of lists l and returns a flat list
Saves an animation
Read a given number of 32 - bits unsigned integers from the given file with the given endianness .
Version of load_result for multiple input files that will be loaded concurrently .
Report whether another set contains this set .
Read and return the data from a corpus json file .
Download the page into a string
Align the given integer number to the closest page offset which usually is 4096 bytes .
Trim a PIL image and remove white space .
Replace all the ocurrences ( in a file ) of a string with another value .
move to util_iter
Get the last weekday in a given month . e . g :
get the current month s last day : param year : default to current year : param month : default to current month : return : month s last day
Conver a path string to a list of path elements .
Use numpy to create a real matrix object from the data
Compute the eigvals of mat and then find the center eigval difference .
Check if a file exists and is non - empty .
Json - serializable dict representation of PhononDos .
Softsign op .
Transform CamelCase naming convention into C - ish convention .
expects a _n . array returns the global minimum of ( value - array ) ^2
Check if file or directory is world writable .
Generator that yields lines from standard input .
generic plotting method overplotting any existing plot
Check whether the provided array or dtype is of the string dtype .
Transpose the columns into rows remove all of the rows that are empty after the first cell then transpose back . The result is that columns that have a header but no data in the body are removed assuming the header is the first row .
Given a list ( l ) will removing duplicates from the list preserving the original order of the list . Assumes that the list entrie are hashable .
Writes a float to the underlying output file as a 4 - byte value .
Exit execution with return code and message : param msg : Message displayed prior to exit : param code : code returned upon exiting
Load JSON file
Read a file and close it . Returns the file source .
Python2 accumulate implementation taken from https : // docs . python . org / 3 / library / itertools . html#itertools . accumulate
Take a list of strings and clear whitespace on each one . If a value in the list is not a string pass it through untouched .
Turn an SQLAlchemy model into a dict of field names and values .
Sophisticated simulation of multiplication
Connect to FTP server login and return an ftplib . FTP instance .
Multiply each number by a constant such that the sum is 1 . 0 >>> normalize ( [ 1 2 1 ] ) [ 0 . 25 0 . 5 0 . 25 ]
Convert Matrix attributes which are array - like or buffer to array .
Decodes a given base64 string into bytes .
Any normal python logic which runs a loop . Can take arguments .
Convert special characters using %xx escape .
Sort data rows and order columns
return an iterator that returns a chunk of a string every time it is called . notice that even though bufsize_type might be line buffered we re not doing any line buffering here . that s because our StreamBufferer handles all buffering . we just need to return a reasonable - sized chunk .
Extract a de - duped collection ( set ) of text from a file . Expected file format is one item per line .
Sets the title of the console window .
Initializes a rotating logger
Rate limit a function .
Return a DataFrame with the duplicated values of the column col_name in df .
Return the dot product of the given vectors .
Subsystems used outside of any task .
Returns a gid given a group name .
Find longest ORF from the given list of ORFs .
Formats Python code to conform to the PEP 8 style guide .
Is this attribute present?
Remove sequence duplicates ( based on sequence ) from FASTA .
printdict
Like dict but does not hold any null values .
Write a single property to the file in Java properties format .
Context manager that suppresses stdout .
count occurences in a list of lists >>> count ( [[ a b ] [ a ]] ) defaultdict ( int { a : 2 b : 1 } )
Invert mapping of dictionary ( i . e . map values to list of keys )
Cast uint32 RGB image to 4 uint8 channels .
Return True if object is defined
Returns full ISO string for the given date
Return True if dtype is a numeric type .
Wrap vertical table in a function for TabularOutputFormatter .
simple method to determine if a url is relative or absolute
Returns data as : class : numpy . recarray .
Adds the argument variable as one of the input variable
Discover the current time zone and it s standard string representation ( for source { d } ) .
Register the reporter classes with the linter .
Return True if the class is a date type .
Removes underscores and capitalizes the neighbouring character
Return minimal quantum of a number as defined by precision .
Delete a directory if it s present . If it s not present no - op .
Counts the word frequences in a list of sentences .
Check if cnr or cns files are empty ( only have a header )
Whether this is a function parameter .
sorting multiple arrays based on another arrays sorted order
priority queue
custom http error response
randomly extract x items from a list
extract data from html content
html encode string
how to determine a string is a valid word
convert json to csv
get executable path
how to empty array
parse query string in url
how to randomly pick a number
get current ip address
aes encryption
confusion matrix
get current observable value
linear regression
extract latitude and longitude from given input
convert decimal to hex
unzipping large files
k means clustering
export to excel
how to get current date
set file attrib hidden
how to read the contents of a .gz compressed file?
extracting data from a text file
get inner html
heatmap from 3d coordinates
get the description of a http status code
get current process id
filter array
parse json file
group by count
how to make the checkbox checked
how to read .csv file in an efficient way?
sending binary data over a serial connection
read properties file
convert a date string into yyyymmdd
get name of enumerated value
format date
scatter plot
deducting the median from each column
write csv
encrypt aes ctr mode
binomial distribution
replace in file
print model summary
copy to clipboard
converting uint8 array to image
normal distribution
html entities replace
how to check if a checkbox is checked
nelder mead optimize
memoize to disk  - persistent memoization
positions of substrings in string
convert string to number
copying a file to a path
deserialize json
read text file line by line
hash set for counting distinct elements
set working directory
encode url
httpclient post json
convert int to string
connect to sql
how to extract zip file recursively
parse binary file to custom class
finding time elapsed using a timer
initializing array
string to date
find int in string
create cookie
how to reverse a string
pretty print json
reading element from html - <td>
map to json
how to get html of website
save list to file
socket recv timeout
get all parents of xml node
unique elements
output to html file
matrix multiply
parse command line argument
convert int to bool
regex case insensitive
json to xml conversion
postgresql connection
string similarity levenshtein
fuzzy match ranking
readonly array
all permutations of a list
convert a utc time to epoch
sort string list
concatenate several file remove header lines
buffered file reader read text
how to get database table name
underline text in label widget
convert html to pdf
"""Get string from file."""
"""         Return the number of rows preceding the data table for *series* in         the Excel worksheet.         """
"""Remove all unwanted characters from text."""
"""Remove invalid and dangerous characters from a string."""
"""Handle an incoming notify request."""
"""         :return: latest commit         :rtype: git.Commit object         """
"""Remove all unwanted characters from text."""
"""     Convert capital I's and capital dotted İ's to lowercase in the way     that's appropriate for Turkish and related languages, then case-fold     the rest of the letters.     """
"""     Generate example strategies to target folder     """
"""     generator of list folder in the path.     folders only     """
"""Render a template into a response."""
"""         Checks if bucket with specified name exists.         :param bucket: the bucket to be checked.         :return: true if specified bucket exists.         """
"""Forcefully delete objects from memory          In an ideal world, this shouldn't be necessary. Garbage         collection guarantees that anything without reference         is automatically removed.          However, because this application is designed to be run         multiple times from the same interpreter process, extra         case must be taken to ensure there are no memory leaks.          Explicitly deleting objects shines a light on where objects         may still be referenced in the form of an error. No errors         means this was uneccesary, but that's ok.          """
"""     This removes newlines and multiple spaces from a string.     """
"""Checks if the string `s` is a valid enum string.      Return True or False."""
""" Returns true iff all elements of names are valid features.     """
""" iterator version of get_list_column """
"""if the value is in the list, move it to the front and return it."""
"""Filter out duplicate items from an iterable"""
"""convert iterable object into numpy array"""
"""     Computes logfactorial regularly for tractable numbers, uses Ramanujans approximation otherwise.     """
"""     Download the page into a string     """
""" Returns a copy of the list without duplicates.     """
"""Return posessive form of numeral `n`: 1st, 2nd, 3rd, etc."""
"""Truncate a string at index and add ..."""
"""Converts a comma separated string to a list"""
""" 	Function used internally to format string data for output to XML. 	Escapes back-slashes and quotes, and wraps the resulting string in 	quotes. 	"""
""" append item and print it to stdout """
"""Return line ending."""
"""     Emulate what a Python ``set()`` does, but keeping the element's order.     """
"""         Returns the name of the port that this motor is connected to.         """
"""     :param dt:  pythone datetime.datetime     :return:  1999-02-01 string type     """
""" Not recommended for use on large lists due to time             complexity, but it works              -> #int list index of @item         """
""" Not recommended for use on large lists due to time             complexity, but it works              -> #int list index of @item         """
""" Nested lists to single-level list, does not split strings"""
"""Compute the rotation matrix representated by the quaternion"""
"""Auto Generated Code         """
"""         Converts a value expressed in certain *units* to a new units.         """
"""         The cell lengths.          Args:             None          Returns:             (np.array(a,b,c)): The cell lengths.         """
"""Returns True if pip exists inside the virtual environment. Can be         used as a naive way to verify that the environment is installed."""
"""Pretty print an object as YAML."""
"""Removes `dict` keys which have have `self` as value."""
"""   Makes a classname   """
""" Pretty print a CSV file. """
""" Returns 0 to 1 rgb from a hex list or tuple """
""" Returns coordinates for point at t on the line.             Calculates the coordinates of x and y for a point at t on a straight line.             The t parameter is a number between 0.0 and 1.0,             x0 and y0 define the starting point of the line,             x1 and y1 the ending point of the line.         """
"""Reads a tif file to a 2D NumPy array"""
"""convert iterable object into numpy array"""
"""Checks value for minimum length using len()."""
"""Calculate the tanimoto set similarity."""
"""     Returns a 2x2 transformation matrix to rotate     by an angle in two dimensions     """
""" Nested lists to single-level list, does not split strings"""
"""convert iterable object into numpy array"""
"""Test if an array is a square matrix."""
"""         """
"""Helps remove extraneous whitespace from the lines of a file      :param file in_file: A readable file or file-like     :param file out_file: A writable file or file-like     """
"""Joins two dictionaries."""
"""     Converts a list of lists into a flat list.          Args:         x: list of lists       Returns:         flat list              As per     http://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python      """
"""Neutrino direction in polar coordinates.      Downgoing event: theta = 180deg     Horizont: 90deg     Upgoing: theta = 0      Angles in radians.     """
"""Converts a comma separated string to a list"""
""" Collect digits from a string """
"""Close the file and restore the channel."""
"""Add executable permissions to the file      :param target_file: the target file whose permission to be changed     """
"""A non-negative integer."""
""" Kernel SHAP 1000 mean ref.     color = red_blue_circle(0.5)     linestyle = solid     """
"""Convert an ARF timestamp to a datetime.datetime object (naive local time)"""
""" Nested lists to single-level list, does not split strings"""
"""Convert to float if object is a float string."""
"""Is this a string.      :param object obj:     :rtype: bool     """
"""     Replace all the ocurrences (in a file) of a string with another value.     """
"""helper function for quick base conversions from integers to strings"""
"""Determine if end-of-file is reached for file fd."""
"""   Get tuple (actually a generator) of indices where the max value of   array x occurs. Requires that x have a max() method, as x.max()   (in the case of NumPy) is much faster than max(x).   For a simpler, faster argmax when there is only a single maximum entry,   or when knowing only the first index where the maximum occurs,   call argmax() on a NumPy array.    :param x: Any sequence that has a max() method.   :returns: Generator with the indices where the max value occurs.   """
"""Test the multiprocess     """
"""Transforms a list of 2 element tuples to a dictionary"""
"""Total number of grid points."""
""" """
"""Uses dynamic programming to infer the location of spaces in a string without spaces."""
"""     Helper to convert config values to boolean as ConfigParser do.     """
"""         date to unix timestamp in milliseconds     """
"""     remove problem characters from string     """
"""     Remove html code contained into the given string.      :param string: String to manipulate.     :type string: str     :param keep_tag_content: True to preserve tag content, False to remove tag and its content too (default).     :type keep_tag_content: bool     :return: String with html removed.     :rtype: str     """
"""Get single system variable from CCU / Homegear"""
""" print the message to the predefined log file without newline """
""" Reads image specified by path into numpy.ndarray"""
""" Serializes a numpy array to a compressed base64 string """
"""Shows the given correlation matrix as image          :param correlation_matrix: Correlation matrix of features         """
"""If Python 2, replace non-ascii characters and return encoded string."""
"""     Helper function for taking a Unicode scalar value and returning a Unicode character.      :param s: Unicode scalar value to convert.     :return: Unicode character     """
"""Return sanitized Eidos text field for human readability."""
""" Nested lists to single-level list, does not split strings"""
"""Start and maintain the streaming connection..."""
"""     Returns the directory path for the given package or module.     """
"""         Shutdown the cluster.         """
""" Write the given colored string to standard out. """
"""Helper for plotting."""
"""Set up a basic stereonet and plot the same data each time."""
"""Generate a unique ID, that is somewhat guaranteed to be unique among all     instances running at the same time."""
"""Whether the item is a placeholder or contains a placeholder."""
""" returns unique elements from a list preserving the original order """
"""Checks if l is a 2D numpy array of bools      """
"""Transform triple index into a 1-D numpy array."""
"""     :rtype : numpy matrix     """
"""Safely convert a single number to integer."""
"""Remove missing values according to Baloo's convention.          Parameters         ----------         subset : list of str, optional             Which columns to check for missing values in.          Returns         -------         DataFrame             DataFrame with no null values in columns.          """
"""      Returns the number you should add to ydata1 to make it line up with ydata2      """
"""Return the products from a query response as a Pandas DataFrame         with the values in their appropriate Python types.         """
"""Auto Generated Code         """
"""         Args:             post_clean_up: This function is called on each set of optimized                 operations before they are put into the circuit to replace the                 old operations.         """
""" Nested lists to single-level list, does not split strings"""
"""     Should we skip logging for this handler?      """
"""Call a system command in the background,        disown it and hide it's output."""
"""Takes input from user. Works for Python 2 and 3."""
"""printdict"""
""" Check that value is in values """
""" Remove punctuation from string s. """
"""Utility function which converts lists to tuples."""
"""     Adapts a Numpy array into an ARRAY string to put into the database.      Parameters     ----------     arr: array         The Numpy array to be adapted into an ARRAY type that can be inserted into a SQL file.      Returns     -------     ARRAY             The adapted array object      """
"""     Rounds a float value off to the desired precision     """
"""insert_slash insert / every 2 char"""
"""     Check to make sure the original file exists     """
"""Utility method to convert list to tsv line with carriage return"""
"""Check to see if two AABoundingBoxes are colliding."""
"""     Get input from the user given an input function and an input string     """
"""Test if a file is located within the given directory."""
"""Assign the value for the field using this style.         """
"""     Writes text to a file.     """
"""Removes trailing whitespace on each line."""
"""Sends the user a password reset link (by email)          Args:             username: The account username.          Returns:             True: Succeeded             False: If unsuccessful         """
"""Safely convert a single number to integer."""
""" returns unique elements from a list preserving the original order """
"""Returns a normalized unit number, i.e. integers     Raises exception X10InvalidUnitNumber if unit number appears to be invalid     """
"""Convert a grayscale image to BGR image.      Args:         img (ndarray or str): The input image.      Returns:         ndarray: The converted BGR image.     """
"""         """
"""Helper for plotting."""
""" insert in text field """
""" 		Writes data to a file 		"""
"""There's probably a way to do this with string functions but I was lazy. 		Replace all instances of \r or \n in a string with something else."""
"""Unified rounding in all python versions."""
""" Nested lists to single-level list, does not split strings"""
"""Reads a tif file to a 2D NumPy array"""
"""Track Processor execution time for benchmarking."""
"""     Return the given path relative to this file.     """
""" Returns a copy of the list without duplicates.     """
"""Utility function to create regexp for matching escaped separators     in strings.      """
"""    Function for running binary search on a sorted list.    :param arr: (list) a sorted list of integers to search   :param val: (int)  a integer to search for in the sorted array   :returns: (int) the index of the element if it is found and -1 otherwise.   """
""" Scroll the whole page down a number of lines, new lines are added to         the top.          Esc[<lines>T     """
""" 	Get the modified time for a file as a datetime instance 	"""
"""     Checks file sizes for host     """
"""     Slicing op.     """
"""     >>> _numbers_units(45)     '123456789012345678901234567890123456789012345'     """
"""convert iterable object into numpy array"""
"""Check if an element from a list is in a string.      :type elems: list     :type line: str      """
"""     Check if a character is Thai     เป็นอักษรไทยหรือไม่      :param str ch: input character     :return: True or False     """
"""Write a dict to a JSON file."""
"""Add colons after every second digit.      This function is used in functions to prettify serials.      >>> add_colons('teststring')     'te:st:st:ri:ng'     """
"""     Fetch an image from url and convert it into a Pillow Image object     """
"""Auto Generated Code         """
"""Move back a character. """
"""     :param source: some iterable source (list, file, etc)     :param lineSep: string of separators (chars) that must be removed     :return: list of non empty lines with removed separators     """
"""     Every two weeks.     """
"""Takes input from user. Works for Python 2 and 3."""
"""Test if an array is a square matrix."""
"""     >>> _isint("123")     True     >>> _isint("123.45")     False     """
"""Join list of columns into a string for a SQL query"""
"""     Concatenate string and zero-padded 4 digit number     """
"""          in reversed order         """
"""Implements the '===' operator."""
""" Nested lists to single-level list, does not split strings"""
""" Nested lists to single-level list, does not split strings"""
"""Print Json in pretty format.     There's a standard module pprint, can pretty print python dict and list.     But it doesn't support sorted key. That why we need this func.      Usage::          >>> from weatherlab.lib.dataIO.js import prt_js         >>> prt_js({"a": 1, "b": 2})         {             "a": 1,             "b": 2         }      **中文文档**      以人类可读的方式打印可Json化的Python对象。     """
"""Prints to stdout help on how to answer properly"""
"""remove duplicates from a sequence, preserving order"""
"""Generalized Guinier scattering      Inputs:     -------         ``q``: independent variable         ``G``: factor         ``Rg``: radius of gyration         ``s``: dimensionality parameter (can be 1, 2, 3)      Formula:     --------         ``G/q**(3-s)*exp(-(q^2*Rg^2)/s)``     """
"""Exit the shell session."""
"""     Helper function to turn a string representation of "true" into     boolean True.     """
"""Format BF10 to floating point or scientific notation.     """
"""Return a CSV representation as a string"""
"""Takes input from user. Works for Python 2 and 3."""
"""     Does openat read-only, then does fdopen to get a file object     """
"""Squash self.out into string.          Join every line in self.out with a new line and write the         result to the output file.         """
"""Given a list (l) will removing duplicates from the list,        preserving the original order of the list. Assumes that        the list entrie are hashable."""
"""A quick and dirty way to get a unique string"""
"""     Helper function to determine numbers     across Python 2.x and 3.x     """
"""Utility method to convert list to tsv line with carriage return"""
"""Turn the ring for a single position.         For example, [a, b, c, d] becomes [b, c, d, a]."""
"""Returns a tuple of the graphene version. If version argument is non-empty,     then checks for correctness of the tuple provided.     """
"""test if object is a list or tuple"""
"""Utility function which converts lists to tuples."""
""" Ajout d'un message de log de type DEBUG """
"""Given the temp directory that is created for each run, return the path to the directory         where files created by the tool are stored."""
"""(dpid, key) in <ConfSwitchSet instance>"""
"""launch layouts display"""
""" Pretty print a CSV file. """
"""     Gets the median of a list of values     Returns a float/int     """
"""     Add a newline character to the end of each <br> element.     """
""" Nested lists to single-level list, does not split strings"""
"""         Invoked when determining whether a specific key is in the dictionary         using `key in d`.          The key is looked up case-insensitively.         """
""" download the image, convert it to a NumPy array, and then read     it into OpenCV format """
"""Outputs a string to the console (stdout)."""
"""Log in to the API."""
"""Return a column of the given matrix.          Args:             X: `numpy.ndarray` or `pandas.DataFrame`.             column: `int` or `str`.          Returns:             np.ndarray: Selected column.         """
""" Returns a copy of the list without duplicates.     """
"""Helper parse action to convert tokens to lower case."""
"""     Replace all the ocurrences (in a file) of a string with another value.     """
"""Returns false if key is not found or is ambiguous"""
"""Dimensions of the arrays in this list that are used in all arrays         """
"""         Check if enough time has elapsed to perform a check().          If this time has elapsed, a state change check through         has_state_changed() should be performed and eventually a sync().          :rtype: boolean         """
"""      Compare items in 2 arrays. Returns sum(abs(a(i)-b(i)))     """
"""Example of how to send server generated events to clients."""
"""     at least one file must exist for multiqc to run properly     """
"""     Try to get a number out of a string, and cast it.     """
"""     Compress things in a py2/3 safe fashion     >>> json_str = '{"test": 1}'     >>> blob = zlib_compress(json_str)     """
"""printdict"""
"""Split a string with comma or space-separated elements into a list."""
""" Simplified check to see if the text appears to be a URL.      Similar to `urlparse` but much more basic.      Returns:       True if the url str appears to be valid.       False otherwise.      >>> url = looks_like_url("totalgood.org")     >>> bool(url)     True     """
"""Round a number to a precision"""
"""Return provided 32 bit value as a string of four bytes."""
"""A generator that will generate a range of floats."""
"""     Test if the argument is a string representing a valid hexadecimal digit.      :param obj: Object     :type  obj: any      :rtype: boolean     """
"""Return the items with the higest score.          If this ScoreSet is empty, returns None.         """
"""A method to determine absolute path for a given relative path to the     directory where this setup.py script is located"""
"""         Convert lexicon file to a dictionary         """
"""Regular expression to match playbook variable."""
""" Helper function to read JSON file as OrderedDict """
"""Takes a list of (key,value) pairs and turns it into a dict."""
"""Merge all columns and place text string in widened cell."""
"""     Writes text to a file.     """
"""     Returns the string without non-ASCII characters.      Parameters     ----------     string : string         A string that may contain non-ASCII characters.      Returns     -------     clean_string : string         A string that does not contain non-ASCII characters.      """
"""Uses dynamic programming to infer the location of spaces in a string without spaces."""
"""     Converts a list of lists into a flat list.          Args:         x: list of lists       Returns:         flat list              As per     http://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python      """
"""Convert a string of bytes into an integer, as per X9.62."""
"""Converts and image to matrix (one pixel per line)"""
"""Checks for an empty image.         """
"""     Returns a 2 x m array indicating the min and max along each     dimension.     """
"""Joins two dictionaries."""
"""Get string from file."""
"""Read a file and close it.  Returns the file source."""
"""     return a datetime of last mid-night     """
"""Escape bad characters for regular expressions.          Similar to `re.escape` but allows '%' to pass through.          """
"""     Converts a list of lists into a flat list.          Args:         x: list of lists       Returns:         flat list              As per     http://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python      """
"""Waits until all outstanding tasks are completed."""
"""Fix common typos in given URL like forgotten colon."""
"""Return the sum of the element-wise product of vectors x and y.     >>> dotproduct([1, 2, 3], [1000, 100, 10])     1230     """
"""     Sorts a list of strings case insensitively as well as numerically.      For example: ['a1', 'A2', 'a3', 'A11', 'a22']      To sort a list in place, don't call this method, which makes a copy. Instead, do this:      my_list.sort(key=natural_keys)      :param list_to_sort: the list being sorted     :return: the list sorted naturally     """
"""Decode content of a list.          :param list|tuple content:         :return:         """
"""Send request"""
"""The distance between two skip-connections."""
"""Returns the most common element in `iterable`."""
"""         returns the qth most probable element in the dawg.         """
""" takes flags returns indexes of True values """
"""Draw a circle using world coordinates and radius."""
"""in string astr replace all occurences of thefind with thereplace"""
"""Transform underscore separated string to pascal case      """
"""Joins two dictionaries."""
"""Delete a file safely. If it's not present, no-op."""
"""Print, emphasized 'good', the given 'txt' message"""
"""Show marker area scale for subplots.          :param row_column_list: a list containing (row, column) tuples to             specify the subplots, or None to indicate *all* subplots.         :param location: the location of the label inside the plot.  May             be one of 'center', 'upper right', 'lower right', 'upper             left', 'lower left'.          """
"""Bytes are encoded as a long followed by that many bytes of data."""
"""Horizontally flip the given PIL Image.      Args:         img (PIL Image): Image to be flipped.      Returns:         PIL Image:  Horizontall flipped image.     """
"""     Get all items in the basket     """
""" Returns a copy of the list without duplicates.     """
"""Adds a value from the given source."""
"""Utility function to create regexp for matching escaped separators     in strings.      """
"""Convert unix timestamp to human readable date/time string"""
"""         Close the db and release memory         """
"""Takes a list of (key,value) pairs and turns it into a dict."""
"""Any normal python logic which runs a loop. Can take arguments."""
""" Check that value is in values """
"""Takes a list of (key,value) pairs and turns it into a dict."""
"""Turns response into a properly formatted json or text object"""
"""Helper for plotting."""
"""Public function that reads a local file and generates a SHA256 hash digest for it"""
""" Nested lists to single-level list, does not split strings"""
"""Determine if we need text or url output"""
"""Turn dict keys and values into native strings."""
"""Convenience method that works with all 2.x versions of Python     to determine whether or not something is stringlike."""
"""     Returns true if all of the elements in the list are equal.     """
"""Read a file and close it.  Returns the file source."""
"""psycopg2 doesn't know how to quote identifier names, so we ask the server"""
""" check if day is month's 3rd friday """
"""     Standard place to convert responses to JSON.      :param response: requests response object     :param **kwargs: arguments accepted by json.loads      :returns: dict of JSON response     """
""" Nested lists to single-level list, does not split strings"""
""" Strip all color codes from a string.         Returns empty string for "falsey" inputs.     """
"""Stops the analysis as soon as possible."""
""" Converts html content to plain text """
"""         When given a url, this function will find all the available table names         for that EPA dataset.         """
"""Compute tokenwise (elementwise) accuracy.    Args:     labels: ground-truth labels, shape=(batch, seq_length)     outputs: predicted tokens, shape=(batch, seq_length)   Returns:     Two ops, one for getting the current average accuracy and another for     updating the running average estimate.   """
"""Find the Nani's base type for a given data type.      This is useful when Nani's data types were subclassed and the original type     is required.     """
"""     Locate the leftmost value exactly equal to x.      :type array: list     :param array: an iterable object that support inex      :param x: a comparable value      **中文文档**      返回第一个值等于x的元素的索引。     """
"""Clear current mana values."""
"""Return all elements from the list."""
"""Get string from file."""
""" 	Walk the XML tree of children below elem, returning each in order. 	"""
"""If Python 2, replace non-ascii characters and return encoded string."""
""" see "Dynamic Filter Networks" (NIPS 2016)         by Bert De Brabandere*, Xu Jia*, Tinne Tuytelaars and Luc Van Gool      Remarks:         This is the convolution version of a dynamic filter.      Args:         inputs : unfiltered input [b, h, w, 1] only grayscale images.         filters : learned filters of [b, k, k, 1] (dynamically generated by the network).         out_channel (int): number of output channel.         kernel_shape: (h, w) tuple or a int.         stride: (h, w) tuple or a int.         padding (str): 'valid' or 'same'. Case insensitive.      Returns         tf.Tensor named ``output``.     """
"""     >>> _numbers_units(45)     '123456789012345678901234567890123456789012345'     """
"""Return a single callable that applies a list of methods to a value.      If a method returns None, the last value is kept; if it returns     some other value, that replaces the last value.  Exceptions are     not caught.     """
"""Compose all given tuples together."""
"""Print a formatted indented text.         """
"""convert iterable object into numpy array"""
"""     iterate through list and indicate which item is the last, intended to     assist tree displays of hierarchical content.      :return: yielding (<bool>, <item>) where bool is True only on last entry     :rtype: generator     """
"""Initialise a new `Bakens` object."""
""" Strip excess spaces from a string """
""" Add suffix to a full file name"""
"""Ideally we shouldn't lose the first second of events"""
"""     Converts an ARRAY string stored in the database back into a Numpy array.      Parameters     ----------     array: ARRAY         The array object to be converted back into a Numpy array.      Returns     -------     array             The converted Numpy array.      """
""" set nan and inf rows from x to zero"""
"""Convert an OrderedDict containing C values to a 1D array."""
"""convert iterable object into numpy array"""
"""         transposes rows and columns         """
"""Receive the content of ``url``, parse it as JSON and return the        object.     """
""" Remove punctuation from string s. """
"""Auto Generated Code         """
"""Returns true if `num` is (sort of) an integer.     >>> isInt(3) == isInt(3.0) == 1     True     >>> isInt(3.2)     False     >>> import numpy     >>> isInt(numpy.array(1))     True     >>> isInt(numpy.array([1]))     False     """
"""helper function for quick base conversions from strings to integers"""
"""         Converts a date or datetime instance to a corresponding float value.         """
"""Set GUI on-top flag"""
"""convert iterable object into numpy array"""
""" Converts html content to plain text """
"""Any normal python logic which runs a loop. Can take arguments."""
"""Test whether text contains string or matches regex."""
"""Uses dynamic programming to infer the location of spaces in a string without spaces."""
""" convert numpy's datetime64 to datetime """
"""     Returns the index of the earliest occurence of an item from a list in a string      Ex: find_first_in_list('foobar', ['bar', 'fin']) -> 3     """
"""convert iterable object into numpy array"""
"""     Get chink for dict, copy as-is from https://stackoverflow.com/a/8290508/6753144     """
"""Provides the color corresponding to value `x` in the         form of a tuple (R,G,B,A) with int values between 0 and 255.         """
"""Converts a comma separated string to a list"""
"""Enforce HTML escaping.  This will probably double escape variables."""
"""Return True if created today."""
"""convert iterable object into numpy array"""
"""Takes a list of (key,value) pairs and turns it into a dict."""
"""Return the size of a multidimansional array.     """
"""check if element is present by css"""
"""Utility function which converts lists to tuples."""
"""Return unique list of ``iterable`` items preserving order.      >>> uniqued('spameggs')     ['s', 'p', 'a', 'm', 'e', 'g']     """
"""     Calculates the average value of a list of numbers     Returns a float     """
""" Captures screen area of this region, at least the part that is on the screen          Returns image as numpy array         """
"""         Basic string representation of the order.         """
"""Open given binary file and add its contents. Set `overwrite` to         ``True`` to allow already added data to be overwritten.          """
"""   Get tuple (actually a generator) of indices where the max value of   array x occurs. Requires that x have a max() method, as x.max()   (in the case of NumPy) is much faster than max(x).   For a simpler, faster argmax when there is only a single maximum entry,   or when knowing only the first index where the maximum occurs,   call argmax() on a NumPy array.    :param x: Any sequence that has a max() method.   :returns: Generator with the indices where the max value occurs.   """
"""Utility function which converts lists to tuples."""
""" Ajout d'un message de log de type DEBUG """
"""         Sends a message to a Discord channel or user via REST API          Args:             channel_id (string): ID of destingation Discord channel             text (string): Content of message         """
"""Internal helper to return the values of a dictionary, sorted by key.     """
"""Implement the `in` keyword, searches the sequence.         """
"""Given a float returns a rounded int. Should give the same result on     both Py2/3     """
"""Converts a comma separated string to a list"""
"""A background thread to kill the process if it takes too long.      Args:         timeout (float): The number of seconds to wait before killing             the process.         stop_event (Event): An optional event to cleanly stop the background             thread if required during testing.     """
"""convert iterable object into numpy array"""
"""Apply a function in parallel to each element of the input"""
"""     Converts a datetime to a millisecond accuracy timestamp     """
"""         Will test whether the ACS service is up and alive.         """
"""Process a matplotlib image object and call renderer.draw_image"""
"""     Write XML ElementTree 'root' content into 'stream'.      :param tree: XML ElementTree object     :param stream: File or file-like object can write to     """
"""Also, converts either to ints or to floats."""
"""Format a string for screen printing.      This removes some latex-type format codes."""
"""convert iterable object into numpy array"""
"""Removes `dict` keys which have have `self` as value."""
"""     Helper function to turn a string representation of "true" into     boolean True.     """
"""     Return the index of an element in the list.      Args:         lst (list): The list.         index_or_name (int or str): The value of the reference element, or directly its numeric index.      Returns:         (int) The index of the element in the list.     """
"""Emit a sine wave at the given frequency."""
""" connect to the given server, e.g.: \\connect localhost:4200 """
"""Is this an integer.      :param object obj:     :return:     """
"""Removes `dict` keys which have have `self` as value."""
""" Console to STDOUT """
"""Output data as a nicely-formatted python data structure"""
"""Given a list (l) will removing duplicates from the list,        preserving the original order of the list. Assumes that        the list entrie are hashable."""
""" Returns a copy of the list without duplicates.     """
"""Rotate and flip a quadrant appropriately      Based on the implementation here:         https://en.wikipedia.org/w/index.php?title=Hilbert_curve&oldid=797332503      """
"""         Makes XcFunc obey the general json interface used in pymatgen for easier serialization.         """
"""     Converts all the keys in "data_dict" to strings. The keys must be     convertible using str().     """
"""Return true if the IP address is in decimal notation."""
"""Returns full address string."""
"""     Returns the key of a single element dict.     """
"""Convert to lowercase and strip spaces"""
"""     Download the page into a string     """
"""Convert an ARF timestamp to a datetime.datetime object (naive local time)"""
""" print_tree: prints out structure of tree             Args: indent (int): What level of indentation at which to start printing             Returns: None         """
"""Read a file and close it.  Returns the file source."""
"""A generator that will generate a range of floats."""
"""Outputs a string to the console (stdout)."""
"""Format a comic name."""
"""         The cell lengths.          Args:             None          Returns:             (np.array(a,b,c)): The cell lengths.         """
"""     gets the orientation matrix (T) from data in X     """
"""         """
""" Reads a tuple of numbers. e.g. vertices, normals or teture coords.         """
"""Gets RAM memory usage      :return: MB of memory used by this process     """
"""Returns a single list of dependencies. For any set returned by toposort(), those items are sorted and appended to the result (just to make the results deterministic)."""
"""         Get an SArray that contains the last n elements in the SArray.          Parameters         ----------         n : int             The number of elements to fetch          Returns         -------         out : SArray             A new SArray which contains the last n rows of the current SArray.         """
"""Return indices of inputs to the node with the given index."""
"""Command line parser."""
""" set nan and inf rows from x to zero"""
"""         Convert this object to a dictionary with formatting appropriate for a PIF.          :returns: Dictionary with the content of this object formatted for a PIF.         """
"""  Use numpy to create a real matrix object from the data          :return: the matrix representation of the fvm         """
"""   Hex encode a binary string   """
"""      :return:     """
"""Returns a str if a bytes object is given."""
"""Return a prettier version of obj      Parameters     ----------     obj : object         Object to pretty print      Returns     -------     s : str         Pretty print object repr     """
"""remove duplicates from a sequence, preserving order"""
"""         Search for query on given fields.          Query modifier can be one of these:             * exact             * contains             * startswith             * endswith             * range             * lte             * gte          Args:             \*fields (str): Field list to be searched on             \*\*query:  Search query. While it's implemented as \*\*kwargs              we only support one (first) keyword argument.          Returns:             Self. Queryset object.          Examples:             >>> Person.objects.search_on('name', 'surname', contains='john')             >>> Person.objects.search_on('name', 'surname', startswith='jo')         """
"""         Compute term-topic matrix from sampled_topics.         """
"""     Registers default factories for logging standard package.      :param loader: Loader where you want register default logging factories     """
"""Returns a short, term-friendly string representation of the object.    Args:     obj: An object for which to return a string representation.     max_len: Maximum length of the returned string. Longer reprs will be turned         into a brief descriptive string giving the type and length of obj.   """
"""Command 'supervisord shell' runs the interactive command shell."""
"""Simple Slugify."""
"""Stops the analysis as soon as possible."""
"""Modified form of the 'g' format specifier.     """
"""Outputs a string to the console (stdout)."""
"""     Emulate what a Python ``set()`` does, but keeping the element's order.     """
"""Uses http://www.cplusplus.com/reference/string/to_string/ for formatting"""
"""     hex2dec     十六进制 to 十进制     :param s:     :return:     """
"""convert iterable object into numpy array"""
""" Create a new response header, replacing any previously defined             headers with the same name. """
"""Pretty printing for numpy matrix X"""
"""     Calculate the length of a unicode string on screen,     accounting for double-width characters      """
""" Creates a standard message from a given user with the message          Replaces newline with html break """
"""Get string from file."""
"""Simple directory walker"""
""" download the image, convert it to a NumPy array, and then read     it into OpenCV format """
""" Read text from stdin, and print a helpful message for ttys. """
"""Utility function which converts lists to tuples."""
"""Make a Guinier plot. This is simply a wrapper around plotsascurve()."""
"""in string astr replace all occurences of thefind with thereplace"""
"""Change working directory to parent directory"""
"""Escape a single character"""
"""         Return the String assosicated with the current text         """
"""     Try to get a number out of a string, and cast it.     """
"""close socket, immediately."""
"""launch layouts display"""
"""Return a string as hex dump."""
"""Draw the shape in the current OpenGL context.          """
"""Removes duplicate objects.      http://www.peterbe.com/plog/uniqifiers-benchmark.     """
""" Nested lists to single-level list, does not split strings"""
"""Pretty print an object as YAML."""
"""Acquire a lock on the output file, prevents collisions between multiple runs."""
""" Pretty print a CSV file. """
"""Fast median operation for masked array using 50th-percentile     """
""" Converts a 1D list to a single long string for file output, using the string.join function.  Usage:   list2string (inlist,delimit=' ') Returns: the string created from inlist """
"""     Converts a list of lists into a flat list.          Args:         x: list of lists       Returns:         flat list              As per     http://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python      """
""" Integer to two bytes """
"""Standardize input `x` to a unit normal."""
"""     Returns true if all of the elements in the list are equal.     """
"""Compose all given tuples together."""
"""Shortcut function for running the previewing command."""
"""     Run unit tests.     """
"""Indicates whether or not the given row contains valid data."""
"""Utility function which converts lists to tuples."""
"""     @type args: tuple     @return: None     """
"""convert iterable object into numpy array"""
"""Sort `data` rows and order columns"""
"""Fill an `array` from a `list`"""
"""     If output is string, then print the string and also time used     """
"""         Check whether all the matched elements are selected.          Returns:             bool         """
"""     Compile and return a Module's code object.     """
"""Check features data are not empty      :param features: The features data to check.     :type features: list of numpy arrays.      :return: True if one of the array is empty, False else.      """
"""     Wanted functionality from Counters (new in Python 2.7).     """
"""A generator that will generate a range of floats."""
"""     Format a descriptor into a form which can be used as a python attribute      example::          >>> FormatDescriptorToPython('(Ljava/lang/Long; Ljava/lang/Long; Z Z)V')         'Ljava_lang_LongLjava_lang_LongZZV      :param i: name to transform     :rtype: str     """
"""Convert bytes to a list of bits     """
"""Execute a python code object in the given environment.      Args:       globals_map: Dictionary to use as the globals context.     Returns:       locals_map: Dictionary of locals from the environment after execution.     """
"""Return true if the pathname refers to an existing directory."""
""" Pretty print a CSV file. """
"""Returns data as :class:`numpy.recarray`."""
""" Helper for iterating only nonempty lines without line breaks"""
"""Check if file is a regular file and is readable."""
"""Validate that 'value' is a positive integer or 0.     """
"""Close the connection."""
"""Remove invalid and dangerous characters from a string."""
""" Detokenize a string by removing spaces before punctuation."""
"""Run a function that uses blocking IO.      The function is run in the IO thread pool.     """
"""         Return a well formatted list. Basicaly, it's sort a list and remove duplicate.          :return: A sorted, without duplicate, list.         :rtype: list         """
"""Direct access to byte data."""
"""Ajoute la target au plot"""
"""Returns the first day of the given month."""
"""         Creates a copy of this tabarray in the form of a numpy ndarray.          Useful if you want to do math on array elements, e.g. if you have a          subset of the columns that are all numerical, you can construct a          numerical matrix and do matrix operations.          """
"""Takes input from user. Works for Python 2 and 3."""
"""         Creates a variation from a base value          Args:             mean: base value             sigma: gaussian sigma          Returns: random value          """
"""Transform underscore separated string to pascal case      """
"""Is this an integer.      :param object obj:     :return:     """
"""From itertools cookbook. [a, b, c, ...] -> (a, b), (b, c), ..."""
""" Add subparser      """
empty
"""      Returns the nearest-neighbor (+/- amount) smoothed array.     This does not modify the array or slice off the funny end points.      """
"""convert iterable object into numpy array"""
"""Load and execute a python file."""
"""Is this attribute present?"""
"""Get authentication."""
""" quit crash """
"""class iterator which yields a key/value pair"""
""" Writes a double to the underlying output file as a 8-byte value. """
"""Command line interface for PyBEL."""
"""         Invoked when determining whether a specific key is in the dictionary         using `key in d`.          The key is looked up case-insensitively.         """
"""A generator that will generate a range of floats."""
"""Set additionnal options as plain text."""
"""     Verifies that a string path actually exists and is a file      :param path: The path to verify     :return: **True** if path exist and is a file     """
"""Uses dynamic programming to infer the location of spaces in a string without spaces."""
"""Remove the querystring from the end of a URL."""
"""Read a file and close it.  Returns the file source."""
"""remove duplicates from a sequence, preserving order"""
"""Checks if l is a 2D numpy array of bools      """
"""Matches all matches to elements of item."""
"""Return a string representation of the RedditContentObject."""
"""     Decorator to make sure, that user is root.     """
"""remove duplicates from a sequence, preserving order"""
"""Return true if the colum is a dimension"""
"""Round `x` and `y` down to integers."""
"""      Move file from *source* to *dest*      If file is a Python script, also rename .pyc and .pyo files if any      """
"""Sets the title of the console window."""
"""This function is called to check if a username /     password combination is valid.     """
"""if the value is in the list, move it to the front and return it."""
"""     Function to split every line in a list, and retain spaces for a rejoin     :param orig_list: Original list     :return:         A List with split lines      """
"""conveniently styles your text as and resets ANSI codes at its end."""
"""Iterate through lines of file."""
"""     Whitespace normalization:        - Strip empty lines       - Strip trailing whitespace     """
"""Transform a named tuple into a dictionary"""
"""Takes a list of (key,value) pairs and turns it into a dict."""
""" 重复执行函数f，时间间隔dt """
""" Fetch a subset of randomzied GUIDs from the whitelist """
""" Converts a 1D list to a single long string for file output, using the string.join function.  Usage:   list2string (inlist,delimit=' ') Returns: the string created from inlist """
"""Return the list of properties specified for a model in an index."""
"""         Shutdown the client and all of its managed resources:          - the workers         - the scheduler threads          :return: None         """
Extracts video ID from URL.
str->list     Convert XML to URL List.     From Biligrab.
Source: Android mobile
Extracts video ID from live.qq.com.
Print a log message to standard error.
Print an error log message.
Detect operating system.
Source: Android mobile
str->dict     Information for CKPlayer API content.
Splicing URLs according to video ID to get video details
Extracts video ID from URL.
Get (branch, commit) from HEAD of a git repo.
Converts a string to a valid filename.
Get (width, height) of the current terminal.
Scans through a string for substrings matched some patterns (first-subgroups only).
Scans through a string for substrings matched some patterns.
Parses the query string of a URL and returns the value of a parameter.
Decompresses data for Content-Encoding: gzip.
Gets the content of a URL via sending a HTTP GET request.
Post the content of a URL via sending a HTTP POST request.
Parses host name and port number from a string.
Source: Android mobile
JSON, int, int, int->str          Get a proper title with courseid+topicID+partID.
int->None          Download a WHOLE course.     Reuse the API call to save time.
int, int, int->None          Download ONE PART of the course.
Checks if a task is either queued or running in this executor
one method to fetch connection params as a dict         used in get_uri() and get_connection()
override DbApiHook get_uri method for get_sqlalchemy_engine()
Returns a snowflake.connection object
Loads a tab-delimited file into a database table
Dumps a database table into a tab-delimited file
Uploads the file to Google cloud storage
Gets the max partition for a table.
Returns a mysql connection object
Loads a tab-delimited file into a database table
Translate a string or list of strings.
Execute the bash command in a temporary directory         which will be cleaned afterwards
Updates settings of a Cloud SQL instance.
Retrieves a database resource from a Cloud SQL instance.
Creates a new database inside a Cloud SQL instance.
Updates a database resource inside a Cloud SQL instance.
Deletes a database from a Cloud SQL instance.
Returns version of the Cloud SQL Proxy.
Retrieves the dynamically created connection from the Connection table.
Delete the dynamically created connection from the Connection table.
Clean up database hook after it was used.
Reserve free TCP port to be used by Cloud SQL Proxy
Extract error code from ftp exception
Integrate plugins to the context
Remove any existing task instances for the perf test DAGs.
Toggle the pause state of the DAGs in the test.
Override the scheduler heartbeat to determine when the test is complete
Invoke Lambda Function
Return the task object identified by the given dag_id and task_id.
A small helper function to convert a string to a numeric value     if appropriate
Get the current date and time in UTC     :return:
Make a naive datetime.datetime in a given time zone aware.
Make an aware datetime.datetime naive in a given time zone.
Sets the environment variable `GOOGLE_APPLICATION_CREDENTIALS` with either:
Establish a connection to druid broker.
Contextmanager that will create and teardown a session.
Clear out the database
Upload a file to Azure Blob Storage.
Parses some DatabaseError to provide a better error message
Get a set of records from Presto
Get a pandas dataframe from a sql query.
Execute the statement against Presto. Can be used to create views.
A generic way to insert a set of tuples into a table.
Checks if a collection exists in CosmosDB.
Creates a new collection in the CosmosDB database.
Checks if a database exists in CosmosDB.
Creates a new database in CosmosDB.
Deletes an existing database in CosmosDB.
Insert a list of new documents into an existing collection in the CosmosDB database.
Delete an existing document out of a collection in the CosmosDB database.
Get a document from an existing collection in the CosmosDB database.
Return python code of a given dag_id.
Returns the Cloud Function with the given name.
Creates a new function in Cloud Function in the location specified in the body.
Updates Cloud Functions according to the specified update mask.
Uploads zip file with sources.
Creates a Pub/Sub topic, if it does not already exist.
Creates a Pub/Sub subscription, if it does not already exist.
Deletes a Pub/Sub subscription, if it exists.
Pulls up to ``max_messages`` messages from Pub/Sub subscription.
Pulls up to ``max_messages`` messages from Pub/Sub subscription.
Get the underlying `botocore.Credentials` object.
Ensure all logging output has been flushed
Traverse a directory and look for Python files.
Construct a TaskInstance from the database based on the primary key
Update this with a new set of paths to DAG definition files.
:return: whether all file paths have been processed max_runs times
Opens a ssh connection to the remote host.
Gets the latest state of a long-running operation in Google Storage         Transfer Service.
Lists long-running operations in Google Storage Transfer         Service that match the specified filter.
Cancels an transfer operation in Google Storage Transfer Service.
Resumes an transfer operation in Google Storage Transfer Service.
Returns all task reschedules for the task instance and try number,         in ascending order.
Returns the number of slots open at the moment
Lookup some entities by key.
Roll back a transaction.
Run a query for entities.
Gets the latest state of a long-running operation.
Export entities from Cloud Datastore to Cloud Storage for backup.
Import a backup from Cloud Storage to Cloud Datastore.
Publish a message to a topic or an endpoint.
Classifies a document into categories.
Return the task object identified by the given dag_id and task_id.
Ensures that certain subfolders of AIRFLOW_HOME are on the classpath
Transforms a SQLAlchemy model instance into a dictionary
Yield successive chunks of a given size from a list of items
Return the task object identified by the given dag_id and task_id.
Integrate plugins to the context
Awaits for Google Cloud Dataproc Operation to complete.
Run an pig script using the pig cli
How many Celery tasks should be sent to each worker process.
Gets a MLEngine job based on the job name.
Creates the Version on Google Cloud ML Engine.
Sets a version to be the default. Blocks until finished.
Lists all available versions of a model. Blocks until finished.
Deletes the given version of a model. Blocks until finished.
Create a Model. Blocks until finished.
Integrate plugins to the context.
Creates a new instance of the configured executor if none exists and returns it
Call the SparkSubmitHook to run the provided spark job
Delete all DB records related to the specified Dag.
Return python code of a given dag_id.
Returns a JSON with a task's public instance variables.
Create a new container group
Get the state and exitcode of a container group
Get the messages of a container group
Get the tail from logs of a container group
Delete a container group
Test if a container group exists
Reloads the current dagrun from the database         :param session: database session
Returns a set of dag runs for the given search criteria.
The previous DagRun, if there is one
The previous, SCHEDULED DagRun, if there is one
Determines the overall state of the DagRun based on the state         of its TaskInstances.
Call the SparkSubmitHook to run the provided spark job
Add or subtract days from a YYYY-MM-DD
Takes an input string and outputs another string     as specified in the output format
Integrate plugins to the context
poke matching files in a directory with self.regex
poke for a non empty directory
Forces the task instance's state to FAILED in the database.
Refreshes the task instance from the database based on the primary key
Clears all XCom data from the database for the task instance
Returns the DagRun for this TaskInstance
Make an XCom available for tasks to pull.
Close and upload local log file to remote storage Wasb.
Check if bucket_name exists.
Checks that a prefix exists in a bucket
Checks if a key exists in a bucket
Returns a boto3.s3.Object
Reads a key from S3
Reads a key with S3 Select.
Checks that a key matching a wildcard expression exists in a bucket
Returns a boto3.s3.Object object matching the wildcard expression
Loads a local file to S3
Loads a file object to S3
Creates a copy of an object that is already stored in S3.
Queries cassandra and returns a cursor to the results.
Takes a cursor, and writes results to a local file.
Send an email with html content using sendgrid.
Call the SparkSqlHook to run the provided sql query
Load AirflowPlugin subclasses from the entrypoints     provided. The entry_point group should be 'airflow.plugins'.
Check whether a potential object is a subclass of     the AirflowPlugin class.
Return a AzureDLFileSystem object.
Check if a file exists on Azure Data Lake.
Upload a file to Azure Data Lake.
Download a file from Azure Blob Storage.
List files in Azure Data Lake Storage
Run Presto Query on Athena
Cancel the submitted athena query
Takes a cursor, and writes results to a local file.
Create the specified cgroup.
Delete the specified cgroup.
:return: a mapping between the subsystem name to the cgroup name         :rtype: dict[str, str]
Utility function to perform an API call with retries
Sign into Salesforce, only if we are not already signed in.
Make a query to Salesforce.
Get a list of all available fields for an object.
Convert a column of a dataframe to UNIX timestamps if applicable
Write query results to file.
Fetches a mongo collection object for querying.
Replaces many documents in a mongo collection.
Retrieves mail's attachments in the mail folder by its name.
Downloads mail's attachments in the mail folder by its name to the local directory.
Write batch records to Kinesis Firehose
Send email using backend specified in EMAIL_BACKEND.
Send an email with html content
Check if a blob exists on Azure Blob Storage.
Check if a prefix exists on Azure Blob storage.
Upload a file to Azure Blob Storage.
Upload a string to Azure Blob Storage.
Download a file from Azure Blob Storage.
Read a file from Azure Blob Storage and return as a string.
Delete a file from Azure Blob Storage.
BACKPORT FROM PYTHON3 FTPLIB.
Returns a list of files on the remote system.
Transfers the remote file to a local location.
Transfers a local file to the remote location.
Returns a datetime object representing the last time the file was modified
Call the DiscordWebhookHook to post message
Validates if field is OK.
Return the FileService object.
Check if a directory exists on Azure File Share.
Check if a file exists on Azure File Share.
Return the list of directories and files stored on a Azure File Share.
Create a new directory on a Azure File Share.
Download a file from Azure File Share.
Download a file from Azure File Share.
Upload a file to Azure File Share.
Upload a string to Azure File Share.
Upload a stream to Azure File Share.
Returns a Google Cloud Storage service object.
Copies an object from a bucket to another, with renaming if requested.
Get a file from Google Cloud Storage.
Uploads a local file to Google Cloud Storage.
Checks for the existence of a file in Google Cloud Storage.
Checks if an blob_name is updated in Google Cloud Storage.
Deletes an object from the bucket.
List all objects from the bucket with the give string prefix in name
Gets the size of a file in Google Cloud Storage.
Gets the CRC32c checksum of an object in Google Cloud Storage.
Gets the MD5 hash of an object in Google Cloud Storage.
Return the index, i, in arr that minimizes f(arr[i])
Tar the local file or directory and upload to s3
Extract the S3 operations from the configuration and execute them.
Check if an S3 URL exists
Create a training job
Create a transform job
Create an endpoint
Check status of a SageMaker job
Execute the python dataflow job.
Run migrations in 'offline' mode.
Run migrations in 'online' mode.
Loads a local file into Hive
Checks whether a partition with a given name exists
Get a metastore table object
Get a metastore table object
Check if table exists
Get results of the provided hql in target schema.
Execute hql in target schema and write results to a csv file.
Get a set of records from a Hive query.
Get a pandas dataframe from a Hive query
For the documentation see:         :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductSetCreateOperator`
For the documentation see:         :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductSetGetOperator`
For the documentation see:         :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductSetUpdateOperator`
For the documentation see:         :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductSetDeleteOperator`
For the documentation see:         :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductCreateOperator`
For the documentation see:         :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductGetOperator`
For the documentation see:         :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductUpdateOperator`
For the documentation see:         :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductDeleteOperator`
For the documentation see:         :py:class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionReferenceImageCreateOperator`
For the documentation see:         :py:class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionReferenceImageCreateOperator`
For the documentation see:         :py:class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionAddProductToProductSetOperator`
For the documentation see:         :py:class:`~airflow.contrib.operators.gcp_vision_image_annotator_operator.CloudVisionAnnotateImage`
For the documentation see:         :py:class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionDetectImageSafeSearchOperator`
Get Dingding endpoint for sending message.
Send Dingding message
Helper method that binds parameters to a SQL query.
Helper method that escapes parameters to a SQL query.
function to check expected type and raise     error if type is not correct
Checks for the existence of a table in Google BigQuery.
Cancel all started queries that have not yet completed
Execute a BigQuery query multiple times with different parameters.
Loads the manifest file and register the `url_for_asset_` template tag.     :param app:     :return:
Queries Postgres and returns a cursor to the results.
Takes a cursor, and writes results to a local file.
Create all the intermediate directories in a remote host
Create queue using connection object
Send message to the queue
Integrate plugins to the context
Run the task command.
A callback that should be called when this is done running.
generate HTML header content
generate HTML div
generate javascript code for the chart
Decorator to check whether the user has read / write permission on the dag.
Publish the message to SQS queue
returns a json response from a json serializable python object
Used by cache to get a unique key per URL
Get Opsgenie api_key for creating alert
Execute the Opsgenie Alert call
Execute the bash command in a temporary directory         which will be cleaned afterwards
Call the OpsgenieAlertHook to post message
check if aws conn exists already or create one and return it
Run Presto query on athena with provided config and return submitted query_execution_id
Call Zendesk API and return results
Retrieves the partition values for a table.
Get the information of the table
Get the physical location of the table
Return status of a cluster
Gets a list of snapshots for a cluster
Restores a cluster from its snapshot
Creates a snapshot of a cluster
Args:             volume (Volume):
Args:             volume_mount (VolumeMount):
Will test the filepath result and test if its size is at least self.filesize
Executed by task_instance at runtime
Get pool by a given name.
Create a pool with a given parameters.
Delete pool by a given name.
Fetches the operation from Google Cloud
Encrypts a plaintext message using Google Cloud KMS.
Imports a specific query from the rdbms to hdfs
Close and upload local log file to remote storage S3.
Get link to qubole command result page.
Launch a process to process the given file.
Launch the process and start processing the DAG.
Terminate (and then kill) the process launched to process the file.
Check if the process launched to process this file is done.
Get the concurrency maps.
Attempts to execute TaskInstances that should be executed by the scheduler.
Iterates over the dags and processes them. Processing includes:
Respond to executor events.
Checks if the executor agrees with the state of task instances         that are running
Self destruct task if state has been moved away from running externally
Invokes a method on a given instance by applying a specified Callable.
Creates a new database in Cloud Spanner.
Updates DDL of a database in Cloud Spanner.
Pokes for a mail attachment on the mail server.
Creates additional_properties parameter based on language_hints, web_detection_params and     additional_properties parameters specified by the user
Checks if a table exists in Cassandra
Checks if a record exists in Cassandra
Construct the command to poll the driver status.
Remote Popen to execute the spark-submit job
Get the task runner that can be used to run the given job.
Try to use a waiter from the below pull request
Queries mysql and returns a cursor to the results.
Takes a cursor, and writes results to a local file.
Authenticate a PasswordUser with the specified     username/password.
Execute sqoop job
Prepares the lineage inlets and outlets. Inlets can be:
Convert an array of time durations in seconds to the specified time unit.
Initialize the role with the permissions and related view-menus.
Delete the given Role
Get all the roles associated with the user.
Returns a set of tuples with the perm name and view menu name
Return a set of dags that user has access to(either read or write).
Set the access policy on the given DAG's ViewModel.
Create perm-vm if not exist and insert into FAB security model for all-dags.
Returns a snakebite HDFSClient object.
Establishes a connection depending on the security mode set via config or environment variable.
Check for the existence of a path in HDFS by querying FileStatus.
r"""         Uploads a file to HDFS.
Establish a connection to pinot broker through pinot dbqpi.
Get the connection uri for pinot broker.
Executes the sql and returns a set of records.
Convert native python ``datetime.date`` object  to a format supported by the API
Convert native python ``datetime.time`` object  to a format supported by the API
Returns a connection object
Executes the sql and returns a set of records.
Returns the SQL literal of the cell as a string.
A restful endpoint that returns external links for a given Operator
Default filters for model
Default filters for model
Call the SlackWebhookHook to post the provided Slack message
Train a deepq model.
Save model to a pickle located at `path`
Stack of fully-connected layers to be used in a policy / q-function approximator
Create a wrapped, monitored SubprocVecEnv for Atari and MuJoCo.
Create a wrapped, monitored gym.Env for MuJoCo.
Create a wrapped, monitored gym.Env for MuJoCo.
Create an argparse.ArgumentParser for run_mujoco.py.
Create an argparse.ArgumentParser for run_mujoco.py.
Learn policy using PPO algorithm (https://arxiv.org/abs/1707.06347)
Encode input in the way that is appropriate to the observation space
Pickles the current policy for later inspection.
Generates a dictionary that contains all collected statistics.
Smooth signal y, where radius is determines the size of the window
load summaries of runs from a list of directories (including subdirectories)     Arguments:
Plot multiple Results objects
Deep-copy an observation dict.
Get dict-structured information about a gym.Space.
Control a single environment instance using IPC and     shared memory.
Compute next action(s) given the observation(s)
Compute value estimate(s) given the observation(s)
Print the number of seconds in human readable format.
Add a boolean flag to argparse parser.
Unpickle a possible compressed pickle.
Update the estimate.
Import a function identified by a string like "pkg.module:fn_name".
Flattens a variables and their gradients.
Converts an episode to have the batch dimension in the major (first)     dimension.
Get default session or create one with a given config
Returns a session that will use <num_cpu> CPU's only
Initialize all the uninitialized variables in the global scope.
Configure environment for DeepMind-style Atari.
Count the GPUs on this machine.
Perform a reduction operation over dicts
learn a policy function with TRPO algorithm
Sample a batch of experiences.
Sample a batch of experiences.
Configure environment for retro games, using config similar to DeepMind-style Atari in wrap_deepmind
Creates a sample function that can be used for HER experience replay.
episode_batch: array(batch_size x (T or T+1) x dim_key)
Estimate the geometric median of points in 2D.
Project the keypoint onto a new position on a new image.
Move the keypoint around on an image.
Draw the keypoint onto a given image.
Generate nearby points to this keypoint based on manhattan distance.
Create a shallow copy of the Keypoint object.
Create a deep copy of the Keypoint object.
Project keypoints from one image to a new one.
Draw all keypoints onto a given image.
Move the keypoints around on an image.
Convert keypoint coordinates to ``(N,2)`` array.
Convert an array (N,2) with a given image shape to a KeypointsOnImage object.
Converts an image generated by ``to_keypoint_image()`` back to a KeypointsOnImage object.
Converts maps generated by ``to_distance_maps()`` back to a KeypointsOnImage object.
Create a shallow copy of the KeypointsOnImage object.
Create a deep copy of the KeypointsOnImage object.
Estimate whether the bounding box contains a point.
Extend the size of the bounding box along its sides.
Compute the IoU of this bounding box with another one.
Estimate whether the bounding box is fully inside the image area.
Estimate whether the bounding box is at least partially inside the image area.
Estimate whether the bounding box is partially or fully outside of the image area.
Clip off all parts of the bounding box that are outside of the image.
Draw the bounding box on an image.
Extract the image pixels within the bounding box.
Convert the corners of the bounding box to keypoints (clockwise, starting at top left).
Create a shallow copy of the BoundingBox object.
Create a deep copy of the BoundingBox object.
Project bounding boxes from one image to a new one.
Convert an (N,4) ndarray to a BoundingBoxesOnImage object.
Convert the BoundingBoxesOnImage object to an (N,4) ndarray.
Draw all bounding boxes onto a given image.
Remove all bounding boxes that are fully or partially outside of the image.
Clip off all parts from all bounding boxes that are outside of the image.
Create a deep copy of the BoundingBoxesOnImage object.
Augmenter that embosses images and overlays the result with the original     image.
Normalize a shape tuple or array to a shape tuple.
Project coordinates from one image shape to another.
Create an augmenter to add poisson noise to images.
Augmenter that sets a certain fraction of pixels in images to zero.
Augmenter that changes the contrast of images.
Checks whether a variable is a float.
Checks whether a variable is a numpy integer array.
Checks whether a variable is a numpy float array.
Checks whether a variable is a callable, e.g. a function.
Returns a new random state.
Creates a copy of a random state.
Create N new random states based on an existing random state or seed.
Generate a normalized rectangle to be extract from the standard quokka image.
Returns an image of a quokka as a numpy array.
Compute the intersection point of two lines.
Draw text on an image.
Resize many images to a specified size.
Pad an image-like array on its top/right/bottom/left side.
Resize an array by pooling values within blocks.
Resize an array using average pooling.
Resize an array using max-pooling.
Converts multiple input images into a single image showing them in a grid.
Shows an image in a window.
Generate a non-silent deprecation warning with stacktrace.
Returns whether an augmenter may be executed.
A function to be called before the augmentation of images starts (per augmenter).
A function to be called after the augmentation of images was         performed.
Return the multiprocessing.Pool instance or create it if not done yet.
Terminate the pool immediately.
Stop all workers.
Returns a batch from the queue of augmented batches.
Convert this unnormalized batch to an instance of Batch.
Estimate the area of the polygon.
Project the polygon onto an image with different shape.
Estimate whether the polygon is fully inside the image area.
Estimate whether the polygon is at least partially inside the image area.
Estimate whether the polygon is partially or fully outside of the image area.
Cut off all parts of the polygon that are outside of the image.
Draw the polygon on an image.
Extract the image pixels within the polygon.
Convert this polygon to a Shapely polygon.
Convert this polygon's `exterior` to ``Keypoint`` instances.
Convert this polygon's `exterior` to a ``LineString`` instance.
Create a polygon from a Shapely polygon.
Estimate if this and other polygon's exterior are almost identical.
Estimate if this polygon's and another's geometry/labels are similar.
Create a shallow copy of the Polygon object.
Create a deep copy of the Polygon object.
Project polygons from one image to a new one.
Draw all polygons onto a given image.
Remove all polygons that are fully or partially outside of the image.
Clip off all parts from all polygons that are outside of the image.
Create a deep copy of the PolygonsOnImage object.
Create a MultiPolygon from a Shapely MultiPolygon, a Shapely Polygon or a Shapely GeometryCollection.
Augmenter that pads images, i.e. adds columns/rows to them.
Augmenter that crops/cuts away pixels at the sides of the image.
Return a list of unordered intersection points.
Get, and remove, the first (lowest) item from this queue.
T.clear() -> None.  Remove all items from T.
Get item with min key of tree, raises ValueError if tree is empty.
Get item with max key of tree, raises ValueError if tree is empty.
T.remove(key) <==> del T[key], remove item <key> from tree.
Generate 2D OpenSimplex noise from X,Y coordinates.
Generate 3D OpenSimplex noise from X,Y,Z coordinates.
Generate 4D OpenSimplex noise from X,Y,Z,W coordinates.
Convert images to another colorspace.
Augmenter to convert images to their grayscale versions.
Get the height of a bounding box encapsulating the line.
Get the width of a bounding box encapsulating the line.
Get for each point whether it is inside of the given image plane.
Get the euclidean distance between each two consecutive points.
Compute the minimal distance between each point on self and other.
Compute the minimal distance between the line string and `other`.
Estimate whether the bounding box contains a point.
Estimate whether the line string is fully inside the image area.
Estimate whether the line string is at least partially inside the image.
Estimate whether the line is partially/fully outside of the image area.
Clip off all parts of the line_string that are outside of the image.
Find all intersection points between the line string and `other`.
Shift/move the line string from one or more image sides.
Draw this line segment as a binary image mask.
Draw the line segments of the line string as a heatmap array.
Draw the points of the line string as a heatmap array.
Draw the line segments and points of the line string as a heatmap array.
Draw the line segments of the line string on a given image.
Draw the points of the line string on a given image.
Draw the line string on an image.
Extract the image pixels covered by the line string.
Concatenate this line string with another one.
Convert the line string points to keypoints.
Generate a bounding box encapsulating the line string.
Generate a polygon from the line string points.
Generate a heatmap object from the line string.
Generate a segmentation map object from the line string.
Compare this and another LineString's coordinates.
Compare this and another LineString.
Create a shallow copy of the LineString object.
Create a deep copy of the BoundingBox object.
Project bounding boxes from one image to a new one.
Convert an `(N,M,2)` ndarray to a LineStringsOnImage object.
Convert this object to an iterable of ``(M,2)`` arrays of points.
Draw all line strings onto a given image.
Remove all line strings that are fully/partially outside of the image.
Clip off all parts of the line strings that are outside of the image.
Shift/move the line strings from one or more image sides.
Create a shallow copy of the LineStringsOnImage object.
Create a deep copy of the LineStringsOnImage object.
Blend two images using an alpha blending.
Augmenter that always executes exactly one of its children.
Augmenter to make assumptions about the shape of input image(s), heatmaps and keypoints.
Randomize the order of (color) channels in an image.
Blur an image using gaussian blurring.
Augmenter that sharpens images and overlays the result with the original image.
Augmenter to draw clouds in images.
Augmenter to draw fog in images.
Augmenter to add falling snowflakes to images.
Get the segmentation map array as an integer array of shape (H, W).
Render the segmentation map as an RGB image.
Draw the segmentation map as an overlay over an image.
Pad the segmentation map on its top/right/bottom/left side.
Resize the segmentation map array to the provided size given the provided interpolation.
Convert segmentation map to heatmaps object.
Convert heatmaps to segmentation map.
Create a deep copy of the segmentation map object.
Offer a new event ``s`` at point ``p`` in this queue.
Get the heatmap's array within the value range originally provided in ``__init__()``.
Render the heatmaps as RGB images.
Draw the heatmaps as overlays over an image.
Pad the heatmaps on their top/right/bottom/left side.
Pad the heatmaps on their sides so that they match a target aspect ratio.
Resize the heatmap(s) array using average pooling of a given block/kernel size.
Resize the heatmap(s) array using max-pooling of a given block/kernel size.
Resize the heatmap(s) array to the provided size given the provided interpolation.
Convert this heatmaps object to a 0-to-255 array.
Change the value range of a heatmap from one min-max to another min-max.
Create a deep copy of the Heatmaps object.
VGG 11-layer model (configuration "A") with batch normalization
VGG 13-layer model (configuration "B")
r"""Densenet-121 model from     `"Densely Connected Convolutional Networks" <https://arxiv.org/pdf/1608.06993.pdf>`_
Convert a ``PIL Image`` or ``numpy.ndarray`` to tensor.
Convert a tensor or an ndarray to PIL Image.
Normalize a tensor image with mean and standard deviation.
r"""Resize the input PIL Image to the given size.
Crop the given PIL Image.
Crop the given PIL Image and resize it to desired size.
Perform perspective transform of the given PIL Image.
Adjust brightness of an Image.
Adjust contrast of an Image.
Adjust color saturation of an image.
Adjust hue of an image.
r"""Perform gamma correction on an image.
Rotate the image by angle.
Convert image to grayscale version of image.
Make a grid of images.
Save a given Tensor into an image file.
Finds the class folders in a dataset.
Warning: does not synchronize the deque!
Python2 support for os.makedirs(.., exist_ok=True)
Download a file from a url and place it in root.
List all directories at a given root
List all files ending with a suffix at a given root
Download a Google Drive file from  and place it in root.
Get parameters for ``crop`` for a random crop.
Get parameters for ``perspective`` for a random perspective transform.
Get parameters for ``crop`` for a random sized crop.
Get a randomized transform to be applied on image.
Download and extract the tarball, and download each individual photo.
Download the MNIST data if it doesn't exist in processed_folder already.
Download the EMNIST data if it doesn't exist in processed_folder already.
remove first and last lines to get only json
Embeds a custom gradient into a `Tensor`.
Convenience function to efficiently construct a MultivariateNormalDiag.
Runs HMC on the eight-schools unnormalized posterior.
Infer the original name passed into a distribution constructor.
RandomVariable constructor with a dummy name argument.
Wrap an existing distribution as a traceable random variable.
Shape for the mode/mean Tensors.
Compute one-step-ahead predictive distributions for all timesteps.
Returns `max` or `mask` if `max` is not finite.
Assert all elements of `x` are finite.
Computes the number of elements in a tensor with shape `event_shape`.
Return a convert-to-tensor func, given a name, config, callable, etc.
Returns the config of this layer.
Create the distribution instance from a `params` vector.
The number of `params` needed to create a single distribution.
Create the distribution instance from a `params` vector.
Create the distribution instance from a `params` vector.
The number of `params` needed to create a single distribution.
Create the distribution instance from a `params` vector.
Returns the config of this layer.
Create the distribution instance from a `params` vector.
The number of `params` needed to create a single distribution.
Create the distribution instance from a `params` vector.
Create the distribution instance from a `params` vector.
Number of `params` needed to create a `MixtureSameFamily` distribution.
The number of `params` needed to create a single distribution.
Create the distribution instance from a `params` vector.
The number of `params` needed to create a single distribution.
Validate `map_values` if `validate_args`==True.
Calls `fn` and returns the gradients with respect to `fn`'s first output.
Transforms a log-prob function using a bijector.
A function to do simple sign-based control of a variable.
Returns the config of the layer.
Returns the config of the layer.
Convenience to convert to `Tensor` or leave as `None`.
Construct `scale` from various components.
Returns a callable that adds a random normal perturbation to the input.
Returns a callable that adds a random uniform perturbation to the input.
Expand the rank of x up to static_event_rank times for broadcasting.
Get a list of num_components batchwise probabilities.
Validate `outcomes`, `logits` and `probs`'s shapes.
Batchwise KL divergence KL(d1 || d2) with d1 and d2 Dirichlet.
Checks the validity of the concentration parameter.
Checks the validity of a sample.
Estimate standard deviation using samples.
A version of squeeze that works with dynamic axis.
Calculate the batched KL divergence KL(n_a || n_b) with n_a and n_b Normal.
Standardize input `x` to a unit normal.
Build the transition matrix for a semi-local linear trend model.
Build the transition noise model for a semi-local linear trend model.
r"""Returns a sample from the `dim` dimensional Halton sequence.
Computes the number of terms in the place value expansion.
Shrinks the input step size until the value and grad become finite.
The main loop of line search after the minimum has been bracketed.
Performs bisection and updates the interval.
Prepares the arguments for the line search initialization.
Wrapper for tf.Print which supports lists and namedtuples for printing.
Use Gauss-Hermite quadrature to form quadrature on `K - 1` simplex.
Use SoftmaxNormal quantiles to form quadrature on `K - 1` simplex.
Helper which interpolates between two locs.
Helper which interpolates between two scales.
Ensures `self.distribution.mean()` has `[batch, event]` shape.
Tabulate log probabilities from a batch of distributions.
Compute marginal pdf for each individual observable.
Compute marginal posterior distribution for each state.
Compute maximum likelihood sequence of hidden states.
Chooses a random direction in the event space.
Pads the shape of x to the right to be of rank final_rank.
Initialize from a uniform [-2, 2] distribution in unconstrained space.
Build a loss function for variational inference in STS models.
Compute mean and variance, accounting for a mask.
Get the first unmasked entry of each time series in the batch.
Combine MultivariateNormals into a factored joint distribution.
Ensures `observed_time_series_tensor` has a trailing dimension of size 1.
Construct a predictive normal distribution that mixes over posterior draws.
Calculate the batched KL divergence KL(a || b) with a and b Uniform.
Returns the distribution's required args.
Calculate the KL divergence between two `JointDistributionSequential`s.
Creates a `tuple` of `tuple`s of dependencies.
Shannon entropy in nats.
Returns `f(x)` if x is in the support, and `default_value` otherwise.
Runs one iteration of the Elliptical Slice Sampler.
Visualizes the reconstruction of inputs in TensorBoard.
Visualizes a qualitative analysis of a given model.
Summarize the parameters of a distribution.
Summarize the mean of a tensor in nats and bits per unit.
Returns an initial state for the LSTM cell.
Runs the model to generate a distribution for a single timestep.
Runs the model to generate a distribution p(x_t | z_t, f).
Runs the model to generate an intermediate representation of x_t.
Runs the model to generate a distribution `q(f | x_{1:T})`.
Runs the model to generate a distribution `q(z_{1:T} | x_{1:T})`.
Runs the model to generate a distribution `q(z_{1:T} | x_{1:T}, f)`.
Generate new sequences.
Reconstruct the given input sequences.
Sample the static latent prior.
Sample the static latent posterior.
Sample the dynamic latent prior.
Sample the static latent posterior.
If given an ordered list of parameter values, build a name:value map.
Convert a vector size to a matrix size.
Calculate the batched KL divergence KL(a || b) with a and b Gumbel.
The inverse of the CDF of the Normal distribution function.
Calculates the asymptotic series used in log_ndtr.
The inverse function for erf, the error function.
Runs HMC on the text-messages unnormalized posterior.
Compute the marginal of this GP over function values at `index_points`.
Compute log_prob(y) using log survival_function and cdf together.
Runs one iteration of NeuTra.
Convenience function analogous to tf.squared_difference.
Disables computation of the second derivatives for a tensor.
Split a covariance matrix into block-diagonal marginals of given sizes.
Defers an operator overload to `attr`.
Human-readable representation of a tensor's numpy value.
Sample shape of random variable as a `TensorShape`.
Sample shape of random variable as a 1-D `Tensor`.
In a session, computes and returns the value of this random variable.
Posterior Normal distribution with conjugate prior on the mean.
Build a scale-and-shift function using a multi-layer neural network.
Returns the unnormalized log density of an LKJ distribution.
Returns the log normalization of an LKJ distribution.
potential_scale_reduction for one single state `Tensor`.
Get number of elements of `x` in `axis`, as type `x.dtype`.
Broadcast a listable secondary_arg to that of states.
Use Gauss-Hermite quadrature to form quadrature on positive-reals.
Use LogNormal quantiles to form quadrature on positive-reals.
Finds the index of the optimal set of bounds for each chain.
Returns the bounds of the slice at each stage of doubling procedure.
For a given x position in each Markov chain, returns the next x.
Filters inputs to be compatible with function `f`'s signature.
Returns the config of the layer.
Simulates a No-U-Turn Sampler (NUTS) trajectory.
Builds a tree at a given tree depth and at a given state.
If two given states and momentum do not exhibit a U-turn pattern.
Runs one step of leapfrog integration.
Log-joint probability given a state's log-probability and momentum.
Creates a function to build Normal distributions with trainable params.
Deserializes the Keras-serialized function.
Serializes function for Keras.
Returns `True` if `args` should be expanded as `*args`.
Get the value returned by `tf.convert_to_tensor(distribution)`.
Helper utility to make a field of images.
Builds the model function for use in an estimator.
Verifies that `parts` don't broadcast.
r"""Finds root(s) of a function of single variable using the secant method.
Compute diffusion drift at the current location `current_state`.
Helper to broadcast `volatility_parts` to the shape of `state_parts`.
Build transition matrix for an autoregressive StateSpaceModel.
Calculates the reshaped dimensions (replacing up to one -1 in reshape).
Calculate the batched KL divergence KL(a || b) with a and b Pareto.
Returns `f(x)` if x is in the support, and `alt` otherwise.
Latent Dirichlet Allocation in terms of its generative process.
Builds the model function for use in an Estimator.
Returns the summary of the learned topics.
20 newsgroups as a tf.data.Dataset.
Calculate the batched KL divergence KL(a || b) with a and b Chi.
Returns a (dense) column of a Tensor or SparseTensor.
Add control dependencies to the commmitment loss to update the codebook.
Helper method to save a grid of images to a PNG file.
Helper method to save images visualizing model reconstructions.
Returns a `np.dtype` based on this `dtype`.
Returns a non-reference `dtype` based on this `dtype`.
Returns the maximum representable value in this data type.
Returns the string name for this `dtype`.
Returns the number of bytes to represent this `dtype`.
r"""Asserts all items are of the same base type.
Validate and return float type based on `tensors` and `dtype`.
Calculate the batched KL divergence KL(a || b) with a, b OneHotCategorical.
A single iteration of the Nelder Mead algorithm.
Creates the condition function pair for a reflection to be accepted.
Applies the [Gao and Han][3] presciption to the unspecified parameters.
Save a PNG plot visualizing posterior uncertainty on heldout data.
Build fake MNIST-style data for unit testing.
Calculate the batched KL divergence KL(a || b) with a and b Bernoulli.
Instantiates an initializer from a configuration dictionary.
Compute the log of the exponentially weighted moving mean of the exp.
Ensures non-scalar input has at least one column.
Calculate the batched KL divergence KL(a || b) with a and b Laplace.
Convenience function which chooses the condition based on the predicate.
Finish computation of log_prob on one element of the inverse image.
r"""Inverse of tf.nn.batch_normalization.
Check for valid BatchNormalization layer.
Slices a single parameter of a distribution.
Runs one step of Fisher scoring.
Helper to `fit` which sanitizes input args.
Returns number of cols in a given `Tensor`.
Wraps original_fn, preferring to call static_fn when inputs are static.
Get broadcast shape as a Python list of integers (preferred) or `Tensor`.
Returns `True` if `scale` is a `LinearOperator` that is known to be diag.
Convenience function that chooses one of two values based on the predicate.
Make (possibly negatively indexed) `axis` argument non-negative.
Assert x is a non-negative tensor, and optionally of integers.
Returns whether a and b have the same dynamic shape.
Helper which tries to return a static value.
Generate a new seed, from the given seed and salt.
r"""Creates a (batch of) triangular matrix from a vector of inputs.
Creates a vector from a (batch of) triangular matrix.
Creates a matrix with values set above, below, and on the diagonal.
Returns the size of a specific dimension.
Pads `value` to the front and/or back of a `Tensor` dim, `count` times.
Transform a 0-D or 1-D `Tensor` to be 1-D.
Produces the content of `output_tensor` only after `dependencies`.
Checks that `rightmost_transposed_ndims` is valid.
Checks that `perm` is valid.
Helper for _forward and _inverse_event_shape.
Returns the concatenation of the dimension in `x` and `other`.
A version of `constant_value()` that returns a `TensorShape`.
Returns a list of dimension sizes, or `None` if `rank` is unknown.
Returns a shape combining the information in `x` and `other`.
Returns a shape based on `x` with at least the given `rank`.
Build a callable that perform one step for backward smoothing.
Build a callable that performs one step of Kalman filtering.
Conjugate update for a linear Gaussian model.
Build a callable that performs one step of Kalman mean recursion.
Build a callable for one step of Kalman covariance recursion.
Build a callable for one step of Kalman sampling recursion.
Run the backward pass in Kalman smoother.
Run a Kalman filter over a provided sequence of outputs.
Computes the log-normalizer of the distribution.
Create a deep copy of fn.
Update old_str by inserting append_str just before the "Args:" section.
Converts the given `value` to a (structure of) `Tensor`.
Recursively replace `dict`s with `_PrettyDict`.
Check args and return samples.
Helper which returns `True` if input is `collections.namedtuple`-like.
Construct a for loop, preferring a python loop if `n` is staticaly known.
Enables the `store_parameters_in_results` parameter in a chain of kernels.
Replaces the rightmost dims in a `Tensor` representing a shape.
Replaces the event shape dims of a `TensorShape`.
Check that a shape Tensor is int-type and otherwise sane.
Calculate the batchwise KL divergence KL(d1 || d2) with d1 and d2 Beta.
Checks the validity of a sample.
Returns a dictionary to populate the initial state of the search procedure.
Restricts a function in n-dimensions to a given direction.
Updates the state advancing its position by a given position_delta.
Compute the norm of the given (possibly batched) value.
Broadcast a value to match the batching dimensions of a target.
Compute the harmonic number from its analytic continuation.
Compute the n'th (uncentered) moment.
Validates that target_accept_prob is in (0, 1).
field_name from kernel_results or kernel_results.accepted_results.
Takes one step of the TransitionKernel.
Returns an object with the same type as returned by `one_step`.
Checks the validity of the concentration parameter.
Makes a function which applies a list of Bijectors' `log_det_jacobian`s.
Makes a function which applies a list of Bijectors' `forward`s.
Makes a function which applies a list of Bijectors' `inverse`s.
Returns an object with the same type as returned by `one_step`.
Like tf.where but works on namedtuples.
Squeezes a bracketing interval containing the minimum.
Actual implementation of bisect given initial_args in a _BracketResult.
Checks if the supplied values are finite.
Checks whether the Wolfe or approx Wolfe conditions are satisfied.
Returns the secant interpolation for the minimum.
Create a function implementing a step-size update policy.
Create the encoder function.
Create the decoder function.
Create the prior distribution.
Build the model function for use in an estimator.
Learnable Gamma via concentration and scale parameterization.
Get the KL function registered for classes a and b.
Get the KL-divergence KL(distribution_a || distribution_b).
Returns an image tensor.
Creates a character sprite from a set of attribute sprites.
Calculate the batched KL divergence KL(b0 || b1) with b0 and b1 Blockwise distributions.
Calculate the batched KL divergence KL(a || b) with a and b `HalfNormal`.
Flatten a list of kernels which may contain _SumKernel instances.
Flatten a list of kernels which may contain _ProductKernel instances.
Build fake CIFAR10-style data for unit testing.
Counts the number of occurrences of each value in an integer array `arr`.
Compute the `q`-th percentile(s) of `x`.
Compute quantiles of `x` along `axis`.
Get static number of dimensions and assert that some expectations are met.
Insert the dims in `axis` back as singletons after being removed.
Convert possibly negatively indexed axis to non-negative list of ints.
Move dims corresponding to `axis` in `x` to the end, then flatten.
Use `top_k` to sort a `Tensor` along the last dimension.
Build an ordered list of Distribution instances for component models.
The Amari-alpha Csiszar-function in log-space.
The reverse Kullback-Leibler Csiszar-function in log-space.
The Jensen-Shannon Csiszar-function in log-space.
The Pearson Csiszar-function in log-space.
The Squared-Hellinger Csiszar-function in log-space.
The T-Power Csiszar-function in log-space.
The log1p-abs Csiszar-function in log-space.
The Jeffreys Csiszar-function in log-space.
The Modified-GAN Csiszar-function in log-space.
Calculates the dual Csiszar-function in log-space.
Symmetrizes a Csiszar-function in log-space.
Monte-Carlo approximation of the Csiszar f-Divergence.
Use VIMCO to lower the variance of gradient[csiszar_function(Avg(logu))].
1-D interpolation that works with/without batching.
Multi-linear interpolation on a regular (constant spacing) grid.
N-D interpolation that works with leading batch dims.
Like batch_gather, but broadcasts to the left of axis.
r"""Importance sampling with a positive function, in log-space.
Evaluate `Log[E[values]]` in a stable manner.
Takes one step of the TransitionKernel.
Returns an object with the same type as returned by `one_step`.
Applies the BFGS algorithm to minimize a differentiable function.
Computes the product of a matrix with a vector on the right.
Return `Tensor` with right-most ndims summed.
Return common dtype of arg_list, or None.
Applies the L-BFGS algorithm to minimize a differentiable function.
Create LBfgsOptimizerResults with initial state of search procedure.
Conditionally push new vectors into a batch of first-in-first-out queues.
Returns whether the input matches the given determinant limit.
Returns a uniformly random `Tensor` of "correlation-like" matrices.
Batchwise KL divergence KL(d1 || d2) with d1 and d2 von Mises.
Performs one step of the differential evolution algorithm.
Applies the Differential evolution algorithm to minimize a function.
Checks if all the population values are NaN/infinite.
Performs recombination by binary crossover for the current population.
Converts the input arg to a list if it is not a list already.
Calculate the batched KL divergence `KL(a || b)` with `a` Deterministic.
Build an iterator over training batches.
Save a synthetic image as a PNG file.
Converts a sequence of productions into a string of terminal symbols.
Runs the model forward to generate a sequence of productions.
Runs the model forward to return a stochastic encoding.
Inverse function of _hat_integral.
Compute the matrix rank; the number of non-zero SVD singular values.
Concatenates `chol @ chol.T` with additional rows and columns.
Compute the Moore-Penrose pseudo-inverse of a matrix.
Returns list of assertions related to `lu_reconstruct` assumptions.
Returns list of assertions related to `lu_solve` assumptions.
Returns (batched) matmul of a SparseTensor (or Tensor) with a Tensor.
Returns (batched) matmul of a (sparse) matrix with a column vector.
Returns (batched) matmul of a SparseTensor with a Tensor.
Checks that input is a `float` matrix.
r"""Fits a GLM using coordinate-wise FIM-informed proximal gradient descent.
Generate the slices for building an autoregressive mask.
Generate the mask for building an autoregressive dense layer.
Returns a list of degree vectors, one for each input and hidden layer.
Returns a list of binary mask matrices enforcing autoregressivity.
Returns a masked version of the given initializer.
Build a zero-dimensional MVNDiag object.
Build an observation_noise_fn that observes a Tensor timeseries.
Computes the number of edges on longest path from node to root.
Variational loss for the VGP.
Build utility method to compute whether the season is changing.
Build a function computing transitions for a seasonal effect model.
Build the transition noise model for a SeasonalStateSpaceModel.
Build transition noise distribution for a ConstrainedSeasonalSSM.
Do an optimization.
Configure validation settings.
Configure validation settings.
Set the interval of recording for each indicator.
Parse or download news20 if source_dir is empty.
Parse or download the pre-trained glove word2vec if source_dir is empty.
Train a model for a fixed number of epochs on a dataset.
Evaluate a model on a given dataset in distributed mode.
Use a model to do prediction.
When to end the optimization based on input option.
Sets the value of :py:attr:`batchSize`.
Return the broadcasted value
Call API in PythonBigDL
Call Java Function
Return a JavaRDD of Object by unpickling
Convert Python object into Java
Convert a ndarray to a DenseTensor which would be used in Java side.
get label as ndarray from ImageFeature
Read parquet file as DistributedImageFrame
write ImageFrame as parquet file
get image from ImageFrame
Random split imageframes according to weights         :param weights: weights for each ImageFrame         :return:
get image list from ImageFrame
Optimize the model by the given options
Save a Keras model definition to JSON with given path
Define a convnet model in Keras 1.2.2
Load a pre-trained Bigdl model.
Get the model parameters which containing: weight, bias, gradBias, gradWeight
Load a pre-trained Bigdl model.
Load a pre-trained Torch model.
Load a pre-trained Keras model.
Load a pre-trained Caffe model.
Load a pre-trained Caffe model.
Create a python Criterion by a java criterion object
Load IMDB dataset     Transform input data into an RDD of Sample
Define a recurrent convolutional model in Keras 1.2.2
Parse or download movielens 1m  data if train_dir is empty.
Get and return the jar path for bigdl if exists.
Check if spark version is below 2.2
Export variable tensors from the checkpoint files.
Simple attention without any conditions.
Dump the trained weights from a model to a HDF5 file.
Read data by dataset_reader from specified config.
Create iterator (from config) for specified data.
Convert labels to one-hot vectors for multi-class multi-label classification
Configure session for particular device
Checks existence of the model file, loads the model if the file exists
Trains the model on a single batch.
Extract values of momentum variables from optimizer
Number of convolutional layers stacked on top of each other
Dropout with the same drop mask for all fixed_mask_dims
Trains model on a single batch
Transforms a sentence to Numpy array, which will be the network input.
Transforms a sentence of tags to Numpy array, which will be the network target.
Calculate BLEU score
Verifies Alexa request signature.
DeepPavlov console configuration utility.
Calculate accuracy in terms of absolute coincidence
Prettifies the dictionary of metrics.
Initiates Flask web service with Alexa skill.
Load model parameters from self.load_path
Save model parameters to self.save_path
Print number of *trainable* parameters in the network
Initiates self-destruct timer.
Build and return the model described in corresponding configuration file.
Make a prediction with the component described in corresponding configuration file.
Reads input file in CONLL-U format
Processes all words in data using     :func:`~deeppavlov.dataset_iterators.morphotagger_iterator.process_word`.
Returns a function object with the name given in string.
Convert given string label of decay type to special index
Find the best value according to given losses
Makes a module spec.
Download a file from URL to one or several target locations
Given a file URL, return a md5 query of the file
Given a URL, set or replace a query parameter and return the modified URL.
r"""Return True if at least one GPU is available
Recursively apply config's variables values to its property
Read config's variables and apply their values to all its properties
Thread run method implementation.
Returns a class object with the name given as a string.
Returns a registered class object with the name given in the string.
Extract full regularization path explored during lambda search from glm model.
Create a custom GLM model using the given coefficients.
Create H2OCluster object from a list of key-value pairs.
Shut down the server.
Determine if the H2O cluster is running or not.
List all jobs performed by the cluster.
Return the list of all known timezones.
Update information in this object from another H2OCluster instance.
Repeatedly test a function waiting for it to return True.
Fetch all the jobs or a single job from the /Jobs endpoint.
Delete a frame on the h2o cluster, given its key.
Delete a model on the h2o cluster, given its key.
Pretty tabulated string of all the cached data, and column names
Create a new reservation for count instances
terminate all the instances given by its ids
stop all the instances given by its ids
Start all the instances given by its ids
Reboot all the instances given by its ids
Wait for ssh service to appear on given hosts
Return function's declared arguments as a string.
Wait until job's completion.
Fit an H2O model as part of a scikit-learn pipeline or grid search.
Obtain parameters for this estimator.
Print USAGE help.
Clear the output directory.
Start one node of H2O.         (Stash away the self.child and self.pid internally here.)
Look at the stdout log and figure out which port the JVM chose.
Start H2O cluster.         The cluster is not up until wait_for_cloud_to_be_up() is called and returns.
Terminate a running cluster.  (Due to a signal.)
Return a port to use to talk to this cluster.
Return the coordinates of the ROC curve for a given set of data.
Assert that the argument has the specified type.
Assert that string variable matches the provided regular expression.
Assert that variable satisfies the provided condition.
Return True if the variable is of the specified type, and False otherwise.
Return the name of the provided type.
Attempt to find the source code of the ``lambda_fn`` within the string ``src``.
Return string representing the name of this type.
Return True if the variable matches this type, and False otherwise.
Return string representing the name of this type.
Return string representing the name of this type.
Return True if the variable matches this type, and False otherwise.
Return True if the variable matches this type, and False otherwise.
Return string representing the name of this type.
Return True if the variable matches the specified type.
Return string representing the name of this type.
Return True if the variable matches the specified type.
Return True if the variable matches this type, and False otherwise.
Check whether the provided value is a valid enum constant.
Retrieve the config as a dictionary of key-value pairs.
Find and parse config file, storing all variables in ``self._config``.
Return possible locations for the .h2oconfig file, one at a time.
Start the progress bar, and return only when the progress reaches 100%.
Save the current model progress into ``self._progress_data``, and update ``self._next_poll_time``.
Compute t0, x0, v0, ve.
Estimate the moment when the underlying process is expected to reach completion.
Determine when to query the progress status next.
Calculate the modelled progress state for the given time moment.
Return the projected time when progress level `x_target` will be reached.
Print the rendered string to the stdout.
Render the widget.
Find current STDOUT's width, in characters.
Render the widget.
Inform the widget about the encoding of the underlying character stream.
Render the widget.
Retrieve an existing H2OFrame from the H2O cluster using the frame's id.
The list of column names (List[str]).
Number of rows in the dataframe (int).
Number of columns in the dataframe (int).
The type for the given column.
Extract columns of the specified type from the frame.
Display summary information about the frame.
Generate an in-depth description of this H2OFrame.
Return the first ``rows`` and ``cols`` of the frame as a new H2OFrame.
Create a time column from individual components.
Get the factor levels.
Get the number of factor levels for each categorical column.
A method to set all column values to one of the levels.
Replace the levels of a categorical column.
Change names of columns in the frame.
Change names of all columns in the frame.
Set a new name for a column.
Compute cumulative sum over rows / columns of the frame.
Test whether elements of an H2OFrame are contained in the ``item``.
Compactly display the internal structure of an H2OFrame.
Obtain the dataset as a python-local object.
Pop a column from the H2OFrame at index i.
Append multiple H2OFrames to this frame, column-wise or row-wise.
Append data to this frame column-wise.
Append data to this frame row-wise.
Split a frame into distinct subsets of size determined by the given ratios.
Impute missing values into the frame, modifying it in-place.
Insert missing values into the current frame, modifying it in-place.
Compute the frame's sum by-column (or by-row).
Compute the variance-covariance matrix of one or two H2OFrames.
Compute the correlation matrix of one or two H2OFrames.
Compute a pairwise distance measure between all rows of two numeric H2OFrames.
Convert columns in the current frame to categoricals.
Return the list of levels for an enum (categorical) column.
Split the strings in the target column on the given regular expression pattern.
Return a copy of the column with leading characters removed.
Compute a histogram over a numeric column.
Substitute the first occurrence of pattern in a string with replacement.
Translate characters from lower to upper case for a particular column.
Searches for matches to argument `pattern` within each element         of a string column.
Center and/or scale the columns of the current frame.
Round doubles/floats to the given number of significant digits.
Remove rows with NAs from the H2OFrame.
Conduct a diff-1 transform on a numeric frame column.
For each element in an H2OFrame, determine if it is NA or not.
Extract the "minute" part from a date column.
Construct a column that can be used to perform a random stratified split.
Get the index of the max value in a column or row
Apply a lambda expression to an H2OFrame.
Deprecated, use :func:`moment` instead.
[DEPRECATED] Use constructor ``H2OFrame()`` instead.
Parse code from a string of text.
Parse the provided file, and return Code object.
Parse any object accessible through a readline interface into a list of :class:`Token`s.
Move the token by `drow` rows and `dcol` columns.
Convert the parsed representation back into the source code.
First stage of parsing the code (stored as a raw stream of tokens).
Second stage of parsing: convert ``fragments`` into the list of code objects.
Get the sizes of each cluster.
Connect to an existing H2O server, remote or local.
Perform a REST API request to a previously connected server.
Import a single file or collection of files.
Upload a dataset from the provided local path to the H2O cluster.
Import a dataset that is already on the cluster.
Import Hive table to H2OFrame in memory.
Import SQL table to H2OFrame in memory.
Retrieve H2O's best guess as to what the structure of the data file is.
Parse dataset using the parse setup structure.
(internal) Assign new id to the frame.
Create a deep clone of the frame ``data``.
Load a model from the server.
Return the specified grid.
Obtain a handle to the frame in H2O with the frame_id key.
Remove object(s) from H2O.
Download an H2O data set to a CSV file on the local disk.
Download H2O log files to disk.
Create a new frame with random data.
Convert an H2O data object into a python-specific object.
Imports a data file within the 'h2o_data' folder.
Create Model Metrics from predicted and actual values in H2O.
Upload given file into DKV and save it under give key as raw object.
Check that the provided frame id is valid in Rapids language.
Return a "canonical" version of slice ``s``.
Wait until grid finishes computing.
Train the model synchronously (i.e. do not return until the model finishes training).
Predict on a dataset.
Return a Model object.
Obtain a hidden layer's details on a dataset.
Return the frame for the respective weight matrix.
Return the frame for the respective bias vector.
Generate model metrics for this model on test_data.
Print a detailed summary of the explored models.
Print models sorted by metric.
Pretty print the variable importances, or rsetqureyeturn them in a list/pandas DataFrame.
Get the hyperparameters of a model explored by grid search.
Retrieve an H2OGridSearch instance.
Obtain the reconstruction error for the input test_data.
Get the F1 values for a set of thresholds for the models explored.
Get the confusion matrix for the specified metrics/thresholds.
Return the Importance of components associcated with a pca model.
The archetypes (Y) of the GLRM model.
Convert archetypes of the model into original feature space.
Produce the scree plot.
Convert names with underscores into camelcase.
Dedent text to the specific indentation level.
Generate schema Java class.
Generate a Retrofit Proxy class.
Parse file specified by constructor.
Parse file specified by constructor.
Obtain the reconstruction error for the input test_data.
.. index: default            :refguide: something, else, and more
r"""         Establish connection to an existing H2O server.
Perform a REST API request to the backend H2O server.
Close an existing connection; once closed it cannot be used again.
Return the session id of the current connection.
Start logging all API requests to the provided destination.
Prepare `filename` to be sent to the server.
Log the beginning of an API request.
Log response from an API request.
Log the message `msg` to the destination `self._logging_dest`.
Given a response object, prepare it to be handed over to the external caller.
approxEqual(float1, float2[, tol=1e-18, rel=1e-7]) -> True|False     approxEqual(obj1, obj2[, *args, **kwargs]) -> True|False
Retrieve information about an AutoML instance.
Predict on a dataset.
Download the leader model in AutoML in MOJO format.
Scale an H2OFrame with the fitted means and standard deviations.
Undo the scale transformation.
Write one log file into the summary text file.
Wait until the job finishes.
Convert the munging operations performed on H2OFrame into a POJO.
Find the percentile of a list of values.
Get the parameters and the actual/default values only.
Dictionary of the default parameters of the model.
Predict on a dataset and return the leaf node assignment (only for tree-based models).
Predict on a dataset.
Return a Model object.
Return the frame for the respective weight matrix.
Return the frame for the respective bias vector.
Generate model metrics for this model on test_data.
Print innards of model, without regards to type.
Pretty print the variable importances, or return them in a list.
Return the coefficients which can be applied to the non-standardized data.
Download the POJO for this model to the directory specified by path.
Download the model in MOJO format.
Save Model Details of an H2O Model in JSON Format to disk.
Check that y_actual and y_predicted have the same length.
Obtain a list of cross-validation models.
Obtain the (out-of-sample) holdout predictions of all cross-validation models on their holdout data.
GBM model demo.
GLM model demo.
Execute the demo, echoing commands and pausing for user input.
Wait for a key press on the console and return it.
Convert to a python 'data frame'.
Print the contents of this table.
Start new H2O server on the local machine.
Shut down the server by trying to terminate/kill its process.
Return the location of an h2o.jar executable.
Actually start the h2o.jar executable (helper method for `.start()`).
Find location of the java executable (helper for `._launch_server()`).
Generate names for temporary files (helper method for `._launch_server()`).
Retrieve the Hit Ratios.
Equivalent of csv.DictWriter, but allows `delimiter` to be a unicode string on Py2.
Convert uri to absolute filepath
Convert directory path to uri
Parse module defined in *uri*
Parse lines of text for functions and classes
Make autodoc documentation template string for a module
Returns True if *matchstr* does not match patterns
Generate API reST files.
Make a reST API index file from written files
Convert this confusion matrix into a 2x2 plain list of values.
Read confusion matrices from the list of sources (?).
Load java messages that can be ignored pickle file into a dict structure g_ok_java_messages.
Parse user inputs and set the corresponing global variables to perform the     necessary tasks.
Find all python files in the given directory and all subfolders.
Search the file for any magic incantations.
Parse file into chunks / objects.
Transform H2OFrame using a MOJO Pipeline.
Display a short summary of the metrics.
Produce the desired metric plot.
Get the confusion matrix for the specified metric
Generate C# declaration file for a schema.
Return endpoints, grouped by the class which handles them.
Return the resulting H2OFrame containing the result(s) of aggregation(s) of the group by.
Append a header, preserving any duplicate entries.
Takes a function or coroutine `func(request) -> response`,     and returns an ASGI application.
Takes a coroutine `func(session)`, and returns an ASGI application.
Given a path string, like: "/{username:str}", return a three-tuple     of (regex, format, {param_name:convertor}).
Given a function, parse the docstring as YAML and return a dictionary of info.
Returns an HTTP response, given the incoming path, method and request headers.
Builds a scope and request body into a WSGI environ object.
Adds the default_data to data and dumps it to a json.
Returns login and password stored in `secret.txt`.
Sum position exposures by sector.
Determines the long and short allocations in a portfolio.
Generate a number of tear sheets that are useful     for analyzing a strategy's performance.
Generate a number of plots for analyzing a strategy's returns.
Generate a number of plots for analyzing a     strategy's positions and holdings.
Generate a number of plots for analyzing a strategy's transactions.
Generate a number of Bayesian distributions and a Bayesian     cone plot of returns.
Generate plots and tables for analyzing a strategy's performance.
Maps a single transaction row to a dictionary.
Extract daily transaction data from set of transaction objects.
Apply a slippage penalty for every dollar traded.
Merge transactions of the same direction separated by less than     max_delta time duration.
Generate various round-trip statistics.
Attributes the performance of a returns stream to a set of risk factors.
Plot total, specific, and common returns.
Plot each factor's contribution to performance.
Extract returns, positions, transactions and leverage from the     backtest data structure returned by zipline.TradingAlgorithm.run().
Pretty print a pandas DataFrame.
Logic for checking if a strategy is intraday and processing it.
Sample a colormap from matplotlib
Prints some performance metrics of the strategy.
Plots the max and median of long and short position concentrations     over the time.
Plots the sector exposures of the portfolio over time.
Prints the share of total PnL contributed by each     traded name.
Plots a probability distribution for the event of making     a profitable trade.
Variance-covariance calculation of daily Value-at-Risk in a     portfolio.
Determines the Sortino ratio of a strategy.
Determines the Sharpe ratio of a strategy.
Calculates the gross leverage of a strategy.
Calculates various performance metrics of a strategy, for use in     plotting.show_perf_stats.
Determines the maximum drawdown of a strategy.
Places top drawdowns in a table.
Run stochastic volatility model.
Generate plot for stochastic volatility model.
Run one of the Bayesian models.
Add a specific enqueue time to the message.
Complete the message.
Move the message to the Dead Letter queue.
Abandon the message.
Defer the message.
Move the message to the Dead Letter queue.
Abandon the message.
Gives the sas-url to download the configurations for vpn-sites in a         resource group.
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Updates a running PowerShell command with more data.
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Sets the proxy server host and port for the HTTP CONNECT Tunnelling.
Return the target uri for the request.
Create connection for the request.
Sends request to cloud service server and return the response.
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Check the availability of a Front Door resource name.
Extracts the host authority from the given URI.
Check Name Availability for global uniqueness.
Sets up the timeout for the request.
Sends the request body.
Sets up the host and the port for the HTTP CONNECT Tunnelling.
Sets up the host and the port for the HTTP CONNECT Tunnelling.
Sends the headers of request.
converts a Python name into a serializable name
Serialize bytes into base-64 string.     :param str: Object to be serialized.     :rtype: str
Updates the properties of the specified job.
Adds a job to the specified account.
Lists all of the jobs in the specified account.
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Parse the HTTPResponse's body and fill all the data into a class of         return_type.
Parse the HTTPResponse's body and fill all the data into a class of         return_type.
parse the xml and fill all the data into a class of return_type
Converts a child of the current dom element to the specified type.
<Resource xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.microsoft.com/windowsazure">         <IntrinsicSettings>             <Plan>Standard</Plan>             <Quota>                 <MaxJobCount>10</MaxJobCount>                 <MaxRecurrence>                     <Frequency>Second</Frequency>                     <Interval>1</Interval>                 </MaxRecurrence>             </Quota>         </IntrinsicSettings>         </Resource>
Instance depends on the API version:
Get domain name recommendations based on keywords.
Asynchronous operation to modify a knowledgebase.
Register a renewable entity for automatic lock renewal.
Will clone the given PR branch and vuild the package with the given name.
Import data into Redis cache.
Publish runbook draft.
Renew the message lock.
Move the message to the Dead Letter queue.
Abandon the message.
Complete the message.
Replace alterations data.
Adds the specified value as a new version of the specified secret         resource.
Returns system properties for the specified storage account.
Creates a new storage account in Windows Azure.
Updates the label and/or the description for a hosted service in         Windows Azure.
Returns configuration information, status, and system properties for         a deployment.
Returns configuration information, status, and system properties for a         deployment.
Initiates a change to the deployment configuration.
Initiates a change in deployment status.
Initiates an upgrade.
Requests a reboot of a role instance that is running in a deployment.
Returns the public data for the specified X.509 certificate associated         with a hosted service.
Adds a certificate to a hosted service.
Deletes a service certificate from the certificate store of a hosted         service.
Reserves an IPv4 address for the specified subscription.
Deletes a reserved IP address from the specified subscription.
Associate an existing reservedIP to a deployment.
Disassociate an existing reservedIP from the given deployment.
Provisions a virtual machine based on the supplied configuration.
Adds a virtual machine to an existing deployment.
Adds a DNS server definition to an existing deployment.
Updates the ip address of a DNS server.
Deletes a DNS server from a deployment.
Adds a data disk to a virtual machine.
Removes the specified data disk from a virtual machine.
Updates an existing disk in your image repository.
Get all smartGroups within the subscription.
Open receiver connection and authenticate session.
Receive a batch of messages at once.
Renew the session lock.
Browse messages currently pending in the queue.
List session IDs.
Create or update a VM scale set.
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Sets a secret in a specified key vault.
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Create a Service Bus client from a connection string.
Get an async client for a subscription entity.
Get an async client for all subscription entities in the topic.
Send one or more messages to the current entity.
Get a Sender for the Service Bus endpoint.
Get a Receiver for the Service Bus endpoint.
Get a Receiver for the deadletter endpoint of the entity.
Extracts request id from response header.
Sets the proxy server host and port for the HTTP CONNECT Tunnelling.
Performs a GET request and returns the response.
Performs a PUT request and returns the response.
Waits for an asynchronous operation to complete.
Add additional headers for management.
List certificates in a specified key vault.
Get list of available service bus regions.
List the service bus namespaces defined on the account.
Get details about a specific namespace.
Create a new service bus namespace.
Delete a service bus namespace.
Enumerates the queues in the service namespace.
Retrieves the topics in the service namespace.
Retrieves the notification hubs in the service namespace.
Retrieves the relays in the service namespace.
Create a virtual environment in a directory.
Create a venv with these packages in a temp dir and yielf the env.
Create a new Azure SQL Database server.
Reset the administrator password for a server.
Deletes an Azure SQL Database server (including all its databases).
Update a firewall rule for an Azure SQL Database server.
Retrieves the set of firewall rules for an Azure SQL Database Server.
List the SQL databases defined on the specified server name
Open handler connection and authenticate session.
Close down the handler connection.
Open receiver connection and authenticate session.
Get the session state.
Set the session state.
Receive messages that have previously been deferred.
Verifies that the challenge is a Bearer challenge and returns the key=value pairs.
Purges data in an Log Analytics workspace by a set of user-defined         filters.
Handle connection and service errors.
Retrieves an existing queue.
Enumerates the queues in the service namespace.
Retrieves the description for the specified topic.
Retrieves the description for the specified rule.
Retrieves the rules that exist under the specified subscription.
Retrieves the subscriptions in the specified topic.
Receive a message from a queue for processing.
Receive a message from a subscription for processing.
Updates an Event Hub.
Sends a new message event to an Event Hub.
return the signed string with token.
Check if token expires or not.
Reset Service Principal Profile of a managed cluster.
add addtional headers to request for message request.
return the current message as expected by batch body format
Instance depends on the API version:
Start capturing network packets for the site.
Get the difference in configuration settings between two web app slots.
Reset auth_attempted on redirects.
Moves resources from one resource group to another resource group.
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Define a new default profile.
Send a message and blocks until acknowledgement is received or the operation fails.
Queue a message to be sent later.
Send one or more messages to be enqueued at a specific time.
Create a queue entity.
Delete a queue entity.
Create a topic entity.
Delete a topic entity.
Create a subscription entity.
Create a Client from a Service Bus connection string.
Perform an operation to update the properties of the entity.
Queue a message to be sent later.
Register a renewable entity for automatic lock renewal.
Creates a session for a node.
Scan output for exceptions
Adds a chunk of tasks to the job
Main method for worker to run
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Create message from response.
Creates a new certificate inside the specified account.
Instantiate a client from kwargs, removing the subscription_id/tenant_id argument if unsupported.
Parse the HTTPResponse's body and fill all the data into a class of         return_type.
get properties from element tree element
parse the xml and fill all the data into a class of return_type
Converts a child of the current dom element to the specified type.
Checks whether a domain name in the cloudapp.azure.com zone is         available for use.
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
Instance depends on the API version:
List all entities (Management Groups, Subscriptions, etc.) for the         authenticated user.
Get a client for a queue entity.
Get clients for all queue entities in the namespace.
Get a client for a topic entity.
Get a client for all topic entities in the namespace.
Browse messages currently pending in the queue.
List session IDs.
Receive messages by sequence number that have been previously deferred.
Settle messages that have been previously deferred.
List the web sites defined on this webspace.
Create a website.
Delete a website.
Update a web site.
Restart a web site.
Get a site's publish profile as a string
Get a site's publish profile as an object
Updates the policies for the specified container registry.
Send one or more messages to be enqueued at a specific time.
Wait until all pending messages have been sent.
Reconnect the handler.
Send a message and blocks until acknowledgement is received or the operation fails.
Load any stored cookies for the plugin that have not expired.
Return a shell-escaped version of the string *s*.
Returns the width of the string it would be when displayed.
Clears out the previous line and prints a new one.
Formats the file size into a human readable format.
Progress an iterator and updates a pretty status line to the terminal.
od.clear() -> None.  Remove all items from od.
Locates unique identifier ("room_id") for the room.
Pauses the thread for a specified time.
Adds a segment to the download pool and write queue.
Puts a value into a queue but aborts if this thread is closed.
Find the Video Packet ID in the HTML for the provided URL
Remove the PKCS#7 padding
Changes google.com to www.google.com
Parses a query string into a dict.
Get the live stream in a particular language         :param lang:         :param path:         :return:
Find the streams for OlympicChannel         :return:
Spawn the process defined in `cmd`
Attempt to parse a DASH manifest file and return its streams
Parses JSON from a response.
Parses XML from a response.
Parses a semi-colon delimited list of cookies.
Parses a semi-colon delimited list of headers.
Randomly generated deviceId.         :return:
Return the message for this LogRecord.
A factory method which can be overridden in subclasses to create         specialized LogRecords.
Wraps a file, described in request, in a Response object.
Get the info about the content, based on the ID         :param content_id:         :return:
Find the streams for vk.com         :return:
Find the streams for web.tv         :return:
Attempt a login to LiveEdu.tv
Loads a plugin from the same directory as the calling plugin.
Update or remove keys from a query string in a URL
Find all the streams for the ITV url             :return: Mapping of quality to stream
Find all the arguments required by name
Decides where to write the stream.
Creates a HTTP server listening on a given host and port.
Repeatedly accept HTTP connections on a server.
Continuously output the stream over HTTP.
Prepares a filename to be passed to the player.
Open stream, create output and finally write the stream to output.
Reads data from stream and then writes it to the output.
Decides what to do with the selected stream.
Returns the real stream name of a synonym.
Outputs a list of all plugins Streamlink has loaded.
Try to find a stream_id
Returns current value of specified option.
Attempt to load plugins from the path specified.
Get the VOD data path and the default VOD ID         :return:
Checks if the string value starts with another string.
Checks if the string value ends with another string.
Checks if the string value contains another string.
Get item from value (value[item]).
Get a named attribute from an object.
Apply function to each value inside the sequence or dict.
Parses an URL and validates its attributes.
Find a XML element via xpath.
Find a list of XML elements via xpath.
Find the VOD video url         :return: video url
Get the live stream in a particular language         :param match:         :return:
Find the streams for euronews         :return:
Check if the current player supports adding a title
Search for the episode with the requested experience Id         :return:
Returns the stream_id contained in the HTML.
Returns a nested list of different stream options.
login and update cached cookies
Makes a call against the api.
Returns the data for a certain media item.
Decorator for making an instance method private.
Decorator for making an instance method private.
Wrapper for _log_counter_per_token.
Log 'msg % args' at level 'level' only if condition is fulfilled.
Returns (filename, linenumber) for the stack frame.
Assemble a logline prefix using the google2 format.
Returns the a :class:`TaskSpecDef` based on the environment variables for distributed training.
A generic function to load mnist-like dataset.
Load CIFAR-10 dataset.
Load Matt Mahoney's dataset.
Load IMDB dataset.
Load Nietzsche dataset.
Load WMT'15 English-to-French translation dataset.
Load Flickr25K dataset.
Load Flick1M dataset.
Load images from CycleGAN's database, see `this link <https://people.eecs.berkeley.edu/~taesung_park/CycleGAN/datasets/>`__.
Download file from Google Drive.
Load CelebA dataset
Load the parameters of a Model saved by tl.files.save_npz().
Assign the given parameters to the TensorLayer network.
Load model from npz and assign to a network.
Input parameters and the file name, save parameters as a dictionary into .npz file.
Restore the parameters saved by ``tl.files.save_npz_dict()``.
Save parameters into `ckpt` file.
Load parameters from `ckpt` file.
Load `.npy` file.
r"""Return a file list in a folder by given a path and regular expression.
Return a folder list in a folder by given a folder path.
Sort list of string with number in human order.
r"""Convert the first weight matrix of `.npz` file to `.pdf` by using `tl.visualize.W()`.
Process a batch of data by given function by threading.
Projective transform by given coordinates, usually 4 coordinates.
Rotate an image randomly or non-randomly.
Shift an image randomly or non-randomly.
Shear an image randomly or non-randomly.
Shear an image randomly or non-randomly.
Swirl an image randomly or non-randomly, see `scikit-image swirl API <http://scikit-image.org/docs/dev/api/skimage.transform.html#skimage.transform.swirl>`__     and `example <http://scikit-image.org/docs/dev/auto_examples/plot_swirl.html>`__.
Zooming/Scaling a single image that height and width are changed together.
Zooming/Scaling a single image that height and width are changed independently.
Change the brightness of a single image, randomly or non-randomly.
Perform illumination augmentation for a single image, randomly or non-randomly.
Input RGB image [0~255] return HSV image [0~1].
Resize an image by given output size and method.
Scales each value in the pixels of the image.
Normalize an image by rescale, samplewise centering and samplewise centering in order.
Return the ZCA whitening principal components matrix.
Apply ZCA whitening on an image by given principal components matrix.
Shift the channels of an image, randomly or non-randomly, see `numpy.rollaxis <https://docs.scipy.org/doc/numpy/reference/generated/numpy.rollaxis.html>`__.
Randomly set some pixels to zero by a given keeping probability.
Inputs a list of points, return a 2D image.
r"""Input string format of class, x, y, w, h, return list of list format.
Parse darknet annotation format into two lists for class and bounding box.
Left-right flip the image and coordinates for object detection.
Resize an image, and compute the new bounding box coordinates.
Add special start token(id) in the beginning of each sequence.
Add special end token(id) in the end of each sequence.
Add special end token(id) in the end of each sequence.
Rotate an image and corresponding keypoints.
Flip an image and corresponding keypoints.
Choice and return an an action by given the action probability distribution.
Sigmoid cross-entropy operation, see ``tf.nn.sigmoid_cross_entropy_with_logits``.
leaky_relu can be used through its shortcut: :func:`tl.act.lrelu`.
:func:`leaky_relu6` can be used through its shortcut: :func:`tl.act.lrelu6`.
:func:`leaky_twice_relu6` can be used through its shortcut: :func:`:func:`tl.act.ltrelu6`.
State size of the LSTMStateTuple.
Batch version of tf_map_coordinates
Save model architecture and parameters into database, timestamp will be added automatically.
Finds and returns a dataset from the database which matches the requirement.
Uploads a task to the database, timestamp will be added automatically.
Finds and runs a pending task that in the first of the sorting list.
Read one image.
Returns all images in list by given path and name of each image file.
Save multiple images into one single image.
Display a frame. Make sure OpenAI Gym render() is disable before using it.
Display a group of RGB or Greyscale CNN masks.
Visualize the embeddings by using t-SNE.
Visualize every columns of the weight matrix to a group of Greyscale img.
Save data into TFRecord.
Print all info of parameters in the network
Print all info of layers in the network.
Returns the number of parameters in the network.
Return the parameters in a list of array.
Get all arguments of current layer for saving the graph.
Wrapper for inserting an int64 Feature into a SequenceExample proto,     e.g, An integer label.
Prefetches string values from disk into an input queue.
Reshape [c] to [c, 1, 1].
Alternative implementation of tf.nn.bias_add which is compatiable with tensorRT.
Reshapes a high-dimension vector input.
Get a list of layers' output in a network by a given name scope.
Get a list of TensorFlow variables by a given name scope.
Print information of trainable or all variables,     without ``tl.layers.initialize_global_variables(sess)``.
Input the features and labels, return the features and labels after oversampling.
Return a list of random integer by the given range and quantity.
Close TensorFlow session, TensorBoard and Nvidia-process if available.
Set the GPU memory fraction for the application.
Generate a training batch for the Skip-Gram model.
Sample an index from a probability array.
Read list format context from a file.
Convert a list of string (words) to IDs.
Save the vocabulary to a file so the model can be reloaded.
Very basic tokenizer: split the sentence into a list of tokens.
r"""Create vocabulary file (if it does not exist yet) from data file.
Initialize vocabulary from file, return the `word_to_id` (dictionary)     and `id_to_word` (list).
Convert a string to list of integers representing token-ids.
Tokenize data file and turn into token-ids using given vocabulary file.
Calculate the bleu score for hypotheses and references     using the MOSES ulti-bleu.perl script.
Returns the integer id of a word string.
Returns the integer word id of a word string.
Returns the word string of an integer word id.
Tokenization/string cleaning for a datasets.
Generate text by Synced sequence input and output.
Create and start a swarm job.
Retrieve the Engine-level model params from a Swarm model
Returns a dictionary of arguments for DBUtils.SteadyDB.SteadyDBConnection   constructor.
Gets a logger for the given class in this module
[private] Create the default database connection policy instance
Release the database connection and cursor
Check for concurrency violation and add self to     _clsOutstandingInstances.
Close the policy instance and its shared database connection.
Get a Connection instance.
Close the policy instance and its database connection pool.
Get a connection from the pool.
Close the policy instance.
Create a Connection instance.
Release database connection and cursor; passed as a callback to     ConnectionWrapper
Process one input sample.     This method is called by the runtime engine.
Reclassifies given state.
Adds the record to the KNN classifier.
Removes the given records from the classifier.
Converts a category number into a list of labels
Returns True if the record matches any of the provided filters
Initialize the random seed
Returns list of input names in spec.
Returns list of output names in spec.
Get parameter value
Set parameter value
Get the collection of regions in a network
Gets all region instances of a given class     (for example, nupic.regions.sp_region.SPRegion).
Write state to proto object.
Read state from proto object.
Process one input sample.     This method is called by the runtime engine.
Main loop of the OPF Model Runner.
Method which returns a dictionary of field statistics received from the     input source.
Retrieves the current results and updates the model's record in     the Model database.
Set our state to that obtained from the engWorkerState field of the     job record.
Return the list of all swarms in the given sprint.
Return the list of all completed swarms.
Return the list of all completing swarms.
Verify the validity of the node spec object
Convert the information of the node spec to a plain dict of basic types
Chooses the best model for a given job.
Create the encoder instance for our test and return it.
Create the Network instance.
Run the network and write output to writer.
Validates control dictionary for the experiment context
TODO: document     :param stream:
Create the Network instance.
Run the network and write output to writer.
Get a specific item by name out of the results dict.
Perform standard handling of an exception that occurs while running   a model.
Validate a python value against json schema:   validate(value, schemaPath)   validate(value, schemaDict)
Recursively updates the values in original with the values from updates.
Generate a new and unique representation. Returns a numpy array     of shape (n,).
See method description in base.py
See the function description in base.py
See the function description in base.py
See the function description in base.py
See method description in base.py
See method description in base.py
See method description in base.py
See method description in base.py
This method will add the record to the KNN classifier.
This method will remove the given records from the classifier.
Construct a _HTMClassificationRecord based on the current state of the     htm_prediction_model of this classifier.
Build the additional specs in three groups (for the inspector)
Run one iteration of SPRegion's compute
Do one iteration of inference and/or learning and return the result
Doesn't include the spatial, temporal and other parameters
Initialize all ephemerals used by derived classes.
Return the class corresponding to the given temporalImp string
Get the default arguments from the function and assign as instance vars.
Build the additional specs in three groups (for the inspector)
Run one iteration of TMRegion's compute
Doesn't include the spatial, temporal and other parameters
Adds a graph to the plot's figure.
Adds a histogram to the plot's figure.
Adds an image to the plot's figure.
Adds a subplot to the plot's figure at specified position.
Get version from local file.
Make an attempt to determine if a pre-release version of nupic.bindings is   installed already.
Read the requirements.txt file and parse into requirements for setup's   install_requirements option.
Return (isInt, intValue) for a given floating point number.
Indent all lines in the given string
Generate the string that defines the permutations to apply for a given   encoder.
Handle legacy options (TEMPORARY)
Generates the Metrics for a given InferenceType
Parses, validates, and executes command-line options;
Parses a textual datetime format and return a Python datetime object.
String to boolean
Escape commas, tabs, newlines and dashes in a string
Unescapes a string that may contain commas, tabs, newlines and dashes
Parses a string containing only 0's and 1's and return a Python list object.
Parse a string of space-separated numbers, returning a Python list.
Translate an index into coordinates, using the given coordinate system.
Translate coordinates into an index, using the given coordinate system.
Get the points in the neighborhood of a point.
See `nupic.encoders.base.Encoder` for more information.
Hash a coordinate to a 64 bit integer.
Returns the order for a coordinate.
Maps the coordinate to a bit in the SDR.
Function for running binary search on a sorted list.
Adds a new segment on a cell.
Destroys a segment.
Creates a new synapse on a segment.
Destroys a synapse.
Returns the number of segments.
Set the value of the given configuration property.
Return a dict containing all of the configuration properties
Parse the given XML file and store all properties it describes.
Return the list of paths to search for configuration files.
Add noise to the given input.
Returns the average on-time, averaged over all on-time runs.
Make a two-dimensional clone map mapping columns to clone master.
Form of distribution must be an array of counts in order of self.keys.
Link sensor region to other region so that it can pass it data.
Create a feed-forward link between 2 regions: regionName1 -> regionName2
Create a reset link from a sensor region: sensorRegionName -> regionName
Create required links from a sensor region to a classifier region.
Create and initialize a network.
Run the Hot Gym example.
Checks to see if the model should exit based on the exitAfter dummy     parameter
Returns a description of the dataset
Generate multiple records. Refer to definition for generateRecord
Returns all the records
Add values to the field i.
Returns the nth encoding with the predictedField zeroed out
Returns the cumulative n for all the fields in the dataset
Returns the cumulative w for all the fields in the dataset
Export all the records into a csv file in numenta format.
Deletes all the values in the dataset
Value is encoded as a sdr using the encoding parameters of the Field
See method description in base.py
See method description in base.py
See the function description in base.py
See the function description in base.py
See the function description in base.py
See the function description in base.py
See the function description in base.py
Loads the experiment description file from the path.
:param module: imported description.py module
Loads a description file and returns it as a module.
Return particle info for a specific modelId.
Generate stream definition based on
Run the given model.
Escape commas, tabs, newlines and dashes in a string
Starts a swarm, given a path to a JSON file containing configuration.
Starts a swarm, given a path to a permutations.py script.
Creates an iterator that returns ModelInfo elements for the given modelIDs
Parameters:     ----------------------------------------------------------------------     retval:         nothing
Launch worker processes to execute the given command line
Instantiates a _HyperSearchJob instance from info saved in file
Emit model info to csv file
Close file and print report/backup csv file paths
Returns the next n values for the distribution as a list.
Returns the periodic checks to see if the model should     continue running.
Like itertools.groupby, with the following additions:
Return a pattern for a number.
Add noise to pattern.
Return the set of pattern numbers that match a bit.
Pretty print a pattern.
Gets a value of `w` for use in generating a pattern.
Process one input sample.
Sort in memory chunk of records
Merge sorted chunk files into a sorted output file
Deserialize from proto instance.
Print a message to the console.
See `nupic.encoders.base.Encoder` for more information.
See method description in base.py
Read serialized object from file.
Write serialized object to file.
:param proto: capnp TwoGramModelProto message reader
:param proto: capnp TwoGramModelProto message builder
inputRecord - dict containing the input to the sensor
inputRecord - dict containing the input to the sensor
Create a CLA network and return it.
:param proto: capnp HTMPredictionModelProto message builder
:param proto: capnp HTMPredictionModelProto message reader
See comments in base class.
See comments in base class.
See comments in base class.
See comments in base class.
See comments in base class.
See comments in base class.
See comments in base class.
See comments in base class.
See comments in base class.
See comments in base class.
Setup our resultsPerChoice history based on the passed in     resultsPerChoice.
See comments in base class.
See comments in base class.
Translates the given metrics value to JSON string
Open the data file and write the header row
Tell the writer which metrics should be written
trivial init method that just calls base class's __init__()
Generates a set of input record
Modifies up to maxChanges number of bits in the inputVal
Removes trailing whitespace on each line.
Compute the new metrics values, given the next inference/ground-truth values
Get the actual value for this field
Shift the model result and return the new instance.
Override of getStats()  in BaseStatsCollector
Run according to options in sys.argv and diff classifiers.
Generates the ClientJobs database name for the given version of the     database
Resumes processing of an existing job that is presently in the     STATUS_COMPLETED state.
Resumes processing of an existing job that is presently in the     STATUS_COMPLETED state.
Place the given job in STATUS_RUNNING mode; the job is expected to be     STATUS_NOTSTARTED.
Set cancel field of all currently-running jobs to true.
Get all info about a job, with model details, if available.
Get all info about a job
Change the status on the given job
Change the status on the given job to completed
Fetch all the modelIDs that correspond to a given jobID; empty sequence     if none
Fetch jobIDs for jobs in the table with optional fields given a     specific clientInfo
Update the results string and last-update-time fields of a model.
Delete all models from the models table
Get ALL info for a set of models
Get the params and paramsHash for a set of models.
Get the results string and other status fields for a set of models.
Initialize attributes that are not saved with the checkpoint.
Disable writing of output tap files.
Write outputs to output tap file.
Process one input sample. This method is called by the runtime engine.
Return a dict that can be used to create an anomaly model via   :meth:`nupic.frameworks.opf.model_factory.ModelFactory.create`.
Pick a value according to the provided distribution.
Add distribution to row row.     Distribution should be an array of probabilities or counts.
Run a named function specified by a filesystem path, module name   and function name.
Extracts the PredictionKind (temporal vs. nontemporal) from the given     metric label.
Compute and store metric value
Convenience wrapper for :meth:`.encodeIntoArray`.
Return the field names for each of the scalar values returned by     getScalars.
Gets the value of a given field from the input record
Return a pretty print string representing the return values from     :meth:`.getScalars` and :meth:`.getScalarNames`.
Return the offset and length of a given field within the encoded output.
Pretty-print the encoded output using ascii art.
Return a pretty print string representing the return value from     :meth:`.decode`.
create a random input vector
Run the spatial pooler with the input vector
Flip the value of 10% of input bits (add noise)
Clears the state of the KNNClassifier.
Train the classifier to associate specified input pattern with a     particular category.
Return the distances between the input pattern and all other     stored patterns.
Rebuilds the partition Id map using the given partitionIdList
Return the distances from inputPattern to all stored patterns.
Compute the number of eigenvectors (singularValues) to keep.
Change the category indices.
Change the category associated with this vector(s).
Get a record from the dataSource and encode it.          Overrides :meth:`nupic.bindings.regions.PyRegion.PyRegion.compute`.
Put us back at the beginning of the file again.
Saves the record in the underlying csv file.
Saves multiple records in the underlying storage.
Seeks to ``numRecords`` from the end and returns a bookmark to the new     position.
Keep track of sequence and make sure time goes forward
Extracts start row from the bookmark information
Returns:  count of ALL lines in dataset, including header lines
:returns: (int) count of data rows in dataset (excluding header lines)
[ScalarEncoder class method override]
Parse the given XML file and return a dict describing the file.
Set multiple custom properties and persist them to the custom     configuration store.
Returns a dict of all temporary values in custom configuration file
Edits the XML configuration file with the parameters specified by     properties
Sets the path of the custom configuration file
Copy specific variables from particleState into this particle.
Return the position of a particle given its state dict.
Choose a new position based on results obtained so far from all other     particles.
Get the logger for this object.
Create a new model instance, given a description dictionary.
Perform one time step of the Temporal Memory algorithm.
Calculate dendrite segment activity, using the current active cells.
:param connections: (Object)     Connections for the TM. Gets mutated.
:param connections: (Object)     Connections for the TM. Gets mutated.
:param connections: (Object)     Connections for the TM. Gets mutated.
Create a segment on the connections, enforcing the maxSegmentsPerCell     parameter.
Destroy nDestroy synapses on the specified segment, but don't destroy     synapses to the "excludeCells".
Gets the cell with the smallest number of segments.     Break ties randomly.
Returns the index of the column that a cell belongs to.
Returns the indices of cells that belong to a column.
Returns the indices of the predictive cells.
Generate a sequence from a list of numbers.
Add spatial noise to each pattern in the sequence.
Pretty print a sequence.
Compute Area Under the Curve (AUC) using the trapezoidal rule
Returns pretty-printed table of traces.
Returns pretty-printed table of metrics.
Compute updated probabilities for anomalyScores using the given params.
Return the value of skipRecords for passing to estimateAnomalyLikelihoods
Processes the given record according to the current phase
Serialize via capnp
Deserialize via capnp
Returns mean of non-None elements of the list
Returns most common value seen in the non-None elements of the list
Generate a dataset of aggregated values
Generate the filename for aggregated dataset
Add the aggregation period to the input time t and return a datetime object
Given the name of an aggregation function, returns the function pointer     and param.
Run one iteration of this model.
Return the absolute path of the model's checkpoint file.
Serializes model using capnproto and writes data to ``checkpointDir``
Deserializes model from checkpointDir using capnproto
Save the state maintained by the Model base class
Save the model in the given directory.
Load saved model.
Return the absolute path of the model's pickle file.
Run a single OPF experiment.
Parse command line options
List available checkpoints for the specified experiment.
Creates and returns a list of activites for this TaskRunner instance
Parameters:   ----------------------------------------------------------------   filename:         name of .csv file to generate
Corrupts a copy of a binary vector by inverting noiseLevel percent of its bits.
See method description in base.py
See the function description in base.py
See the function description in base.py
See the function description in base.py
Utility function to get information about function callers
Get the arguments, default values, and argument descriptions for a function.
Generate a filepath for the calling app
Return the result from dividing two dicts that represent date and time.
Validate a python object against an OPF json schema file
Returns a subset of the keys that match any of the given patterns
Convert the input, which is in normal space, into log space
See the function description in base.py
See the function description in base.py
See the function description in base.py
See the function description in base.py
See the function description in base.py
See the function description in base.py
See the function description in base.py
Returns a string representing a numpy array of 0's and 1's
Copies the contents of vector x1 into vector x2.
Deserialize from proto instance.
List of our member variables that we don't need to be saved
Initialize all ephemeral members after being restored to a pickled state.
Run this worker.
See method description in base.py
See method description in base.py
Return the overlap between two representations. rep1 and rep2 are lists of     non-zero indices.
Initialize the bucket map assuming the given number of maxBuckets.
:param proto: SDRClassifierRegionProto capnproto object
Pretty print the connections in the temporal memory.
Pretty print the cell representations for sequences in the history.
Run the network and write output to writer.
periodicActivities: A sequence of PeriodicActivityRequest elements
Adds a value over a range of rows.
Multiplies a value over a range of rows.
Copies a range of values to a new location in the data set.
See method description in base.py
See method description in base.py
See the function description in base.py
generate description from a text description of the ranges
See the function description in base.py
See the function description in base.py
See the function description in base.py
See the function description in base.py
Initialize all ephemeral members after being restored to a pickled state.
Deserialize from proto instance.
Reset the state of all cells.
Print an integer array that is the same shape as activeState.
Print a floating point array that is the same shape as activeState.
Print up to maxCols number from a flat floating point array.
TODO: document          :param printPrevious:      :param printLearnState:      :return:
TODO: document          :param y:      :return:
TODO: document          :param x:      :return:
Print the parameter settings for the TM.
TODO: document          :param c:      :param i:      :param onlyActiveSegments:      :return:
TODO: document          :param predictedOnly:      :return:
Set all the dynamic state variables from the <tpDynamicState> dict.
Update the inference state. Called from :meth:`compute` on every iteration.
Compute the predicted segments given the current set of active cells.
Handle one compute, possibly learning.
Removes any update that would be for the given col, cellIdx, segIdx.
Go through the list of accumulated segment updates and process them     as follows:
Add a new synapse
Create training sequences that share some elements in the middle.
Compress a byte string.
Show character in readable format
Show string or char.
Read n bytes from the stream on a byte boundary.
The value used for processing. Can be a tuple.         with optional extra bits
Store decodeTable,         and compute lengthTable, minLength, maxLength from encodings.
Show all words of the code in a nice format.
Read symbol from stream. Returns symbol, length.
Override if you don't define value0 and extraTable
Give the range of possible values in a tuple         Useful for mnemonic and explanation
Give count and value.
Give relevant values for computations:         (insertSymbol, copySymbol, dist0flag)
Make a nice mnemonic
Build the action table from the text above
Perform the proper action
Read complex code
Process a brotli stream.
Read MNIBBLES and meta block length;         if empty block, skip block and return true.
Read prefix code array
Return BROTLI_VERSION string as defined in 'common/version.h' file.
Function decorater that executes the function in parallel    Usage::
Add ecliptic coordates (long_out, lat_out) from equatorial coordinates.
Convert parallax to distance (i.e. 1/parallax)
Concert velocities from a cartesian system to proper motions and radial velocities
Transform/rotate proper motions from equatorial to galactic coordinates
Transform/rotate proper motions from galactic to equatorial coordinates.
Return a graphviz.Digraph object with a graph of the expression
Create a vaex app, the QApplication mainloop must be started.
Open a DataFrame from file given by path.
Open a list of filenames, and return a DataFrame with all DataFrames cocatenated.
Create a vaex DataFrame from an Astropy Table.
Create an in memory DataFrame from a pandas DataFrame.
Create an in memory DataFrame from an ascii file (whitespace seperated by default).
Shortcut to read a csv file using pandas and convert to a DataFrame directly.
Connect to hostname supporting the vaex web api.
Concatenate a list of DataFrames.
Creates a virtual column which is the equivalent of numpy.arange, but uses 0 memory
Add a dataset and add it to the UI
Plot the subspace using sane defaults to get a quick look at the data.
Plot the subspace using sane defaults to get a quick look at the data.
Sort table by given column number.
clear the cursor
Used for unittesting to make sure the plots are all done
Plot conting contours on 2D grid.
Count the number of non-NaN values (or all, if expression is None or "*").
Calculate the mean for expression, possibly on a grid defined by binby.
Calculate the sum for the given expression, possible on a grid defined by binby
Calculate the minimum and maximum for expressions, possibly on a grid defined by binby.
Calculate the minimum for given expressions, possibly on a grid defined by binby.
Calculate the median , possibly on a grid defined by binby.
Calculate the percentile given by percentage, possibly on a grid defined by binby.
Calculate/estimate the mode.
Viz 1d, 2d or 3d in a Jupyter notebook
Count non missing value for expression on an array which represents healpix data.
Viz data in 2d using a healpix column.
Return if a column is a masked (numpy.ma) column.
Returns the unit (an astropy.unit.Units object) for the expression.
Return the internal state of the DataFrame in a dictionary
Sets the internal state of the df
Set the variable to an expression or value defined by expression_or_value.
Validate an expression (may throw Exceptions)
Add an in memory array as a column.
Add a healpix (in memory) column based on a longitude and latitude
Propagates uncertainties (full covariance matrix) for a set of virtual columns.
Concert velocities from a cartesian to a spherical coordinate system
Convert cylindrical polar velocities to Cartesian.
Convert spherical to cartesian coordinates.
Convert cartesian to spherical coordinates.
Add a virtual column to the DataFrame.
Deletes a virtual column from a DataFrame.
Add a variable to to a DataFrame.
Deletes a variable from a DataFrame.
Return a shallow copy a DataFrame with the last n rows.
Display the first and last n elements of a DataFrame.
Give a description of the DataFrame.
Display the DataFrame from row i1 till i2
Set the current row, and emit the signal signal_pick.
Return a list of column names
Return a DataFrame, where all columns are 'trimmed' by the active range.
Return a DataFrame containing only the filtered rows.
Returns a DataFrame with a random set of rows
Returns a list containing random portions of the DataFrame.
Returns a list containing ordered subsets of the DataFrame.
Return a sorted DataFrame, sorted by the expression 'by'
Return a DataFrame, where missing values/NaN are filled with 'value'.
Get the current selection object (mostly for internal use atm).
Undo selection, for the name.
Redo selection, for the name.
Create a shallow copy of a DataFrame, with filtering set using select_non_missing.
Select a n-dimensional rectangular box bounded by limits.
Select a circular region centred on xc, yc, with a radius of r.
Invert the selection, i.e. what is selected will not be, and vice versa
select_lasso and select almost share the same code
Hides a column by prefixing the name with \'__\
Return a graphviz.Digraph object with a graph of all virtual columns
Encode column as ordinal values and mark it as categorical.
Creates a (shallow) copy of the DataFrame.
Get the length of the DataFrames, for the selection of the whole DataFrame.
The local implementation of :func:`DataFrame.evaluate`
Exports the DataFrame to a file written with arrow
Exports the DataFrame to a file written with arrow
Return a :class:`GroupBy` or :class:`DataFrame` object when agg is not None
Return a :class:`BinBy` or :class:`DataArray` object when agg is not None
Add a column to the DataFrame
Viz (small amounts) of data in 2d using a scatter plot
Viz data in a 2d histogram/heatmap.
Decorator to register a new function with vaex.
Returns an array where missing values are replaced by value.
Obtain the day of the week with Monday=0 and Sunday=6
The ordinal day of the year.
Check whether a year is a leap year.
Extracts the year out of a datetime sample.
Extracts the month out of a datetime sample.
Returns the month names of a datetime sample in English.
Extracts the day from a datetime sample.
Returns the day names of a datetime sample in English.
Extracts the hour out of a datetime samples.
Extracts the minute out of a datetime samples.
Extracts the second out of a datetime samples.
Capitalize the first letter of a string sample.
Concatenate two string columns on a row-by-row basis.
Count the occurences of a pattern in sample of a string column.
Remove leading characters from a string sample.
Pad strings in a given column.
Duplicate each string in a column.
Replace occurences of a pattern/regex in a column with some other string.
Remove trailing characters from a string sample.
Slice substrings from each string element in a column.
Converts all strings in a column to uppercase.
Convert into numpy recordarray
Writes properties to the file in Java properties format.
Writes a comment to the file in Java properties format.
Write a single property to the file in Java properties format.
Incrementally read properties from a Java .properties file.
Return the version information for all librosa dependencies.
Set the FFT library used by librosa.
Convert one or more spelled notes to MIDI number(s).
Convert Hz to Mels
Convert mel bin numbers to frequencies
Compute the center frequencies of Constant-Q bins.
Compute an array of acoustic frequencies tuned to the mel scale.
Compute the frequencies (in beats-per-minute) corresponding     to an onset auto-correlation or tempogram matrix.
Compute the A-weighting of a set of frequencies.
Compute the constant-Q transform of an audio signal.
Compute the hybrid constant-Q transform of an audio signal.
Compute the pseudo constant-Q transform of an audio signal.
Compute the inverse constant-Q transform.
Compute the filter response with a target STFT hop.
Compute the number of early downsampling operations
Perform early downsampling on an audio signal, if it applies.
Calculate the accumulated cost matrix D.
Backtrack optimal warping path.
Viterbi decoding from discriminative state predictions.
Viterbi decoding from binary (multi-label), discriminative state predictions.
Construct a self-loop transition matrix over `n_states`.
Construct a localized transition matrix.
r'''Save annotations in a 3-column format::
Output a time series as a .wav file
Get a default colormap from the given data.
Compute the max-envelope of x at a stride/frame length of h
Plot the amplitude envelope of a waveform.
Display a spectrogram/chromagram/cqt/etc.
Helper to set the current image in pyplot mode.
Check if "axes" is an instance of an axis object. If not, use `gca`.
Get time coordinates from frames
Extract harmonic elements from an audio time-series.
Extract percussive elements from an audio time-series.
Time-stretch an audio series by a fixed rate.
Pitch-shift the waveform by `n_steps` half-steps.
Remix an audio signal by re-ordering time intervals.
Frame-wise non-silent indicator for audio input.
Split an audio signal into non-silent intervals.
Phase vocoder.  Given an STFT matrix D, speed up by a factor of `rate`
Convert an amplitude spectrogram to dB-scaled spectrogram.
Per-channel energy normalization (PCEN) [1]_
Helper function to retrieve a magnitude spectrogram.
HPSS beat tracking
Decompose a feature matrix.
Create a Filterbank matrix to convert STFT to chroma
r'''Construct a constant-Q basis.
r'''Return length of each filter in a constant-Q basis.
Convert a Constant-Q basis to Chroma.
Get the equivalent noise bandwidth of a window function.
Compute a window function.
r'''Helper function to construct a multirate filterbank.
Compute the sum-square envelope of a window function at a given hop length.
Build a two-dimensional diagonal filter.
Compute the spectral centroid.
Compute p'th-order spectral bandwidth:
Compute roll-off frequency.
Compute spectral flatness
Get coefficients of fitting an nth-order polynomial to the columns     of a spectrogram.
Compute the zero-crossing rate of an audio time series.
Compute a chromagram from a waveform or power spectrogram.
Mel-frequency cepstral coefficients (MFCCs)
Compute a mel-scaled spectrogram.
Load an audio file and estimate tuning (in cents)
Find the best Jaccard match from query to candidates
Match one set of time intervals to another.
Match one set of events to another.
Harmonic salience function.
Compute the energy at harmonics of time-frequency representation.
Populate a harmonic tensor from a time-frequency representation.
Populate a harmonic tensor from a time-frequency representation with     time-varying frequencies.
Load an audio file as a floating point time series.
Load an audio buffer using audioread.
Force an audio signal down to mono.
Resample a time series from orig_sr to target_sr
Compute the duration (in seconds) of an audio time series,     feature matrix, or filename.
Find the zero-crossings of a signal `y`: indices `i` such that     `sign(y[i]) != sign(y[j])`.
Compute the tempogram: local autocorrelation of the onset strength envelope. [1]_
Get a sorted list of (audio) files in a directory or directory sub-tree.
Helper function to get files in a single directory
Argparse function to get the program parameters
r'''Dynamic programming beat tracker.
Construct the local score for an onset envlope and given period
Get the last beat from the cumulative score array
Compute a recurrence matrix from a data matrix.
Convert a recurrence matrix into a lag matrix.
Convert a lag matrix into a recurrence matrix.
Filtering in the time-lag domain.
Sub-divide a segmentation by feature clustering.
Multi-angle path enhancement for self- and cross-similarity matrices.
Slice a time series into overlapping frames.
Validate whether a variable contains valid, mono audio data.
Ensure that an array is a valid representation of time intervals:
Fix the length an array `data` to exactly `size`.
Fix a list of frames to lie within [x_min, x_max]
Sort an array along its rows or columns.
Normalize an array along a chosen axis.
Find local maxima in an array `x`.
Return a row-sparse matrix approximating the input `x`.
Generate a slice array from an index array.
Robustly compute a softmask operation.
Compute the tiny-value corresponding to an input's data type.
Read the frame images from a directory and join them as a video
Read the next frame.
Get frame by index.
Convert a video to frame images
Track the progress of tasks execution with a progress bar.
Track the progress of parallel task execution with a progress bar.
Flip an image horizontally or vertically.
Rotate an image.
Clip bboxes to fit the image shape.
Crop image patches.
Pad an image to a certain shape.
Pad an image to ensure each edge to be multiple to some number.
Rescale a size by a ratio.
Resize image to a given size.
Resize image to the same size of a given image.
Resize image while keeping the aspect ratio.
Load data from json/yaml/pickle files.
Dump data to json/yaml/pickle strings or files.
Register a handler for some file extensions.
Quantize an array of (-inf, inf) to [0, levels-1].
Dequantize an array.
Generate argparser from config file automatically (experimental)
Draw bboxes on an image.
Draw bboxes and class labels (with scores) on an image.
Quantize flow to [0, 255].
Recover from quantized flow.
Load state_dict to a module.
Load checkpoint from a file or URI.
Copy a model state_dict to cpu.
Save checkpoint to file.
Init the optimizer.
Init the logger.
Register a hook into the hook list.
Register default hooks for training.
Convert a video with ffmpeg.
Resize a video.
Cut a clip from a video.
Concatenate multiple videos into a single one.
Load a text file and parse the content as a list of strings.
Load a text file and parse the content as a dict.
Initialize an object from dict.
Read an image from bytes.
Write image to file
Convert a BGR image to grayscale image.
Convert a grayscale image to BGR image.
Cast elements of an iterable object into some type.
Check whether it is a sequence of some type.
Slice a list into several sub lists by a list of given length.
A decorator factory to check if prerequisites are satisfied.
Convert various input to color tuples.
Add check points in a single line.
Start the timer.
Convert flow map to RGB image.
Build a color wheel.
Decide whether a particular character needs to be quoted.
Quote a single character.
Read 'input', apply quoted-printable encoding, and write to 'output'.
Get the integer value of a hexadecimal number.
Encode a string using Base64.
Decode a Base64 encoded string.
Encode a string using Base32.
Decode a Base32 encoded string.
Decode a Base16 encoded string.
Encode a string into multiple lines of base-64 data.
Returns a zero-length range located just before the beginning of this range.
Returns a zero-length range located just after the end of this range.
Returns a zero-based column number of the beginning of this range.
Returns the line number of the beginning of this range.
Returns the lines of source code containing the entirety of this range.
Visit a node or a list of nodes. Other values are ignored
Visit a node or a list of nodes. Other values are ignored
Convert a 32-bit or 64-bit integer created   by float_pack into a Python float.
Decode common content-transfer-encodings (base64, quopri, uuencode).
Encode common content-transfer-encodings (base64, quopri, uuencode).
Format a list of traceback entry tuples for printing.
Print up to 'limit' stack trace entries from the traceback 'tb'.
Print exception up to 'limit' stack trace entries from 'tb' to 'file'.
Format a stack trace and the exception information.
Format the exception part of a traceback.
Return a list of a single line -- normal case for format_exception_only
Print a stack trace from its invocation point.
Shorthand for 'format_list(extract_stack(f, limit))'.
Extract the raw traceback from the current stack frame.
Initialize internal state of the random number generator.
Choose a random item from range(start, stop[, step]).
Return a list of slot names for a given class.
Register an extension code.
Unregister an extension code.  For testing only.
Update a wrapper function to look like the wrapped function
Convert a cmp= function into a key= function
Remove quotes from a string.
Parse an address into a (realname, mailaddr) tuple.
Turn a 10-tuple as returned by parsedate_tz() into a UTC timestamp.
Rewind the file to the start of the body (if seekable).
Read header lines.
Determine whether a given line is a legal header.
Get the first header line matching name.
A higher-level interface to getfirstmatchingheader().
Get the header value for a name.
Get all values for a header.
Get a list of addresses from a header.
Parse up to the start of the next address.
Parse all addresses.
Parse a route address (Return-path value).
Parse an RFC 2822 addr-spec.
Get the complete domain name from an address.
Parse a sequence of RFC 2822 phrases.
year, month -> number of days in that month in that year.
Construct a date from a POSIX timestamp (like time.time()).
Contruct a date from a proleptic Gregorian ordinal.
Return ctime() style string.
Return the date formatted according to ISO.
Return a new date with new values for the specified fields.
Return the time formatted according to ISO.
Return the timezone name.
Return a new time with new values for the specified fields.
Construct a datetime from a POSIX timestamp (like time.time()).
Construct a datetime from time.time() and optional time zone info.
Construct a datetime from a given date and a given time.
Return the time part, with tzinfo None.
Return the time part, with same tzinfo.
Return a new datetime with new values for the specified fields.
Return ctime() style string.
Return the time formatted according to ISO.
Same as a + b, for a and b sequences.
Return the number of times b occurs in a.
Return the first index of b in a.
Same as a += b, for a and b sequences.
Same as a /= b.
Return a JSON representation of a Python string
Return a list of all non-overlapping matches in the string.
Escape all non-alphanumeric characters in pattern.
Create a new temporary Go variable having type type_ for this block.
Release the GeneratedTempVar v so it can be reused.
Decode uuencoded file
capwords(s [,sep]) -> string
maketrans(frm, to) -> string
zfill(x, width) -> string
translate(s,table [,deletions]) -> string
replace (str, old, new[, maxreplace]) -> string
Use SequenceMatcher to return list of the best "good enough" matches.
Return number of `ch` characters at the start of `line`.
Convert range to the "ed" format
Convert range to the "ed" format
r"""     Compare two sequences of lines; generate the delta as a context diff.
r"""     Compare `a` and `b` (lists of strings); return a `Differ`-style delta.
r"""     Generate one of the two sequences that generated a delta.
Make a new Match object from a sequence or iterable
Set the first sequence to be compared.
Set the second sequence to be compared.
Find longest matching block in a[alo:ahi] and b[blo:bhi].
Return list of 5-tuples describing how to turn a into b.
Return a measure of the sequences' similarity (float in [0,1]).
r"""         Compare two sequences of lines; generate the resulting delta.
Generate comparison results for a same-tagged range.
r"""         Format "?" output and deal with leading tabs.
Collects mdiff output into separate lists
Create and return a benchmark that runs work_func p times in parallel.
Returns an GeneratedExpr for a function with the given body.
Generates code that imports a module and binds it to a variable.
List directory contents, using cache.
Pretty-print a Python o to a stream [default is sys.stdout].
Format a Python o into a pretty-printed representation.
A proxy for a rule called ``name`` which may not be yet defined.
file_input: (NEWLINE | stmt)* ENDMARKER
eval_input: testlist NEWLINE* ENDMARKER
(3.0-) tfpdef: NAME [':' test]
del_stmt: 'del' exprlist
return_stmt: 'return' [testlist]
(2.6, 2.7) raise_stmt: 'raise' [test [',' test [',' test]]]
(3.0-) raise_stmt: 'raise' [test ['from' test]]
import_name: 'import' dotted_as_names
import_as_name: NAME ['as' NAME]
dotted_as_name: dotted_name ['as' NAME]
dotted_name: NAME ('.' NAME)*
global_stmt: 'global' NAME (',' NAME)*
(2.6, 2.7) exec_stmt: 'exec' expr ['in' test [',' test]]
(3.0-) nonlocal_stmt: 'nonlocal' NAME (',' NAME)*
assert_stmt: 'assert' test [',' test]
if_stmt: 'if' test ':' suite ('elif' test ':' suite)* ['else' ':' suite]
while_stmt: 'while' test ':' suite ['else' ':' suite]
for_stmt: 'for' exprlist 'in' testlist ':' suite ['else' ':' suite]
(2.7, 3.1-) with_stmt: 'with' with_item (',' with_item)*  ':' suite
(2.7, 3.1-) with_item: test ['as' expr]
(2.6, 2.7) old_lambdef: 'lambda' [varargslist] ':' old_test
(3.0, 3.1) star_expr: ['*'] expr
(3.0-) star_expr: '*' expr
subscriptlist: subscript (',' subscript)* [',']
(2.6) dictmaker: test ':' test (',' test ':' test)* [',']
(2.6, 2.7, 3.0, 3.1, 3.2) yield_expr: 'yield' [testlist]
(3.3-) yield_expr: 'yield' [yield_arg]
unquote('abc%20def') -> 'abc def'.
Parse a query given as a string argument.
Parse a query given as a string argument.
Return a new SplitResult object replacing specified fields with new values
Test whether a path is a regular file
Split the extension from a pathname.
Wrap a single paragraph of text, returning a list of wrapped lines.
Fill a single paragraph of text, returning a new string.
Remove any common leading whitespace from every line in `text`.
_munge_whitespace(text : string) -> string
_split(text : string) -> [string]
_wrap_chunks(chunks : [string]) -> [string]
wrap(text : string) -> [string]
Convert a long integer to a byte string.
Transform a list of characters into a list of longs.
Initialize the message-digest and set all fields to zero.
Terminate the message-digest computation and return digest.
Same as :meth:`next`, except the token is not dequeued.
Keeps a reference to the object x in the memo.
Hook to write a warning to a file; replace if you like.
Insert an entry into the list of warnings filters (at the front).
Insert a simple entry into the list of warnings filters (at the front).
Compute the hash value of a set.
Remove an element. If not a member, raise a KeyError.
S.reverse() -- reverse *IN PLACE*
Acquire a lock, blocking or non-blocking.
Release a lock, decrementing the recursion level.
Wait until notified or until a timeout occurs.
Wake up one or more threads waiting on this condition, if any.
Acquire a semaphore, decrementing the internal counter by one.
Set the internal flag to true.
Block until the internal flag is true.
Start the thread's activity.
Wait until the thread terminates.
_match_abbrev(s : string, wordmap : {string : Option}) -> string
Return a comma-separated list of option strings & metavariables.
reverse *IN PLACE*
od.clear() -> None.  Remove all items from od.
Terminate the message-digest computation and return digest.
Return a clone object.
Return a list of all non-overlapping matches of pattern in string.
Split string by the occurrences of pattern.
Return a list of all non-overlapping matches of pattern in string.
Remove the exponent by changing intpart and fraction.
Round or extend the fraction to size digs.
Return a random int in the range [0,n).
getopt(args, options[, long_options]) -> opts, args
getopt(args, options[, long_options]) -> opts, args
Return the subset of the list NAMES that match PAT
Test whether FILENAME matches PATTERN, including case.
Translate a shell PATTERN to a regular expression.
Indicate that a formerly enqueued task is complete.
Return the approximate size of the queue (not reliable!).
Return True if the queue is empty, False otherwise (not reliable!).
Return True if the queue is full, False otherwise (not reliable!).
Put an item into the queue.
Accumulates a set of flags for the compiler __future__ imports.
Combine multiple context managers into a single nested context manager.
Fetch all the information by using aiohttp
Define a Decorate to be called before a request.         eg:
Define a Decorate to be called after a response.         eg:
Read and decodes JSON response.
Read response payload and decode.
Wrap request with middleware.         :param request:         :return:
Actually start crawling.
Returns the TensorFlow variables used by the baseline.
Termination condition: max number of iterations, or residual sufficiently small.
Pass through rest role.
Pass through rest link.
Rendering a table row. Like ``<tr>``.
Rendering a given link with content and title.
Rendering a image with title and text.
Wait until there is a state.
Restores the values of the managed variables from disk location.
Imports experiences into the TensorFlow memory structure. Can be used to import         off-policy data.
Creates an agent from a specification dict.
Change the priority of a leaf node
Change the priority of a leaf node.
Sample random element with priority greater than p.
Sample minibatch of size batch_size.
Samples a batch of the specified size according to priority.
Starts the server tcp connection on the given host:port.
Adds a random tile to the grid. Assumes that it has empty fields.
Prints the current state.
Creates and returns a list of hooks to use in a session. Populates self.saver_directory.
Returns the TensorFlow variables used by the model.
Adds an observation (reward and is-terminal) to the model without updating its trainable variables.
Saves a component of this model to the designated location.
Restores a component's parameters from a save location.
Looks up a component by its name.
Return the state space. Might include subdicts if multiple states are         available simultaneously.
Creates an exploration object from a specification dict.
Creates a memory from a specification dict.
Fetches experiences for given indices.
Iteratively optimizes $f(x)$ for $x$ on the line between $x'$ and $x_0$.
Initialization step preparing the arguments for the first iteration of the loop body.
Replace special characters "&", "<" and ">" to HTML-safe sequences.
Render markdown formatted text to html.
Parse setext heading.
Rendering a table cell. Like ``<th>`` ``<td>``.
Rendering a given link or email address.
Rendering a given link with content and title.
Rendering a image with title and text.
Convert MetaParams into TF Summary Format and create summary_op.
Combines Q-loss and demo loss.
Returns the TensorFlow variables used by the model.
Stores demonstrations in the demo memory.
Ensures tasks have an action key and strings are converted to python objects
Deletes a member from the current conversation.         :param context:         :param member_id:         :return:
Lists the members of a given activity.         :param context:         :param activity_id:         :return:
Lists the members of a current conversation.         :param context:         :return:
Add additional requirements from setup.cfg to file metadata_path
Convert an .egg-info directory into a .dist-info directory
Returns a simple text message.
Returns a message that includes a set of suggested actions and optional text.
Returns a single message activity containing an attachment.
Returns a message that will display a set of attachments in list form.
Returns a message that will display a single image or video to a user.
Validate the incoming Auth Header
Validate the incoming Auth Header
Returns the storage key for the current user state.         :param context:         :return:
Read storeitems from storage.
Save storeitems to storage.
Remove storeitems from storage.
Create a StoreItem from a result out of CosmosDB.
Return the dict of a StoreItem.
Call the get or create methods.
Return the database link.
Return the container link.
Fills the event properties and metrics for the QnaMessage event for telemetry.
Sends a single activity or message to the user.         :param activity_or_text:         :return:
Replaces an existing activity.         :param activity:         :return:
Deletes an existing activity.         :param id_or_reference:         :return:
Give the waterfall step a unique name
Utility function to calculate a change hash for a `StoreItem`.     :param item:     :return:
Determine if a number of Suggested Actions are supported by a Channel.
Determine if a number of Card Actions are supported by a Channel.
Get the Channel Id from the current Activity on the Turn Context.
Logs a series of activities to the console.         :param context:         :param activities:         :return:
Validate the incoming Auth Header
WindowFromPoint from Win32.     Return int, a native window handle.
mouse_event from Win32.
keybd_event from Win32.
Simulate mouse click at point x, y.     x: int.     y: int.     waitTime: float.
Simulate mouse right click at point x, y.     x: int.     y: int.     waitTime: float.
Press left mouse.     x: int.     y: int.     waitTime: float.
Release left mouse.     waitTime: float.
Press right mouse.     x: int.     y: int.     waitTime: float.
Release right mouse.     waitTime: float.
Simulate mouse wheel up.     wheelTimes: int.     interval: float.     waitTime: float.
SwitchToThisWindow from Win32.     handle: int, the handle of a native window.
GetWindowLong from Win32.     handle: int, the handle of a native window.     index: int.
IsWindowVisible from Win32.     handle: int, the handle of a native window.     Return bool.
GetWindowText from Win32.     handle: int, the handle of a native window.     Return str.
GetConsoleOriginalTitle from Win32.     Return str.     Only available on Windows Vista or higher.
GetConsoleTitle from Win32.     Return str.
Simulate typing a key.     key: int, a value in class `Keys`.
key: int, a value in class `Keys`.     Return bool.
Create a concreate pattern by pattern id and pattern(POINTER(IUnknown)).
hotkey: tuple, two ints tuple(modifierKey, key)
Return `ctypes.Array`, an iterable array of int values in argb.
Add search properties using `dict.update`.         searchProperties: dict, same as searchProperties in `Control.__init__`.
searchProperties: dict, same as searchProperties in `Control.__init__`.
keyColor, valueColor: str, color name in class ConsoleColor
Return list, a list of `Control` subclasses.
Call native SetWindowText if control has a valid native handle.
Determine whether current control is top level.
Set top level window topmost.         isTopmost: bool.         waitTime: float.
Set top level window maximize.
Move window to screen center.
Set top level window active.
Only work on Windows 8/8.1, if current window is Metro UI.         waitTime: float.
Assemble a QasmQobjInstruction
For a composite instruction, reverse the order of sub-gates.
shallow copy of the instruction.
Print an if statement if needed.
Return a default OpenQASM string for the instruction.
Run all the passes on a QuantumCircuit
Do a pass and its "requires".
Returns a list structure of the appended passes and its options.
Return a Numpy.array for the U3 gate.
Apply a single qubit gate to the qubit.
Get the matrix for a single qubit.
Return the index string for Numpy.eignsum matrix-matrix multiplication.
Return the index string for Numpy.eignsum matrix-vector multiplication.
Return the index string for Numpy.eignsum matrix multiplication.
Build a ``DAGCircuit`` object from a ``QuantumCircuit``.
Function used to fit the decay cosine.
Return a new circuit that has been optimized.
Return a triple theta, phi, lambda for the product.
Express a Y.Z.Y single qubit gate as a Z.Y.Z gate.
Extend the layout with new (physical qubit, virtual qubit) pairs.
Validates the input to state visualization functions.
Trim a PIL image and remove white space.
Build an ``Instruction`` object from a ``QuantumCircuit``.
Return True if completely-positive trace-preserving.
Return the conjugate of the QuantumChannel.
Return the transpose of the QuantumChannel.
The matrix power of the channel.
Evolve a quantum state by the QuantumChannel.
Compute the mean value of an diagonal observable.
Process an Id or IndexedId node as a bit or register type.
Process a custom unitary node.
Process a gate node.
Process a CNOT gate node.
Process a measurement node.
Process an if node.
Carry out the action associated with a node.
Create a DAG node out of a parsed AST op node.
Return the corresponding OPENQASM string.
Print with indent.
Validates a value against the correct type of the field.
Include unknown fields after dumping.
Include unknown fields after load.
Create a patched Schema for validating models.
Validate the internal representation of the instance.
Add validation after instantiation.
Serialize the model into a Python dict of simple types.
Deserialize a dict of simple types into an instance of this class.
n-qubit QFT on q in circ.
Flatten an operator to a vector in a specified basis.
Devectorize a vectorized square matrix.
Convert a Choi-matrix to a Pauli-basis superoperator.
Truncate small values of a complex array.
Construct the outer product of two vectors.
Calculate the concurrence.
Compute the Shannon entropy of a probability vector.
Compute the mutual information of a bipartite state.
Compute the entanglement of formation of quantum state.
Compute the Entanglement of Formation of a 2-qubit density matrix.
Create a union (and also shift if desired) of all input `Schedule`s.
Create a flattened schedule.
Return a new schedule with the `child` schedule inserted into the `parent` at `start_time`.
Start the progress bar.
Estimate the remaining time left.
Run the CommutativeCancellation pass on a dag
Return a list of QuantumCircuit object(s) from a qobj
Dissasemble a qobj and return the circuits, run_config, and user header
Calculate the Hamming distance between two bit strings
Plot a histogram of data.
Generate a quaternion from a set of Euler angles.
Converts a unit-length quaternion to a rotation matrix.
Prepare received data for representation.
Create a histogram representation.
Customize check_type for handling containers.
Check that j is a valid index into self.
Print with indent.
Assemble a QasmQobjInstruction
Test if an array is a square matrix.
Test if an array is a diagonal matrix
Test if an array is a symmetrix matrix
Test if an array is a Hermitian matrix
Test if a matrix is positive semidefinite
Test if an array is an identity matrix.
Test if an array is a unitary matrix.
Return a new circuit that has been optimized.
Transform a QuantumChannel to the Choi representation.
Transform a QuantumChannel to the SuperOp representation.
Transform a QuantumChannel to the Kraus representation.
Transform a QuantumChannel to the Chi representation.
Transform a QuantumChannel to the PTM representation.
Transform a QuantumChannel to the Stinespring representation.
Transform a QuantumChannel to the Operator representation.
Transform Stinespring representation to Operator representation.
Transform SuperOp representation to Choi representation.
Transform Choi to SuperOp representation.
Transform Kraus representation to Choi representation.
Transform Choi representation to Kraus representation.
Transform Stinespring representation to Kraus representation.
Transform Stinespring representation to Choi representation.
Transform Kraus representation to Stinespring representation.
Transform Kraus representation to SuperOp representation.
Transform Chi representation to a Choi representation.
Transform Choi representation to the Chi representation.
Reshuffle the indicies of a bipartite matrix A[ij,kl] -> A[lj,ki].
Return true if dims correspond to an n-qubit channel.
Set visible property of ticklines and ticklabels of an axis to False
Set x, y and z labels according to one of conventions.
Add a list of vectors to Bloch sphere.
Render the Bloch sphere and its data sets in on given figure and axes.
Display Bloch sphere and corresponding data sets.
Constructs the top line of the element
Constructs the middle line of the element
Constructs the bottom line of the element
Returns the length of the element, including the box around.
Creates the label for a box.
Compile a list of circuits into a qobj.
Checks if internet connection exists to host via specified port.
The matrix power of the channel.
Internal function that updates the status     of a HTML job monitor.
r"""Enforce that the supplied gaussian pulse is zeroed at a specific width.
Append an instruction to the end of the circuit, modifying         the circuit in place.
Raise exception if list of qubits contains duplicates.
Returns total number of gate operations in circuit.
Return number of qubits plus clbits in circuit.
Count each operation kind in the circuit.
Assign parameters to values yielding a new circuit.
Assigns a parameter value to matching instructions in-place.
Map all gates that can be executed with the current layout.
Count the mapped two-qubit gates, less the number of added SWAPs.
Add a physical qubit to the coupling graph as a node.
Return a CouplingMap object for a subgraph of self.
Returns a sorted list of physical_qubits
Test if the graph is connected.
Compute the full distance matrix on pairs of nodes.
Returns the undirected distance between physical_qubit1 and physical_qubit2.
transpile one or more circuits.
Apply cu1 from ctl to tgt with angle theta.
Add an instruction and its context (where it's attached).
Add controls to all instructions.
Emits an event if there are any subscribers.
Unsubscribe the specific callback to the event.
Apply initialize to circuit.
Calculate a subcircuit that implements this initialization
Call to create a circuit with gates that take the         desired vector to zero.
decides which one is physical/virtual based on the type. Returns (virtual, physical)
Checks if value has the format of a virtual qubit
Returns a copy of a Layout instance.
Combines self and another_layout into an "edge map".
Populates a Layout from a list containing virtual         qubits---(QuantumRegister, int) tuples---, or None.
Apply Toffoli to from ctl1 and ctl2 to tgt.
collect blocks of adjacent gates acting on a pair of "cx" qubits.
Return a Numpy.array for the U3 gate.
Return True if completely-positive trace-preserving.
Return the conjugate of the QuantumChannel.
Return the transpose of the QuantumChannel.
The matrix power of the channel.
Evolve a quantum state by the QuantumChannel.
Find a swap circuit that implements a permutation for this layer.
Run the StochasticSwap pass on `dag`.
Find a swap circuit that implements a permutation for this layer.
Provide a DAGCircuit for a new mapped layer.
Map a DAGCircuit onto a CouplingMap using swap gates.
Return the Pauli group with 4^n elements.
r"""Take pauli string to construct pauli.
Construct pauli from boolean array.
r"""         Multiply two Paulis and track the phase.
r"""         Convert Pauli to a sparse matrix representation (CSR format).
Convert to Operator object.
Convert to Pauli circuit instruction.
Update partial or entire z.
Update partial or entire x.
Insert or append pauli to the targeted indices.
Append pauli at the end.
Delete pauli at the indices.
Return a random Pauli on number of qubits.
Generate single qubit pauli at index with pauli_label with length num_qubits.
Apply an arbitrary 1-qubit unitary matrix.
Apply a two-qubit unitary matrix.
Simulate the outcome of measurement of a qubit.
Generate memory samples from current statevector.
Apply a measure instruction to a qubit.
Apply a reset instruction to a qubit.
Validate an initial statevector
Set the backend options for all experiments in a qobj
Set the initial statevector for simulation
Determine if measure sampling is allowed for an experiment
Run qobj asynchronously.
Run experiments in qobj
Run an experiment (circuit) and return a single experiment result.
Semantic validations of the qobj which cannot be done via schemas.
Apply an arbitrary 1-qubit unitary matrix.
Apply a two-qubit unitary matrix.
Validate an initial unitary matrix
Set the backend options for all experiments in a qobj
Set the initial unitary for simulation
Run experiments in qobj.
Run an experiment (circuit) and return a single experiment result.
Determine if obj is a bit
Return a Numpy.array for the U3 gate.
Check if self has overlap with `interval`.
Return a new Timeslot shifted by `time`.
Return earliest start time in this collection.
Return maximum time of timeslots over all channels.
Return if self is mergeable with `timeslots`.
Return a new TimeslotCollection merged with a specified `timeslots`
Return a new TimeslotCollection shifted by `time`.
Create a paulivec representation.
Apply RZZ to circuit.
Apply Fredkin to circuit.
Select best remaining CNOT in the hardware for the next program edge.
Select the best remaining hardware qubit for the next program qubit.
Return a list of instructions for this CompositeGate.
Return True if operator is a unitary matrix.
Return the conjugate of the operator.
Return the transpose of the operator.
Return the matrix power of the operator.
Evolve a quantum state by the operator.
Evolve a quantum state by the operator.
Convert a QuantumCircuit or Instruction to an Operator.
Update the current Operator by apply an instruction.
Map a DAGCircuit onto a CouplingGraph using swap gates.
Find a swap circuit that implements a permutation for this layer.
Update the QASM string for an iteration of swap_mapper.
Separate a bitstring according to the registers defined in the result header.
Format a single bitstring (memory) from a single shot experiment.
Format a single experiment result coming from backend to present     to the Qiskit user.
Format statevector coming from the backend to present to the Qiskit user.
Format unitary coming from the backend to present to the Qiskit user.
Decorator to ensure that a submit has been performed before     calling the method.
Submit the job to the backend for execution.
Gets the status of the job by querying the Python's future
Whether `lo_freq` is within the `LoRange`.
Create a bloch sphere representation.
Expand all op nodes to the given basis.
Return the number of combinations for n choose k.
Return the index of a string of 0s and 1s.
Return  the lex index of a combination..
Plot a hinton diagram for the quanum state.
Plot the Bloch sphere.
Plot the Bloch sphere.
Plot the cityscape of quantum state.
Plot the paulivec representation of a quantum state.
Return the index of a string of 0s and 1s.
Map a phase of a complexnumber to a color in (r,g,b).
Plot the qsphere representation of a quantum state.
Monitor a single IBMQ backend.
Check if DAG nodes are considered equivalent, e.g. as a node_match for nx.is_isomorphic.
Return a new circuit that has been optimized.
Print the node data, with indent.
Return an instance of a backend from its class.
Return a list of qubits as (QuantumRegister, index) pairs.
Return a list of bits as (ClassicalRegister, index) pairs.
Remove all operation nodes with the given name.
Add all wires in a quantum register.
Add all wires in a classical register.
Add a qubit or bit to the circuit.
Verify that the condition is valid.
Check the values of a list of (qu)bit arguments.
Return a list of bits in the given condition.
Add a new operation node to the graph and assign properties.
Apply an operation to the output of the circuit.
Check that the wiremap is consistent.
Use the wire_map dict to change the condition tuple's creg name.
Add `dag` at the end of `self`, using `edge_map`.
Apply the input circuit to the output of this circuit.
Check that a list of wires is compatible with a node to be replaced.
Map all wires of the input circuit.
Replace one node with dag.
Deprecated. Use op_nodes().
Get the list of "op" nodes in the dag.
Deprecated. Use gate_nodes().
Get the list of gate nodes in the dag.
Deprecated. Use named_nodes().
Get the set of "op" nodes with the given name.
Deprecated. Use twoQ_gates().
Get list of 2-qubit gates. Ignore snapshot, barriers, and the like.
Deprecated. Use threeQ_or_more_gates().
Get list of 3-or-more-qubit gates: (id, data).
Returns list of the predecessors of a node as DAGNodes.
Returns set of the ancestors of a node as DAGNodes.
Remove an operation node n.
Remove all of the ancestor operation nodes of node.
Remove all of the descendant operation nodes of node.
Remove all of the non-ancestors operation nodes of node.
Remove all of the non-descendants operation nodes of node.
Yield a layer for all gates of this circuit.
Return a set of non-conditional runs of "op" nodes with the given names.
Count the occurrences of operation names.
Return a dictionary of circuit properties.
Generate a TomographyBasis object.
Add state preparation gates to a circuit.
Add state measurement gates to a circuit.
Add state preparation gates to a circuit.
Generate a dictionary of tomography experiment configurations.
Generate a dictionary of process tomography experiment configurations.
Add tomography measurement circuits to a QuantumProgram.
Return a results dict for a state or process tomography experiment.
Compute the marginal counts for a subset of measured qubits.
Reconstruct a density matrix or process-matrix from tomography data.
Reconstruct a state from unconstrained least-squares fitting.
Returns a projectors.
Returns the nearest positive semidefinite operator to an operator.
Get the value of the Wigner function from measurement results.
Add state preparation gates to a circuit.
Add measurement gates to a circuit.
Monitor the status of a IBMQJob instance.
Decompose a two-qubit gate over SU(2)+CNOT using the KAK decomposition.
Plots the job history of the user from the given list of jobs.
Return a new circuit that has been optimized.
Apply cu3 from ctl to tgt with angle theta, phi, lam.
transpile one or more circuits, according to some desired     transpilation targets.
Select a PassManager and run a single circuit through it.
Execute a list of circuits or pulse schedules on a backend.
n-qubit input state for QFT that produces output 1.
Assemble a list of circuits or pulse schedules into a Qobj.
Remove the handlers for the 'qiskit' logger.
Create a hinton representation.
Return the process fidelity between two quantum channels.
Set the input text data.
Pop a PLY lexer off the stack.
Push a PLY lexer on the stack to parse filename.
Get conversion method for instruction.
Update annotations of discretized continuous pulse function with duration.
Resolve backend name from a deprecated name or an alias.
Build a ``QuantumCircuit`` object from a ``DAGCircuit``.
Convert an observable in matrix form to dictionary form.
Update a node in the symbol table.
Verify a qubit id against the gate prototype.
Verify each expression in a list.
Verify a user defined gate call.
Verify a register.
Verify a list of registers.
Return a list of (name, index) tuples for this id node.
Check that objects in list_of_nodes represent distinct (qu)bits.
gate_id_list : gate_id_list ',' id
bit_list : bit_list ',' id
qreg_decl : QREG indexed_id
creg_decl : CREG indexed_id
gate_body : '{' '}'
unitary_op : id primary_list
unitary_op : id '(' ')' primary_list
unitary_op : id '(' exp_list ')' primary_list
gate_op : U '(' exp_list ')' id ';'
gate_op : CX id ',' id ';'
gate_op : id id_list ';'
gate_op : id '(' ')' id_list ';'
gate_op : id '(' exp_list ')' id_list ';'
gate_op : BARRIER id_list ';'
barrier : BARRIER primary_list
Compute the column.
Returns a generator of the tokens.
Set the parse_deb field.
Parse some data.
Returns a generator of the tokens.
Parse the data.
Apply crz from ctl to tgt with angle theta.
Calculate the purity of a quantum state.
Return the corresponding OPENQASM string.
Updates the monitor info     Called from another thread.
Generates a jobs_pending progress bar widget.
Return a single backend matching the specified filtering.
Return the conjugate of the QuantumChannel.
Return the transpose of the QuantumChannel.
The matrix power of the channel.
Evolve a quantum state by the QuantumChannel.
Get the number and size of unique registers from bit_labels list.
Get depth information for the circuit.
Returns an array of strings containing \\LaTeX for this circuit.
Loads the QObj schema for use in future validations.
Generate validator for JSON schema.
Load all default schemas into `_SCHEMAS`.
Validates JSON dict against a schema.
Return the corresponding OPENQASM string.
Convert QuantumCircuit to LaTeX string.
Generate a random density matrix rho.
Generate a random density matrix from the Hilbert-Schmidt metric.
Generate a random density matrix from the Bures metric.
Return the corresponding OPENQASM string.
Return a list of custom gate names in this gate body.
Return the corresponding OPENQASM string.
The matrix power of the channel.
Return the conjugate of the QuantumChannel.
Return the transpose of the QuantumChannel.
Return the compose of a QuantumChannel with itself n times.
Evolve a quantum state by the QuantumChannel.
Return the composition channel.
Evolve a quantum state by the operator.
Convert a QuantumCircuit or Instruction to a SuperOp.
Update the current Operator by apply an instruction.
Return a circuit with a barrier before last measurements.
Convert a list of circuits into a qobj.
Expand a given gate into its decomposition.
Calculate a subcircuit that implements this unitary.
Validate if the value is of the type of the schema's model.
Validate if it's a list of valid item-field values.
Set the absolute tolerence parameter for float comparisons.
Set the relative tolerence parameter for float comparisons.
Reshape input and output dimensions of operator.
Make a copy of current operator.
Check if input dimension corresponds to qubit subsystems.
Perform a contraction using Numpy.einsum
Override ``_deserialize`` for customizing the exception raised.
Override ``_serialize`` for customizing the exception raised.
Check if at least one of the possible choices validates the value.
Return the state fidelity between two quantum states.
Apply real scalar function to singular values of a matrix.
Assemble a QasmQobjInstruction
Return True if completely-positive trace-preserving (CPTP).
Test if a channel is completely-positive (CP)
Test if Choi-matrix is completely-positive (CP)
Return True if QuantumChannel is a unitary channel.
Try to convert channel to a unitary representation Operator.
Convert to a Kraus or UnitaryGate circuit instruction.
Test if a channel is completely-positive (CP)
Test if Choi-matrix is trace-preserving (TP)
Convert input into a QuantumChannel subclass object or Operator object
Implements Algorithm 3 in manuscript
Alternative constructor for a TensorFlowModel that         accepts a `tf.keras.Model` instance.
Calculates the distance of a given image to the         original image.
Interface to criterion.is_adverarial that calls         __new_adversarial if necessary.
Interface to model.channel_axis for attacks.
Returns true if _backward and _forward_backward can be called         by an attack, False otherwise.
Interface to model.predictions for attacks.
Interface to model.batch_predictions for attacks.
Interface to model.gradient for attacks.
Interface to model.predictions_and_gradient for attacks.
Interface to model.backward for attacks.
Concatenates the names of the given criteria in alphabetical order.
Calculates the cross-entropy for a batch of logits.
Binarizes the values of x.
Returns an example image and its imagenet class label.
Creates an array like a, with all values     set to 0 except one.
Looks up the precomputed adversarial image for a given image.
Convenience method that calculates predictions for a single image.
Calculates the gradient of the cross-entropy loss w.r.t. the image.
Clone a remote git repository to a local path.
Create Graphene Enum for sorting a SQLAlchemy class query
Monkey patching _strptime to avoid problems related with non-english     locale changes on the system.
Check if tokens are valid tokens for the locale.
Split the date string using translations in locale info.
Parse date and time from given date string.
Attemps to parse time part of date strings like '1 day ago, 2 PM'
Check if the locale is applicable to translate date string.
Translate the date string to its English equivalent.
Parse with formats and return a dictionary with 'period' and 'obj_date'.
step(10,200,5,180)         step(5,50,2.5,5m)         line(22,154,2h5m)         step(5,50,2.5,5m) line(22,154,2h5m)         const(10,1h4m3s)         :param field:         :param value:         :return:
:returns: [(plugin_name, plugin_package, plugin_config), ...]         :rtype: list of tuple
:returns: [(plugin_name, plugin_package, plugin_config), ...]             :rtype: list of tuple
Check whether pid exists in the current process table.
stepper part of reading options
Generate test data if necessary
Choose the name for stepped data file
Read stepper info from json
Write stepper info to json
stpd generation using Stepper class
Execute and check exit code
x         Make a set of points for `this` label
Say the workers to finish their jobs and quit.
A feeder that runs in distinct thread in main process.
override config options with user specified options
Make preparations before running Tank
Returns a marker function of the requested marker_type
Parse duration string, such as '3h2m3s' into milliseconds
Start local agent
Remove agent's files from remote host
Create folder and copy agent and metrics scripts to remote host
Start remote agent
Remove agent's files from remote host
:type cfg_ini: ConfigParser
:type sections: list of Section     :rtype: list of Section
:rtype: {str: object}
Gracefull termination of running process
Add widget string to right panel of the screen
Right-pad lines of block to equal width
Calculate wisible length of string
Send request to writer service.
Call configure() on all plugins
Call is_test_finished() on all plugins 'till one of them initiates exit
Call post_process() on all plugins
Move or copy single file to artifacts dir
Add file to be stored as result artifact on post-process phase
Call close() for all plugins
Close any of open connections
Request a new order
Get a list of assets
:param command:   :param parser:   :param cl_args:   :param unknown_args:   :return:
Modified version of poll() from asyncore module
Writes the message as part of the response and sets 404 status.
write back json response
Tries to connect to the Heron Server
Sends a request message (REQID is non-zero)
Sends a message (REQID is zero)
Create a tar file with a given set of files
Retrieve the given subparser from parser
Get all the heron lib jars with the absolute paths
Check cluster/[role]/[environ], if they are required
Check cluster/[role]/[environ], if they are required
Parse the command line for overriding the defaults and   create an override file.
Parse the command line for overriding the defaults
Get the path of java executable
Check if the java home set
Check if the release.yaml file exists
Print build_info from release.yaml
Print version from release.yaml
:param param:   :param command_args:   :return:
:param cluster:     :param environ:     :param topology:     :return:
:param cluster:     :param environ:     :param topology:     :return:
:param cluster:     :param environ:     :param topology:     :param container:     :return:
:param cluster:     :param environ:     :param topology:     :param container:     :return:
:param cluster:     :param environ:     :param topology:     :param container:     :return:
:param cluster:     :param environ:     :param topology:     :param container:     :return:
Unregister the watch with the given UUID.
set exectuion state
Sync the topologies with the statemgrs.
Returns all the topologies for a given state manager.
Removes the topology from the local cache.
Returns the repesentation of execution state that will     be returned from Tracker.
Returns the representation of scheduler location that will     be returned from Tracker.
Returns the representation of tmaster that will     be returned from Tracker.
Returns the representation of logical plan that will     be returned from Tracker.
Returns the representation of physical plan that will     be returned from Tracker.
Returns the representation of packing plan that will     be returned from Tracker.
load config files
Checks whether we still need to do more work
Deserializes Java primitive data and objects serialized by ObjectOutputStream   from a file-like object.
Deserializes Java objects and primitive data serialized by ObjectOutputStream   from a string.
:param subparsers:   :return:
:param command:   :param parser:   :param args:   :param unknown_args:   :return:
:param parser:   :return:
Create the parse for the update command
run the update command
Checks if a given gtype is sane
Custom grouping from a given implementation of ICustomGrouping
Custom grouping from a given serialized string
Update the value of CountMetric or MultiCountMetric
Update the value of ReducedMetric or MultiReducedMetric
Apply update to serialization metrics
Initializes the default values for a necessary set of MultiCountMetrics
Apply updates to the next tuple metrics
Apply updates to the fail metrics
Initializes the default values for a necessary set of MultiCountMetrics
Apply updates to the execute metrics
Apply updates to the deserialization metrics
Apply updates to the fail metrics
Poll from the buffer
Parse version to major, minor, patch, pre-release, build parts.
:param subparsers:   :param action:   :param help_arg:   :return:
Creates all the zookeeper state_managers and returns   them in a list
Returns all the file state_managers.
Increments the value of a given key by ``to_add``
Updates a value of a given key and apply reduction
Add a new data tuple to the currently buffered set of tuples
Add the checkpoint state message to be sent back the stmgr
:param subparsers:   :return:
:param command:   :param parser:   :param args:   :param unknown_args:   :return:
Given a java classpath, check whether the path entries are valid or not
:param U:     :param V:     :return:
Get a list of paths to included dependencies in the specified pex file
Loads pex file and its dependencies to the current python path
Create a map of command names and handlers
Run the command   :param command:   :param parser:   :param command_args:   :param unknown_args:   :return:
:param files:   :return:
Run the command   :return:
set default time
Process a single tuple of input
get the command to start the tmaster processes
Get the command to start the checkpoint manager process
Get a map from all daemon services' name to the command to start them
Wait for the termination of a process and log its stdout & stderr
Start all commands and add them to the dict of processes to be monitored
Receive updates to the packing plan from the statemgrs and update processes as needed.
Force every module in modList to be placed into main
Save a module as an import
Returns last n lines from the filename. No exception handling
Returns a serializer for a given context
Run once, should be called only from loop()
Get the next timeout from now
:param subparsers:   :return:
:param command:   :param parser:   :param args:   :param unknown_args:   :return:
Indicate that processing of a Tuple has failed
Run the command   :return:
Create a subparser for the standalone command   :param subparsers:   :return:
add additional parameters to parser
Start a Heron standalone cluster
Start Heron tracker and UI
distribute Heron packages to all nodes
Wait for a nomad master to start
Wait for a Nomad job to start
Tar a directory
read config files to get roles
get home directory of remote host
get host name of remote host
check if this host is this addr
:param cluster:   :param environ:   :param topology:   :param role:   :return:
:param cluster:   :param environ:   :param topology:   :param instance:   :param role:   :return:
:param cluster:   :param environ:   :param topology:   :param instance:   :param role:   :return:
:param cluster:   :param environ:   :param topology:   :param instance:   :param role:   :return:
:param cluster:   :param environ:   :param topology:   :param instance:   :param role:   :return:
:param cluster:   :param environ:   :param topology:   :param container:   :param path:   :param role:   :return:
:param cluster:   :param environ:   :param topology:   :param container:   :param path:   :param role:   :return:
:param multi_ts:     :return:
:param timerange:     :param data:     :param isMax:     :return:
:param metric:     :param component:     :param instance:     :return:
normalize raw result to table
print topologies information to stdout
print topologies information to stdout
print topologies information to stdout
:param class_name:   :param topology_tar:   :param arguments:   :param tmpdir_root:   :param java_defines:   :return:
:param cluster:     :param environ:     :param topology:     :param comp_name:     :return:
:param cluster:     :param environ:     :param topology:     :return:
:param cluster:     :param environ:     :param topology:     :return:
:param cluster:     :param environ:     :param topology:     :param component:     :return:
:param cluster:     :param environ:     :param topology:     :param instance:     :return:
Get physical plan of a topology
Takes a class `__dict__` and returns `HeronComponentSpec` entries
Takes a class `__dict__` and returns a map containing topology-wide     configuration.
Retrieves heron options from the `HERON_OPTIONS` environment variable.
Add a spout to the topology
Add a bolt to the topology
Set topology-wide configuration to the topology
map from query parameter to query name
Configure logger which dumps log on terminal
simply set verbose level based on command-line args
Sanitizes input fields and returns a map <GlobalStreamId -> Grouping>
Sanitizes output fields and returns a map <stream_id -> list of output fields>
Returns component_id of this GlobalStreamId
:param status_code:     :param kwargs:     :return:
invoke task hooks for after the spout/bolt's initialize() method
invoke task hooks for every time a tuple is emitted in spout/bolt
Create a subparser for the submit command   :param subparsers:   :return:
Launch topologies   :param cl_args:   :param topology_file:   :param tmp_dir:   :return: list(Responses)
Hex encode a binary string
Make the url for log-file data in heron-shell   from the info stored in stmgr.
Decodes an IncomingPacket object and returns (typename, reqid, serialized message)
Creates an IncomingPacket object from header and data
Reads incoming data from asyncore.dispatcher
Generates a random REQID for request
:param subparsers:   :return:
:param command:   :param parser:   :param cl_args:   :param unknown_args:   :return:
Send messages in out_stream to the Stream Manager
Checks if a given stream_id and tuple matches with the output schema
Prepares the custom grouping for this component
:param parser:   :return:
:param parser:   :return:
Read the cluster definition for server mode   :param cluster:   :param cl_args:   :param config_file:   :return:
Check the cluster definition for direct mode   :param cluster:   :param config_path:   :return:
Format the date associated with a file to be displayed in directory listing.
Read a chunk of a file from an offset upto the length.
run containers subcommand
:param address:   :param port:   :param tracker_url:   :return:
:param argv:   :return:
:param ranges:   :return:
Updates the global list of line error-suppressions.
Updates the list of global error suppressions.
Replaces instances of pattern in a string with a replacement.
Removes C++11 raw strings from lines.
Find the beginning marker for a multiline comment.
Clears a range of lines for multi-line comments.
Removes //-comments and single-line C-style /* */ comments.
Find the position just after the end of current parenthesized expression.
Find position at the matching start of current expression.
Logs an error if no Copyright message appears at the top of the file.
Return the number of leading spaces in line.
Returns the CPP variable that should be used as a header guard.
Checks that the file contains a header guard.
Logs an error if a source file does not include its header.
Logs an error for each line containing bad characters.
Checks for calls to thread-unsafe functions.
Checks that VLOG() is only used for defining a logging level.
Check if expression looks like a type name, returns true if so.
Check if the token ending on (linenum, column) is decltype().
Return the most recent non-blank line and its line number.
Look for empty loop/conditional body with only a single semicolon.
Find a replaceable CHECK-like macro.
Checks the use of CHECK and EXPECT macros.
Check alternative keywords being used in boolean expressions.
Determines the width of the line in column positions.
Check rules that are applicable to #include lines.
r"""Retrieves all the text between matching open and close parentheses.
Checks rules from the 'C++ language rules' section of cppguide.html.
Check for unsafe global or static objects.
Check for printf related issues.
Check if current line contains an inherited function.
Check if current line contains an out-of-line method definition.
Check if current line is inside constructor initializer list.
Check for non-const references.
Checks for a C-style cast by looking for the pattern.
Check if these two filenames belong to the same module.
Check that make_pair's template arguments are deduced.
Check if line contains a redundant "virtual" function-specifier.
Check if line contains a redundant "override" or "final" virt-specifier.
Checks that the new block is directly in a namespace.
Loads the configuration files and processes the config overrides.
Does google-lint on a single file.
Prints a list of all the error-categories used by error messages.
Parses the command line arguments.
Check if a header has already been included.
Check if a header is in alphabetical order with the previous header.
Returns a non-empty error message if the next header is out of order.
Sets the module's verbosity, and returns the previous setting.
Adds more filters to the existing list of error-message filters.
Bumps the module's error statistic.
Print a summary of errors by category, and the total.
Start analyzing function body.
r"""FullName after removing the local path to the repository.
Splits the file into the directory, basename, and extension.
Collapses strings and chars on a line to simple "" or '' blocks.
Check end of namespace comments.
Check if current position is inside template argument list.
Get class info on the top of the stack.
Checks that all classes and namespaces have been completely parsed.
Return a new Streamlet by applying map_function to each element of this Streamlet.
Return a new Streamlet containing only the elements that satisfy filter_function
Return num_clones number of streamlets each containing all elements     of the current streamlet
Returns a new Streamlet that consists of elements of both this and other_streamlet
Return a new Streamlet by joining join_streamlet with this streamlet
Return a new Streamlet by outer right join_streamlet with this streamlet
Return a new Streamlet by left join_streamlet with this streamlet
Return a new Streamlet by outer join_streamlet with this streamlet
extract common args
(decorator) Create a simple solid.
(decorator) Create a solid with specified parameters.
gunzips /path/to/foo.gz to /path/to/raw/2019/01/01/data.json
Record a stream of event records to json
Read a config file and instantiate the RCParser.
Get config dictionary for the given repository.
Creates a solid with the given number of (meaningless) inputs and outputs.
Return all pipelines as a list
The schema for configuration data that describes the type, optionality, defaults, and description.
Return the solid named "name". Throws if it does not exist.
Automagically wrap a block of text.
Return a new solid that executes and materializes a SQL select statement.
Download an object from s3.
Upload a file to s3.
"Synchronous" version of :py:func:`execute_pipeline_iterator`.
Get a :py:class:`SolidExecutionResult` for a given solid name.
A :py:class:`Dict` with a name allowing it to be referenced by that name.
Schema for configuration data with string keys and typed values via :py:class:`Field` .
Takes a python cls and creates a type for it in the Dagster domain.
Default method to acquire database connection parameters.
Receives a dictionary connection_params to setup         a connection to the database.
Closes the client connection to the database.
Builds an instance of model from the model_dict.
Returns the formfield for the array.
Filter the queryset for the instance this manager is bound to.
Compute the optimal partitions given a distribution of set sizes.
Compute the function A(r, b)
Initialize the slots of the LeanMinHash.
Compute the byte size after serialization.
Serialize this lean MinHash and store the result in an allocated buffer.
Deserialize a lean MinHash from a buffer.
:returns: datasketch.MinHash -- A copy of this MinHash by exporting its state.
Create a MinHash which is the union of the MinHash objects passed as arguments.
Returns:             bool: Check if the index is empty.
Remove the key from the index.
Estimate the cardinality of the data values seen so far.
Reset the current HyperLogLog to empty.
Index all the keys added so far and make them searchable.
Cleanup client resources and disconnect from AsyncMinHashLSH storage.
Return an unordered storage system based on the specified config.
Spawns a new process from the given command.
Sends a line to std_in.
Call a property prop as a method (this will be self).
note py_arr elems are NOT converted to PyJs types!
note py_obj items are NOT converted to PyJs types!
returns n digit string representation of the num
returns string representation of this object
returns string representation of this object
checks if self is in other
Select the correct text from the Japanese number, reading and     alternatives
Merge lpair < rpair while applying semi-irregular rendaku rules
Download and extract processed data and embeddings.
Make a grid of images, via numpy.
Save a given Tensor into an image file.
Remove types from function arguments in cython
Parse a single statement.
Parse a single literal value.
Advances to next line.
Parse a (possibly scoped) selector.
Try to parse a container type (dict, list, or tuple).
Try to parse a basic type (str, bool, number).
Reraises `exception`, appending `message` to its string representation.
Convert an operative config string to markdown format.
Find the first __init__ or __new__ method in the given class's MRO.
Make sure `fn` can be wrapped cleanly by functools.wraps.
Decorate a function or class with the given decorator.
Checks whether `selector` should be skipped (if unknown).
Clears the global configuration.
Binds the parameter value specified by `binding_key` to `value`.
Returns the currently bound value to the specified `binding_key`.
Returns True if `arg_name` might be a valid parameter for `fn_or_cls`.
Returns the names of the supplied arguments to the given function.
Returns the names of all positional arguments to the given function.
Retrieve all default values for configurable parameters of a function.
Decorator to make a function or class configurable.
Allow referencing/configuring an external class or function.
Retrieve the "operative" configuration as a config string.
Parse a file, string, or list of strings containing parameter bindings.
Register a file reader for use in parse_config_file.
Parse a Gin config file.
Parse a list of config files followed by extra Gin bindings.
Parse and return a single Gin value.
A function that should be called after parsing all Gin config files.
Provides an iterator over all values in a nested structure.
Provides an iterator over references in the given config.
Creates a constant that can be referenced from gin config files.
Hook to find/raise errors for references to unknown configurables.
Returns all values matching `partial_selector` as a list.
Communicate with the child process without closing stdin.
Sets the access permissions of the map.
Check if there is enough permissions for access
Returns True if index is in range
Translates the index to the internal offsets.
Creates a new file mapping in the memory address space.
Creates a new mapping in the memory address space.
Returns the L{MMap} object containing the address.
Returns a sorted list of all the mappings for this memory.
Generates the list of maps that overlaps with the range [start:end]
Creates a new file mapping in the memory address space.
Write a concrete or symbolic (or mixed) buffer to memory
Read from memory.
Write `data` to the stack and decrement the stack pointer accordingly.
Read `nbytes` from the stack, increment the stack pointer, and return         data.
Decrement the stack pointer and write `value` to the stack.
Read a value from the stack and increment the stack pointer.
Notify listeners that an instruction has been executed.
Build EFLAGS/RFLAGS from flags
Set individual flags from a EFLAGS/RFLAGS value
Writes a value in the stack.
Gets a value from the stack.
Pushes a value onto the stack.
Loops according to ECX counter.
Loops if ECX counter is nonzero.
Moves data from string to string.
RDX:RAX = sign-extend of RAX.
EDX:EAX = sign-extend of EAX
Concretize a symbolic :class:`~manticore.core.smtlib.expression.Expression` into         one solution.
Concretize a symbolic :class:`~manticore.core.smtlib.expression.Expression` into         `nsolves` solutions.
Solves a symbolic :class:`~manticore.core.smtlib.expression.Expression` into         its maximum solution
Solves a symbolic :class:`~manticore.core.smtlib.expression.Expression` into         its minimum solution
Solves a symbolic :class:`~manticore.core.smtlib.expression.Expression` into         its minimum and maximun solution. Only defined for bitvects.
Mark parts of a buffer as symbolic (demarked by the wildcard byte)
Handle memory operations from unicorn.
Emulate a single instruction.
Returns the min and max possible values for x within given constraints
Send a string to the solver.
Check the satisfiability of the current state
Check if two potentially symbolic values can be equal
Returns a list with all the possible values for the symbol x
Produce a summarized record name           i.e. manticore.core.executor -> m.c.executor
Dispatches execution into one of Manticore's engines: evm or native.
Get the first `nbits` from `value`.
Convert a bitstring `value` of `width` bits to a signed integer     representation.
Maintain our own copy of the visited set
Maintain our own copy of the visited set
Dequeue a state with the max priority
Load an yml-formatted configuration from file stream |f|
Return the description, or a help string of variable identified by |name|.
Communicate with the child process without closing stdin.
Returns the tuple type signature for the arguments of the contract constructor.
Returns a copy of the Solidity JSON ABI item for the contract constructor.
Catches did_map_memory and copies the mapping into Manticore
Unmap Unicorn maps when Manticore unmaps them
Set memory protections in Unicorn correctly
Unicorn hook that transfers control to Manticore so it can execute the syscall
Wrapper that runs the _step function in a loop while handling exceptions
Copy memory writes from Manticore back into Unicorn in real-time
Sync register state from Manticore -> Unicorn
flips a constraint (Equal)
solve bytes in |datas| based on
Create a platform without an ELF loaded.
Load `program` and establish program state, such as stack and arguments.
Adds a file descriptor to the current file descriptor list
Rename filename `oldnamep` to `newnamep`.
Synchronize a file's in-core state with that on disk.
Wrapper for sys_sigaction
Wrapper for sys_sigprocmask
Read         :rtype: int
Wrapper for mmap2
Remove procid from waitlists and reestablish it in the running list
Compute total load size of interpreter.
random - fill a buffer with random data
receive - receive bytes from a file descriptor
Exits all threads in a process         :param cpu: current CPU.         :raises Exception: 'Finished'
fdwait - wait for file descriptors to become ready
Create a :class:`~manticore.core.workspace.Store` instance depending on the descriptor.
Save an arbitrary, serializable `value` under `key`.
Load an arbitrary value identified by `key`.
Return a managed file-like object from which the calling code can read         previously-serialized data.
Save a state to storage.
Load a state from storage.
Yield a file object representing `key`
Remove file identified by `key`.
Get a unique state id.
Load a state from storage identified by `state_id`.
Save a state to storage, return identifier.
Create an indexed output stream i.e. 'test_00000001.name'
Handle syscalls (import memory) and bail if we diverge
Synchronize the stack and register state (manticore->qemu)
ArraySelect (ArrayStore((ArrayStore(x0,v0) ...),xn, vn), x0)                 -> v0
Calculate `static` type size
Build transaction data from function signature and arguments
Serialize value using type specification in ty.         ABI.serialize('int256', 1000)         ABI.serialize('(int, int256)', 1000, 2000)
Makes a function hash id from a method signature
Only meant to be used with concrete Transaction objects! (after calling .concretize())
Push into the stack
Read a value from the top of the stack without removing it
Stores value in memory as a big endian
Retrieve single byte from word
Get input data of current environment
Copy input data in current environment to memory
Copy code running in current environment to memory
Copy an account's code to memory
Load word from memory
Save word to memory
Save byte to memory
Load word from storage
Save word to storage
Conditionally alter the program counter
Create a new account with associated code
Create a new account with associated code
Read a value from a storage slot on the specified account
Writes a value to a storage slot in specified account
Create a fresh 160bit address
Create a contract account. Sends a transaction to initialize the contract
See Shift() and Shift_C() in the ARM manual
Implement the MOV{S} instruction.
MOVT writes imm16 to Rd[31:16]. The write does not affect Rd[15:0].
Writes the contents of two registers to memory.
Get next instruction using the Capstone disassembler
Add a constraint to the set
Declare the variable `var`
Fit encoder according to X and y.
Fit encoder according to X and y.
Convert dummy variable into numerical variables
Convert basen code as integers.
The lambda body to transform the column values
Fit encoder according to X and y.
Returns names of 'object' columns in the DataFrame.
Unite data into a DataFrame.
Returns a list of the generated/transformed columns.
Fit encoder according to X and y.
Associate a notification template from this job template.
Disassociate a notification template from this job template.
Launch a new workflow job based on a workflow job template.
Parse arguments sent to this command.
Monkey-patch click's format_options method to support option categorization.
Return a list of objects.
Return one and exactly one object
Modify an already existing object.
Convert next and previous from URLs to integers
Remove the given object.
Return one and exactly one object.
Return a list of objects.
Disassociate the `other` record from the `me` record.
Copy an object.
Modify an already existing object.
Stream the standard output from a job, project update, or inventory udpate.
Cancel a currently running job.
Update all related inventory sources of the given inventory.
Do extra processing so we can display the actor field as         a top-level field
Create a new label.
Display full version information.
Echo a setting to the CLI.
Read or write tower-cli configuration.
Export assets from Tower.
Import assets into Tower.
Empties assets from Tower.
Parse out a list of requirements from the given requirements     requirements file.
Modify an already existing.
Print the status of the most recent update.
Return file content if file, else, return value as-is
Add a node to run on success.
Add a node to run on failure.
Add a node to always run after the parent is finished.
Operates on item_dict
Add or remove columns from the output.
Populates columns and sets display attribute as needed.         Operates on data.
Return a list of roles.
Get information about a role.
Associate a notification template from this workflow.
Disassociate a notification template from this workflow.
Create a group.
Return a list of groups.
Associate this group with the specified group.
Disassociate this group from the specified group.
Make a request to the Ansible Tower API, and return the         response.
Remove None-valued and configuration-related keyworded arguments
Combine configuration-related keyworded arguments into         notification_configuration.
Create a notification template.
Modify an existing notification template.
Remove the given notification template.
Return a list of notification templates.
Read the configuration from the given file.
Maintains the context of the runtime settings for invoking         a command.
Launch a new job based on a job template.
Launch a new ad-hoc command.
Convert the payload into a YAML string with proper         indentation and return it.
Echos only the id
Update the given inventory source.
Return a list of hosts.
Return a JSON object of all available facts of the given host.
Extra format methods for multi methods that adds all the commands         after the options.
Returns a list of multi-commands for each resource type.
Mark this method as a CLI command.
Translate a Mopidy search query to a Spotify search query
Parse Retry-After header from response if it is set.
Generates a state string to be used in authorizations.
Form an authorization URL.
Generic method for fetching an access token from the token endpoint.
Parse token from the URI fragment, used by MobileApplicationClients.
Fetch a new access token using a refresh token.
Intercept all requests and add the OAuth 2 token if present.
Register a hook for request/response tweaking.
Create an authorization URL by appending request_token and optional         kwargs to url.
r"""Fetch a request token.
Fetch an access token.
Extract parameters from the post authorization redirect response URL.
Validate new property value before setting it.
Get the property description.
Set the current value of the property.
Get the thing at the given index.
Initialize the handler.
Set the default headers for all requests.
Handle a GET request.
Validate Host header.
Handle a GET request, including websocket requests.
Handle an incoming message.
Handle a GET request.
Handle a PUT request.
Handle a POST request.
Handle a GET request.
Handle a PUT request.
Handle a DELETE request.
Handle a GET request.
Start listening for incoming connections.
Get the action description.
Start performing the action.
Get the event description.
Get the default local IP address.
Get all IP addresses.
Set a new value for this thing.
Notify observers of a new value.
Return the thing state as a Thing Description.
Set the prefix of any hrefs associated with this thing.
Get the thing's properties as a dictionary.
Get the thing's actions as an array.
Get the thing's events as an array.
Add a property to this thing.
Remove a property from this thing.
Get a property's value.
Get a mapping of all properties and their values.
Set a property value.
Add a new event and notify subscribers.
Perform an action on the thing.
Remove an existing action.
Remove a websocket subscriber.
Add a new websocket subscriber to an event.
Remove a websocket subscriber from an event.
Notify all subscribers of a property change.
Notify all subscribers of an action status change.
Notify all subscribers of an event.
Returns data with different cfgstr values that were previously computed         with this cacher.
r"""         Wraps around a function. A cfgstr must be stored in the base cacher.
Get the hash of the each product file
Recertify that the product has been recomputed by writing a new         certificate to disk.
Returns true of the redirect is a terminal.
Write to this and the redirected stream
Doctest:             >>> CaptureStdout(enabled=False).stop()             >>> CaptureStdout(enabled=True).stop()
Locate a command.
DEPRICATED: This has been ported to xdev, please use that version.
Augments a path with a new basename, extension, prefix and/or suffix.
Normalizes a string representation of a path and does shell-like expansion.
Statically parse the version number from __init__.py
Parse the description in the README file
Injects a function into an object instance as a bound method
r"""     Writes (utf8) text to a file.
Reads (utf8) text from a file.
Makes a pretty and easy-to-doctest string representation!
Create a string representation for each item in a dict.
Create a string representation for each item in a list.
Returns an appropriate function to format `data` if one has been         registered.
CommandLine:             python -m ubelt.util_format FormatterExtensions._register_numpy_extensions
Convert a string-based key into a hasher class
r"""     Extracts the sequence of bytes that would be hashed by hash_data
Converts `data` into a byte representation and calls update on the hasher     `hashlib.HASH` algorithm.
r"""     Packs a long hexstr into a shorter length string with a larger base.
counterpart to _update_hasher
Get a unique hash depending on the state of the data.
Hashes the data in a file on disk.
Returns an appropriate function to hash `data` if one has been         registered.
Register hashing extensions for a selection of classes included in         python stdlib.
Reads output from a process in a separate thread
Iterates over output from a process line by line
Iterates over output from a process line by line
Executes a command in a subprocess.
Imports a module from its string name (__name__)
syspath version of modname_to_modpath
Finds the path to a python module from its name.
Normalizes __init__ and __main__ paths.
Get the value of a keyword argument specified on the command line.
Determines if a key is specified on the command line
Create a symbolic link.
Transforms function args into a key that can be used by the cache
Highlights a block of text using ANSI tags based on language syntax.
r"""     Colorizes text a single color using ansii tags.
Generates unique items in the order they appear.
Returns indices corresponding to the first instance of each unique item.
Returns a list of booleans corresponding to the first instance of each     unique item.
Determine if all items in a sequence are the same
Returns index / key of the item with the largest value.
Returns index / key of the item with the smallest value.
r"""     Groups a list of items by group id.
Find all duplicate items in a list.
r"""     Generates values from a dictionary
applies a function to each of the keys in a dictionary
r"""     Swaps the keys and values in a dictionary.
CommandLine:         python -m ubelt._win32_links _win32_can_symlink
Test if two hard links point to the same location
Using the windows cmd shell to get information about a directory
Parse a contains validator, which takes as the config a simple string to find
Retrieve the adjacency matrix from the nx.DiGraph or numpy array.
Apply causal discovery on observational data using CCDr.
Redefine the causes of the graph.
Generate data from an FCM containing cycles.
Save data to the csv format by default, in two separate files.
Execute a subprocess to check the package's availability.
Perform the independence test.
Orient a graph using the method defined by the arguments.
Evaluate a graph taking account of the hardware.
Generate according to the topological order of the graph.
Run the CGNN on a given graph.
Orient the undirected graph using GNN and apply CGNN to improve the graph.
Evaluate the entropy of the input variable.
Evaluate a pair using the IGCI model.
Train the model.
Build a skeleton using a pairwise independence criterion.
Predict the skeleton of the graph from raw data.
Run GIES on an undirected graph.
Run the GIES algorithm.
Setting up and running GIES with all arguments.
Execute the SAM model.
Reset the parameters.
Feed-forward through the network.
Feed-forward the model.
Feed-forward the model.
Infer causal relationships between 2 variables using the RECI statistic
Compute the RECI fit score
Infer causal relationships between 2 variables using the CDS statistic
Compute the fitness score of the ANM model in the x->y direction.
Run PC on an undirected graph.
Run the PC algorithm.
Predict the graph skeleton.
Get the default parameters as defined in the Settings instance.
Compute the loss model.
Orient an undirected graph using the pairwise method defined by the subclass.
Run the algorithm on an undirected graph.
Run the algorithm on a directed_graph.
Run the algorithm on data.
Init a noise variable.
Use Jarfo to predict the causal direction of a pair of vars.
Implementation of the Context Likelihood or Relatedness Network algorithm.
Implementation of the ARACNE algorithm.
Apply deconvolution to a networkx graph.
Input a graph and output a DAG.
Run an instance of GNN, testing causal direction.
Pass data through the net structure.
Run the GNN on a pair x,y of FloatTensor data.
Run multiple times GNN to estimate the causal direction.
Redefine the causes of the graph.
Generate data from an FCM containing cycles.
Apply causal discovery on observational data using CAM.
Passing data through the network.
Fit the NCC model.
Updates all rows that match the filter.
Creates multiple new records in the database.
Creates a new record in the database.
Creates a new record in the database and then gets         the entire row.
Creates a new record or updates the existing one         with the specified data.
Verifies whether this field is gonna modify something         on its own.
Gets the fields to use in an upsert.
Creates a new record or updates the existing one         with the specified data.
Resolves expressions inside the dictionary.
Compiles the HStore value into SQL.
Compiles this expression into SQL.
Resolves the expression into a :see:HStoreColumn expression.
Compiles this expression into SQL.
Renames the aliases for the specified annotations:
Adds an extra condition to an existing JOIN.
Gets whether the field with the specified name is a         HStoreField.
Sets the values to be used in this query.
Ran when a new model is created.
Ran when a model is being deleted.
Ran when the name of a model is changed.
Ran when a field is added to a model.
Ran when a field is removed from a model.
Ran when the configuration on a field changed.
Gets the name for a CONSTRAINT that applies         to a single hstore key.
Serializes the :see:ConditionalUniqueIndex for the migrations file.
Creates a custom setup.py command.
Gets the base class for the custom database back-end.
Ran when a new model is created.
Ran when a model is being deleted.
Ran when the name of a model is changed.
Ran when a field is added to a model.
Ran when a field is removed from a model.
Ran when the configuration on a field changed.
Override the base class so it doesn't cast all values         to strings.
Builds the RETURNING part of the query.
Gets the field on a model with the specified name.
Formats a field's value for usage in SQL.
Ran when the name of a model is changed.
Ran when a field is added to a model.
Ran when a field is removed from a model.
Ran when the configuration on a field changed.
Iterates over the keys marked as "unique"         in the specified field.
Compiles this JOIN into a SQL string.
Creates a new :see:ConditionalJoin from the         specified :see:Join object.
Convert phrase to normilized file name.
Calculate a t-test score for the difference between two samples.
Determine whether two samples differ significantly.
Return a topological sorting of nodes in a graph.
permutations(range(3), 2) --> (0,1) (0,2) (1,0) (1,2) (2,0) (2,1)
select move; unexplored children first, then according to uct value
Generates the list of strings that will be used in the benchmarks.
Initialize the strings we'll run the regexes against.
Pure-Python implementation of itertools.combinations(l, 2).
Returns the domain of the B-Spline
Fetch the messages.
Parse posts and returns in order.
Fetch the history of a channel.
Fetch user data.
Fetch a resource.
Fetch the mbox files from the remote archiver.
Fetch the entries from the url.
Fetch the entries
Fetch the bugs from the repository.
Authenticate a user in the server.
Get the information of a list of bugs.
Get the comments of the given bugs.
Get the history of the given bugs.
Get the attachments of the given bugs.
Retrive the given resource.
Fetch the items (issues or merge_requests)
Fetch the issues
Get award emojis for issue/merge request
Fetch emojis for a note of an issue/merge request
Get the merge full data
Get emojis of a note
Fetch the data from a given URL.
Fetch the messages from the channel.
Fetch the messages
Extracts the identifier from a Slack item.
Fetch information about a channel.
Fetch the history of a channel.
Fetch user info.
Fetch a resource.
Extracts and coverts the update time from a Bugzilla item.
Parse a Bugzilla CSV bug list.
Authenticate a user in the server.
Logout from the server.
Get metadata information in XML format.
Get a summary of bugs in CSV format.
Get the information of a list of bugs in XML format.
Get the activity of a bug in HTML format.
Run an API command.
Fetch the events from the server.
Fetch the events
Fetch the events pages of a given group.
Fetch the comments of a given event.
Fetch the rsvps of a given event.
Fetch a resource.
Fetch the questions
Fetch an Askbot HTML question body.
Fetch all the comments of an Askbot question and answers.
Build an Askbot HTML response.
Retrieve a question page using the API.
Retrieve a raw HTML question and all it's information.
Retrieve a list of comments by a given id.
Parse the question info container of a given HTML question.
Parse the answers of a given HTML question.
Parse number of answer pages to paginate over them.
Parse the user information of a given HTML container.
Fetch the reviews
Get the reviews starting from last_item.
Fetch the issues
Fetch the issues from a project (distribution/package)
Get data associated to an issue
Get messages of an issue
Get activities on an issue
Get data associated to an user
Get the issues from pagination
Get the user data by URL
Get the issue data by its ID
Get a collection list of a given issue
Build URL project
Return the items from Launchpad API using pagination
Fetch the messages
Fetch the mbox files from the remote archiver.
Fetch the groupsio paginated subscriptions for a given token
Fetch requests from groupsio API
Returns the Groupsio argument parser.
Generate a UUID based on the given parameters.
Fetch items using the given backend.
Fetch items from an archive manager.
Find available backends.
Fetch items from the repository.
Fetch the questions from an archive.
Remove classified or confidential data from an item.
Add metadata to an item.
Parse a list of arguments.
Fetch and write items.
Initialize archive based on the parsed parameters
Fetch the messages
Extracts the update time from a MBox item.
Parse a mbox file.
Fetch and parse the messages from a mailing list
Copy the contents of a mbox to a temporary file
Check if the given message has the mandatory fields
Convert a message in CaseInsensitiveDict to dict.
Fetch the commits
Parse a Git log file.
Parse the Git log stream.
Get the old filepath of a moved/renamed file.
Clone a Git repository.
Count the objects of a repository.
Check if the repo is in a detached state.
Update repository from its remote.
Keep the repository in sync.
Read the list commits from the repository
Read the commit log from the repository.
Show the data of a set of commits.
Fetch changes and store them in a pack.
Read the commits of a pack.
Get the current list of local or remote refs.
Update a reference.
Run a command with a non blocking call.
Fetch the tweets from the server.
Fetch the tweets
Fetch tweets for a given query between since_id and max_id.
Fetch a resource.
Fetch data from Google API.
Parse the hits returned by the Google Search API
Fetch information about a list of keywords.
Fetch the issues/pull requests from the repository.
Fetch the items (issues or pull_requests)
Extracts the update time from a GitHub item.
Extracts the category from a GitHub item.
Fetch the issues
Fetch the pull requests
Get reactions of an issue
Fetch the issues from the repository.
Fetch the pull requests from the repository.
Get reactions of a review comment
Get the user information and update the user cache
Get the user public organizations
Check if we need to switch GitHub API tokens
Store a raw item in this archive.
Retrieve a raw item from the archive.
Create a brand new archive.
Generate a SHA1 based on the given arguments.
Check whether the archive is valid or not.
Load metadata from the archive file
Fetch the number of rows in a table
Create a new archive.
Remove an archive.
Search archives using filters.
Retrieve the file paths stored under the base path.
Check if filename is a compressed file supported by the tool.
Generate a months range.
Convert an email message into a dictionary.
Remove control and invalid characters from an xml stream.
Convert a XML stream into a dictionary.
Fetch the issues
Parse a Redmine issues JSON stream.
Get the information of a list of issues.
Get the information of the given issue.
Get the information of the given user.
Call to get a resource.
Fetch the messages
Fetch the mbox files from the remote archiver.
Fetch data from a Docker Hub repository.
Fetch information about a repository.
Add extra information for custom fields.
Filter custom fields from a given set of fields.
Fetch the issues
Parse a JIRA API raw response.
Retrieve all the items from a given date.
Retrieve all the issues from a given date.
Retrieve all the comments of a given issue.
Retrieve all the fields available.
Fetch the builds from the url.
Fetch the contents
Retrieve all jobs
Retrieve all builds from a job
Fetch the questions
Parse a StackExchange API raw response.
Retrieve all the questions from a given date.
Returns the StackExchange argument parser.
Fetch the pages from the backend url.
Fetch the pages
Get the max date in unixtime format from reviews.
Fetch the pages from the backend url for MediaWiki >=1.27
Fetch the pages from the backend url.
Retrieve all pages from a namespace starting from apcontinue.
Retrieve recent pages from all namespaces starting from rccontinue.
Fetch the messages the bot can read from the server.
Fetch the messages
Parse a Telegram JSON messages list.
Check if a message can be filtered based in a list of chats.
Fetch the messages that a bot can read.
Retrive the given resource.
Parse a NNTP article.
Fetch NNTP data from the server or from the archive
Fetch article data
Fetch data from NNTP
Fetch data from the archive
Fetch the data from a given URL.
Create a http session and initialize the retry object.
Setup the rate limit handler.
Update the rate limit and the time to reset         from the response headers.
Fetch the messages
Parse a Supybot IRC log file.
Retrieve the Supybot archives after the given date
List the filepath of the archives stored in dirpath
Parse a Supybot IRC stream.
Fetch the topics
Parse a topics page stream.
Retrieve the #page summaries of the latest topics.
Retrive the topic with `topic_id` identifier.
Retrieve the post whit `post_id` identifier.
Run an API command.
Parse a Phabricator tasks JSON stream.
Parse a Phabricator users JSON stream.
Retrieve data about PHIDs.
Fetch the contents
Extracts the identifier from a Confluence item.
Get the contents of a repository.
Get the snapshot of a content for the given version.
Retrive the given resource.
Get and parse a WFS capabilities document, returning an         instance of WFSCapabilitiesInfoset
Parse a WFS capabilities document, returning an         instance of WFSCapabilitiesInfoset
Parse the result element of the observation type
helper function to build a WFS 3.0 URL
Consruct fiona schema based on given elements
Get url for describefeaturetype request
use ComplexDataInput with a reference to a document
A URL that can be used to open the page.
Wait for the page to load.
Register the Selenium specific driver implementation.
Root element for the page region.
Wait for the page region to load.
Finds an element on the page.
Finds elements on the page.
Checks whether an element is present.
Checks whether an element is displayed.
Get the list of Movie genres.
Get the list of TV genres.
Get the basic movie information for a specific movie id.
Get the alternative titles for a specific movie id.
Get the cast and crew information for a specific movie id.
Get the external ids for a specific movie id.
Get the images (posters and backdrops) for a specific movie id.
Get the plot keywords for a specific movie id.
Get a list of recommended movies for a movie.
Get the release dates and certification for a specific movie id.
Get the videos (trailers, teasers, clips, etc...) for a         specific movie id.
Get the translations for a specific movie id.
Get the similar movies for a specific movie id.
Get the reviews for a particular movie id.
Get the changes for a specific movie id.
Get the movie credits for a specific person id.
Get the TV credits for a specific person id.
Get the combined (movie and TV) credits for a specific person id.
Get the system wide configuration info.
Get the list of supported certifications for movies.
Get the basic information for an account.
Get the list of movies on an account watchlist.
Generate a valid request token for user based authentication.
Generate a session id for user based authentication.
Generate a guest session id.
Get a list of rated moview for a specific guest session id.
Check to see if a movie id is already added to a list.
Create a new list.
Delete movies from a list that the user created.
Get the content ratings for a TV Series.
Get the videos that have been added to a TV season (trailers, teasers,         etc...).
Get the videos that have been added to a TV episode (teasers, clips,         etc...).
Search for movies by title.
Search for collections by name.
Search for people by name.
Search for companies by name.
Search for keywords by name.
Search the movie, tv show and person collections with a single query.
block : blockId object
Initialize the parse table at install time
Add another row of data from a test suite
Return a list of steps (statements that are not settings or comments)
Return True if the first non-empty cell starts with "#"
Return an instance of SuiteFile, ResourceFile, SuiteFolder
Return a list of all folders, and test suite files (.txt, .robot)
Iterator which can return all test cases and/or keywords
Return 'suite' or 'resource' or None
Regurgitate the tables and rows
Generator which returns all of the statements in all of the settings tables
Generator which returns all of the statements in all of the variables tables
Return a list of statements
Report an error or warning
Parse command line arguments, and run rflint
Print a list of all rules
Import the given rule file
Handle the parsing of command line arguments.
Open a file, read it and return its contents.
Complementary error function.
Creates a path to model files     model_path - string
Calculates the average value of a list of numbers     Returns a float
Gets the median of a list of values     Returns a float/int
Generates features based on an iput p_set         p_set - PredictorSet
Convert to json serializable dictionary.
r"""Construct SurfaceArea from rdkit Mol type.
Create Descriptor instance from json dict.
r"""Replace missing value to "value".
r"""Delete missing value.
r"""Convert Result to dict.
lic_xref : LICS_CRS_REF LINE
lic_comment : LICS_COMMENT TEXT
extr_lic_name : LICS_NAME extr_lic_name_value
extr_lic_text : LICS_TEXT TEXT
extr_lic_id : LICS_ID LINE
prj_uri_art : ART_PRJ_URI error
prj_home_art : ART_PRJ_HOME LINE
prj_home_art : ART_PRJ_HOME UN_KNOWN
prj_name_art : ART_PRJ_NAME LINE
file_dep : FILE_DEP LINE
file_contrib : FILE_CONTRIB LINE
file_notice : FILE_NOTICE TEXT
file_cr_text : FILE_CR_TEXT file_cr_value
file_lics_comment : FILE_LICS_COMMENT TEXT
file_lics_info : FILE_LICS_INFO file_lic_info_value
file_name : FILE_NAME LINE
spdx_id : SPDX_ID LINE
file_comment : FILE_COMMENT TEXT
file_type : FILE_TYPE file_type_value
file_chksum : FILE_CHKSUM CHKSUM
file_conc : FILE_LICS_CONC conc_license
pkg_desc : PKG_DESC TEXT
pkg_summary : PKG_SUM TEXT
pkg_cr_text : PKG_CPY_TEXT pkg_cr_text_value
pkg_cr_text_value : TEXT
pkg_lic_comment : PKG_LICS_COMMENT TEXT
pkg_lic_ff : PKG_LICS_FFILE pkg_lic_ff_value
pkg_src_info : PKG_SRC_INFO TEXT
pkg_chksum : PKG_CHKSUM CHKSUM
pkg_home : PKG_HOME pkg_home_value
pkg_home : PKG_HOME error
pkg_file_name : PKG_FILE_NAME LINE
package_version : PKG_VERSION LINE
package_name : PKG_NAME LINE
review_date : REVIEW_DATE DATE
review_comment : REVIEW_COMMENT TEXT
annotation_date : ANNOTATION_DATE DATE
annotation_comment : ANNOTATION_COMMENT TEXT
annotation_type : ANNOTATION_TYPE LINE
annotation_spdx_id : ANNOTATION_SPDX_ID LINE
doc_comment : DOC_COMMENT TEXT
doc_name : DOC_NAME LINE
ext_doc_ref : EXT_DOC_REF DOC_REF_ID DOC_URI EXT_DOC_REF_CHKSUM
spdx_version : DOC_VERSION LINE
creator_comment : CREATOR_COMMENT TEXT
Write the creation info to out.
Write the fields of a single review to out.
Write the fields of a single annotation to out.
Write a file fields to out.
Write a package fields to out.
Write extracted licenses fields to out.
Return content of a free form text block as a string.
Resets the state to allow building new documents
Sets the `spdx_document_uri` attribute of the `ExternalDocumentRef`         object.
Resets the builder's state to allow building new annotations.
Resets the builder's state in order to build new packages.
Raises OrderError if no package or file defined.
Raises OrderError if no package or file defined.
Resets the builder's state to enable building new files.
Return an ISO-8601 representation of a datetime object.
Return a node representing spdx.checksum.
Return a node representing a conjunction of licenses.
Return a node representing a disjunction of licenses.
Handle single(no conjunction/disjunction) licenses.         Return the created node.
Create a node for spdx.file.
Handle dependencies for a single file.         - doc_file - instance of spdx.file.File.
Return a review node.
Return an annotation node.
Return a list of creator nodes.         Note: Does not add anything to the graph.
Add and return a creation info node to graph
Add and return a creation info node to graph
Write package optional fields.
Add hasFile triples to graph.         Must be called after files have been added.
Add and return the root document node to graph.
Return a License from a `lics` license resource.
Return an a license identifier from an ExtractedLicense or None.
Return extracted text  from an ExtractedLicense or None.
Return the license name from an ExtractedLicense or None
Return a list of cross references.
Parse all file contributors and adds them to the model.
Parses a file and returns a document object.         File, a file like object.
Parse creators, created and comment.
Parses the version, data license, name, SPDX Identifier, namespace,         and comment.
Validate the package fields.         Append user friendly error messages to the `messages` list.
Helper for validate_mandatory_str_field and         validate_optional_str_fields
Raises OrderError if no package or file defined.         Raises CardinalityError if more than one.
Raises OrderError if no package or file defined.         Raises CardinalityError if more than one.
Program message output.
Get a temp filename for atomic download.
Clean up temp files
Return a list of the logger methods: (debug, info, warn, error)
Get the fixed part of the path without wildcard
Add the whole list of API parameters into optparse.
Override original join() with a timeout and handle keyboard interrupt.
Terminate all threads by deleting the queue and forcing the child threads        to quit.
Utility function to add a single task into task queue
Utility function to wait all tasks to complete
Retrieve S3 access keys from the environment, or None if not present.
Retrieve S3 access keys from the command line, or None if not present.
Connect to S3 storage
Walk through local directories from root basedir
Upload a single file or a directory by adding a task into queue
Use the create_bucket API to create a new bucket
Get privileges from metadata of the source in s3, and apply them to target
Print out a series of files
Download a single file or a directory by adding a task into queue
Copy a single file or a directory by adding a task into queue
Delete files on S3
Sync directory to directory.
Calculate MD5 hash code for a local file
Get or calculate MD5 value of the local file.
Ensure all directories are created for a given target file.
Check all file item with given conditions.
Get privileges of a local file
Read local file chunk
Verify the file size of the downloaded file.
Write local file chunk
Copy a single file from source to target using boto S3 library.
Delete a list of files in batch of batch_delete_size (default=1000).
Handler for dsync command.
Search for date information in the string
Search for time information in the string
Search for timedelta information in the string
Take json as dictionary parameter
includes the contents of a file on disk.   takes a filename
pipes the output of a program
unescapes html entities. the opposite of escape.
Add or update the value of an attribute.
Creates a reference to the parent document to allow for partial-tree     validation.
Send data to gateway to turn on / off device
Get data from gateway
Push data broadcasted from gateway to device
Create the Interchange process and connect to it.
Scale in the number of active blocks by specified amount.
Send heartbeat to the incoming task queue
Start the Manager process.
Decorator function to launch a function as a separate process
Collect preliminary run info at the start of the DFK.
Collect the final run information at the time of DFK cleanup.
Send UDP message.
Send message over UDP.
Add a stream log handler.
Start the database manager process
Create the dictionary that will be included in the log.
Handle the actual submission of the task to the executor layer.
Count the number of unresolved futures on which a task depends.
Add task to the dataflow system.
Load a checkpoint file into a lookup table.
Load checkpoints from the checkpoint files into a dictionary.
Load a DataFlowKernel.
Obtains a batch of tasks from the internal pending_task_queue
Start the NeedNameQeueu
Deserialize the buffer and execute the task.
Start the worker processes.
Return the DataManager of the currently loaded DataFlowKernel.
Shutdown the ThreadPool.
Transport the file from the input source to the executor.
Transport the file from the local filesystem to the remote Globus endpoint.
Find the checkpoint from the last run, if one exists.
Revert to using stdlib pickle.
Import any string-keys in a type mapping.
Prepare an object for pickling.
Can the *values* of a dict.
Can the elements of a sequence.
Mute newly added handlers to the root level, right after calling executor.status
Peek at the DFK and the executors specified.
Start the controller.
Specify path to the ipcontroller-engine.json file.
Specify path to the ipcontroller-client.json file.
Terminate the controller process and its child processes.
Create a hash of the task inputs.
Updates the memoization lookup table with the result from a task.
Return byte-size of a memoryview or buffer.
Extract buffers larger than a certain threshold.
Serialize an object into a list of sendable buffers.
Reconstruct an object serialized by serialize_object from data buffers.
Pack up a function, args, and kwargs to be sent over the wire.
Generate submit script and write it to a file.
Get the status of a list of jobs identified by their ids.
Cancels the jobs specified by a list of job ids
Initialize the boto client.
Read the state file, if it exists.
Save information that must persist to a file.
Create a session.
Create and configure VPC
Create and configure a new security group.
Start an instance in the VPC in the first available subnet.
Shut down a list of instances, if provided.
Get states of all instances on EC2 which were started by this file.
Get the status of a list of jobs identified by their ids.
Cancel the jobs specified by a list of job ids.
Scale out the existing resources.
Deserialize the buffer and execute the task.
Add a stream log handler.
Update the resource dictionary with job statuses.
Scales out the number of active workers by 1.
Scale in the number of active blocks by the specified number.
Returns the status of the executor via probing the execution providers.
Shutdown the executor, including all workers and controllers.
Callback from a parent future to update the AppFuture.
Add a callback to the parent to update the state.
Callback from executor future to update the parent.
Execute the bash app type function and return the command line string.
Cancels the resources identified by the job_ids provided by the user.
Listen to the queue for task status messages and handle them.
Shutdown method, to kill the threads and workers.
Return the resolved filepath on the side where it is called from.
Synchronously execute a commandline string on the shell.
When a path has not been specified, make the run directory.
Sends a message to the UDP receiver
Synchronously execute a commandline string on the shell.
Execute asynchronousely without waiting for exitcode
Transport a local file to a directory on a remote machine
Transport file on the remote side to a local directory
Return true if the path refers to an existing directory.
Create a directory on the remote side.
Let the FlowControl system know that there is an event.
Makes the callback and resets the timer.
Makes the callback and resets the timer.
Returns the IP address of the given interface name, e.g. 'eth0'
Create the kubernetes deployment
Compose the launch command and call the scale_out
Create the Interchange process and connect to it.
Listen to the queue for task status messages and handle them.
Scales out the number of blocks by "blocks"
Scale in the number of active blocks by specified amount.
Return status of all blocks.
Shutdown the executor, including all workers and controllers.
Called by RQ when there is a failure in a worker.
Patches the pyramid_debugtoolbar (if installed) to display a link to the related rollbar item.
Reports an exception to Rollbar, using exc_info (from calling sys.exc_info())
Reports an arbitrary string message to Rollbar.
Searches a project for items that match the input criteria.
Creates .rollbar log file for use with rollbar-agent
Returns a dictionary describing the logged-in user using data from `request.
Returns the full payload as a string.
Check whether this letter contains Jongsung
add josa at the end of this word
Returns true if node is inside the name of an except handler.
Recursively returns all atoms in nested lists and tuples.
return True if the node is referencing the "super" builtin function
return true if the function does nothing but raising an exception
Returns True if the given node is an object from the __builtin__ module.
return true if the name is used in function decorator
return the higher parent which is not an AssignName, Tuple or List node
return True if <name> is a method overridden from an ancestor
Returns the specified argument from a function call.
Return true if the given class node is subclass of     exceptions.Exception.
Check if the given exception handler catches     the given error_type.
Detect if the given function node is decorated with a property.
Determine if the `func` node has a decorator with the qualified name `qname`.
Get the unimplemented abstract methods for the given *node*.
Return the ExceptHandler or the TryExcept node in which the node is.
Check if the given node is from a fallback import block.
Return the collections of handlers handling the exception in arguments.
Check if the node is in a TryExcept which handles the given exception.
return true if the given class node should be considered as an abstract     class
Return the inferred value for the given node.
Check if the given function node is a singledispatch function.
Check if the postponed evaluation of annotations is enabled
Split the names of the given module into subparts
return the node where [base.]<name> is imported or None if not found
return a string which represents imports as a tree
write dependencies as a dot (graphviz) file
generate a dependencies graph and add some information about it in the     report's section
Check `node` import or importfrom node position is correct
notify an imported module, used to analyze dependencies
check if the module is deprecated
check if the module has a preferred replacement
check if the import is necessary (i.e. not already done)
return a verbatim layout for displaying dependencies
write dependencies as a dot (graphviz) file
Read config file and return list of options
insert default options to sys.argv
return the visibility from a name: public, protected, private or special
return true if the node should be treated
get callbacks from handler for the visited node
launch the visit starting from the given node
Check the consistency of msgid.
Visit a Call node.
Check that a datetime was infered.         If so, emit boolean-datetime warning.
Check that the mode argument of an open or file call is valid.
Manage message of different type and in the context of path.
set different default options with _default dictionary
true if builtins and not show_builtins
return ancestor nodes of a class node
return associated nodes of a class node
visit a pyreverse.utils.Project node
leave the pyreverse.utils.Project node
visit an astroid.Module node
visit an astroid.Class node
return a class diagram definition for the given klass and its         related klasses
Check if the given owner should be ignored
Try to see if no-member should be emitted for the given owner.
Check if the given node has a parent of the given type.
Check if the given name is used as a variadic argument.
check that the accessed attribute exists
Check that the given uninferable Call node does not         call an actual function.
Detect TypeErrors for unary operands.
Called when a :class:`.astroid.node_classes.Call` node is visited.
Return an iterator on interfaces implemented by the given class node.
return a Project from a list of files or modules
visit a pyreverse.utils.Project node
visit an astroid.Package node
visit an astroid.Module node
visit an astroid.Class node
visit an astroid.Function node
visit an astroid.AssignName node
handle an astroid.assignattr node
visit an astroid.Import node
visit an astroid.ImportFrom node
return true if the module should be added to dependencies
Notify an imported module, used to analyze dependencies
Return true if the give object (maybe an instance or class) implements     the interface.
Register the reporter classes with the linter.
manage message of different type and in the context of path
open a vcg graph
draw an edge from a node to another.
write graph, node or edge attributes
Given a list of format specifiers, returns     the final access path (e.g. a.b.c[0][1]).
Check the new string formatting.
Check attribute and index access in the format         string ("{0.a}" and "{0[a]}").
check for bad escapes in a non-raw string.
display a section as text
Display an evaluation section as a text.
display a table as text
display a verbatim layout as text (so difficult ;)
Register the old ID and symbol for a warning that was renamed.
Register all messages from a checker.
Register a MessageDefinition with consistency in mind.
Check that a symbol is not already used.
Raise an error when a symbol is duplicated.
Raise an error when a msgid is duplicated.
Returns the Message object for this message.
Generates a user-consumable representation of a message.
Display help messages for the given message identifiers
Use sched_affinity if available for virtualized or containerized environments.
make messages type report
look for some options (keys of <search_for>) which have to be processed     before others
Prepare sys.path for running the linter checks.
register a new checker
disable all reporters
process tokens from the current module to search for module/block         level options
get modules and errors from a list of modules and handle errors
set the name of the currently analyzed module and         init statistics for it
return an ast(roid) representation for a module
Check a module from its astroid representation.
close the whole package /module, it's time to make reports !
make the global evaluation report
optik callback for sample config file generation
optik callback for sample config file generation
optik callback for printing some help about a particular message
optik callback for printing available messages
Wrap the text on the given line length.
return the module name and the frame id in the module
Retrieve an option defined by the given *checker* or     by all known option providers.
remove optional quotes (simple or double) from the string
return string as a comment
return the user input's value from a 'compiled' value
format an options section using the INI format
format options using the INI format
insert a child node
format and write the given layout into the stream object
trick to get table content without actually writing it
trick to compute the formatting of children layout before actually         writing it
Set status (enabled/disable) for a given message at a given line
register a report
disable the report of the given id
disable the report of the given id
Get the name of the property that the given node is a setter for.
Get the property node for the given setter node.
Check if a return node returns a value other than None.
inspect the source file to find messages activated or deactivated by id.
inspect the source file to find encoding problem
inspect the source to find fixme problems
Check if the name is a future import from another module.
return extra information to add to the message for unpacking-non-sequence     and unbalanced-tuple-unpacking errors
Detect that the given frames shares a global     scope.
Mark the name as consumed and delete it from         the to_consume dictionary
Return True if the node is in a local class scope, as an assignment.
Check that self/cls don't get assigned
return a list of subpackages for the given directory
append a file to search for similarities
find similarities in the two given linesets
create the index for this set
method called to set an option (registered in the options list)
process a module
Check if a definition signature is equivalent to a call.
Check equality of nodes based on the comparison of their attributes named attr_name.
Check if original and overridden methods arguments have different default values
Determine if the two methods have different parameters
Check if the given attribute *name* is a property     in the given *klass*.
Safely infer the return value of a function.
Set the given node as accessed.
Detect that a class has a consistent mro or duplicate bases.
Detect that a class inherits something which is not         a class or a type.
check method arguments, overriding
Check if the given function node is an useless method override
Check that the given AssignAttr node         is defined in the class slots.
check that accessed members are defined
check the name of first argument, expect:
check that the given class node implements abstract methods from         base classes
check that the __init__ method call super or ancestors'__init__         method
check that the signature of the two given methods match
Check if astroid.Name corresponds to first attribute variable name
Return true if the given statement node raise an exception
Verify that the exception context is properly set.
check for empty except
check use of super
display results encapsulated in the layout tree
Check if a class node is a typing.NamedTuple class
Check if a class definition defines an Enum class.
Check if a class definition defines a Python 3.7+ dataclass
Counts the number of boolean expressions in BoolOp `bool_op` (recursive)
check size of inheritance hierarchy and number of instance attributes
check number of public methods
Go through "if" node `node` and counts its boolean expressions
check the node has any spelling errors
Format the message according to the given template.
Checks if node is len(SOMETHING).
Check if the given token is a trailing comma
Check if the given node is an actual elif
Check if the given if node can be simplified.
Check if an exception of type StopIteration is raised inside a generator
Check if a StopIteration exception is raised by the call to next function
Update and check the number of nested blocks
Get the duplicated types from the underlying isinstance calls.
Check isinstance calls which can be merged together.
Check if there is any chained comparison in the expression.
Returns true if node is 'condition and true_value or false_value' form.
Check that all return statements inside a function are consistent.
Check if the node ends with an explicit return statement.
check if we need graphviz for different output format
check for empty except
write files for <project> according to <diadefs>
write a package diagram
write a class diagram
initialize DotWriter and add options for layout.
get label and shape for classes.
initialize VCGWriter for a UML graph
get label and shape for classes.
return the help string for the given message id
process a module
Extracts the environment PYTHONPATH and appends the current sys.path to     those.
Pylint the given file.
Run pylint from python
calculate percentage of code / doc / comment / empty
return the line type : docstring, comment, code, empty
don't output message of the given id
reenable message of the given id
Get the message symbol of the given message id
return true if the message associated to the given message id is         enabled
Adds a message given by ID or name.
output a full documentation in ReST format
Helper method for print_full_documentation.
Return the length of the indentation on the given token's line.
Return a line with |s for each of the positions in the given lists.
Record the first non-junk token at the start of a line.
Returns the valid offsets for the token at the given position.
Extracts indentation information for a continued indent.
Pushes a new token for continued indentation on the stack.
a new line has been encountered, process it if necessary
Check that there are not unnecessary parens after a keyword.
Check the spacing of a single equals sign.
Check that a binary operator is surrounded by exactly one space.
check the node line number and check it if not yet done
Check for lines containing multiple statements.
check lines have less than a maximum number of characters
return the indent level of the string
Check if the node is being used as an iterator.
Checks if an import node is in the context of a conditional.
Detect when a "bad" built-in is referenced.
Look for indexing exceptions.
return a validated value for an option according to its type
Patch OptionParser.expand_default with custom behaviour
register an options provider
set option on the correct option provider
dispatch values previously read from a configuration file to each         options provider)
Override configuration according to command line parameters
initialize the provider using default values
get the config attribute corresponding to opt
method called to set an option (registered in the options list)
return the dictionary defining an option given its name
Checks if node represents a string with complex formatting specs.
Checks to see if a module uses a non-Python logging module.
Checks calls to logging.log(level, format, *format_args).
Checks that function call is not format_string.format().
return True if the node is inside a kind of for loop
Returns the loop node that holds the break node in arguments.
Returns true if a loop may ends up in a break statement.
Returns a tuple of property classes and names.
Determine the name type whose regex the a function's name should match.
make a report of
return True if the object is a method redefined via decorator.
Check that a Starred expression is used in an assignment target.
Check that a name is both nonlocal and global.
check use of the non-existent ++ and -- operator operator
Check instantiating abstract class with         abc.ABCMeta as metaclass.
Check that any loop with an else clause has a break statement.
check that a node is inside a for or while loop
check for redefinition of a function / method / class name
check for various kind of statements without effect
check whether or not the lambda is suspicious
check the use of an assert statement on a tuple.
check duplicate key in dictionary
check unreachable code
check that the argument to `reversed` is a sequence
check for a name using the type's regexp
check the node has a non empty docstring
Check for expressions like type(x) == Y.
create the subgraphs representing any `if` and `for` statements
parse the body and any `else` block of `if` and `for` statements
create a relation ship
create a diagram object
return all class nodes in the diagram
return a class by its name, raise KeyError if not found
return all module nodes in the diagram
return a module by its name, raise KeyError if not found
add dependencies created by from-imports
Called for function and method definitions (def).
Adds a message on :param:`node` for the missing exception type.
Start with wrong number of clusters.
Start with wrong number of clusters.
Start with wrong number of clusters.
Start with wrong number of clusters.
Start with wrong number of clusters.
Start with wrong number of clusters.
Deploys a new function to AWS Lambda.
Deploys a new function via AWS S3.
Uploads a new function to AWS S3.
Simulates a call to your function.
Copies template files to a given directory.
Tranlate a string of the form "module.function" into a callable     function.
Install all packages listed to the target directory.
Shortcut to insert the `account_id` and `role` into the iam string.
Query STS for a users' account_id
Register and upload a function to AWS Lambda.
Updates the code of an existing Lambda function
Upload a function to AWS S3.
Check whether a function exists or not and return its config
Download the data at a URL, and cache it under the given name.
Download and return a path to a sample from the FFmpeg test suite.
Get distutils-compatible extension extras for the given library.
Update the `dst` with the `src`, extending values where lists.
Print out all the config information we have so far (for debugging).
Spawn a process, and eat the stdio.
Create a C compiler.
Yield all ``.pyx`` and ``.pxd`` files in the given root.
segment the raw text into paragraphs
filter the quoted text out of a message
lookup/assign a unique identify for each word root
fix hyphenation in the word list for a parsed sentence
parse one document to prep for TextRank
generate word pairs for the TextRank graph
construct the TextRank graph from parsed paragraphs
output the graph in Dot file format
render the TextRank graph for visual formats
run the TextRank algorithm
iterate through the noun phrases
create a MinHash digest
return a list (matrix-ish) of the key phrases and their ranks
determine distance for each sentence
iterator for the most significant sentences, up to a specified limit
construct a sentence text, with proper spacing
iterator for JSON-per-line in a file pattern
pretty print a JSON object
Class method that will return a Snapshot object by ID.
Fetch data about tag
Create the tag.
Add the Tag to a Droplet.
Remove the Tag from the Droplet.
Class method that will return a Action object by ID.
Class method that will return a Droplet object by ID.
Customized version of get_data to perform __check_actions_in_data
Perform a droplet action.
Take a snapshot!
Change the kernel to a new one
Create the droplet with object properties.
Returns a specific Action by its ID.
Get a list of kernels available
Class method that will return a Domain object by ID.
Create new doamin
Returns a list of Record objects
Class method that will return an Account object.
Class method that will return a FloatingIP object by its IP.
Load the FloatingIP object from DigitalOcean.
Creates a FloatingIP and assigns it to a Droplet.
Creates a FloatingIP in a region without assigning             it to a specific Droplet.
Assign a FloatingIP to a Droplet.
Class method that will return a Firewall object by ID.
Add tags to this Firewall.
Remove tags from this Firewall.
Class method that will return a SSHKey object by ID.
Load the SSHKey object from DigitalOcean.
Create the SSH Key
Edit the SSH Key
Return a Droplet by its ID.
This function returns a list of Size object.
This function returns a list of Image object.
Return a Image by its ID/Slug.
Return a Domain by its domain_name
This function returns a list of SSHKey object.
Return a SSHKey object by its ID.
This method returns a list of all tags.
This function returns a list of FloatingIP objects.
Returns a of FloatingIP object by its IP address.
Returns a list of Load Balancer objects.
Returns a Load Balancer object by its ID.
Returns a Certificate object by its ID.
Return a Snapshot by its ID.
This method returns a list of all Snapshots.
This method returns a list of all Snapshots based on Droplets.
This method returns a list of all Snapshots based on volumes.
Returns a Volume object by its ID.
Return a Firewall by its ID.
Class method that will return a LoadBalancer object by its ID.
Assign a LoadBalancer to a Droplet.
Unassign a LoadBalancer.
Customized version of get_data to directly get the data without             using the authentication method.
Class method that will return a Record object by ID and the domain.
Creates a new record for a domain.
Destroy the record
Save existing record
Class method that will return an Volume object by ID.
Attach a Volume to a Droplet.
Detach a Volume to a Droplet.
Create a snapshot of the volume.
Retrieve the list of snapshots that have been created from a volume.
Class method that will return a Certificate object by its ID.
Load the Certificate object from DigitalOcean.
Create the Certificate
Class method that will return an Image object by ID or slug.
Transfer the image
Rename an image
Convert reduce_sum layer.
Convert elementwise addition.
Convert elementwise multiplication.
Convert elementwise multiplication.
Convert elementwise subtraction.
Convert matmul layer.
Convert constant layer.
Convert reshape layer.
Convert squeeze operation.
Convert unsqueeze operation.
Convert shape operation.
Convert convert_adaptive_max_pool2d layer.
Convert batch normalization layer.
Convert instance normalization layer.
Convert relu layer.
Convert leaky relu layer.
Convert sigmoid layer.
Convert softmax layer.
Convert tanh layer.
Convert hardtanh layer.
Convert selu layer.
Convert upsample_bilinear2d layer.
Convert nearest upsampling layer.
Returns the User object
returns a Token object with the given access token or refresh token
Creates a Token object and removes all expired tokens that belong         to the user
Get the Grant object with the given client ID and code
Parse the response returned by :meth:`OAuthRemoteApp.http_request`.
Make request parameters right.
Sends a request to the remote server with OAuth tokens attached.
Returns a redirect response to the remote authorization URL with         the signed callback given.
The lazy-created OAuth session with the return value of         :meth:`tokengetter`.
Creates a client with specific access token pair.
Protect resource with specified scopes.
Get request token secret.
Get access token secret.
Default realms of the client.
Redirect uri for this request token.
Validates request token is available for client.
Validates access token is available for client.
Validate the timestamp and nonce is used or not.
Validate if the redirect_uri is allowed by the client.
Check if the token has permission on those realms.
Verify if the request token is existed.
Verify if the realms match the requested realms.
Save access token to database.
Save request token to database.
Save verifier to database.
Verify current request, get the oauth data.
Protect resource with specified scopes.
Return client credentials based on the current request.
Determine if client authentication is required for current request.
Authenticate itself in other means.
Authenticate a non-confidential client.
Ensure client is authorized to redirect to the redirect_uri.
Get the list of scopes associated with the refresh token.
Default redirect_uri for the given client.
Default scopes for the given client.
Invalidate an authorization code after use.
Persist the authorization code.
Persist the Bearer token.
Validate access token.
Ensure the grant code is valid.
Ensure the client is authorized to use the grant type requested.
Ensure client is authorized to redirect to the redirect_uri.
Ensure the token is valid and belongs to the client
Ensure client is authorized to use the response type requested.
Ensure the client is authorized access to requested scopes.
Ensure the username and password is valid.
Update some required parameters for OAuth2.0 API calls
Extract request params.
Make sure text is bytes type.
Decode base64 string.
Create response class for Flask.
Returns a :class:`SimpleCache` instance
Returns a :class:`MemcachedCache` instance
Returns a :class:`RedisCache` instance
Returns a :class:`FileSystemCache` instance
Set frequency (in Hz) of PWM output on specified pin.
Stop PWM output on specified pin.
Re-enable the FTDI drivers for the current platform.
Close the FTDI device.  Will be automatically called when the program ends.
Helper function to call write_data on the provided FTDI device and         verify it succeeds.
Enable MPSSE mode on the FTDI device.
Return command to update the MPSSE GPIO state to the current direction         and level.
Put I2C lines into idle state.
End I2C transaction and get response bytes, including ACKs.
Send I2C start signal. Must be called within a transaction start/end.
Send I2C stop signal. Must be called within a transaction start/end.
Write the specified number of bytes to the chip.
Write an 8-bit value on the bus (without register).
Write a 16-bit value to the specified register.
Write bytes to the specified register.
Read an 8-bit value on the bus (without register).
Read a signed byte from the specified register.
Write an 8-bit value on the bus (without register).
Write an 8-bit value to the specified register.
Write a 16-bit value to the specified register.
Write bytes to the specified register.
Read an 8-bit value on the bus (without register).
Read an unsigned byte from the specified register.
Call the method repeatedly such that it will raise an exception.
Call the method repeatedly such that it will return a PKey object.
Call the function with an encrypted PEM and a passphrase callback.
Create a CRL object with 100 Revoked objects, then call the         get_revoked method repeatedly.
Repeatedly create an EC_KEY* from an :py:obj:`_EllipticCurve`.  The         structure should be automatically garbage collected.
Create a public/private key pair.
Create a certificate request.
Generate a certificate given a certificate request.
Check to see if the default cert dir/file environment vars are present.
Load a certificate chain from a file.
Load a certificate from a file
Load a certificate from a X509 object
Load a private key from a file
Load a private key from a PKey object
Load parameters for Ephemeral Diffie-Hellman
Set the list of ciphers to be used in this context.
Set the list of preferred client certificate signers for this server         context.
Add the CA certificate to the list of preferred signers for this         context.
Specify a callback function to be called when clients specify a server         name.
Enable support for negotiating SRTP keying material.
Switch this connection to a new session context.
Set the value of the servername extension to send in the client hello.
Receive data on the connection.
Renegotiate the session.
Send the shutdown message to the Connection.
Retrieve the list of ciphers used by the Connection object.
Set the shutdown state of the Connection.
Retrieve the random value used with the server hello message.
Retrieve the random value used with the client hello message.
Retrieve the value of the master key for this session.
Obtain keying material for application use.
Retrieve the local certificate (if any)
Retrieve the other side's certificate (if any)
Retrieve the other side's certificate (if any)
Set the session to be used when the TLS/SSL connection is established.
Helper to implement :meth:`get_finished` and         :meth:`get_peer_finished`.
Obtain the name of the currently used cipher.
Obtain the number of secret bits of the currently used cipher.
Obtain the protocol version of the currently used cipher.
Retrieve the protocol version of the current connection.
Get the protocol that was negotiated by NPN.
Get the protocol that was negotiated by ALPN.
Copy the contents of an OpenSSL BIO object into a Python byte string.
The the time value of an ASN1 time object.
Retrieve the time value of an ASN1 time object.
Return a single curve object selected by name.
Load a certificate (X509) from the string *buffer* encoded with the     type *type*.
Dump the certificate *cert* into a buffer string encoded with the type     *type*.
Dump a public key to a buffer.
Load a public key from a buffer.
Load a private key (PKey) from the string *buffer* encoded with the type     *type*.
Dump the certificate request *req* into a buffer string encoded with the     type *type*.
Load a certificate request (X509Req) from the string *buffer* encoded with     the type *type*.
Sign a data string using the given key and message digest.
Verify the signature for a data string.
Dump a certificate revocation list to a buffer.
Load pkcs7 data from the string *buffer* encoded with the type     *type*.
Export as a ``cryptography`` key.
Construct based on a ``cryptography`` *crypto_key*.
Generate a key pair of the given type, with the given number of bits.
Check the consistency of an RSA private key.
Get, cache, and return the curves supported by OpenSSL.
Instantiate a new :py:class:`_EllipticCurve` associated with the given         OpenSSL NID.
Create a new OpenSSL EC_KEY structure initialized to use this curve.
Returns the components of this name, as a sequence of 2-tuples.
Returns the short type name of this X.509 extension.
Returns the data of the X509 extension, encoded as ASN.1.
Export as a ``cryptography`` certificate signing request.
Construct based on a ``cryptography`` *crypto_req*.
Set the public key of the certificate signing request.
Get the public key of the certificate signing request.
Set the version subfield (RFC 2459, section 4.1.2.1) of the certificate         request.
Export as a ``cryptography`` certificate.
Construct based on a ``cryptography`` *crypto_cert*.
Get the public key of the certificate.
Set the public key of the certificate.
Sign the certificate with this key and digest type.
Return the signature algorithm used in the certificate.
Return the digest of the X509 object.
Set the serial number of the certificate.
Return the serial number of this certificate.
Adjust the time stamp on which the certificate stops being valid.
Adjust the timestamp on which the certificate starts being valid.
Check whether the certificate has expired.
Return the issuer of this certificate.
Set the issuer of this certificate.
Return the subject of this certificate.
Set the subject of this certificate.
Add extensions to the certificate.
Get a specific extension of the certificate by index.
Set the time against which the certificates are verified.
Convert an OpenSSL native context error failure into a Python         exception.
Verify a certificate in a context.
Set the serial number.
Get the serial number.
Set the reason of this revocation.
Get the reason of this revocation.
Set the revocation timestamp.
Export as a ``cryptography`` CRL.
Construct based on a ``cryptography`` *crypto_crl*.
Get the CRL's issuer.
Export the CRL as a string.
Set the certificate in the PKCS #12 structure.
Set the certificate portion of the PKCS #12 structure.
Replace or set the CA certificates within the PKCS12 object.
Set the friendly name in the PKCS #12 structure.
Dump a PKCS12 object as a string.
Sign the certificate request with this key and digest type.
Verifies a signature on a certificate request.
Generate a base64 encoded representation of this SPKI object.
Get the public key of this certificate.
Set the public key of the certificate
Convert an OpenSSL library failure into a Python exception.
Mix bytes from *string* into the PRNG state.
Returns a generator of "Path"s
Create a .trashinfo file in the $trash/info directory.         returns the created TrashInfoFile.
Add all filenames in the given list to the parser's set.
Add the given lxml representation of the BPMN file to the parser's set.
Assert that there is exactly one node in the give list, and return it.
Serializes str, Attrib, or PathAttrib objects.
Serializes a list, where the values are objects of type         str, Attrib, or PathAttrib.
Serializes common attributes of :meth:`SpiffWorkflow.specs.TaskSpec`.
Parse the event definition node, and return an instance of Event
Parse the messageEventDefinition node and return an instance of         MessageEventDefinition
Parse the timerEventDefinition node and return an instance of         TimerEventDefinition
Returns the number of connected subscribers.
Returns True if the event is connected to the given function.
Returns a list of the names of outgoing sequences. Some may be None.
Connects a taskspec that is executed if the condition DOES match.
Cancels all open tasks in the workflow.
Returns the task with the given id.
Returns a list of Task objects with the given state.
Runs the task with the given id.
:param s_state: the state of the workflow as returned by         serialize_workflow
Create a new workflow instance from the given spec and arguments.
Adds a new child and assigns the given TaskSpec to it.
Assigns a new thread id to the task.
Returns True if parent is in the list of ancestors, returns False         otherwise.
Returns a textual representation of this Task's state.
Inherits the data from the parent.
Returns the subtree as a string for debugging.
Defines the given data field(s) using the given name/value pairs.
Writes data to the zip file and adds it to the manifest dictionary
Write the manifest content to the zip file. It must be a predictable         order.
Writes the metadata.ini file to the archive.
Override in subclass if required.
Override in subclass if required.
Override in subclass if required.
Override in subclass if required.
Override in subclass if required.
Reads the "pre-assign" or "post-assign" tag from the given node.
Reads a "data" or "define" tag from the given node.
Reads a list of assignments from the given node.
Reads the logical tag from the given node, returns a Condition object.
Reads the conditional statement from the given node.
Reads the workflow from the given XML structure and returns a         WorkflowSpec instance.
Called by a task spec when it was added into the workflow.
Returns a list of User Tasks that are READY for user action
Deserializes the trigger using the provided serializer.
Execute the script, within the context of the specified task
Recursive merge two dicts (vs .update which overwrites the hashes at the     root level)
Return extra config options to be passed to the TrelloIssue class
Returns a list of dicts representing issues from a remote service.
Returns an iterator for the comments on a certain card.
Grab all the issues
Build the full url to the API endpoint
Run a generic issue/PR query
Grab all the issues
Return a main config value, or default if it does not exist.
Validate generic options for a particular target
Return true if the issue in question should be included
Make a RST-compatible table
Retrieve the sensitive password for a service by:
Retrieve password from the given command
Accepts both integers and empty values.
Default longdescs/flags case to [] since they may not be present.
Pull down tasks from forges and add them to your taskwarrior tasks.
Perform a request to the fully qualified url and return json.
Merge array field from the remote_issue into local_task
Returns a list of UDAs defined by given targets
Try to find the container ID with the specified name
Update the current state file with the specified contents
Try to load a blockade state file in the current directory
Generate a new blockade ID based on the CWD
Make sure the state directory exists
Try to delete the state.yml file and the folder .blockade
Convert blockade ID and container information into         a state dictionary object.
Write the given state information into a file
Insert a new rule in the chain
Start the timer waiting for pain
Start the blockade event
Stop chaos when there is no current blockade operation
End the blockade event and return to a steady state
Stop chaos while there is a blockade event in progress
Delete all state associated with the chaos session
Sort a dictionary or list of containers into dependency order
Convert a dictionary of configuration values         into a sequence of BlockadeContainerConfig instances
Instantiate a BlockadeConfig instance based on         a given dictionary of configuration values
Start the containers and link them together
Print status of containers and networks
Kill some or all containers
Partition the network between containers
Fetch the logs of a container
Start the Blockade REST API
Add one or more existing Docker containers to a Blockade group
Get the event log for a given blockade
Wraps scalars or string types as a list, or returns the iterable instance.
fetch many dates worth of minute-bars for a given symbol
fetch many dates worth of minute-bars for a given symbol
Returns an array of quotes for the top 10 symbols in a specified list.
Returns an array of quotes for the top 10 symbols in a specified list.
Look ahead of the iterable by some number of values with advancing         past them.
Look ahead of the iterable by some number of values with advancing         past them.
calculate pvalues for all categories in the graph
benjamini hocheberg fdr correction. inspired by statsmodels
Visualize the dataframe.
Visualize enrichr results.
Visualize enrichr results.
The Main function/pipeline for GSEApy.
Prepare argparser object. New options will be added in this function first.
Add main function 'gsea' argument parsers.
The main function to rank an expression table.
Compute nominal p-value.
Extract class(phenotype) name from .cls file.
Parse results.edb file stored under **edb** file folder.
Parse gene_sets.gmt(gene set database) file or download from enrichr server.
Get available marts and their names.
create temp directory.
set cpu numbers to be used
download enrichr libraries.
reformat gsea results, and save to txt
pre-processed the data frame.new filtering methods will be implement here.
GSEA prerank workflow
create temp directory.
parse gene_sets input file type
parse gene list
send gene list to enrichr server
Select Enrichr organism from below:
run enrichr for one sample gene list but multi-libraries
Perform the App's actions as configured.
Initializes client id and client secret based on the settings.
Helper method to create a redirect response with URL params.
Returns True if there are valid credentials for the current user         and required scopes.
Retrieve stored credential.
Write a credentials to the SQLAlchemy datastore.
Delete credentials from the SQLAlchemy datastore.
Utility function that creates JSON repr. of a credentials object.
Factory constructor from JSON keyfile by name.
Factory constructor from parsed JSON keyfile.
Factory constructor from JSON keyfile.
Factory constructor from JSON keyfile.
Factory constructor from JSON keyfile.
Generate the assertion that will be used in the request.
Deserialize a JSON-serialized instance.
Create a signed jwt.
Determine if the current environment is Compute Engine.
Detects if the code is running in the App Engine environment.
Detect if the code is running in the Compute Engine environment.
Saves a file with read-write permissions on for the owner.
Save the provided GoogleCredentials to the well known file.
Build the Application Default Credentials from file.
Verifies a signed JWT id_token.
Extract the JSON payload from a JWT.
Exchanges an authorization code for an OAuth2Credentials object.
Returns OAuth2Credentials from a clientsecrets file and an auth code.
Configures redirect URI parameters for OAuth2WebServerFlow.
Create a Flow from a clientsecrets file.
Utility function that creates JSON repr. of a Credentials object.
Utility class method to instantiate a Credentials subclass from JSON.
Write a credential.
Verify that the credentials are authorized for the given scopes.
Instantiate a Credentials object from a JSON description of it.
True if the credential is expired or invalid.
Return the access token and its expiration information.
Return the number of seconds until this token expires.
Generate the body that will be used in the refresh request.
Refresh the access_token using the refresh_token.
Create a Credentials object by reading information from a file.
Create a DeviceFlowInfo from a server response.
Returns a URI to redirect to the provider.
Returns a user code and the verification URL where to enter it
Exchanges a code for OAuth2Credentials.
Verifies a message against a signature.
Construct an RsaVerifier instance from a string.
Construct an RsaSigner instance from a string.
Creates the an empty file if it does not already exist.
Load credentials from the given file handle.
Writes credentials to a file.
A helper method to get or create a backend with thread locking.
(Re-)loads the credentials from the file.
Retrieves the current credentials from the store.
Updates a URI with new query parameters.
Adds a query parameter to a url.
Adds a user-agent to the headers.
Prepares an HTTP object's request method for auth.
Prepares an HTTP object's request method for JWT access.
Make an HTTP request with an HTTP object and arguments.
Initialize this extension for the given app.
The credentials for the current user or None if unavailable.
Returns True if there are valid credentials for the current user.
Returns the user's email address or None if there are no credentials.
Fetch a resource from the metadata server.
Fetch an oauth token for the
Return the secret key for use for XSRF protection.
Composes the value for the 'state' parameter.
Parse the value of the 'state' parameter.
Creates an OAuth2Decorator populated from a clientsecrets file.
Get the email for the current service account.
Determine whether the model of the instance is an NDB model.
Retrieve entity from datastore.
Delete entity from datastore.
Retrieve Credential from datastore.
Write a Credentials to the datastore.
Delete Credential from datastore.
Create the Flow object.
RequestHandler for the OAuth 2.0 redirect callback.
Generates a URL-safe token for the given user, action, time tuple.
Validates that the given token authorizes the user for the action.
Communicate with the Developer Shell server socket.
Retrieve Credential from file.
Write Credentials to file.
Convert the contents of a PKCS#12 key to PEM using pyOpenSSL.
Verifies a message against a signature.
Construct a Verified instance from a string.
Construct a Signer instance from a string.
Verifies a message against a signature.
Construct a Verified instance from a string.
Construct a Signer instance from a string.
Core code for a command-line application.
Handle a GET request.
Write a Credentials to the Django datastore.
Delete Credentials from the datastore.
Retrieve the credentials from the dictionary, if they exist.
Save the credentials to the dictionary.
Validates a value as a proper Flow object.
View that handles the user's return from OAuth2 provider.
View to start the OAuth2 Authorization flow.
Retrieve Credential from file.
Create an empty file if necessary.
Write Credentials to file.
Convert the field value from the provided model to a string.
Make a signed JWT.
Verifies signed content using a list of certificates.
Checks audience field from a JWT payload.
Verify a JWT against public certs.
Create a cube primitive
create an icosphere mesh
Create a torus mesh
Create a box with user defined number of segments in each direction.
Create a cylinder with user defined number of segments
Create a cylinder with user defined number of segments
Read color_names.txt and find the red, green, and blue values         for a named color.
Check if a variable is a list and is the correct length.
Make a variable a list if it is not already
Write filter to FilterScript object or filename
Apply LS3 Subdivision Surface algorithm using Loop's weights.
Transfer Vertex Attributes to Texture (between 2 meshes)
Create a new mesh that is a resampled version of the current one.
Turn a model into a surface with Voronoi style holes in it
Select all the faces of the current mesh
Grow (dilate, expand) the current set of selected faces
Shrink (erode, reduce) the current set of selected faces
Select all the faces and vertexes within the specified vertex quality         range.
Select all vertices within a cylindrical radius
Select all vertices within a spherical radius
Flatten all or only the visible layers into a single new mesh.
Change the current layer by specifying the new layer number.
Duplicate a layer.
Split current layer into many layers, one for each part (connected         component)
Delete all layers below the specified one.
Run meshlabserver in a subprocess.
Create new mlx script and write opening tags.
Add new mesh layer to the end of the stack
Save filter script to an mlx file
Run main script
Create a new layer populated with a point sampling of the current mesh.
Compute the polyline representing a planar section (a slice) of a mesh.
Compute a set of geometric measures of a mesh/pointcloud.
Compute a set of topological measures over a mesh
Parse the ml_log file generated by the measure_geometry function.
Parse the ml_log file generated by the measure_topology function.
Parse the ml_log file generated by the hausdorff_distance function.
Rainbow colored voronoi quatrefoil (3,4) torus knot
Measure a dimension of a mesh
Returns count difference in two collections of Python objects.
Checks memory usage when 'line' event occur.
Replaces sys.argv with proper args to pass to script.
Reformats call tree for the UI.
Runs cProfile on a package.
Runs cProfile on a module.
Runs cProfile on a function.
Sends HTTP response code, message and headers.
Main function of the module.
Filters code from standard library from self.lines.
Runs profilers on a function.
Get information about a specific template.
Update the name, HTML, or folder_id of an existing template.
Delete a specific template.
Function that verifies that the string passed is a valid url.
Create a new list in your MailChimp account.
Update the settings for a specific list.
Add a new line item to an existing order.
Get links to all other resources available in the API.
Retrieve OAuth2-based credentials to associate API calls with your         application.
Get information about a specific authorized application
Get information about a specific folder used to organize campaigns.
Get information about an individual Automation workflow email.
Upload a new image or file to the File Manager.
Get information about a specific file in the File Manager.
Update a file in the File Manager.
Remove a specific file from the File Manager.
Build path with endpoint and args
Create a new webhook for a specific list.
Get information about a specific webhook.
Update the settings for an existing webhook.
Delete a specific webhook in a list.
returns the first 10 segments for a specific list.
returns the specified list segment.
updates an existing list segment.
adds a new segment to the list.
Handle authenticated POST requests
Get the metadata returned after authentication
Set the content for a campaign.
Get details about an individual conversation.
Get information about members who have unsubscribed from a specific         campaign.
Get information about an Automation email queue.
Get information about a specific subscriber in an Automation email         queue.
Pause an RSS-Driven campaign.
Resume an RSS-Driven campaign.
Add a new customer to a store.
Get information about a specific customer.
Add or update a customer.
Add or update a product variant.
Add feedback on a specific campaign.
Update a specific feedback message for a campaign.
Add a new merge field for a specific list.
Get information about a specific merge field in a list.
Get information about a specific batch webhook.
Update a store.
Add a new image to the product.
Get information about a specific product image.
Post a new message to a conversation.
Add a new order to a store.
Add a new note for a specific subscriber.
Update tags for a specific subscriber.
Update a specific segment in a list.
Update a specific folder used to organize templates.
Add a new member to the list.
Update information for a specific list member.
Add or update a list member.
Delete a member from a list.
Delete permanently a member from a list.
Pause an automated email.
Start an automated email.
Create a new MailChimp campaign.
Update some or all of the settings for a specific campaign.
Get a summary of batch requests that have been made.
Get the status of a batch request.
Fully describes an ELB.
Retrieve key from Cache.
Insert item into cache.
Get access details in cache.
Get general stats for the cache.
Orchestrates calls to build a Security Group in the following format:
Returns a list of Users represented as dictionary below:
User function to get the correct client.
Google build client helper.
service_type: not currently used.
Call decorated function for each item in project list.
Helper to get creds out of kwargs.
Manipulate connection keywords.          Modifieds keywords based on connection type.
General list function for the GCE service.
Retrieve detailed cache information.
Get default User Agent String.
Fully describes an ALB (ELBv2).
List buckets for a project.
List objects in bucket.
Retrieve the currently active (i.e. 'default') policy version document for a policy.
Returns a List of Roles represented as the dictionary below:
Orchestrates calls to build a Glacier Vault in the following format:
Get a list of the managed policy names that are attached to the group.
Gets a list of the usernames that are a part of this group.
Fetch the base Managed Policy.
send a delete request         XXX [more here]
Harvest/add a granule into an existing imagemosaic
Deletes a granule of an existing imagemosaic
List granules of an imagemosaic
Publish a featuretype from data in an existing store
Extract a metadata link tuple from an xml node
Extract metadata Dimension Info from an xml node
Extract metadata Dynamic Default Values from an xml node
Extract metadata JDBC Virtual Tables from an xml node
Extract metadata entries from an xml node
if set, get the value of resolution in milliseconds
if set, get the value of resolution as "<n> <period>s", for example: "8 seconds"
Read resource information into self._cache, for cached access.
Return list of (direct) collection member names (UTF-8 byte strings).
Open content as a stream for reading.
Return list of supported property names in Clark Notation.
Return the value of a property.
Set or remove property value.
Return (tableName, primaryKey) tuple for a request path.
Convert any non-DAVError exception to HTTP_INTERNAL_ERROR.
Change semantic of MOVE to change resource tags.
Return list of supported property names in Clark Notation.
Return the value of a property.
Set or remove property value.
Return _VirtualResource object for path.
Add a provider to the provider_map routing table.
Get the registered DAVProvider for a given path.
Read a chunk of bytes from queue.
Put a chunk of bytes (or an iterable) to the queue.
Read bytes from an iterator.
Handle an error gracefully.  May be overridden.
Handle one request at a time until stop_serve_forever().
Return list of supported property names in Clark Notation.
Return the value of a property.
Create and return an empty (length-0) resource as member of self.
Create a new collection as member of self.
Open content as a stream for reading.
Open content as a stream for writing.
Remove this resource (recursive).
Handle a COPY request natively.
Read log entries into a list of dictionaries.
Return a dictionary containing all files under source control.
Return HgResource object for path.
Convert path to a URL that can be passed to XML responses.
Return a list of direct members (_DAVResource or derived objects).
Return a list _DAVResource objects of a collection (children,         grand-children, ...).
Return list of supported property names in Clark Notation.
Return properties as list of 2-tuples (name, value).
Return the value of a property.
Set a property value or remove a property.
Remove all associated dead properties.
Return True, if URI is locked.
Return a _DAVResource object for the path (None, if not found).
Set application location for this resource provider.
Convert a refUrl to a path, by stripping the share prefix.
Convert XML string into etree.Element.
Convert path to absolute if not None.
Parse command line options into a dictionary.
Read configuration file options into a dictionary.
Setup configuration dictionary from default, command line and configuration file.
Run WsgiDAV using paste.httpserver, if Paste is installed.
Run WsgiDAV using gevent if gevent is installed.
Run WsgiDAV using cherrypy.wsgiserver if CherryPy is installed.
Run WsgiDAV using cheroot.server if Cheroot is installed.
Run WsgiDAV using flup.server.fcgi if Flup is installed.
Run WsgiDAV using wsgiref.simple_server, on Python 2.5+.
Run WsgiDAV using ext_wsgiutils_server from the wsgidav package.
Send WSGI response (single or multistatus).
TODO: does not yet support If and If HTTP Conditions
Handle PROPPATCH request to set or remove a property.
Handle MKCOL request to create a new collection.
Get the data from a chunked transfer.
Get the data from a non-chunked transfer.
Return properties document for path.
Return the matching user_map entry (falling back to default '*' if any).
Resolve a relative url to the appropriate realm name.
Return a lock dictionary for a token.
Create a direct lock for a resource path.
Modify an existing lock's timeout.
Return a list of direct locks for <path>.
Write persistent dictionary to disc.
Delete all entries.
Open content as a stream for writing.
Set last modified time for destPath to timeStamp on epoch-format
Return list of direct collection member names (utf-8 encoded).
Create an empty (length-0) resource.
Create a new collection as member of self.
Acquire lock and return lock_dict.
Check for permissions and acquire a lock.
Return lock_dict, or None, if not found or invalid.
Return a list of valid lockDicts, that protect <path> directly or indirectly.
Check, if url (or any of it's parents) is locked by lock_token.
Write persistent dictionary to disc.
Return a standard time tuple (see time and calendar), for a date/time string.
Create a module logger, that can be en/disabled by configuration.
Import a class from a module string, e.g. ``my.module.ClassName``.
Import a class and instantiate with custom args.
Return (namespace, localname) tuple for a property name in Clark Notation.
Convert a binary string to Unicode using UTF-8 (fallback to ISO-8859-1).
Return a string as hex dump.
Convert bytes into human-readable representation.
Read 1 byte from wsgi.input, if this has not been done yet.
Append segments to URI.
Return True, if childUri is a child of parentUri.
URL reconstruction according to PEP 333.
Read request body XML into an etree.Element.
Start a WSGI response for a DAVError or status code.
Append <response> element to <multistatus> element.
Return a strong Entity Tag for a (file)path.
Handle 'If-...:' headers (but not 'If:' header).
Parse HTTP_IF header into a dictionary and lists, and cache the result.
Use the mimetypes module to lookup the type for an extension.
Sort features by name
Learn the vocabulary dictionary and return term-document matrix.
Transform documents to document-term matrix.
Convert to equivalent StandardScaler
Fit the model according to the given training data.
Compute the score of an estimator on a given test set.
Compute k-means clustering.
Fit the model according to the given training data.
Checks if the blocks in the RDD matches the expected types.
Learn a list of feature name -> indices mappings.
Learn empirical variances from X.
Fit LSI model to X and perform dimensionality reduction on X.
Perform dimensionality reduction on X.
Pack rdd with a specific collection constructor.
Execute the blocking process on the given rdd.
Returns the shape of the data.
Returns the data as numpy.array from each partition.
Execute the blocking process on the given rdd.
Execute a transformation on a column or columns. Returns the modified         DictRDD.
Add objects to the group.
Remove objects from the group.
rebuild the _dict index
Get a list of members using several different ways of indexing
Replace an object by another with the same id.
append object to end
adds elements with id's not already in the model
extend list by appending elements from the iterable
Determine the position in the list
insert object before index
remove and return item at index (default last).
Return the model as a YAML document.
Write the cobra model to a file in YAML format.
Load a cobra model from a file in YAML format.
Print a summary of the production and consumption fluxes.
Print a summary of the input and output fluxes of the model.
Coefficient for the reactions in a linear objective.
Check whether a sympy expression references the correct variables.
Set the model objective.
Give a string representation for an optlang interface.
Select a solver for a given optimization problem.
Add variables and constraints to a Model's solver object.
Remove variables and constraints from a Model's solver object.
Add the absolute value of an expression to the model.
Perform standard checks on a solver's status.
Add a new objective and variables to ensure a feasible solution.
Successively optimize separate targets in a specific order.
Create a new numpy array that resides in shared memory.
Sample a new feasible point from the point `x` in direction `delta`.
Build the matrix representation of the sampling problem.
Generate the warmup points for the sampler.
Reproject a point into the feasibility region.
Find an approximately random point in the flux cone.
Identify rdeundant rows in a matrix that can be removed.
Create a batch generator.
Validate a set of samples for equality and inequality feasibility.
Remove metabolites that are not involved in any reactions and     returns pruned model
Remove reactions with no assigned metabolites, returns pruned model
Undoes the effects of a call to delete_model_genes in place.
identify reactions which will be disabled when the genes are knocked out
remove genes entirely from the model
Perform gapfilling on a model.
Extend gapfilling model.
Update the coefficients for the indicator variables in the objective.
Update gapfilling model with switches and the indicator objective.
Find the external compartment in the model.
Check whether a reaction is an exchange reaction.
Find specific boundary reactions.
Sample a single chain for OptGPSampler.
Generate a set of samples.
evaluate compiled ast of gene_reaction_rule with knockouts
parse gpr into AST
Compute a single solution based on (linear) MOMA.
convert possible types to str, float, and bool
update new_dict with optional attributes from cobra_object
Convert model to a dict.
Build a model from a dict.
extract the compartment from the id string
translate an array x into a MATLAB cell array
Load a cobra model stored as a .mat file
Save the cobra model as a .mat file.
create a dict mapping model attributes to arrays
create a model from the COBRA toolbox struct
send the model to a MATLAB workspace through pymatbridge
Search for a context manager
Generate a solution representation of the current solver state.
Return all metabolites' compartments.
Get or set the constraints on the model exchanges.
Remove a list of metabolites from the the object.
Add reactions to the model.
Remove reactions from the model.
Add groups to the model.
Remove groups from the model.
Returns a list of groups that an element (reaction, metabolite, gene)         is associated with.
Optimize model without creating a solution object.
Optimize the model using flux balance analysis.
Update all indexes and pointers in a model
Print a summary of the input and output fluxes of the model.
Merge two models to create a model with the reactions from both         models.
make a single string id SBML compliant
renames genes in a model from the rename_dict
Return the model as a JSON document.
Write the cobra model to a file in JSON format.
Load a cobra model from a file in JSON format.
Add a linear version of a minimal medium to the model solver.
Add a mixed-integer version of a minimal medium to the model.
Convert a solution to medium.
Find the minimal growth medium for the model.
Initialize a global model object for multiprocessing.
Determine the minimum and maximum possible flux value for each reaction.
Find reactions that cannot carry any flux.
Return a set of essential genes.
Return a set of essential reactions.
Calculate the mol mass of the compound
Insert a <!--more--> tag for larger release notes.
Identify the kind of release by comparing to existing ones.
Identify the release type and create a new target file with TOML header.
Provide a common interface for single or multiple knockouts.
Knock out each reaction from a given list.
Knock out each gene from a given list.
Knock out each reaction pair from the combinations of two given lists.
Knock out each gene pair from the combination of two given lists.
Generate the id of reverse_variable from the reaction's id.
The flux value in the most recent solution.
Display gene_reaction_rule with names intead.
Removes the reaction from a model.
Removes the reaction from a model.
Return the stoichiometric coefficient of a metabolite.
Subtract metabolites from a reaction.
Generate a human readable reaction string
lists compartments the metabolites are in
Associates a cobra.Gene object with a cobra.Reaction.
Dissociates a cobra.Gene object with a cobra.Reaction.
Clips a prefix from the beginning of a string if it exists.
Get SBMLDocument from given filename.
Writes cobra model to filename.
Convert Cobra model to SBMLDocument.
Create parameter in SBML model.
Get required attribute from SBase.
Set SBase notes based on dictionary.
Parses cobra annotations from a given SBase object.
Set SBase annotations based on cobra annotations.
Validate SBML model and returns the model along with a list of errors.
String representation of SBMLError.
Compute total output per input unit.
Split metabolites into the atoms times their stoichiometric coefficients.
Find all active carbon source reactions.
Modify a model so all feasible flux distributions are loopless.
Add constraints for CycleFreeFlux.
Convert an existing solution to a loopless one.
Plugin to get a loopless FVA solution from single FVA iteration.
Return a stoichiometric array representation of the given model.
Create a matrix representation of the problem.
Compute a single solution based on regulatory on/off minimization (ROOM).
r"""     Check consistency of a metabolic network using FASTCC [1]_.
Generate a set of samples.
Optimizely template tag.
KISSinsights set-up template tag.
SnapEngage set-up template tag.
Performable template tag.
Coerce strings to hashable bytes.
Return a SHA-256 HMAC `user_hash` as expected by Intercom, if configured.
Intercom.io template tag.
Get the user instance from the template context, if possible.
Get the identity of a logged in user from a template context.
Olark set-up template tag.
Gaug.es template tag.
Manage the printing and in-place updating of a line of characters
Apply a specified mutant to the source code
Open a subprocess and stream its output without hard-blocking.
:rtype: CoverageData or None
:type context: Context
:type context: Context
:type context: Context
Called when the specified descriptor has changed its value.
Return list of GATT characteristics that have been discovered for this         service.
Return list of GATT descriptors that have been discovered for this         characteristic.
Called when the power state changes.
Start scanning for BLE devices.
Stop scanning for BLE devices.
Return a list of GattService objects that have been discovered for         this device.
Return a list of UUIDs for services that are advertised by this         device.
Read the value of this characteristic.
Write the specified value to this characteristic.
Read the value of this descriptor.
Start scanning for BLE devices with this adapter.
Stop scanning for BLE devices with this adapter.
Called when a device is connected.
Called when a device is disconnected.
Called when services are discovered for a device.
Called when a new RSSI value for the peripheral is available.
Main entry point for the thread that will run user's code.
Disconnect any connected devices that have any of the specified         service UUIDs.
Initialize bluez DBus communication.  Must be called before any other         calls are made!
Main entry point for the thread that will run user's code.
Return a list of all bluez DBus objects from the provided list of paths.
Print tree of all bluez objects, useful for debugging.
Remove any metadata associated with the provided CoreBluetooth object.
Set the red, green, blue color of the bulb.
Return an instance of the BLE provider for the current platform.
Convert the byte array to a BigInteger
Encrypt credentials using the google publickey, with the         RSA algorithm
Search the play store for an app.
Get app details from a package name.
Get several apps details from a list of package names.
Browse reviews for an application
Download an already purchased app.
Method that constructs a full url with the given url and the         snapshot name.
Asynchronous GET request with the process pool.
Asynchronous POST request with the process pool.
Get the arguments to execute a command as a user
Excecute command on thread
Excecute command on remote machine using SSH
Execute using self.data
Check self.data. Raise InvalidConfig on error
Execute using self.data
Get HTTP Headers to send. By default default_headers
Return "data" value on self.data
Print help and scan devices on screen.
Send success or error message to configured confirmation
Press button. Check DEFAULT_DELAY.
Execute a device. Used if the time between executions is greater than DEFAULT_DELAY
Start daemon mode
Filter queryset based on keywords.     Support for multiple-selected parent values.
Media defined as a dynamic property instead of an inner class.
Media defined as a dynamic property instead of an inner class.
Media defined as a dynamic property instead of an inner class.
Return True if according to should_index the object should be indexed.
Performs a search query and returns the parsed JSON.
Returns the settings of the index.
Register the given model class and wrapped AlgoliaIndex class with the Algolia engine:
Run the management command.
Unregisters the given model with Algolia engine.
Returns the adapter associated with the given model.
Performs a search query and returns the parsed JSON.
Signal handler for when a registered model has been saved.
Signal handler for when a registered model has been deleted.
Run the management command.
Run the management command.
Pad each cell to the size of the largest cell in its column.
Create the column dividers for a table with given column widths.
Add dividers and padding to a row of cells and return a string.
Convert a 2D array of items into a Markdown table.
Calculate base id and version from a resource id.
Prepare search request, send and return parsed data as a dict.
Return staff in your club.
Return all consumables from club.
Return items in tradepile.
Start auction. Returns trade_id.
Remove cards from watchlist.
Remove card from tradepile.
Send to tradepile (alias for __sendToPile__).
Send to watchlist.
List all (currently?) available packs.
Convert a decimal number to hexadecimal
Init and configure logger.
:return: The width of the data component in the buffer in number of pixels.
:return: The height of the data component in the buffer in number of pixels.
:return: The data type of the data component as integer value.
:return: The image height of the data component.
Fetches the latest :class:`Buffer` object and returns it.
Adds a CTI file to work with to the CTI file list.
Removes the specified CTI file from the CTI file list.
Convert an OFX Transaction to a posting
Run the unit test suite with each support library and Python version.
Returns the width, in pixels, of a string in DejaVu Sans 110pt.
Transform README.md into a usable long description.
Returns the width, in pixels, of a string in DejaVu Sans 110pt.
Return a PrecalculatedTextMeasurer given a JSON stream.
Generate the characters support by the font at the given path.
Generates the subset of 'characters' that can be encoded by 'encodings'.
Return a mapping between each given character and its length.
Returns a mapping between each *pair* of characters and their kerning.
Write the data required by PrecalculatedTextMeasurer to a stream.
r'''Calculates the integral of liquid heat capacity using the       quasi-polynomial model developed in [1]_.
r'''Calculates the integral of liquid heat capacity using the model      developed in [1]_.
>>> Pbubble_mixture(zs=[0.5, 0.5], Psats=[1400, 7000])     4200.0
>>> Pdew_mixture(zs=[0.5, 0.5], Psats=[1400, 7000])     2333.3333333333335
r'''RDKit object of the chemical, without hydrogen. If RDKit is not         available, holds None.
r'''RDKit object of the chemical, with hydrogen. If RDKit is not         available, holds None.
r'''Hill formula of a compound. For a description of the Hill system,         see :obj:`thermo.elements.atoms_to_Hill`.
r'''Dictionary of economic status indicators for the chemical.
r'''Enthalpy of vaporization of the chemical at its current temperature,         in units of [J/kg].
r'''Parachor of the chemical at its         current temperature and pressure, in units of [N^0.25*m^2.75/mol].
r'''Compressibility factor of the chemical at its current phase and         temperature and pressure, [dimensionless].
r'''Prandtl number of the chemical at its current temperature,         pressure, and phase; [dimensionless].
r'''Calculates enthalpy of vaporization at arbitrary temperatures using the     Clapeyron equation.
Adjusts enthalpy of vaporization of enthalpy for another temperature, for one temperature.
r'''Returns the maximum solubility of a solute in a solvent.
r'''Method to calculate low-pressure liquid molar volume at tempearture         `T` with a given method.
Look up the economic status of a chemical.
r'''Calculates the second virial coefficient using the model in [1]_.     Designed for simple calculations.
r'''Method to calculate permittivity of a liquid at temperature `T`         with a given method.
r'''Calculates air-water surface tension  using the [1]_     emperical method. Old and tested.
r'''Calculates air-water surface tension using the reference fluids     methods of [1]_.
r'''Calculates air-water surface tension using the reference fluids methods     of [1]_.
r'''Calculates air-water surface tension using the methods of [1]_.
r'''Estimates the surface tension of organic liquid substances     according to the method of [1]_.
r'''Estimates the acentric factor of a fluid using a correlation in [1]_.
r'''Calculates the viscosity of a liquid using an emperical formula     developed in [1]_.
r'''Calculates the viscosity of a gas using an emperical formula     developed in [1]_.
r'''Calculates the viscosity of a gas using an emperical formula     developed in [1]_.
r'''Calculates the viscosity of a gas using an emperical formula     developed in [1]_.
r'''Calculates viscosity of a gas mixture according to     mixing rules in [1]_.
r'''Calculates viscosity of a gas mixture according to     mixing rules in [1]_.
r'''Calculates viscosity of a gas mixture according to     mixing rules in [1]_.
r'''Method to calculate low-pressure liquid viscosity at tempearture         `T` with a given method.
r'''Method to calculate low-pressure gas viscosity at         tempearture `T` with a given method.
r'''Converts a concentration in ppmv to units of mg/m^3. Used in     industrial toxicology.
r'''Converts a concentration in  mg/m^3 to units of ppmv. Used in     industrial toxicology.
Inert gases are ignored.
Inert gases are ignored.
r'''Calculates lower flammability limit, using the Suzuki [1]_ correlation.     Uses heat of combustion only.
r'''Dictionary of atomic fractions for each atom in the mixture.
r'''Estimates the thermal conductivity of organic liquid substances     according to the method of [1]_.
r'''Method to calculate low-pressure gas thermal conductivity at         tempearture `T` with a given method.
Convolve 2d gaussian.
Generate a gaussian kernel.
Main function for pyssim.
Compute the SSIM value from the reference image to the target image.
Find the node to which a connection belongs.
Create the TCP server (but don't bind yet)
Callback for the utility messages
Connect to a node if necessary.
Add a node to the network
Drop a node from the network
Extract the smallest item from queue.         Return default if queue is empty.
Check if lock is acquired by ourselves.
Release previously-acquired lock.
Decorator which ensures that one of the WATCHMAN_TOKENS is provided if set.
Establish a connection to the chat server.
Return ``request_header`` for use when constructing requests.
Upload an image that can be later attached to a chat message.
Parse the image upload response to obtain status.
Parse channel array and call the appropriate events.
Add services to the channel.
Send a Protocol Buffer formatted chat API request.
Send a generic authenticated POST request.
Create a new conversation.
Leave a one-to-one conversation.
Send an easter egg event to a conversation.
Return one or more user entities.
Get URL to allow others to join a group conversation.
Return info about the current user.
Return presence status for a list of users.
Remove a participant from a group conversation.
Rename a conversation.
Return user entities based on a query.
Send a chat message to a conversation.
Enable or disable message history in a conversation.
Send an email to invite a non-Google contact to Hangouts.
Set the active client.
Set the notification level of a conversation.
Set focus to a conversation.
Set the presence status.
Set the typing status of a conversation.
List all events occurring at or after a timestamp.
Update the watermark (read timestamp) of a conversation.
Convert a microsecond timestamp to a UTC datetime instance.
Convert hangouts_pb2.ParticipantId to UserID.
Convert UserID to hangouts_pb2.ParticipantId.
Return TypingStatusMessage from hangouts_pb2.SetTypingNotification.
Return WatermarkNotification from hangouts_pb2.WatermarkNotification.
Make an HTTP request.
Make an HTTP request using aiohttp directly.
Search for entities by phone number, email, or gaia_id.
Return EntityLookupSpec from phone number, email address, or gaia ID.
Return a readable name for a conversation.
Build :class:`.UserList` and :class:`.ConversationList`.
List of conversation participants (:class:`~hangups.user.User`).
Handle a watermark notification.
Update the internal state of the conversation.
Wrap hangouts_pb2.Event in ConversationEvent subclass.
Add an event to the conversation.
Return default DeliveryMedium to use for sending messages.
Return EventRequestHeader for conversation.
Send a message to this conversation.
Set the notification level of this conversation.
Update the timestamp of the latest event which has been read.
Get events from this conversation.
Get all the conversations.
Leave a conversation.
Add new conversation from hangouts_pb2.Conversation
Receive a StateUpdate and fan out to Conversations.
Receive a hangouts_pb2.Event and fan out to Conversations.
Receive Conversation delta and create or update the conversation.
Receive SetTypingNotification and update the conversation.
Receive WatermarkNotification and update the conversation.
Sync conversation state and events that could have been missed.
Upgrade name type of this user.
Construct user from ``Entity`` message.
Construct user from ``ConversationParticipantData`` message.
Get a user by its ID.
Add or upgrade User from ConversationParticipantData.
Add an observer to this event.
Remove an observer from this event.
Fire this event, calling all observers with the same arguments.
Run a hangups example coroutine.
Return ArgumentParser with any extra arguments.
Run the example coroutine.
Print column headers and rows as a reStructuredText table.
Generate doc for an enum.
Generate docs for message and nested messages and enums.
Compile proto file to descriptor set.
Parse arguments and print generated documentation to stdout.
Create a directory if it does not exist.
Handle exceptions from the asyncio loop.
Handle global keybindings.
Show the overlay menu.
Return an existing or new ConversationWidget.
Handle connecting for the first time.
Put a coroutine in the queue to be executed.
Consume coroutines from the queue by executing them.
Re-order the conversations when an event occurs.
Show a temporary message.
Make users stop typing when they send a message.
Handle typing updates.
Update status text.
Convert UTC datetime into user interface string.
Return MessageWidget representing a ConversationEvent.
Handle updating and scrolling when a new event is added.
Load more events for this conversation.
Return the next/previous position or raise IndexError.
Set the focus to position or raise IndexError.
Return the menu widget associated with this widget.
Update this conversation's tab title.
Called when the user presses return on the send message widget.
Update tab display.
Handle keypresses for changing tabs.
Add or modify a tab.
Replace words with corresponding values in replacements dict.
Authenticate with Google.
Simple wrapper for :func:`get_auth` that prompts the user using stdin.
Get authorization code using Google account credentials.
Authenticate using OAuth authorization code.
Make OAuth token request.
Use the access token to get session cookies.
Populate and submit a form on the current page.
Parse response format for request for new channel SID.
Listen for messages on the backwards channel.
Sends a request to the server containing maps (dicts).
Open a long-polling request and receive arrays.
Parse push data and trigger events.
Construct :class:`ChatMessageSegment` list parsed from a string.
Construct :class:`ChatMessageSegment` from ``Segment`` message.
Serialize this segment to a ``Segment`` message.
Text of the message without formatting (:class:`str`).
List of :class:`ChatMessageSegment` in message (:class:`list`).
List of attachments in the message (:class:`list`).
Decode pblite to Protocol Buffer message.
Create Elasticsearch indexes
Converts a DMARC forensic report and sample to a ``OrderedDict``
Parses a DMARC report from an email
Returns a list of an IMAP server's capabilities
Save report data in the given directory
Gets the base domain name for the given domain
Resolves an IP address to a hostname using a reverse DNS query
Converts a human-readable timestamp into a Python ``DateTime`` object
Returns reverse DNS and country information for the given IP address
Converts a comma separated string to a list
Called when the module is executed
Sends a PUB command to the server on the specified subject.
Sets the subcription to use a task per message to be processed.
Looks up in the server pool for an available server         and attempts to connect.
Returns a faker method based on the field's name         :param name:
Returns the correct faker function based on the field type         :param field:
Add an order for the generation of $number records for $entity.
Populate the database using all the Entity classes previously added.
use the first connection available         :rtype: Connection
Compute and save coactivation map given input image as seed.
Decodes a set of images.
Load feature data from a 2D ndarray on disk.
Load feature image data from the current Dataset instance. See         load_features() for documentation.
Load feature image data from image files.
Decode images using Pearson's r.
Set up data for a classification task given a set of masks
Returns a list with the order that features requested appear in     dataset
Fits X to outcomes y, using clf and cv_method
list : list ANDNOT list
list : list AND list
list : list OR list
Returns mappable data for a random subset of voxels.
Perform topic modeling using Latent Dirichlet Allocation with the     Java toolbox MALLET.
Correlates row vector x with each row vector in 2D array y.
Download the abstracts for a dataset/list of pmids
Load activation data from a text file.
Construct a new FeatureTable from file.
A convenience wrapper for ImageTable.get_image_data().
Load a pickled Dataset instance from file.
Pickle the Dataset instance to the provided file.
Slices and returns a subset of image data.
Slices and returns a subset of feature data.
Given a list of features, returns features in order that they         appear in database.
Returns all features that match any of the elements in the input         list.
Use a PEG to parse expression and return study IDs.
Convert FeatureTable to SciPy CSR matrix.
Convert coordinates from one space to another using provided     transformation matrix.
Convert an N x 3 array of XYZ coordinates to matrix indices.
Apply a named transformation to a set of foci.
Reset/remove all layers, keeping only the initial volume.
Vectorize an image and mask out all invalid voxels.
Load multiple images from file into an ndarray.
Save a vectorized image to file.
Set neurosynth's logging level
Expand the given address into one or more normalized strings.
Normalizes a string, tokenizes, and normalizes each token     with string and token-level options.
Parse address into components.
Restart any containers associated with Dusty, or associated with     the provided app_or_service_names.
Returns a list of formatted port mappings for an app
Returns all libs that are referenced in specs.apps.depends.libs
Returns all services that are referenced in specs.apps.depends.services,     or in specs.bundles.services
Ripped off and slightly modified based on docker-py's     kwargs_from_env utility function.
Initialize the Dusty VM if it does not already exist.
Start the Dusty VM if it is not already running.
Make HTTP request and return response object
Shortcut function to create a cookie
Load sqlite cookies into a cookiejar
Make a request to the spotify API with the current bearer credentials.
Get a spotify artists by their IDs.
Get a single category used to tag items in Spotify.
Get a list of Spotify playlists tagged with a particular category.
Get a list of categories used to tag items in Spotify.
Get the albums of a Spotify artist.
get the total amout of tracks in the album.
Get Spotify catalog information about artists similar to a given artist.
Get the users currently playing track.
Get information about the users current playback.
Get information about the users avaliable devices.
Reorder a track or a group of tracks in a playlist.
Create a playlist for a Spotify user.
get the users playlists from spotify.
get the albums tracks from spotify.
Generate an outh2 url for user authentication.
Retrive an album with a spotify ID.
Retrive an user with a spotify ID.
Retrive multiple albums with a list of spotify IDs.
Retrive multiple artists with a list of spotify IDs.
Get a spotify ID from a URI or open.spotify URL.
decorator to assert an object has an attribute when run.
Construct a OAuth2 object from a `spotify.Client`.
Construct a OAuth2 URL instead of an OAuth2 object.
get the track object for each link in the partial tracks data
Get all playlist tracks from the playlist.
Resume playback on the user's account.
Transfer playback to a new device and determine if it should start playing.
Get the full object from spotify with a `href` attribute.
Execute the logic behind the meaning of ExpirationDate + return the matched status.
Convert a given month into our unified format.
Format the expiration date into an unified format (01-jan-1970).
Extract the expiration date from the whois record.
Read the code and update all links.
Check if the current version is greater as the older older one.
Check if the current branch is `dev`.
Check if we have to put the previous version into the deprecated list.
Update :code:`setup.py` so that it always have the right name.
Update :code:`.travis.yml` according to current branch.
Backup the current execution state.
Restore data from the given path.
Check if we have to ignore the given line.
Handle the data from the options.
Extract the base of the given element.
Decode/extract the domains to test from the adblock formated file.
Format the exctracted adblock line before passing it to the system.
Get the HTTP code status.
Return the HTTP code status.
Check the syntax of the given domain.
Check if the given domain is a subdomain.
Check the syntax of the given IPv4.
Check if the given IP is an IP range.
Check the syntax of the given URL.
Load the configuration.
Print a friendly message.
Provide the command line interface.
Manage the loading of the url system.
Exit the script if :code:`[PyFunceble skip]` is matched into the latest         commit message.
Decide if we print or not the header.
Manage the case that we want to test only a domain.
Manage the case that we want to test only a given url.
Print the colored logo based on global results.
Format the extracted domain before passing it to the system.
Extract all non commented lines from the file we are testing.
Manage the case that need to test each domain of a given file path.
Manage the case that we have to test a file
Switch PyFunceble.CONFIGURATION variables to their opposite.
Get the status while testing for an IP or domain.
Handle the lack of WHOIS and expiration date. :smile_cat:
Handle the backend of the given status.
Check if we need to replace ".gitignore" to ".keep".
Update the paths according to configs.
Get the structure we are going to work with.
Creates the given directory if it does not exists.
Restore the 'output/' directory structure based on the `dir_structure.json` file.
Delete the directory which are not registered into our structure.
Set the paths to the configuration files.
Load .PyFunceble.yaml into the system.
Download the production configuration and install it in the         current directory.
Download `iana-domains-db.json` if not present.
Download `public-suffix.json` if not present.
Download the latest version of `dir_structure_production.json`.
Simply merge the older into the new one.
Execute the logic behind the merging.
Convert the versions to a shorter one.
Compare the given versions.
Compare the current version with the upstream saved version.
Handle and check that some configuration index exists.
Generate the hosts file, the plain list and the splitted lists.
Generate :code:`Analytic/*` files based on the given old and         new statuses.
Generate a file according to the domain status.
Check if we are allowed to produce a file based from the given         information.
Extract the extension from the given line.
Update of the content of the :code:`public-suffix.json`.
Load the public suffix database into the system.
Implement the standard and alphabetical sorting.
Initiate the IANA database if it is not the case.
Return the referer for the given extension.
Extract the extention from the given block.         Plus get its referer.
Update the content of the `iana-domains-db` file.
Search for domain or URL related to the original URL or domain.
Retrieve the mining informations.
Backup the mined informations.
Add the currently mined information to the         mined "database".
Remove the currently tested element from the mining         data.
Provide the list of mined so they can be added to the list         queue.
Process the logic and structuration of the mining database.
Get and return the content of the given log file.
Write the content into the given file.
Construct header of the table according to template.
Construct the table of data according to given size.
Get the size of each columns from the header.
Management and input of data to the table.
Save the current time to the file.
calculate the difference between starting and ending time.
Format the calculated time into a human readable format.
Return the list of file to delete.
Set the databases files to delete.
Get the hash of the given file
Get hash of the given data.
Return the hash of the given file
Execute the given command.
Run the given command and yield each line(s) one by one.
Remove a given key from a given dictionary.
Rename the given keys from the given dictionary.
Merge the content of to_merge into the given main dictionnary.
Save a dictionnary into a JSON file.
Save a dictionnary into a YAML file.
Fix the path of the given path.
Write or append data into the given file path.
Read a given file path and return its content.
Merge to_merge into the given main list.
Return a list of string which don't match the         given regex.
Used to get exploitable result of re.search
Used to replace a matched string with another.
Download the given link and return or save its :code:`requests.text`         at the given destination.
Count the number of domain for each status.
Calculate the percentage of each status.
Print on screen and on file the percentages for each status.
Check if the given URL is valid.
Check if the given domain is a valid.
Check if the given subdomain is a subdomain.
Check if the given IP is a valid IPv4.
Check if the given IP is a valid IPv4.
Execute the logic behind the Syntax handling.
Format the old format so it can be merged into the newer format.
Return the current content of the inactive-db.json file.
Save the current database into the inactive-db.json file.
Get the timestamp where we are going to save our current list.
Save the current :code.`PyFunceble.CONFIGURATION['to_test']`         into the current timestamp.
Remove all occurence of :code:`PyFunceble.CONFIGURATION['to_test']`         from the database.
Get the content of the database.
Check if the currently tested element is into the database.
Retrieve the data from the database.
Backup the database into its file.
Check if the element is into the database.
Check if the current time is older than the one in the database.
Get the expiration date from the database.
Set permissions in order to avoid issues before commiting.
Execute the logic behind the URL handling.
Return the referer aka the WHOIS server of the current domain extension.
docstring for _gen
docstring for _randone
sre_parse object to string
Wrapper for Zotero._cleanup
ensure that a SavedSearch object exists
Error handler for HTTP requests
Extract self, first, next, last links from a request response
Return the contents of My Publications
Return the total number of items in the specified collection
Return the total number of items for the specified tag
Get full-text content for an item
Get the last modified version
Get the file from an specific item
Dump a file attachment to disk, with optional filename and path
Get subcollections for a specific collection
Retrieve a subset of items         Accepts a single argument: a list of item IDs
Format and return data from API calls which return Items
Return a list of dicts which are dumped CSL JSON
Return a list of strings formatted as HTML bibliography entries
Return a list of strings formatted as HTML citation entries
Get a template for a new item
Upload files to the already created (but never uploaded) attachments
Delete a group of tags         pass in up to 50 tags, or use *[tags]
Step 0: Register intent to upload files
Step 2: auth successful, and file not on server         zotero.org/support/dev/server_api/file_upload#a_full_upload
Identify the location of an executable file.
Split a multiline string into a list, excluding blank lines.
Split a string with comma or space-separated elements into a list.
Evaluate environment markers.
Convert Python files using lib3to2.
Identify the location of an executable file.
Automatically apply suggestions to the text.
Get LanguageTool version.
Get LanguageTool directory.
Set LanguageTool directory.
Match text against enabled rules.
Match text against enabled rules (result in XML format).
Automatically apply suggestions to the text.
Return Java version (major1, major2).
Get common directory in a zip file if any.
Process events from proactor.
Allow to run async code before application is closed.
Make a Qt async slot run on asyncio loop.
Class decorator to add a logger to a class.
Add more ASN.1 MIB source repositories.
importIdentifiers : importIdentifiers ',' importIdentifier                              | importIdentifier
sequenceItems : sequenceItems ',' sequenceItem                          | sequenceItem
NamedBits : NamedBits ',' NamedBit                      | NamedBit
VarTypes : VarTypes ',' VarType                     | VarType
enumItems : enumItems ',' enumItem                      | enumItem
IndexTypes : IndexTypes ',' IndexType                       | IndexType
BitNames : BitNames ',' LOWERCASE_IDENTIFIER                     | LOWERCASE_IDENTIFIER
subidentifiers : subidentifiers subidentifier                           | subidentifier
subidentifiers_defval : subidentifiers_defval subidentifier_defval                                  | subidentifier_defval
ComplianceModules : ComplianceModules ComplianceModule                              | ComplianceModule
ComplianceModule : MODULE ComplianceModuleName MandatoryPart CompliancePart
MandatoryGroups : MandatoryGroups ',' MandatoryGroup                            | MandatoryGroup
trapTypeClause : fuzzy_lowercase_identifier TRAP_TYPE EnterprisePart VarPart DescrPart ReferPart COLON_COLON_EQUAL NUMBER
r"""approximate corrected Kullback information
r"""AIC order-selection using eigen values
r"""MDL order-selection using eigen values
Cross-correlation using numpy.correlate
Finds the minimum eigenvalue of a Hermitian Toeplitz matrix
r"""Generate the Morlet waveform
r"""Evaluate a chirp signal at time t.
r"""Generate the mexican hat wavelet
Convert reflection coefficients to autocorrelation sequence.
Convert a one-sided PSD to a twosided PSD
Convert a two-sided PSD to a one-sided PSD
Convert a two-sided PSD to a center-dc PSD
Convert a center-dc PSD to a twosided PSD
Circular shift to the right (within an array) by a given offset
r"""Return a noisy cosine at a given frequency.
Plot the data set, using the sampling information to set the x-axis         correctly.
Read a WAV file and returns the data and sample rate
Multitapering spectral estimation
r"""Discrete prolate spheroidal (Slepian) sequences
Separate `filename` content between docstring and the rest
Return reStructuredText code block from code string
Extract the first paragraph of module-level docstring. max:95 char
Returns md5sum of file
Returns True if src_file has a different md5sum
Test existence of image file and no change in md5sum of     example
Save the thumbnail image
Generate the gallery reStructuredText for an example directory
Executes the code block of the example file
Generate the rst file for a given example.
r"""Estimate the complex autoregressive parameters by the Burg algorithm.
Solve linear system `AX=B` using CHOLESKY method.
r"""Pseudo spectrum using eigenvector method (EV or Music)
r"""Simple periodogram wrapper of numpy.psd function.
r"""Return Daniell's periodogram.
Return the one-sided frequency range as a generator.
Return the frequency vector according to :attr:`sides`
r"""Return the power contained in the PSD
Returns a dictionary with the elements of a Jupyter notebook
Helper function to get data over http or from a local file
Select first block delimited by start_tag and end_tag
Parse a dictionary from the search index
Parse a Sphinx search index
Get a valid link, False if not found
Convert transfer function filter parameters to zero-pole-gain form
State-space representation to zero-pole-gain representation.
r"""Returns the N-point window given a valid name
r"""Nuttall tapering window
r"""Blackman Nuttall window
r"""Blackman Harris window
r"""Bohman tapering window
Tukey tapering window (or cosine-tapered window)
r"""Flat-top tapering window
Taylor tapering window
r"""Riesz tapering window
r"""Riemann tapering window
r"""Poisson tapering window
r"""Hann-Poisson tapering window
r"""Cauchy tapering window
Plot the window in the frequency domain
Plot the window in the time domain
Get the shortest possible module name
Yield line numbers of duplicate keys.
Return dict mapping the key to list of messages.
Return messages from pyflakes.
Return package name in import statement.
Return True if this is part of a multiline statement.
Return '' if first occurrence of the key otherwise return `line`.
Return True if value is a literal or a name.
Return code with all filtering run on it.
Run fix_code() on a file.
Return a set of strings.
Write the data encoding the ObtainLease response payload to a stream.
Write the data encoding the Cancel request payload to a stream.
Returns a Name object, populated with the given value and type
Read the data encoding the Digest object and decode it into its         constituent parts.
Write the data encoding the Digest object to a stream.
Construct a Digest object from provided digest values.
Read the data encoding the ApplicationSpecificInformation object and         decode it into its constituent parts.
Write the data encoding the ApplicationSpecificInformation object to a         stream.
Construct an ApplicationSpecificInformation object from provided data         and namespace values.
Read the data encoding the DerivationParameters struct and decode it         into its constituent parts.
Write the data encoding the DerivationParameters struct to a stream.
Write the data encoding the Get request payload to a stream.
Write the data encoding the Get response payload to a stream.
Write the data encoding the SignatureVerify request payload to a         stream.
Process a KMIP request message.
Build a simple ResponseMessage with a single error result.
Get the attribute value from the kmip.pie managed object.
Set the attribute value on the kmip.pie managed object.
Determine if object access is allowed for the provided policy and         session settings.
Write the data encoding the Decrypt request payload to a stream.
Error check the attributes of the ActivateRequestPayload object.
Create a secret object of the specified type with the given value.
Set a specific setting value.
Load configuration settings from the file pointed to by path.
Read the encoding of the LongInteger from the input stream.
Write the encoding of the LongInteger to the output stream.
Verify that the value of the LongInteger is valid.
Read the encoding of the BigInteger from the input stream.
Write the encoding of the BigInteger to the output stream.
Verify that the value of the BigInteger is valid.
Verify that the value of the Enumeration is valid.
Read the value of the Boolean object from the input stream.
Write the value of the Boolean object to the output stream.
Write the encoding of the Boolean object to the output stream.
Verify that the value of the Boolean object is valid.
Read the encoding of the Interval from the input stream.
Verify that the value of the Interval is valid.
Set the key wrapping data attributes using a dictionary.
Verify that the contents of the PublicKey object are valid.
Verify that the contents of the SecretData object are valid.
Verify that the contents of the OpaqueObject are valid.
A utility function that converts an attribute name string into the     corresponding attribute tag.
A utility function that converts an attribute tag into the corresponding     attribute name string.
A utility function that checks if the tag is a valid attribute tag.
Write the data encoding the CreateKeyPair request payload to a buffer.
Write the data encoding the CreateKeyPair response payload to a buffer.
Write the data encoding the GetAttributeList request payload to a         stream.
Write the data encoding the GetAttributeList response payload to a         stream.
Scan the policy directory for policy data.
Extract an X.509 certificate from a socket connection.
Given an X.509 certificate, extract and return the extendedKeyUsage     extension.
Given an X.509 certificate, extract and return the client identity.
Write the data encoding the Create request payload to a buffer.
Write the data encoding the Create response payload to a buffer.
Convert a Pie object into a core secret object and vice versa.
Write the data encoding the DeriveKey request payload to a stream.
Check if the attribute is supported by the current KMIP version.
Check if the attribute is deprecated by the current KMIP version.
Check if the attribute is supported by the given object type.
Check if the attribute is allowed to have multiple instances.
Write the data encoding the Check response payload to a stream.
Read the data stream and decode the AttributeReference structure into         its parts.
Write the AttributeReference structure encoding to the data stream.
Read the data stream and decode the Attributes structure into its         parts.
Write the Attributes structure encoding to the data stream.
Write the data encoding the Nonce struct to a stream.
Read the data encoding the UsernamePasswordCredential struct and         decode it into its constituent parts.
Write the data encoding the UsernamePasswordCredential struct to a         stream.
Read the data encoding the DeviceCredential struct and decode it into         its constituent parts.
Write the data encoding the DeviceCredential struct to a stream.
Write the data encoding the Credential struct to a stream.
Read the data encoding the MACSignatureKeyInformation struct and         decode it into its constituent parts.
Write the data encoding the MACSignatureKeyInformation struct to a         stream.
Read the data encoding the KeyWrappingData struct and decode it into         its constituent parts.
Write the data encoding the KeyWrappingData struct to a stream.
Read the data encoding the KeyWrappingSpecification struct and decode         it into its constituent parts.
Write the data encoding the KeyWrappingSpecification struct to a         stream.
Read the data encoding the ExtensionInformation object and decode it         into its constituent parts.
Write the data encoding the ExtensionInformation object to a stream.
Construct an ExtensionInformation object from provided extension         values.
Read the data encoding the RevocationReason object and decode it         into its constituent parts.
Write the data encoding the RevocationReason object to a stream.
validate the RevocationReason object
Read the data encoding the ObjectDefaults structure and decode it into         its constituent parts.
Write the ObjectDefaults structure encoding to the data stream.
Read the data encoding the DefaultsInformation structure and decode it         into its constituent parts.
Write the DefaultsInformation structure encoding to the data stream.
Read the data encoding the RNGParameters structure and decode it         into its constituent parts.
Write the RNGParameters structure encoding to the data stream.
Read the data encoding the ProfileInformation structure and decode it         into its constituent parts.
Write the ProfileInformation structure encoding to the data stream.
Read the data encoding the ValidationInformation structure and decode         it into its constituent parts.
Write the ValidationInformation structure encoding to the data stream.
Read the data encoding the CapabilityInformation structure and decode         it into its constituent parts.
Write the CapabilityInformation structure encoding to the data stream.
Prepare the server to start serving connections.
Stop the server.
Write the data encoding the Locate request payload to a buffer.
Write the data encoding the Locate response payload to a buffer.
Create a symmetric key.
Create an asymmetric key pair.
Generate message authentication code.
Encrypt data using symmetric or asymmetric encryption.
Encrypt data using symmetric encryption.
Encrypt data using asymmetric encryption.
Decrypt data using symmetric decryption.
Decrypt data using symmetric decryption.
Encrypt data using asymmetric decryption.
Create an RSA key pair.
Derive key data using a variety of key derivation functions.
Instantiates an RSA key from bytes.
Verify a message signature.
Read the data encoding the Sign response payload and decode it.
Write the data encoding the Sign response to a stream.
Convert a ProtocolVersion struct to its KMIPVersion enumeration equivalent.
Read the data encoding the ProtocolVersion struct and decode it into         its constituent parts.
Write the data encoding the ProtocolVersion struct to a stream.
Read the data encoding the Authentication struct and decode it into         its constituent parts.
Write the data encoding the Authentication struct to a stream.
Read the data encoding the Certificate object and decode it into its         constituent parts.
Write the data encoding the Certificate object to a stream.
Query the configured SLUGS service with the provided credentials.
Write the data encoding the Archive response payload to a stream.
Write the data encoding the Rekey request payload to a stream.
Write the data encoding the Rekey request payload to a stream.
Error check the attributes of the ActivateRequestPayload object.
Set the KMIP version for the client.
Check if a profile is supported by the client.
Check object usage according to specific constraints.
Derive a new key or secret data from an existing managed object.
Check object usage according to specific constraints.
Send a GetAttributes request to the server.
Send a GetAttributeList request to the server.
Send a Query request to the server.
Encrypt data using the specified encryption key and parameters.
Verify a message signature using the specified signing key.
Set the KMIP version for the client.
Open the client connection.
Close the client connection.
Create a symmetric key on a KMIP appliance.
Create an asymmetric key pair on a KMIP appliance.
Register a managed object with a KMIP appliance.
Rekey an existing key.
Derive a new key or secret data from existing managed objects.
Search for managed objects, depending on the attributes specified in         the request.
Check the constraints for a managed object.
Get a managed object from a KMIP appliance.
Get the attributes associated with a managed object.
Activate a managed object stored by a KMIP appliance.
Revoke a managed object stored by a KMIP appliance.
Encrypt data using the specified encryption key and parameters.
Verify a message signature using the specified signing key.
Get the message authentication code for data.
Build a CryptographicParameters struct from a dictionary.
Build an EncryptionKeyInformation struct from a dictionary.
Build an MACSignatureKeyInformation struct from a dictionary.
Build a KeyWrappingSpecification struct from a dictionary.
Read the data encoding the QueryRequestPayload object and decode it         into its constituent parts.
Write the data encoding the QueryRequestPayload object to a stream.
Read the data encoding the QueryResponsePayload object and decode it         into its constituent parts.
Write the data encoding the QueryResponsePayload object to a stream.
Write the data encoding the GetAttributes response payload to a         stream.
Find a single entry point.
Find a group of entry points with unique names.
Find all entry points in a group.
Load the object to which this entry point refers.
Parse an entry point from the syntax in entry_points.txt
Run livereload server
Replace vars and copy.
Check url schema.
Encode something with SECRET_KEY.
Decode something with SECRET_KEY.
Register jinja filters, vars, functions.
Register HTTP error pages.
serialize the dataframe with different delimiters
Serialize a dataframe.
Deserialize a dataframe.
Serialize the specified DataFrame and replace the existing dataset.
Upload already serialized raw data and replace the existing dataset.
Serialize the specified DataFrame and upload it as a new dataset.
Upload already serialized raw data as a new dataset.
Open and return a stream for the dataset contents.
Read and return the dataset contents as binary.
Read and return the dataset contents as text.
Read and return the dataset contents as a pandas DataFrame.
Get an intermediate dataset.
Runs HTTP GET request to retrieve the list of experiments.
Runs HTTP GET request to retrieve the list of datasets.
Runs HTTP GET request to retrieve a single dataset.
publishes a callable function or decorates a function to be published.
Specifies the types used for the arguments of a published service.
Specifies the return type for a published service.
attaches a file to the payload to be uploaded.
walks the byte code to find the variables which are actually globals
Main command line interface.
Return a list of all implemented keyrings that can be constructed without     parameters.
Gets the username and password for the service.         Returns a Credential instance.
Get password of the username for the service
Set password for the username of the service
Delete the password for the username of the service.
Helper to read an environment variable
Get password of the username for the service
Set password for the username of the service
Delete the stored password (only the first one)
r"""         >>> PackedAttributes.unpack(0)         0         >>> PackedAttributes.unpack('\x00\x00\x00\x01')         1         >>> PackedAttributes.unpack('abcd')         1633837924
Discover all keyrings for chaining.
Set current keyring backend.
Configure the null keyring as the default.
Load a keyring specified in the config file or infer the best available.
Load the keyring class indicated by name.
Load a keyring using the config file in the config root.
load the keyring-path option (if present)
Scan for devices and print results.
Try to autodetect the base URL of the router SOAP service.
Returns the value of the subnode "name" of element e.
Convert value to to_type, returns default if fails.
Login to the router.
Return list of connected devices to the router.
Return list of connected devices to the router with details.
Make an API request to the router.
Create a copy of this pen.
Draw this shape with the given cairo context
Calculates depth of the item in the tree.
Resolves item's URL.
Checks whether a current user has an access to a certain item.
Resolves name as a variable in a given context.
Node constructor to be used in tags.
Returns a URL for a given Tree admin page type.
Manages not only TreeAdmin URLs but also TreeItemAdmin URLs.
Dumps sitetrees with items using django-smuggler.
Imports sitetree module from a given app.
Returns a certain sitetree model as defined in the project settings.
Convert bytes data to file handle object (StringIO or BytesIO).
Returns NetSpeed name from address.
Returns NetSpeed name from hostname. Can be Unknown, Dial-up,         Cable, or Corporate.
Returns Organization, ISP, or ASNum name for given IP address.
Returns time zone in tzdata format (e.g. America/New_York or Europe/Paris)
Returns time zone in tzdata format (e.g. America/New_York or Europe/Paris)
Compress a file, only if needed.
If the given filename should be compressed, returns the         compressed filename.
Restores the exif data cache from the cache file
Stores the exif data of all images in the gallery
Run sigal to process a directory.
Load plugins and call register().
Run a simple web server.
Write metadata keys to .md file.
Create a thumbnail image.
Process one image: resize, create thumbnail.
Return a dict with the raw IPTC data.
Convert degree/minute/second to decimal degrees.
Path to the thumbnail image (relative to the album directory).
Get image metadata from filename.md: title, description, meta.
Create output directories for thumbnails and original images.
List of :class:`~sigal.gallery.Album` objects for each         sub-directory.
URL of the album, relative to its parent.
Path to the thumbnail of the album.
Make a ZIP archive with all media files and return its path.
Return the list of all sub-directories of path.
Create the image gallery
Process a list of images in a directory.
Returns an image with reduced opacity.
Adds a watermark to an image.
Returns the dimensions of the video.
Create a thumbnail image for the video source, based on ffmpeg.
Process a video: resize, create thumbnail.
Generate the context dict for the given path.
Generate the HTML page and save it.
Return the path to the thumb.
Read settings from a config file in the source_dir root.
Generates and writes the media pages for all media in the gallery
Generate the media page and save it
Called by the ASGI instance to send a message.
Called by the ASGI instance to send a message.
Create a configuration from a mapping.
Create a configuration from a Python file.
Load the configuration values from a TOML formatted file.
Create a configuration from a Python object.
Creates a set of zipkin attributes for a span.
Generate the headers for a new zipkin span.
Updates the binary annotations for the current span.
Adds a 'sa' binary annotation to the current span.
Creates a copy of a given endpoint with a new service name.
Encode list of protobuf Spans to binary.
Converts a py_zipkin Span in a protobuf Span.
Encodes to hexadecimal ids to big-endian binary.
Create a zipkin annotation object
Create a zipkin binary annotation object
Create a zipkin Endpoint object.
Returns the span type and encoding for the message provided.
Stores the zipkin attributes to thread local.
Encodes the current span to thrift.
Converts an Endpoint to a JSON endpoint dict.
Encodes a single span to JSON.
Encodes a single span to JSON.
Encodes a single span to protobuf.
Decodes an encoded list of spans.
Decodes a thrift span.
Writes an unsigned long value across a byte array.
Replace illegal February 29, 30 dates with the last day of February.
Join strings together and strip whitespace in between if needed
Handles the message shown when we are ratelimited
Read incoming message.
**Description**             Find the policy with name <name> and return its json description.
**Description**             Add a new policy using the provided json.
**Description**             Delete the policy with the given name.
**Description**             Delete the policy with the given id
**Description**             Add a new compliance task.
**Description**             Get the list of all compliance tasks.
**Description**             Get a compliance task.
**Description**             Delete the compliance task with the given id
**Description**             Get the list of all compliance tasks runs.
**Description**             Retrieve the details for a specific compliance task run result in csv.
**Description**             List the commands audit.
**Description**             Get a command audit.
**Description**             Returns the list of Sysdig Monitor alert notifications.
**Description**             Updates the resolution status of an alert notification.
**Description**             Create a threshold-based alert.
**Description**             Update a modified threshold-based alert.
**Description**             Changes the grouping hierarchy in the Explore panel of the current user.
**Description**             Returns the list of Sysdig Monitor events.
**Description**             Export metric data (both time-series and table-based).
**Description**             Returns the list of sysdig captures for the user.
**Description**             Create a new sysdig capture. The capture will be immediately started.
**Description**             Download a sysdig capture by id.
**Description**             Deletes a user from Sysdig Monitor.
**Description**             Return the team with the specified team name, if it is present.
**Description**             List all memberships for specified team.
**Description**             Remove user memberships from specified team.
**Description**             Creates an empty dashboard. You can then add panels by using ``add_dashboard_panel``.
**Description**             Add an image to the scanner
**Description**             Import an image from the scanner export
**Description**             Find the image with the tag <image> and return its json description
**Description**             Find the image with the tag <image> and return its content.
**Description**             Find the image with the tag <image> and return its metadata.
**Description**             Find the image with the tag <image> and return its vulnerabilities.
**Description**             Delete image from the scanner.
**Description**             Check the latest policy evaluation for an image
**Description**             Update an existing image registry.
**Description**             Delete an existing image registry
**Description**             Find the registry and return its json description
**Description**             Create a new policy
**Description**             Retrieve the policy with the given id in the targeted policy bundle
**Description**             Update the policy with the given id
**Description**             Create a new alert
**Description**             List the current set of scanning alerts.
**Description**             Update the alert with the given id
**Description**             Delete the alert with the given id
**Description**             List all subscriptions
Define the available arguments
Ask a yes/no question via `raw_input()` and return their answer.
Convert numeric and literal version information to numeric format
Parse config file.
Convert config options to stdin args.
Call django-admin to create the project structure
Install aldryn boilerplate
Run the migrate command to create the database schema
Create admin user without user input
Method sleeps, if nothing to do
cleans up and stops the discovery server
send Bye messages for the services and remove them
search for services given the TYPES and SCOPES in a given TIMEOUT
Publish a service with the given TYPES, SCOPES and XAddrs (service addresses)
construct a a raw SOAP XML string, given a prepared SoapEnvelope object
parse raw XML data string, return a (minidom) xml document
Save the model and commit all child relations.
Return True if data differs from initial.
Returns the address with a valid checksum attached.
Generates the correct checksum for this address.
Prompts the user to enter their seed via stdin.
Generates a single key.
Generates the key associated with the specified address.
Generates and returns one or more keys at the specified         index(es).
Creates a generator that can be used to progressively generate         new keys.
Prepares the hash sponge for the generator.
Absorb trits into the sponge.
Squeeze trits from the sponge.
Generates one or more private keys from the seed.
Prepares a bundle that authorizes the spending of IOTAs from a         multisig address.
Adds two sequences of trits together.
Returns a trit representation of an integer value.
Find the transactions which match the specified input and         return.
Generates one or more new addresses from the seed.
Returns all transfers associated with the seed.
Promotes a transaction by adding spam on top of it.
Given a URI, returns a properly-configured adapter instance.
Sends an API request to the node.
Sends a message to the instance's logger, if configured.
Interprets the HTTP response from the node.
Absorbs a digest into the sponge.
Returns the new multisig address.
Generates and returns one or more addresses at the specified         index(es).
Creates an iterator that can be used to progressively generate new         addresses.
Generates an address from a private key digest.
Generates a new address.
Scans the Tangle for used addresses.
Encodes a byte string into trytes.
Decodes a tryte string into bytes.
Find addresses matching the command parameters.
Adds a route to the wrapper.
Creates a Transaction object from a sequence of trytes.
Returns a JSON-compatible representation of the object.
Returns a TryteString representation of the transaction.
Returns the values needed to validate the transaction's         ``signature_message_fragment`` value.
Sets the ``is_confirmed`` for the bundle.
Automatically discover commands in the specified package.
Sends the request object to the adapter and returns the response.
Returns all errors found with the bundle.
Returns whether the bundle is valid.
Validates the signature fragments in the bundle.
Validates the signature fragments for a group of transactions         using the specified sponge type.
Generates a random seed using a CSPRNG.
Generates the digest used to do the actual signing.
Absorb trits into the sponge from a buffer.
Squeeze trits from the sponge into a buffer.
Attaches a ``context`` value to an Exception.
Returns a TryteString representation of the transaction.
Adds a transaction to the bundle.
Finalizes the bundle, preparing it to be attached to the Tangle.
Sign inputs in a finalized bundle.
Signs the input at the specified index.
Pass an argument list to SoX.
Pass an argument list to play.
Check if files in input file list have the same sample rate
Check if files in input file list have the same number of channels
Check input_volumes contains a valid list of volumes.
Builds the output_file by executing the current set of commands.
Play a preview of the output with the current set of effects
Show duration in seconds (0 if unavailable).
Show number of samples (0 if unavailable).
Determine if an input file is silent.
Input file validation function. Checks that file exists and can be     processed by SoX.
Get a dictionary of file information
Parse the string output from sox's stat function
Builds the output_file by executing the current set of commands.
Play a preview of the output with the current set of effects
Apply a biquad IIR filter with the given coefficients.
Compand (compress or expand) the dynamic range of the audio.
Apply a DC shift to the audio.
Delay one or more audio channels such that they start at the given         positions.
Add echoing to the audio.
Apply a flanging effect to the audio.
Apply amplification or attenuation to the audio signal.
Apply non-linear distortion.
Apply a phasing effect to the audio.
Pitch shift the audio without changing the tempo.
Remix the channels of an audio file.
Repeat the entire audio count times.
Apply a sinc kaiser-windowed low-pass, high-pass, band-pass, or         band-reject filter to the signal.
Adjust the audio speed (pitch and tempo together).
Apply an amplification or an attenuation to the audio signal.
Recovers x and y coordinates from the compressed point.
Recovers x and y coordinates from the compressed point (z1, z2).
Lets a user join a room on a specific Namespace.
Lets a user leave a room on a specific Namespace.
Keep a reference of the callback on this socket.
Fetch the callback for a given msgid, if it exists, otherwise,         return None
Spawn a new Greenlet, attached to this Socket instance.
Watch out if we've been disconnected, in that case, kill         all the jobs.
Start the heartbeat Greenlet to check connection health.
Encode an attribute dict into a byte string.
Decode a rawstr packet arriving from the socket into a dict.
ACL system: make the method_name accessible to the current socket
Use this to use the configured ``error_handler`` yield an         error message to your application.
Use send to send a simple string message.
Spawn a new process, attached to this Namespace.
Return an existing or new client Socket.
Encode list of messages. Expects messages to be unicode.
Add denying rules.
Exempt a view function from being checked permission
Check whether role is allowed to access resource
Check wherther role is denied to access resource
Return does the current user can access the resource.         Example::
Load a lexicon from a JSON file.
Given a string and a dict of synonyms, returns the 'preferred'         word. Case insensitive.
Lists the categories in the lexicon, except the         optional categories.
Returns a minimal Decor with a random colour.
Make a simple plot of the Decor.
Generate a default legend.
Generate a default timescale legend. No arguments.
Generate a random legend for a given list of components.
Read CSV text and generate a Legend.
Renders a legend as a CSV string.
Get the decor for a component.
Get the attribute of a component.
Get the display colour of a component. Wraps `getattr()`.
Get the display width of a component. Wraps `getattr()`.
Make a simple plot of the legend.
Generate a Component from a text string, using a Lexicon.
Processes a single row from the file.
Read all the rows and return a dict of the results.
Property. Summarize a Striplog with some statistics.
Private function. Make sure we have what we need to make a striplog.
Makes a striplog from a Petrel text file.
Private function. Takes a data dictionary and reconstructs a list         of Intervals from it.
Load from a CSV file or text.
Read an image and generate Striplog.
Turn a 1D array into a striplog, given a cutoff.
Turn LAS3 'lithology' section into a Striplog.
Eat a Canstrat DAT file and make a striplog.
Returns a CSV string built from the summaries of the Intervals.
Returns an LAS 3.0 section string.
Plotting, but only for points (as opposed to intervals).
Plotting, but only for tops (as opposed to intervals).
Plotting, but only for tops (as opposed to intervals).
Get data from the striplog.
'Extract' a log into the components of a striplog.
Find overlaps in a striplog.
Finds gaps in a striplog.
Fill in empty intervals by growing from top and base.
Fill gaps with the component provided.
Makes a striplog of all unions.
Makes a striplog of all intersections.
Returns the thickest interval(s) as a striplog.
Plots a histogram and returns the data for it.
Inverts the striplog, changing its order and the order of its contents.
Crop to a new depth range.
Run a series of tests and return the corresponding results.
Convert hex to a color name, using matplotlib's colour names.
Get a log-like stream of RGB values from an image.
Define some extra field conversion functions.
Lists all the jobs registered with Nomad.
Lists all the allocations.
Toggle the eligibility of the node.
List files in an allocation directory.
Read contents of a file in an allocation directory.
Read contents of a file in an allocation directory.
Stat a file in an allocation directory.
Initiate a join between the agent and target peers.
Force a failed gossip member into the left state.
Lists all the evaluations.
Lists all the namespaces registered with Nomad.
Invoke a dry-run of the scheduler for the job.
Dispatches a new instance of a parameterized job.
Deregisters a job, and stops all allocations part of it.
Query the status of a client node registered with Nomad.
Get a random mutator from a list of mutators
Get a random mutator for the given type
Return a polyglot attack containing the original object
Perform the fuzzing
Perform the actual fuzzing using random strategies
Safely return an unicode encoded string
Start the servers
Kill the servers
Serve custom HTML page
Serve fuzzed JSON object
Fix default socket lib to handle client disconnection while receiving data (Broken pipe)
Generic fuzz mutator, use a decorator for the given type
Spawn a new process using subprocess
Try to get output in a separate thread
Wait until we got output or until timeout is over
Terminate the newly created process
Parse the command line and start PyJFuzz
Determine a new random value derived from the         defined :any:`gramfuzz.fields.Field.odds` value.
Build the String instance
Build the ``And`` instance
Build the ``Quote`` instance
Build the ``Or`` instance
Build the current ``Opt`` instance
Build the STAR field.
Shutdown the running process and the monitor
Run command once and check exit code
Run command in a loop and check exit status plus restart process when needed
Return a random float
Fuzz all elements inside the object
Get a printable fuzzed object
Return the fuzzed object
Mutate a generic object based on type
Remove all binary files in the adslib directory.
Establish a new route in the AMS Router.
Connect to the TwinCAT message router.
Close the connection to the TwinCAT message router.
Return the local AMS-address and the port number.
Read the current ADS-state and the machine-state.
Read the name and the version number of the ADS-server.
Change the ADS state and the machine-state of the ADS-server.
Send data synchronous to an ADS-device.
Read and write data synchronous from/to an ADS-device.
Read data synchronous from an ADS-device.
Read data synchronous from an ADS-device from data name.
Send data synchronous to an ADS-device from data name.
Add a device notification.
Remove a device notification.
Connect to the TwinCAT message router.
:summary: Close the connection to the TwinCAT message router.
Fetches speeches from the ListarDiscursosPlenario endpoint of the         SessoesReunioes (SessionsReunions) API.
Fetches official missions within the given date range
:param data_dir: (str) directory in which the output file will be saved
Fetches the list of deputies for the current term.
Adds a `node` to the hash ring (including a number of replicas).
Removes `node` from the hash ring and its replicas.
:param servers: server list, element in it can have two kinds of format.
Returns a list of values ordered identically to ``keys``
Sets each key in the ``mapping`` dict to its corresponding value
Return a new Lock object using key ``name`` that mimics         the behavior of threading.Lock.
Update the activity message for the current user.
Update the profile picture for the current user.
Retrieve various metadata associated with a URL, as seen by Skype.
Request one batch of events from Skype, calling :meth:`onEvent` with each event in turn.
Retrieve all details for a specific contact, including fields such as birthday and mood.
Retrieve public information about a user.
Retrieve a list of all known bots.
Retrieve a single bot.
Search the Skype Directory for a user.
Create a new instance based on the raw properties of an API response.
Method decorator: if a given status code is received, re-authenticate and try again.
Make a public API call without a connected :class:`.Skype` instance.
Store details of the current connection in the named file.
Ensure the authentication token for the given auth method is still valid.
Connect to Skype as a guest, joining a given conversation.
Ask Skype for the authenticated user's identifier, and store it on the connection object.
Acquire a new registration token.
Retrieve all current endpoints for the connected user.
Query a username or email address to see if a corresponding Microsoft account exists.
Connect to Skype as a guest, joining a given conversation.
Request a new registration token using a current Skype token.
Generate the lock-and-key response, needed to acquire registration tokens.
Configure this endpoint to allow setting presence.
Send a keep-alive request for the endpoint.
Get a single conversation by identifier.
Create a new group chat with the given users.
Resolve a ``join.skype.com`` URL and returns various identifiers for the group conversation.
Extract the username from a contact URL.
Extract the conversation ID from a conversation URL.
Repeatedly call a function, starting with init, until false-y, yielding each item in turn.
Load and parse a file-like object or filename,      return a :py:class:`post <frontmatter.Post>`.
Parse text (binary or unicode) and return a :py:class:`post <frontmatter.Post>`.
Post as a dict, for serializing
Turn metadata into JSON
Establishes a connection to the Lavalink server.
Connects to a voice channel.
Retrieves the related value from the stored user data.
Adds a track to the queue.
Adds a track to beginning of the queue
Adds a track at a specific index in the queue.
Play the queue from a specific point. Disregards tracks before the index.
Seeks to a given position in the track.
Returns a player from the cache, or creates one if it does not exist.
Removes a player from the current players.
Searches and plays a song from a given query.
Seeks to a given position in a track.
Pauses/Resumes the current track.
Shuffles the player's queue.
Removes an item from the player's queue with the given index.
Unregisters a hook. For further explanation, please have a look at ``register_hook``.
Dispatches an event to all registered hooks.
Updates a player's state when a payload with opcode ``playerUpdate`` is received.
Returns a Dictionary containing search results for a given query.
Destroys the Lavalink client.
Returns an optional AudioTrack.
Plays the queue from a specific point. Disregards tracks before the index.
Lists the first 10 search results from a given query.
Return the match object for the current list.
Return items as a list of strings.
Return the Lists inside the item with the given index.
Convert to another list type by replacing starting pattern.
Parse template content. Create self.name and self.arguments.
Return the lists in all arguments.
Return template's name (includes whitespace).
Convert a trie to a regex pattern.
Return adjusted start and stop index as tuple.
Insert the given string before the specified index.
Partition self.string where `char`'s not in atomic sub-spans.
Return all the sub-span including self._span.
Close all sub-spans of (start, stop).
Update self._type_to_spans according to the removed span.
Update self._type_to_spans according to the added length.
Return the nesting level of self.
Return a copy of self.string with specific sub-spans replaced.
Replace the invalid chars of SPAN_PARSER_TYPES with b'_'.
Create the arguments for the parse function used in pformat method.
Deprecated, use self.pformat instead.
Return a pretty-print of self.string as string.
Return a list of parameter objects.
Return a list of parser function objects.
Return a list of templates as template objects.
Return a list of wikilink objects.
Return a list of comment objects.
Return a list of found external link objects.
Return a list of section in current wikitext.
Return a list of found table objects.
r"""Return a list of WikiList objects.
Return all tags with the given name.
Return the ancestors of the current node.
Return the parent node of the current object.
Return the most common item in the list.
Return the first argument in the args that has the given name.
Eliminate duplicate arguments by removing the first occurrences.
Remove duplicate arguments in a safe manner.
Set the value for `name` argument. Add it if it doesn't exist.
Return the last argument with the given name.
Return true if the is an arg named `name`.
Delete all arguments with the given then.
Get a list of suggestions from the AutoCompleter, for a given prefix
Create the search index. The index must not already exist.
Add a single document to the index.
Load a single document by id
Search the index for a given query, and return a result of documents
Set the alias for this reducer.
Specify by which fields to group the aggregation.
Specify one or more projection expressions to add to each result
Format the redis arguments for this query and return them
Set the paging for the query (defaults to 0..10).
Add a sortby field to the query
Indicate that value is a numeric range
Transpose a chord label by some number of semitones
Pack data into a jams sandbox.
Load a jam and pack it with audio.
Save a muda jam to disk
Serialize a transformation object or pipeline.
Construct a muda transformation from a JSON encoded string.
Pretty print the dictionary 'params'
Get the list of parameter names for the object
Get the parameters for this object.  Returns as a dict.
Apply the transformation to audio and annotations.
Get the parameters for this object.  Returns as a dict.
Apply the sequence of transformations to a single jam object.
Apply the sequence of transformations to a single jam object.
Calculate the indices at which to sample a fragment of audio from a file.
Slice a fragment of audio from a file.
Extract storage name from file path.
Determine if a file is empty or not.
Iterate over all storages for this projects.
Store a new file at `path` in this storage.
Copy data from file-like object fsrc to file-like object fdst
Write contents of this file to a local file.
Remove this file from the remote storage.
Update the remote file from a local file.
Iterate over all children of `kind`
Decorate a CLI function that might require authentication.
Initialize or edit an existing .osfcli.config file.
Copy all files from all storages of a project.
Fetch an individual file from a project.
List all files from all storages for project.
Upload a new file to an existing project.
Remove a file from the project's storage.
Login user for protected API calls.
Fetch project `project_id`.
Extract JSON from response if `status_code` matches.
Follow the 'next' link on paginated results.
Lookup crscode on spatialreference.org and return in specified format.
Returns the CS as a proj4 formatted string or dict.
Returns the CS as a OGC WKT formatted string.
Returns the CS as a proj4 formatted string or dict.
Returns the CS as a OGC WKT formatted string.
Search for a ellipsoid name located in this module.
Load crs object from epsg code, via spatialreference.org.     Parses based on the proj4 representation.
Load crs object from esri code, via spatialreference.org.     Parses based on the proj4 representation.
Load crs object from sr-org code, via spatialreference.org.     Parses based on the proj4 representation.
Parse crs as proj4 formatted string or dict and return the resulting crs object.
Detect crs string format and parse into crs object with appropriate function.
Write the raw header content to the out stream
Instantiate a RawVLR by reading the content from the         data stream
Returns the signedness foe the given type index
Returns the index of the type as defined in the LAS Specification
Tries to copy the values of the current dimensions from other_record
Construct the point record by reading the points from the stream
Returns the scaled y positions of the points as doubles
writes the data to a stream
Writes the las data into a file
Writes to a stream or file
Returns the minimum file version that supports the given point_format_id
Reads vlrs and parse them if possible from the stream
Returns true if all the files have the same points format id
Returns true if all the files have the same numpy datatype
Reads the 4 first bytes of the stream to check that is LASF
Reads the head of the las file and returns it
Reads and return the vlrs of the file
Reads the whole las data (header, vlrs ,points, etc) and returns a LasData         object
Opens and reads the header of the las content in the source
Entry point for reading las data in pylas
Function to create a new empty las data object
Merges multiple las files into one
Returns the creation date stored in the las file
Returns the date of file creation as a python date object
Converts a header to a another version
Packs a sub field's array into another array using a mask
Returns the numpy.dtype used to store the point records in a numpy array
Returns the numpy.dtype used to store the point records in a numpy array
Returns the number of extra bytes
Debugging method to print out frames in hex.
Return list of positions of bits set to one in given data.
Add header, checksum and footer to command data.
Make a TCP connection to the alarm system.
Start monitoring for interesting events.
Send arming command to the alarm. Modes allowed: from 0 till 3.
Send command to disarm.
Send command to clear the alarm.
Send output turn on command to the alarm.
Start monitoring of the alarm status.
Stop monitoring and close connection.
Make a new project, using recursion and alias resolution.
Clear description to default values
Defer an edit to run on the EditQueue.
Get all the edits in the queue, then execute them.
Scan and report all compatible serial devices on system.
Set device ID to new value.
Return a named Palette, or None if no such name exists.
Return an image resized.
Yield an ordered dictionary if msg['type'] is in keys_by_type.
Draw a circle in an RGB color, with center x0, y0 and radius r.
Draw a between x0, y0 and x1, y1 in an RGB color.
Draw line from point x0, y0 to x1, y1 using Bresenham's algorithm.
Draw rectangle with top-left corner at x,y, width w and height h
Fill the matrix with the given RGB color
Draw triangle with vertices (x0, y0), (x1, y1) and (x2, y2)
Draw filled triangle with points x0,y0 - x1,y1 - x2,y2
Draw a single character c at at (x, y) in an RGB color.
Draw a line of text starting at (x, y) in an RGB color.
Set the base project for routing.
Create input, output queues, call `function` in a subprocess or a thread.
Load/reload the description from a YML file. Prompt if no file given.
Save the description as a YML file. Prompt if no file given.
Return a color interpolated from the Palette.
Wait for the event, run the task, trigger the next task.
Run a function, catch, report and discard exceptions
Receive a message from the input source and perhaps raise an Exception.
Construct a layout.         SHOULD BE PRIVATE
Set the internal colors starting at an optional offset.
DEPRECATED: use self.color_list
Decorator for RestServer methods that take a single address
Override this method to get called right after ``self.index`` is set.
Compose a sequence of events into one event.
Draw line from point x0,y0 to x,1,y1. Will draw beyond matrix bounds.
Draw rectangle with top-left corner at x,y, width w and height h
Draw triangle with points x0,y0 - x1,y1 - x2,y2
Draw solid triangle with points x0,y0 - x1,y1 - x2,y2
Use with caution!
Generates a map of vector lengths from the center point to each coordinate.
Return a list of Segments that evenly split the strip.
Return a new segment starting right after self in the same buffer.
Stop the builder if it's running.
Open an instance of simpixel in the browser
:param c: either an object or a class     :return: the classname as a string
Tries to convert a value to a type constructor.
Write a series of frames as a single animated GIF.
Load either a filename, or a string representation of yml/json.
Order colors by hue, saturation and value, in that order.
Get a new or existing server for this key.
Set one section in a Project description
Update sections in a Project description
Toggle back and forth between a name and a tuple representation.
Try to coerce the argument into a color - a 3-tuple of numbers-
Return an image in the given mode.
Given a PIL.Image, returns a ColorList of its pixels.
Given an animated GIF, return a list with a colorlist for each frame.
Wait a little and then open a web browser page for the control panel.
Wait a little and then open a web browser page for the control panel.
Display an image on a matrix.
Display an image on the matrix
Display an image on the matrix
Every other row is indexed in reverse.
Every other column is indexed in reverse.
Coerce a list into a list of triplets.
Make an object from a symbol.
Return an integer index or None
Give each animation a unique, mutable layout so they can run         independently.
Guess the type of a file.
Get a notebook from the database.
Build a notebook model from database record.
Get a directory from the database.
Build a directory model from database directory record.
Build a file model from database record.
Save a notebook.
Save a non-notebook file.
Rename object from old_path to path.
Delete object corresponding to path.
Apply preprocessing steps to file/notebook content that we're going to     write to the database.
Add a new user if they don't already exist.
Delete a user and all of their resources.
Create a directory.
Return a WHERE clause that matches entries in a directory.
Delete a directory.
Internal implementation of dir_exists.
Return files in a directory.
Return subdirectories of a directory.
Return the names of all files/directories that are direct children of     api_dirname.
Return a WHERE clause matching the given API path and user_id.
Return a SELECT statement that returns the latest N versions of a file.
Default fields returned by a file query.
Get file data for the given user_id and path.
Check if a file exists.
Rename a directory.
Create a generator of decrypted files.
Delete all database records for the given user_id.
See docstrings for `generate_files` and `generate_checkpoints`.
Re-encrypt a row from ``table`` with ``id`` of ``row_id``.
Get all file ids for a user.
Get all file ids for a user.
Re-encrypt all of the files and checkpoints for a single user.
Create and return a function suitable for passing as a crypto_factory to     ``pgcontents.utils.sync.reencrypt_all_users``
Get the name from a column-like SQLAlchemy expression.
Convert a SQLAlchemy row that does not contain a 'content' field to a dict.
Convert a SQLAlchemy row that contains a 'content' field to a dict.
Create a checkpoint of the current state of a notebook
Create a checkpoint of the current state of a file
delete a checkpoint for a file
Get the content of a checkpoint.
Return a list of checkpoints for a given file
Rename all checkpoints for old_path to new_path.
Delete all checkpoints for the given path.
Purge all database records for the current user.
Resolve a path based on a dictionary of manager prefixes.
Prefix all path entries in model with the given prefix.
Decorator for methods that accept path as a first argument.
Parameterized decorator for methods that accept path as a second     argument.
Strip slashes from directories before updating.
Split an API file path into directory and name.
Write a notebook as base64.
Read a notebook from base64.
Decode base64 data of unknown format.
Decode base64 content for a file.
Iterate over all files visible to ``mgr``.
Iterate over the contents of all files visible to ``mgr``.
Re-encrypt data for all users.
Re-encrypt all files and checkpoints for a single user.
Unencrypt data for all users.
Unencrypt all files and checkpoints for a single user.
Temporarily write an alembic.ini file for use with alembic migration     scripts.
Upgrade the given database to revision.
Returns list of authors as a comma-separated         string (with 'and' before last author).
Queue an instance to be fetched from the database.
Fetch all queued instances of type `embed_type`, save results         to `self.instances`
Insert a fetched instance into embed block.
Load data in bulk for each embed block.
Perform validation of the widget data
Hides authenticated_fields if request context is missing or         user is not authenticated
Excludes fields that are included in the queryparameters
Get the latest article with the given primary key.
Overrides the default get_attribute method to convert None values to False.
Checks that the given widget contains the required fields
Checks that the given zone contains the required fields
Return True if id is a valid UUID, False otherwise.
Returns the user's permissions.
Modify the user's permissions.
Raise a ValidationError if data does not match the author format.
Save widget data for this zone.
Returns data from each field.
Prepare widget data for template.
Renders the widget as HTML.
Receive OAuth callback request from Facebook.
Renders the contents of the zone with given zone_id.
Handles the saving/updating of a Publishable instance.
Save the subsection to the parent article
Returns the file extension.
Copy the instance and make sure not to use a reference
Returns the asset as instance of :class:`.asset.Asset`
Refresh/Obtain an account's data from the API server
List balances of an account. This call returns instances of             :class:`amount.Amount`.
Obtain the balance of a specific Asset. This call returns instances of             :class:`amount.Amount`.
Add an other account to the blacklist of this account
Remove an other account from any list of this account
Recover the public key from the the signature
Sign a digest with a wif key
Properly Format Time that is `x` seconds in the future
Returns a datetime of the block with the given block             number.
Returns the timestamp of the block with the given block             number.
Returns the transaction as seen by the blockchain after being             included into a block
Refresh the data from the API server
Update the Core Exchange Rate (CER) of an asset
Manual execute a command on API (internally used)
Properly Format Time for permlinks
Properly Format Time that is `x` seconds in the future
Convert an operation id into the corresponding string
Decrypt the encrypted masterkey
Obtain the encrypted masterkey
Change the password that allows to decrypt the master key
Decrypt the content according to BIP38
Encrypt the content according to BIP38
Derive private key from the brain key and the current sequence             number
Derive private key from the brain key (and no sequence number)
Derive y point from x point
Return the point for the public key
Derive new private key from this private key and an arbitrary             sequence number
Execute a call by sending the payload
Claim a balance from the genesis block
This method returns the default **key** store         that uses an SQLite database internally.
Convert an operation id into the corresponding string
Find the next url in the list
Return the key if exists or a default value
Delete a key from the store
Check if the database table exists
Create the new table in the SQLite database
Append op(s) to the transaction builder
Returns an instance of base "Operations" for further processing
Show the transaction as plain json
Add a wif that should be used for signing of the transaction.
Construct the actual transaction and store it in the class's dict             store
Sign a provided transaction with the provided key(s)
Verify the authority of the signed transaction
Broadcast a transaction to the blockchain network
Clear the transaction builder and start from scratch
Store which accounts/keys are supposed to sign the transaction
Invert the price (e.g. go from ``USD/BTS`` into ``BTS/USD``)
Connect to blockchain network (internal use only)
Broadcast a transaction to the Blockchain
Let's obtain a new txbuffer
Sign the transaction with the provided private keys.
Test if a string looks like a regular object id of the             form:::
BIP0038 non-ec-multiply decryption. Returns WIF privkey.
Create a new wallet database
Add a private key to the wallet database
Obtain the private key for a given public key
Remove all keys associated with a given account
Obtain owner Private Key for an account from the wallet database
Obtain owner Active Key for an account from the wallet database
Obtain account name from private key
Obtain all accounts associated with a public key
Obtain the first account name from public key
Execute a call by sending the payload
Decrypt a message
Derive the share secret between ``priv`` and ``pub``
Initialize AES instance
Encode a message with a shared secret between Alice and Bob
Decode a message with a shared secret between Alice and Bob
Sign a message with an account's memo key
Verify a message with an account's memo key
Sign a message with an account's memo key
Verify a message with an account's memo key
Verify IPMI environment
Send IPMI 'command' via ipmitool
Find the given 'pattern' in 'content
Execute the given 'cmd'
Do format for NVMe device
Compare chunk meta, mode=[pfail, power, reboot]
Create LNVM device
Dump UnionType/StructType to STDOUT
Copy stream to buffer
Write buffer to file
Read file to buffer
Check the chunk is offline or not
Check the chunk is free or not
Check the chunk is free or not
Check the chunk is free or not
Execute a script or testcase
Dump the given trun to file
Create and initialize a testcase
setup res_root and aux_root, log info and run tcase-enter-hooks
Check the chunk is offline or not
Start DMESG job in thread
generate rate steady
Print, emphasized 'neutral', the given 'txt' message
Print, emphasized 'good', the given 'txt' message
Print, emphasized 'warning', the given 'txt' message
Print, emphasized 'error', the given 'txt' message
Print, emphasized based on rval
Define the list of 'exported' variables with 'prefix' with values from 'env'
Verify that the ENV defined NVMe device exists
Get a chunk-descriptor for the first chunk in the given state.
Kill all of FIO processes
Translate dict parameters to string
Get parameter of FIO
Run FIO job in thread
Extract hook names from the given entity
Parse descriptions from the the given tcase
Returns content of the given 'fpath' with HTML annotations for syntax     highlighting
Perform postprocessing of the given test run
Replace all absolute paths to "re-home" it
SSH: Run the given command over SSH as defined in environment
SSH: pull data from remote linux
Factory method for the assertion builder with value to be tested and optional description.
Asserts that the val is not identical to other, via 'is' compare.
Asserts that val is an instance of the given class.
Asserts that val is equal to one of the given items.
Helper to convert the given args and kwargs into a string.
Generate CSV file for training and testing data
Count the number of non-zero values for each feature in sparse X.
Turn tokens into a tokens of n-grams
Create feature array of character and surrounding characters
Read a specified amount
Schedules a wait time to be able to consume an amount
Get the projected rate using a provided amount and time
Downloads the object's contents to a file
Poll for the result of a transfer
Calculate the range parameter for multipart downloads/copies
Decrement the count by one
Checks to see if a file is a special UNIX file.
Convenience factory function to create from a filename.
Acquire the semaphore
Release the semaphore
Get an IO write task for the requested set of data
:param client: The client associated with the transfer manager
Pulls off an io queue to write contents to a file
Backwards compat function to determine if a fileobj is seekable
Uploads a file to S3
Downloads a file from S3
Copies a file in S3
Delete an S3 object.
Shutdown the TransferManager
Cancels all inprogress transfers
Wait until there are no more inprogress transfers
Retrieves a class for managing input for an upload based on file type
:param client: The client associated with the transfer manager
Sets the exception on the future.
Set a result for the TransferFuture
Set an exception for the TransferFuture
Waits until TransferFuture is done and returns the result
Cancels the TransferFuture
Add a done callback to be invoked when transfer is done
Announce that future is done running and run associated callbacks
Submit a task to complete
:param client: The client associated with the transfer manager
:param client: The client associated with the transfer manager
Convenience factory function to create from a filename.
Upload a file to an S3 object.
Download an S3 object to a file.
Iterate over steps in the parsed file.
Find the ast node which contains the text.
Iterate over steps in the parsed file.
Find the ast node which contains the text.
List team memberships for a team, by ID.
Update a team membership, by ID.
Delete a team membership, by ID.
Get a cat fact from catfact.ninja and return it as a string.
Delete a membership, by ID.
Convert a string (bytes, str or unicode) to unicode.
Convert a string (bytes, str or unicode) to bytes.
Verify that base_url specifies a protocol and network location.
Check to see if string is an validly-formatted web url.
Open the file and return an EncodableFile tuple.
Object is an instance of one of the acceptable types or None.
Given a dictionary or JSON string; return a dictionary.
strptime with the Webex Teams DateTime format as the default.
Update details for a room, by ID.
List all licenses for a given organization.
Creation date and time in ISO8601 format.
Function Decorator: Containerize calls to a generator function.
Attempt to get the access token from the environment.
Create a webhook.
Update a webhook, by ID.
Delete a webhook, by ID.
Remove max=null parameter from URL.
The timeout (seconds) for a single HTTP REST API request.
Enable or disable automatic rate-limit handling.
Update the HTTP headers used for requests in this session.
Given a relative or absolute URL; return an absolute URL.
Abstract base method for making requests to the Webex Teams APIs.
Lists messages in a room.
Post a message, and optionally a attachment, to a room.
Delete a message.
Create a new user account for a given organization
Get a person's details, by ID.
Update details for a person, by ID.
Remove a person from the system.
Get the details of the person accessing the API.
List all roles.
Update details for a team, by ID.
Serialize data to an frozen tuple.
Exchange an Authorization Code for an Access Token.
The date and time of the person's last activity.
Respond to inbound webhook JSON HTTP POST from Webex Teams.
Get the ngrok public HTTP URL from the local client API.
Find a webhook by name.
Return all rows from a cursor as a dict.
Parse a received datetime into a timezone-aware, Python datetime object.
Connect to the REST API, authenticating with a JWT for the current user.
Use this method decorator to ensure the JWT token is refreshed when needed.
Return redirect to embargo error page if the given user is blocked.
Query the Enrollment API for the course details of the given course_id.
Sort the course mode dictionaries by slug according to the COURSE_MODE_SORT_ORDER constant.
Call the enrollment API to enroll the user in the course specified by course_id.
Query the enrollment API to get information about a single course enrollment.
Retrieve the grade for the given username for the given course_id.
Retrieve the certificate for the given username for the given course_id.
Traverse a paginated API response and extracts and concatenates "results" returned by API.
Return results from the discovery service's search/all endpoint.
Return a paginated list of course catalogs, including name and ID.
Return the courses included in a single course catalog by ID.
Return single program by name, or None if not found.
Return single program by UUID, or None if not found.
Get a program type by its slug.
Find common course modes for a set of course runs.
Load data from API client.
Loads a response from a call to one of the Enterprise endpoints.
Create ContentMetadataItemTransmision models for the given content metadata items.
Update ContentMetadataItemTransmision models for the given content metadata items.
Delete ContentMetadataItemTransmision models associated with the given content metadata items.
Flag a method as deprecated.
Ignore any emitted warnings from a function.
Save the model with the found EnterpriseCustomerUser.
Serialize the EnterpriseCustomerCatalog object.
Verify that the username has a matching user.
Save the EnterpriseCustomerUser.
Return the updated program data dictionary.
Validates the user_email, if given, to see if an existing EnterpriseCustomerUser exists for it.
Validates that the course run id is part of the Enterprise Customer's catalog.
Validate that at least one of the user identifier fields has been passed in.
Create the `role_based_access_control` switch if it does not already exist.
Delete the `role_based_access_control` switch.
Create and activate the SAP_USE_ENTERPRISE_ENROLLMENT_PAGE switch if it does not already exist.
Send a completion status call to SAP SuccessFactors using the client.
Handle the case where the employee on SAPSF's side is marked as inactive.
Update Marketing urls in course metadata and return updated course.
Collect learner data for the ``EnterpriseCustomer`` where data sharing consent is granted.
Collect the learner completion data from the course certificate.
Get enterprise user id from user object.
Get course's duration as a timedelta.
Remove content metadata items from the `items_to_create`, `items_to_update`, `items_to_delete` dicts.
Parse and validate arguments for send_course_enrollments command.
Send xAPI statements.
Send xAPI analytics data of the enterprise learners to the given LRS.
Populates the ``DataSharingConsent`` model with the ``enterprise`` application's consent data.
Make a POST request using the session object to a Degreed endpoint.
Make a DELETE request using the session object to a Degreed endpoint.
Instantiate a new session object for use in connecting with Degreed
Return whether or not the specified content is available to the EnterpriseCustomer.
Retrieve the list of courses contained within the catalog linked to this enterprise.
Retrieve the list of entitlements available to this learner.
Return whether or not the EnterpriseCustomerCatalog contains the specified content.
Return the metadata for the specified course.
Return the metadata for the specified course run.
Return the metadata for the specified program.
DRF view to list all catalogs.
DRF view to get catalog details.
Retrieve the list of courses contained within this catalog.
Get a user-friendly message indicating a missing parameter for the API endpoint.
Return the title of the content item.
Return the description of the content item.
Return the image URI of the content item.
Return the title of the courserun content item.
Return the description of the courserun content item.
Return the schedule of the courseun content item.
Convert an ISO-8601 datetime string to a Unix epoch timestamp in some magnitude.
Determine whether the current time is on the interval [start, end].
Convert a datetime.timedelta object or a regular number to a custom-formatted string.
Return the transformed version of the course description.
Return link by email.
Link user email to Enterprise Customer.
Unlink user email from Enterprise Customer.
Send xAPI statement for course enrollment.
Send xAPI statement for course completion.
Get the consent record relevant to the request at hand.
Get an HTTPResponse that can be used when there's no related EnterpriseCustomer.
Perform other one-time initialization steps.
Handle pre_migrate signal - disconnect User post_save handler.
Get object for the statement.
Parse csv file and return a stream of dictionaries representing each row.
Validate email to be linked to Enterprise Customer.
Clean the notify_on_enrollment field.
Clean fields that depend on each other.
Verify that the selected mode is valid for the given course .
Verify that selected mode is available for program and all courses in the program
Retrieve a list of catalog ID and name pairs.
Clean form fields prior to database entry.
Override of clean method to perform additional validation
Ensure that all necessary resources to render the view are present.
Get the set of variables that are needed by default across views.
Get the set of variables that will populate the template by default.
Render a form to collect user input about data sharing consent.
Process the above form.
Handle the enrollment of enterprise learner in the provided course.
Set the final discounted price on each premium mode.
Retrieve fundamental details used by both POST and GET versions of this view.
Retrieve fundamental details used by both POST and GET versions of this view.
Show Program Landing page for the Enterprise's Program.
Get the base variables for any view to route to.
Redirects to the appropriate view depending on where the user came from.
Set default value for `EnterpriseCustomerCatalog.content_filter` if not already set.
Assign an enterprise learner role to EnterpriseCustomerUser whenever a new record is created.
Ensure the user making the API request is associated with an EnterpriseCustomer.
Ensure at least one of the specified query parameters are included in the request.
Transmit the courseware data for the EnterpriseCustomer(s) to the active integration channels.
Create the enterprise roles if they do not already exist.
Delete the enterprise roles.
Returns a batched queryset of User objects.
Returns a batched queryset of User objects.
Returns a batched queryset of User objects.
Returns a batched queryset of User objects.
Send a completion status call to Degreed using the client.
Get the EnterpriseCustomer associated with a running pipeline.
Perform the linking of user in the process of logging to the Enterprise Customer.
Find the LMS user from the LMS model `UserSocialAuth`.
Instantiate a new session object for use in connecting with SAP SuccessFactors
Make a post request using the session object to a SuccessFactors endpoint.
Make recursive GET calls to traverse the paginated API response for search students.
Filter only for the user's ID if non-staff.
Send a completion status call to the integrated channel using the client.
Handle the case where the transmission fails.
Validate that a particular image extension.
Validate that a particular image size.
Run sphinx-apidoc after Sphinx initialization.
Adds the optional arguments: ``--enterprise_customer``, ``--channel``
Get result for the statement.
Get the contents of a file listing the requirements
Iterate over each learner data record and transmit it to the integrated channel.
Render the given template with the stock data.
Handle GET request - render "Transmit courses metadata" form.
Handle POST request - handle form submissions.
Get the list of EnterpriseCustomerUsers we want to render.
Get the list of PendingEnterpriseCustomerUsers we want to render.
Link single user by email or username.
Enroll a single user in any number of courses using a particular course mode.
Enroll existing users in a course, and create a pending enrollment for nonexisting users.
Deduplicate any outgoing message requests, and send the remainder.
Notify learners about a program in which they've been enrolled.
Create message for the users who were enrolled in a course or program.
Create message for the users who were enrolled in a course or program.
Handle GET request - render linked learners list and "Link learner" form.
Handle POST request - handle form submissions.
Perform the query and returns a single object matching the given keyword arguments.
Build a ProxyDataSharingConsent using the details of the received consent records.
Send xAPI analytics data of the enterprise learners to the given LRS.
Prefetch Users from the list of user_ids present in the persistent_course_grades.
Create the enterprise roles if they do not already exist.
Delete the enterprise roles.
Create HTML and plaintext message bodies for a notification.
Get a subject line for a notification email.
Send an email notifying a user about their enrollment in a course.
Get the ``EnterpriseCustomer`` instance associated with ``uuid``.
Return the object for EnterpriseCustomerUser.
Return url with updated query parameters.
Traverse a paginated API response.
Format the price to have the appropriate currency and digits..
Get a configuration value, or fall back to ``default`` if it doesn't exist.
Return the current course run on the following conditions.
Strip all tags from a string except those tags provided in `allowed_tags` parameter.
Create the enterprise roles if they do not already exist.
Delete the enterprise roles.
LRS client instance to be used for sending statements.
Save xAPI statement.
Check that if request user has implicit access to `ENTERPRISE_DASHBOARD_ADMIN_ROLE` feature role.
Check that if request user has implicit access to `ENTERPRISE_CATALOG_ADMIN_ROLE` feature role.
Check that if request user has implicit access to `ENTERPRISE_ENROLLMENT_API_ADMIN_ROLE` feature role.
Transform ISO language code (e.g. en-us) to the language name expected by SAPSF.
Transmit the learner data for the EnterpriseCustomer(s) to the active integration channels.
Return the action method to clear the catalog ID for a EnterpriseCustomer.
Login to pybotvac account using provided email and password.
Get information about maps of the robots.
Get information about robots connected to account.
Return a requested map from a robot.
Get information about persistent maps of the robots.
Add add the edge lengths as a :any:`DiGraph<networkx.DiGraph>`     for the graph.
Prepares a graph for use in :class:`.QueueNetwork`.
Calculates the distance between two points on earth.
Takes a graph and returns an adjacency list.
Takes an adjacency matrix and returns an adjacency list.
Takes an adjacency list, dict, or matrix and returns a graph.
Returns all edges with the specified edge type.
Returns the arguments used when plotting.
Returns a color for the queue.
Adds an extra service time to the next departing         :class:`Agent's<.Agent>` service time.
Fetches data from the queue.
Simulates the queue forward one event.
Change the number of servers in the queue to ``n``.
Animates the network as it's simulating.
Resets the queue to its initial state.
Clears data from all queues.
Returns a deep copy of itself.
Prepares the ``QueueNetwork`` for simulation.
Resets all edge and vertex colors to their default values.
Simulates the network forward.
Tells the queues to collect data on agents' arrival, service         start, and departure times.
Tells the queues to stop collecting data on agents.
Returns the routing probabilities for each vertex in the         graph.
Function that specifies the interaction with a         :class:`.ResourceQueue` upon departure.
Simulates the queue forward one event.
Returns the number of elements in the set that ``s`` belongs to.
Locates the leader of the set to which the element ``s`` belongs.
Merges the set that contains ``a`` with the set that contains ``b``.
Creates a random graph where the vertex types are     selected using their pagerank.
Randomly sets ``edge_type`` (edge type) properties of the graph.
Strip # markers at the front of a block of comment text.
Yield all of the documentation for trait definitions on a class object.
Add lines to the block.
Process a file object.
Process a single token.
We are transitioning from a noncomment to a comment.
Possibly add a new comment.
Make the index mapping lines of actual code to their associated         prefix comments.
Find the comment block just before the given line number.
Output DSMR data to console.
Creates a DSMR asyncio protocol.
Add incoming data to buffer.
Stop when connection is lost.
Parse telegram from string to dict.
Adds configuration files to tarfile instance.
Adds files specified in self.config['files'] to tarfile instance.
Adds a single file in tarfile instance.
Merges ``config`` on top of ``template``.
Merges ``list2`` on top of ``list1``.
adds a file in self.config['files'] only if not present already
returns the template context for install.sh and uninstall.sh
Adds configuration files to tarfile instance.
Adds configuration files to tarfile instance.
Get a single fact from this node.
Gets a single node from PuppetDB.
Get the available catalog for a given node.
:type result: opendnp3.CommandPointResult
:type result: opendnp3.ICommandTaskResult
Direct operate a set of commands
Select and operate a single command
Select and operate a set of commands
The Outstation has been started from the command line. Execute ad-hoc tests if desired.
Set up the OpenDNP3 configuration.
Configure the Outstation's database of input point definitions.
Return the application-controlled IIN field.
Record an opendnp3 data value (Analog, Binary, etc.) in the outstation's database.
Display a menu of command-line options. Command syntax is: menu
Parse an index (integer) and value (string) from command line args and return them.
Parse an index (integer) from command line args and return it.
Display a menu of command-line options. Command syntax is: menu
Set the channel log level to ALL_COMMS. Command syntax is: chan_log_all
Set the channel log level to NORMAL. Command syntax is: chan_log_normal
Set the master log level to ALL_COMMS. Command syntax is: mast_log_all
Set the master log level to NORMAL. Command syntax is: mast_log_normal
Send a DirectOperate BinaryOutput (group 12) CommandSet to the Outstation. Command syntax is: o3
Write a TimeAndInterval to the Outstation. Command syntax is: write_time
Find cached `BDP` / `BDS` queries
Parse the description in the README file
Format `pdblp` outputs to column-based results
Format intraday data
Check whether data is done for the day and save
Flatten any array of items to list
Recursively iterate lists and tuples
Convert dict to string
Load parameters for assets
Load assets infomation from file
Convert YAML input to hours
Make folder as well as all parent folders if not exists
Search all files with criteria     Returned list will be sorted by last modified
Search all folders with criteria     Returned list will be sorted by last modified
Sort files or folders by modified time
Filter files or dates by date patterns
File modified time in python
Explicitly specify start time and end time
Convert tz from ticker / shorthands to timezone
Check number of trials for missing values
Update number of trials for missing values
Given a list of range specifiers for python, ensure compatibility.
Find all of the packages.
Create a command class with the given optional prerelease class.
Create a command that calls the given function.
Gets the newest/oldest mtime for all files in a directory.
Return a Command that checks that certain files exist.
Wrap a setup command
Get a package_data and data_files handler command.
Expand file patterns to a list of `package_data` paths.
Translate and compile a glob pattern to a regular expression matcher.
Iterate over all the parts of a path.
Translate a glob PATTERN to a regular expression.
Translate a glob PATTERN PART to a regular expression.
Send DDL to create the specified `table`
Write the contents of `table`
Write DDL to truncate the specified `table`
Write DDL to create the specified `table`.
Write DDL of `table` indexes to the output file
Write DDL of `table` constraints to the output file
Write TRIGGERs existing on `table` to the output file
Write the data contents of `table` to the output file.
Open and manage a BCon wrapper to a Bloomberg API session
Start connection and initialize session services
Initialize blpapi.Session services
Get Open, High, Low, Close, Volume, and numEvents for a ticker.         Return pandas DataFrame
Return an approximate number of queued tasks in the queue.
Retrieve a task handler from the queue.
Closes the existing database connection and re-opens it.
Returns the first row returned for the given query.
Executes the given query, returning the lastrowid from the query.
Executes the given query, returning the lastrowid from the query.
Returns a new connection to the database.
Run a set of InsertWorkers and record their performance.
`agg` should be (host, port)             Returns a live connection from the connection pool
Returns the number of connections cached by the pool.
Build a simple expression ready to be added onto another query.
Build a update query.
Release the lock.
Connect to the database specified
Initialize the required tables in the database
Destroy the SQLStepQueue tables in the database
Check to see if we are still active.
Notify the queue that this task is still active.
Assemble a sequence of textual representation of EVM instructions
Disassemble a single instruction from a bytecode
Disassemble all instructions in bytecode
Disassemble an EVM bytecode
Assemble an EVM program
Disassemble an EVM bytecode
Assemble an EVM program
Issues a reconnection by setting the reconnect_required event.
Checks if a Pong message was received.
Sends the given Payload to the API via the websocket connection.
Passes data up to the client via a Queue().
Unpauses the connection.
Distributes system messages to the appropriate handler.
Handle Error messages and log them accordingly.
Resubscribes to all channels found in self.channel_configs.
Updates the timestamp for the given channel id.
Reset the client.
Return a queue containing all received candles data.
Send configuration to websocket server
Subscribe to the passed pair's ticker channel.
Subscribe to the passed pair's trades channel.
Unsubscribe to the passed pair's trades channel.
Subscribe to the passed pair's OHLC data channel.
Unsubscribe to the passed pair's OHLC data channel.
Authenticate with the Bitfinex API.
Cancel one or multiple orders via Websocket.
Update an existing device
Iterate through all Connectors
Delete a schema.  Parameter: schemaId (string). Throws APIException on failure.
Update a schema. Throws APIException on failure.
Updates the content for a schema.  Parameters: schemaId (string). Throws APIException on failure.
Disconnect the client from IBM Watson IoT Platform
Subscribe to device command messages
Publish a command to a device
Retrieves the last cached message for specified event from a specific device.
Force a flush of the index to storage. Renders index         inaccessible.
Inserts an item into the index with the given coordinates.
Return number of objects that intersect the given coordinates.
Return ids or objects in the index that intersect the given         coordinates.
Returns the ``k``-nearest objects to the given coordinates.
Returns the bounds of the index
Deletes items from the index with the given ``'id'`` within the         specified coordinates.
[xmin, ymin, xmax, ymax] => [xmin, xmax, ymin, ymax]
[xmin, xmax, ymin, ymax, zmin, zmax]             => [xmin, ymin, zmin, xmax, ymax, zmax]
Must be overridden. Must return a string with the loaded data.
Inserts an item into the index with the given coordinates.
Return ids or objects in the index that intersect the given         coordinates.
Deletes the item from the container within the specified         coordinates.
Error checking for void* returns that might be empty with no error
The likelihood that the context is a "member".
Parse 10-Q or 10-K XML report.
Convert string into camel case.
Convert string into capital case.     First letters will be uppercase.
Convert string into path case.     Join punctuation with slash.
Convert string into spinal case.     Join punctuation with backslash.
Convert string into snake case.     Join punctuation with underscore
For djangorestframework <=2.3.14
Return a BytesIO instance of `image` cropped to `width` and `height`.
Return a BytesIO instance of `image` that fits in a bounding box.
Return a BytesIO instance of `image` with inverted colors.
Ensure data is prepped properly before handing off to ImageField.
Process the field's placeholder image.
Return field's value just before saving.
Update field's ppoi field, if defined.
Handle data sent from MultiValueField forms that set ppoi values.
Prepare field for serialization.
Discover versatileimagefield.py modules.
Register a new SizedImage subclass (`sizedimage_cls`).
Register a new FilteredImage subclass (`filterimage_cls`).
Return the appropriate URL.
Build the filters and sizers for a field.
Delete files in `root_folder` which match `regex` before file ext.
Preprocess an image.
Receive a PIL Image instance of a GIF and return 2-tuple.
Receive a PIL Image instance of a JPEG and returns 2-tuple.
Return a PIL Image instance stored at `path_to_image`.
Save an image to self.storage at `save_path`.
Return PPOI value as a string.
Create a resized image.
Render the widget as an HTML string.
Build an attribute dictionary.
Return a `path_to_image` location on `storage` as dictated by `width`, `height`     and `filename_key`
Return the 'filtered filename' (according to `filename_key`)     in the following format:     `filename`__`filename_key`__.ext
Return the 'filtered path'
Validate a list of size keys.
Build a URL from `image_key`.
Retrieve a validated and prepped Rendition Key Set from     settings.VERSATILEIMAGEFIELD_RENDITION_KEY_SETS
Decodes raw bytecode, yielding `Instruction`s.
Decodes raw WASM modules, yielding `ModuleFragment`s.
Deprecates a function, printing a warning on the first usage.
Checks the validity of the input.
Helper method that returns the index of the string based on node's         starting index
Helper method returns the starting indexes of strings in GST
Send an :class:`~panoramisk.actions.Action` to the server:
Send a :class:`~panoramisk.actions.Command` to the server::
Send a :class:`~panoramisk.actions.Command` to the server:
connect to the server
register an event. See :class:`~panoramisk.message.Message`:
Close the connection
Send a command for FastAGI request:
Parse read a response from the AGI and parse it.
Add a route for FastAGI requests:
Delete a route for FastAGI requests:
Check the AGI code and return a dict to help on error handling.
return True if a response status is Success or Follows:
Convert a multi values header to a case-insensitive dict:
Returns data from a package directory.     'path' should be an absolute path.
Query the oracle to find out whether i and j should be must-linked
Create a graph of constraints for both must- and cannot-links
Converts a fitted Scikit-Learn pipeline to PMML.
Translates a regular TPOT configuration to a PMML-compatible TPOT configuration.
Returns an instance of the formset
If the formset is valid, save the associated models.
Handles GET requests and instantiates a blank version of the formset.
If the form and formsets are valid, save the associated models.
Handles GET requests and instantiates a blank version of the form and formsets.
Returns the start date for a model instance
Returns the end date for a model instance
Returns an integer representing the first day of the week.
Returns a queryset of models for the month requested
Get primary key properties for a SQLAlchemy model.
Deserialize a serialized value to a model instance.
Retrieve the related object from an existing instance in the DB.
Add keyword arguments to kwargs (in-place) based on the passed in         `Column <sqlalchemy.schema.Column>`.
Add keyword arguments to kwargs (in-place) based on the passed in         relationship `Property`.
Deserialize data to internal representation.
Takes a snapshot of the database
Returns a list of snapshots
Restores the database from a snapshot
Renames a snapshot
Apply function to list of elements.
Generate a function that will clean and tokenize text.
Combine the cleaner and tokenizer.
Read version from __init__.py without loading any files
Return a new Colorful object with the given color config.
Parse the given color files.
Parse the given rgb.txt file into a Python dict.
Parse a JSON color file.
Sanitze the given color palette so it can     be safely used by Colorful.
Show the modifiers and colors
Show the modifiers and colors
Convert RGB to ANSI 256 color
Convert RGB to ANSI 16 color
Convert the given hex string to a     valid RGB channel triplet.
Check if the given hex value is a valid RGB color
Show the modifiers and colors
Translate the given color name to a valid     ANSI escape code.
Resolve the given modifier name to a valid     ANSI escape code.
Translate the given style to an ANSI escape code     sequence.
Style the given string according to the given     ANSI style string.
Set the colorpalette which should be used
Use a predefined style as color palette
Read attribute from sysfs and return as string
Find the port chain a device is plugged on.
Set device calibration data based on settings in /etc/temper.conf.
Get data from the USB device.
Get device humidity reading.
Send device a control request with standard parameters and <data> as         payload.
Read data from device.
The inverse of this bidict type, i.e. one with *_fwdm_cls* and *_invm_cls* swapped.
Check *key* and *val* for any duplication in self.
Update, rolling back on failure.
Order-sensitive equality check.
r"""Create a new subclass of *base_type* with custom accessors.
Yield the items from the positional argument (if given) and then any from *kw*.
Yield the inverse items of the provided object.
Remove all items.
Move an existing key to the beginning or end of this ordered bidict.
Associate *key* with *val* unconditionally.
Like a bulk :meth:`forceput`.
Like a bulk :meth:`put`.
Create a new temporary file and write some initial text to it.
Get a list of contacts from one or more address books.
Merge the parsed arguments from argparse into the config object.
Load all address books with the given names from the config.
Prepare the search query string from the given command line args.
TODO: Docstring for generate_contact_list.
Create a new contact.
Add a new email address to contacts, creating new contacts if necessary.
Print a phone application friendly contact table.
Print a user friendly contacts table.
Modify a contact in an external editor.
Remove a contact from the addressbook.
Open the vcard file for a contact in an external editor.
Merge two contacts into one.
Copy or move a contact to a different address book.
Parse the command line arguments and return the namespace that was     creates by argparse.ArgumentParser.parse_args().
Convert the named field to bool.
Use this to create a new and empty contact.
Use this if you want to create a new contact from user input.
Get some part of the "N" entry in the vCard as a list
:returns: list of organisations, sorted alphabetically         :rtype: list(list(str))
:rtype: list(str) or list(list(str))
Parse type value of phone numbers, email and post addresses.
Convert string to date object.
Search in all fields for contacts matching query.
Search in the name filed for contacts matching query.
Search for contacts with a matching uid.
Create a dictionary of shortend UIDs for all contacts.
Get the shortend UID for the given UID.
Get one of the backing abdress books by its name,
Reads the file from Github
Create the JSON for configuring arthur to collect data
Return the GitHub SHA for a file in the repository
Get the uuid for a profile name
Execute the raw phase for a given backend section, optionally using Arthur
Execute the merge identities phase
Config logging level output output
Parse command line arguments
Get params to execute the micro-mordred
Get the kibiter vesion.
Upload a panel to Elasticsearch if it does not exist yet.
Upload to Kibiter the title for the dashboard.
Create the menu definition to access the panels in a dashboard.
Remove existing menu for dashboard, if any.
Get the menu entries from the panel definition
Compose projects.json only for mbox, but using the mailing_lists lists
Compose projects.json for gerrit, but using the git lists
Compose projects.json for bugzilla
Compose the projects JSON file only with the projects name
Compose projects.json with all data sources
Execute the studies configured for the current backend
Retain the identities in SortingHat based on the `retention_time`         value declared in the setup.cfg.
return list with the repositories for a backend_section
Convert from eclipse projects format to grimoire projects json format
Define all the possible config params
Change a param in the config
Add new configuration to self.conf.
Just a wrapper to the execute_batch_tasks method
Start a task manager per backend to complete the tasks.
Tasks that should be done just one time
Validates the provided config to make sure all the required fields are          there.
Customize the message format based on the log level.
Initialize the dictionary of architectures for assembling via keystone
Initialize the dictionary of architectures for disassembling via capstone
Sys.out replacer, by default with stderr.
Compact a list of integers into a comma-separated string of intervals.
Get a storage client using the provided credentials or defaults.
Load context from a text file in gcs.
Load a file from either local or gcs.
Check whether the file exists, in GCS.
Check whether the file exists, on local disk or GCS.
Check whether there is a GCS object whose name starts with the prefix.
True if each output contains at least one file or no output specified.
Return a dict object representing a pipeline input argument.
Convert the integer UTC time value into a local datetime.
Return a filter string for operations.list().
Determine if a pipelines operation is a dsub request.
Gets the list of operations for the specified filter.
Returns a dictionary of metadata fields for the job.
Returns a Pipeline objects for the job.
Yields operations based on the input criteria.
Returns a value from the operation for a specific set of field names.
Returns a dictionary of envs or file inputs for an operation.
Returns an error message if the operation failed for any reason.
Create a task name from a job-id, task-id, and task-attempt.
Rewrite string so that all characters are valid in a docker name suffix.
Determine if the provided time is within the range, inclusive.
Return a Task object with this task's info.
Returns a command to delocalize logs.
Return a dictionary of environment variables for the container.
Returns a directory or file path to be the target for "gsutil cp".
Copy outputs from local disk to GCS.
Get the dsub version out of the _dsub_version.py source file.
Extract elements from an operation event and map to a named event.
Return a dict with variables for the 'prepare' action.
Return a dict with variables for the 'localization' action.
Return a dict with variables for the 'delocalization' action.
Returns a dictionary of for the user container environment.
Returns a Pipeline objects for the task.
Submit the job (or tasks) to be executed.
Gets the list of operations for the specified filter.
Yields operations based on the input criteria.
Returns the status of this operation.
Returns an error message if the operation failed for any reason.
Returns a value from the operation for a specific set of field names.
Build a VirtualMachine object for a Pipeline request.
Build an Action object for a Pipeline request.
Return a list of operations. See base.py for additional detail.
Create an argument parser, adding in the list of providers.
A string with the arguments to point dstat to the same provider+project.
Extract job-global resources requirements from input args.
Allow provider to extract job-specific metadata from command-line args.
Resolve the logging path from job and task properties.
Wait for job and retry any tasks that fail.
A defaultdict with, for each job, a list of its tasks.
Execute job/task submission from command-line arguments.
r"""Craft a simple command name from the command.
Helper function to return an appropriate set of mount parameters.
Split a string into a pair, which can have one empty value.
Parse the header from the tasks file into env, input, output definitions.
Parse flags of key=value pairs and return a list of argclass.
Parse env, input, and output parameters into a job parameters and data.
Validate that arguments passed to submit_job have valid file providers.
If the --version flag is passed, print version to stdout and exit.
Compute the create time (UTC) for the list filter.
Convert the timeout duration to seconds.
Produce a default variable name if none is specified.
Accept a raw uri and return rewritten versions.
Find the file provider for a URI.
Do basic validation of the uri, return the path and filename.
Return a valid docker_path, uri, and file provider from a flag value.
Return a *FileParam given an input uri.
Return a valid docker_path from a Google Persistent Disk url.
Return a valid docker_path for a local file path.
Return a valid docker_path for a GCS bucket.
Validate that the name is a valid GCS bucket.
Turn the specified name and value into a valid Google label.
Return a new dict with any empty items removed.
Converts a task-id to the numeric task-id.
Raise ValueError if the label is invalid.
Populate a JobDescriptor from the local provider's original meta.yaml.
Populate and return a JobDescriptor from a YAML string.
Returns the task_descriptor corresponding to task_id.
Return a dictionary of environment variables for the user container.
Return a multi-line string with export statements for the variables.
Return a multi-line string with a shell script to copy recursively.
Return a multi-line string with export statements for the variables.
Return a multi-line string with a shell script to copy recursively.
Return a multi-line string with export statements for the variables.
Kill jobs or job tasks.
Return the operation's array of actions.
Return the value for the specified action.
Return the environment for the operation.
Return the image for the operation.
Return the events (if any) with a non-zero exitStatus.
Return all events of a particular type.
Return the most recent timestamp in the operation.
Determine if a pipelines operation is a dsub request.
Create a new table that is a summary of the input rows.
return a dict with the task's info (more if "full" is set).
Generate formatted jobs individually, in order of create-time.
Return a value for display; if longer than max length, use ellipsis.
Returns a string of comma-delimited key=value pairs.
Returns a list of zones based on any wildcard input.
Build a set() of standard job and task labels.
Returns a dictionary of metadata fields for the job.
Returns the job-id or job-id.task-id for the operation.
Cancel a batch of operations.
Return True if we should retry. False otherwise.
Configures genomics API client.
Returns a jsonified response with the specified HTTP status code.
Performs the actual sending action and returns the result
Return the Exception data in a format for JSON-RPC
A wrapper for :func:`dispatch` that creates a one-command parser.     Uses :attr:`PARSER_FORMATTER`.
Encodes given value so it can be written to given file object.
Create a new config file at the default location.
Writes `self.cfg` to `self.config_file`.
A :class:`list` of all :class:`Source` objects.
A :class:`dict` of all config options.
Returns the :class:`Source` of the given nick.
Checks if the given values in the config file are sane.
Validate a configuration key according to `section.item`.
Searches the given text for mentions generated by `expand_mention()` and returns a human-readable form.
Appends tzinfo and assumes UTC, if datetime object has no tzinfo already.
Checks if specified URL is cached.
Adds new tweets to the cache.
Decentralised, minimalist microblogging service for hackers.
Append a new tweet to your twtxt file.
Add a new source to your followings.
Remove an existing source from your followings.
Return human-readable relative time string.
When provided with a column name, will sort the results of your query::
Will return the total count of the objects that match the specified         filters.::
Returns only the first result from the query, if any.
Will delete the entities that match at the time the query is executed.
Search for model ids that match the provided filters.
Returns the count of the items that match the provided filters.
Useful when you want exclusive access to an entity across all writers.::
Adds an entity to the session.
Fetches an entity from the session based on primary key.
Will fetch one or more entities of this type from the session or         Redis.
Parse the options, set defaults and then fire up PhantomJS.
Create a nice image name from the url.
>>> bytes2human(10000)     '9K'     >>> bytes2human(100001221)     '95M'
>>> human2bytes('1M')     1048576     >>> human2bytes('1G')     1073741824
Connect to FTP server, login and return an ftplib.FTP instance.
Return the number of bytes transmitted in 1 second.
Decorator. Reraising any exception (except `CancelledError` and     `NotImplementedError`) with universal exception     :py:class:`aioftp.PathIOError`
Decorator. Raises exception when file methods called with wrapped by     :py:class:`aioftp.AsyncPathIOContext` file object.
Clone throttles without memory
Update timeout for all throttles
Checks if any of expected matches received.
Parsing `EPSV` (`message (|||port|)`) response.
Parsing `PASV` server response.
Parse LIST response with both Microsoft Windows® parser and         UNIX parser
Parsing MLS(T|D) response.
Create stream for write data to `destination` file.
Create stream for append (write) data to `destination` file.
Grabs an image directly to a buffer.
Copy the contents of the screen to PIL image memory.
Write data from process tiles into PNG file(s).
Read existing process output.
Create a metadata dictionary for rasterio.
Open a Mapchete process.
Count number of tiles intersecting with geometry.
Process a large batch of tiles.
Count number of tiles intersecting with geometry.
Run the Mapchete process.
Read from written process output.
Write data into output format.
Extract data from tile.
Read existing output data from a previous run.
Open input data.
Calculate hillshading from elevation data.
Extract contour lines from elevation data.
Clip array by geometry.
Clip input array with a vector list.
Create tile pyramid out of input raster.
Create a tile pyramid out of an input raster dataset.
Determine minimum and maximum zoomlevel.
Validate whether value is found in config and has the right type.
Validate and return zoom levels.
Return a list of zoom levels.
Return the element filtered by zoom level.
Reverse tree flattening.
Process bounds as defined in the configuration.
Output object of driver.
Input items used for process stored in a dictionary.
Generate indexes for given zoom level.
Return the recommended segmentation value in input file units.
Read reprojected & resampled input data.
Check if there is data within this tile.
Read existing process output.
Write data from process tiles into GeoJSON file(s).
Check if output format is valid with other process parameters.
Read data from process output.
Execute a Mapchete process.
Return all available input formats.
Return output class of driver.
Return input class of driver.
List input and/or output formats.
Read reprojected & resampled input data.
Extract contour lines from an array.
Return a list of values between min and max within an interval.
Create an empty Mapchete and process file in a given directory.
Check whether output tiles of a tile (either process or output) exists.
Determine target file path.
Create directory and subdirectory if necessary.
Check whether process output is allowed with output driver.
Extract subset from multiple tiles.
Read reprojected & resampled input data.
Return ``BufferedTile`` object of this ``BufferedTilePyramid``.
Read existing process output.
Create a metadata dictionary for rasterio.
Convert data to web output (raster only).
Open process output as input for other process.
Read reprojected & resampled input data.
Check if there is data within this tile.
Create a metadata dictionary for rasterio.
Convert data to web output.
Serve a Mapchete process.
Configure and create Flask app.
Extract a numpy array from a raster file.
Write a window from a numpy array to an output file.
Extract and resample from array to target tile.
Return a rasterio.io.MemoryFile instance from input.
Turn input data into a proper array for further usage.
Read reprojected & resampled input data.
Check if there is data within this tile.
Reproject a geometry to target CRS.
Read a window of an input vector dataset.
Write features to GeoJSON file.
Return geometry of a specific type if possible.
Determine the best base zoom level for a raster.
Return the recommended segmentation value in input file units.
Determine the best zoom level in target TilePyramid from given Tile.
Determine whether file path is remote or local.
Check if file exists either remote or local.
Return absolute path if path is local.
Return relative path if path is local.
Write local or remote.
Read local or remote.
Return a merged set of custom and default GDAL/rasterio Env options.
Replacement for pickle.dump() using _LokyPickler.
Attach a reducer function to a given type in the dispatch table.
Construct or retrieve a semaphore with the given name
Return the number of CPUs the current process can use.
Iterates over zip()ed iterables in chunks.
Safely send back the given result or exception
Evaluates calls from call_queue and places the results in result_queue.
Fills call_queue with _WorkItems from pending_work_items.
Manages the communication between this process and the worker processes.
ensures all workers and management thread are running
Returns an iterator equivalent to map(fn, iter).
Wrapper for non-picklable object to use cloudpickle to serialize them.
Spawn a server process for this manager object
Return a wrapper for an fd.
Return the current ReusableExectutor instance.
Wait for the cache to be empty before resizing the pool.
Close all the file descriptors except those in keep_fds.
Terminate a process and its descendants.
Recursively kill the descendants of a process before killing it.
Return a formated string with the exitcodes of terminated workers.
Format a list of exit code with names of the signals if possible
Run semaphore tracker.
Make sure that semaphore tracker process is running.
Execute a code object.
Use this to set where to read from.
Read a line of input. EOFError will be raised on EOF.
Run debugger on function call: `func(*args, **kwds)'
Run each function in `hooks' with args
Print out a source location , e.g. the first line in     line in:         (/tmp.py:2
Remove memory of state variables set in the command processor
Arrange for file of debugger commands to get read in the         process-command loop.
Read the command history file -- possibly.
Write the command history file -- possibly.
Populate self.lists and hashes:         self.commands, and self.aliases, self.category
Read a line of input. EOFError will be raised on EOF.
Disassemble classes, methods, functions, or code.
Disassemble a code object.
Return a count of the number of frames
Print count entries of the stack trace
Return a string representation of an object
Return a string representation of an object
Find subcmd in self.subcmds
Show short help for a subcommand.
Run subcmd_name with args using obj for the environent
:param file_inp:     a `filename` or ``sys.stdin``?     :param file_out:     a `filename` or ``sys.stdout`?`
Enter the debugger.
List the command categories and a short description of each.
Show short help for all commands in `category'.
Current line number in source file
Use this to set where to read from.
Read a line of input. EOFError will be raised on EOF.
Return True if we are looking at a class definition statement
quit command when there's just one thread.
quit command when several threads are involved.
Get bacground from     default values based on the TERM environment variable
Consult (environment) variables DARK_BG and COLORFGB     On return, variable is_dark_bg is set
display any items that are active
Return the current debugger instance (if any),     or creates a new one.
Set breakpoint at current location, or a specified frame
Given the path to a .py file, return the path to its .pyc/.pyo file.
Execute a code object.
Find the corresponding signal name for 'num'. Return None     if 'num' is invalid.
Find the corresponding signal number for 'name'. Return None     if 'name' is invalid.
Print status for a single signal name (signame)
Print information about a signal
Delegate the actions specified in 'arg' to another         method.
Set whether we print or not when this signal is caught.
This method is called when a signal is received.
Check whether specified line seems to be executable.
Return a string representation of an object
Execution status of the program.
Convenience short-hand for self.debugger.intf[-1].confirm
Convenience short-hand for self.debugger.intf[-1].errmsg
Convenience short-hand for self.debugger.intf[-1].msg
Convenience short-hand for self.debugger.intf[-1].msg_nocr
Convert ReStructuredText and run through msg()
Complete an arbitrary expression.
Convenience short-hand for self.intf[-1].errmsg
Convert ReStructuredText and run through msg()
Invoke a debugger command from inside a python shell called inside         the debugger.
quit command when there's just one thread.
Add `frame_or_fn' to the list of functions that are not to         be debugged
Return filename or the basename of that depending on the         basename setting
Return True if debugging is in progress.
Sets to stop on the next event that happens in frame 'frame'.
Get file information
Check whether we should break here because of `b.funcname`.
remove breakpoint `bp
Remove a breakpoint given its breakpoint number.
Enable or disable all breakpoints.
Enable or disable a breakpoint given its breakpoint number.
Determine which breakpoint for this file:line is to be acted upon.
Use this to set what file to read from.
Wrap a `sqlalchemy.orm.query.Query` object into a         `concurrent.futures.Future` so that it can be yielded.
Handle arguments for the 'lumi-download' command.
Deduce the format of a file, within reason.
Load a JSON stream and return a generator, yielding one object at a time.
Convert a file in some other encoding into a temporary file that's in     UTF-8.
Make a POST request to the given path, and return the JSON-decoded         result.
Make a DELETE request to the given path, and return the JSON-decoded         result.
Get the "root URL" for a URL, as described in the LuminosoClient     documentation.
Make a request of the specified type and expect a JSON object in         response.
Make a POST request to the given path, and return the JSON-decoded         result.
Return a new LuminosoClient for a subpath of this one.
Get the ID of an account you can use to access projects.
Get the documentation that the server sends for the API.
Wait for an asynchronous task to finish.
Get the raw text of a response.
Print a JSON list of JSON objects in CSV format.
Read parameters from input file, -j, and -p arguments, in that order.
Take an iterator and yield its contents in groups of `size` items.
Limit a document to just the three fields we should upload.
Handle arguments for the 'lumi-upload' command.
Take an iterator and yield its contents in groups of `size` items.
Upload a file to Luminoso with the given account and project name.
Activates (gives focus to) a window.     :param title:     :param text:     :return:
Returns the coordinates of the caret in the foreground window     :return:
Set http session.
Login to enedis.
Get the latest data from Enedis.
Load the view on first load
Load the view on first load could also load based on session, group, etc..
Execute the correct handler depending on what is connecting.
When enaml.js sends a message
Generate the handlers for this site
Create the toolkit widget for the proxy object.
Initialize the state of the toolkit widget.
Handle the child added event from the declaration.
Handle the child removed event from the declaration.
Get the node(s) matching the query
Update the proxy widget when the Widget data         changes.
Find nodes matching the given xpath query
Initialize the widget with the source.
Set the source by parsing the source and inserting it into the          component.
If the mode changes. Refresh the items.
A change handler for the 'objects' list of the Include.
When the children of the block change. Update the referenced         block.
Generate .rst document for PyPi.
Remove common indentation from string.
Find all section names and return a list with their names.
Generate table of contents for array of section names.
Convert a docstring to a markdown text.
Generate markdown document from module, including API section.
Read the contents of a file located relative to setup.py
Print the dict returned by a MongoDB Query in the standard output.
Print `msg` error and exit with status `exit_code`
Clear out the current session on the remote and setup a new one.
Search for dominos pizza stores using a search term.
Retrieve the menu from the selected store.
Add an item to the current basket.
Add a pizza to the current basket.
Add a side to the current basket.
Remove an item from the current basket.
Select the payment method going to be used to make a purchase.
Add an item to the end of the menu before the exit item
Select the current item and run it
Take an old-style menuData dictionary and return a CursesMenu
Compute the maximum temporal distance.
Not used in the regular filter process for the time being.
Remove dangling entries from the shapes directory.
update calendar table's services         :param copy_db_conn:         :param start_date:         :param end_date:         :return:
filter by agency ids         :param copy_db_conn:         :param agency_ids_to_preserve:         :return:
Filter the feed based on self.buffer_distance_km from self.buffer_lon and self.buffer_lat.
Get the earliest visit time of the stop.
Pre-compute the shape points corresponding to each trip's stop.
Create day_trips and day_stop_times views.
Create a colourbar with limits of lwr and upr
Write out a network
Write out the database according to the GTFS format.
Remove columns ending with I from a pandas.DataFrame
Distance (in meters) between two points in WGS84 coord system.
Create directories if they do not exist, otherwise do nothing.
Import a GTFS database
Re-create all views.
Print coordinates within a sequence.
Find corresponding shape points for a list of stops and create shape break points.
Finds the best shape_id for a stop-sequence.
Add a 'd' key for distances to a stop/shape-sequence.
Get all scheduled stops on a particular route_id.
Get the earliest arrival time at the target, given a departure time.
Run the actual simulation.
Get a stop-to-stop network describing a single mode of travel.
Compute the temporal network of the data, and return it as a pandas.DataFrame
Instantiate a GTFS object by computing
Should return the path to the database
Get name of the GTFS timezone
Convert datetime (in GTFS timezone) to unixtime
Get the shapes of all routes.
Get trip counts per day between the start and end day of the feed.
Get coordinates for a given trip_I
Get trip data as a list of events (i.e. dicts).
Convert unixtime to unixtime on GTFS start-of-day.
Increment the GTFS-definition of "day start".
Get (straight line) distances to stations that can be transferred to.
Return the first and last day_start_ut
Recover pre-computed travel_impedance between od-pairs from the database.
Add an event to the heap/priority queue
Get the pareto_optimal set of Labels, given a departure time.
Load data from GTFS file into database
Do the actual import. Copy data and store in connection object.
Copy data from one table to another while filtering data at the same time
Writes data from get_stats to csv file
Get basic statistics of the GTFS data.
Count occurrences of values AND return it as a string.
Return the frequency of all types of routes per day.
Return the sum of vehicle hours in a particular day by route type.
Scan the footpaths originating from stop_id
A Python decorator for printing out the execution time for a function.
Validates/checks a given GTFS feed with respect to a number of different issues.
Check that the password is valid.
Check that the password is valid.
Return a form class for a given string pointing to a lockdown form.
Check if each request is allowed to access the current resource.
Handle redirects properly.
Convert string column into datetime column
Convert datetime column into string column
Convert the format of a date
Convert column's type into type
Compute two dataframes with value for start and end     Args:         totals(dataframe):
Compute diff value between start and end     Args:         df(dataframe):
Compute upperGroup     Args:         df (Dataframe):
Round each value of a column
Get the absolute numeric value of each element of a column
Pivot a dataframe by group of variables
Aggregate values by groups.
Add missing row to a df base on a reference column
Returns:         dict: Dict[str, DataFrame]
Args:         data (str | byte):
Returns:             dict: Dict[str, DataFrame]
Args:             file_name (str):
Args:             data (str | byte):
Decorator to log a message before executing a function
Decorator to log the execution time of a function
Replaces data values and column names according to the locale
Compute cumsum for a group of columns.
Remove old entries from the cache
Keep the row of the data corresponding to the maximal value in a column
Keep the row of the data corresponding to the minimal value in a column
Can fill NaN values from a column with a given value or a column
add a human readable offset to `dateobj` and return corresponding date.
parse `datestr` and return corresponding date object.
Filter dataframe your data by date.
Add a column to the dataframe according to the groupby logic on group_cols
Returns the profile with the received ID as a dict
dict: Return the JSON at the local path or URL as a dict.
Check if path is safe and allowed.
If descriptor is a path to zip file extract and return (tempdir, descriptor)
Slugify foreign key
tuple: Attributes defined in the schema and the data package.
tuple: The schema's required attributed.
Push Data Package to storage.
Pull Data Package from storage.
Convert resource's path and name to storage's table name.
Restore resource's path and name from storage's table.
Convert schemas to be compatible with storage schemas.
Build and debug an application programatically
Read count characters starting at self.index,         and return those characters as a string
Parse value from string     returns:         Parsed value (either a string, array, or dict)
Parse an array, stream should be passed the initial [     returns:         Parsed array
Dump python list as the parameter of javascript function         :param parameters:         :param variables:         :return:
Generate the local url for a js file.         :param js_name:         :return:
Optimize by SGD, AdaGrad, or AdaDelta.
Return updates in the training.
Get parameters to be optimized.
Return updates from optimization.
Get the learning function.         :param func:         :return:
Parameters:             h_t - 256x1 vector         Returns:             10x1 vector
Compute first glimpse position using down-sampled image.
Build the computation graph here.
Print dataset statistics.
Compute the alignment weights based on the previous state.
Train the model in multi-GPU environment.
Pad sequences to given length in the left or right side.
Prepare for one epoch.         Returns:             bool: False if to stop the training.
Handles a control_request received from a worker.         Returns:             string or dict: response
Run the model with validation data and return costs.
Create inner loop variables.
Momentum SGD optimization core.
Execute `then_branch` when training.
Skip N batches in the training.
Add epoch callbacks function.         :param controllers: can be a `TrainingController` or a function.
Train the model and return costs.
Report the scores and record them in the log.
Run until the end.         :param epoch_controllers: deprecated
:type bunch_stack: list of list of int
:type bunch_stack: list of list
Apply a function to tensors.
A loop function, the usage is identical with the theano one.         :type block: deepy.layers.Block
Get a trainer to optimize given model.         :rtype: deepy.trainers.GeneralNeuralTrainer
Create a shared theano scalar value.
Load parameters from file to fill all blocks sequentially.         :type blocks: list of deepy.layers.Block
Perform reparameterization trick for latent variables.         :param layer_size: the size of latent variable
Set up variables.
Save parameters to file.
Load parameters from file.
Print network statistics.
Initialize the layer.         :param no_prepare: avoid calling preparation function
Compute based on NeuralVariable.         :type inputs:  list of NeuralVariable         :return: NeuralVariable
Register updates that will be executed in each iteration.
Register updates that will only be executed in training phase.
dumps one element to file_obj, a file opened in write mode
load contents from file_obj, returning a generator that yields one         element at a time
Fix the block, register all the parameters of sub layers.         :return:
Register one connected layer.         :type layer: NeuralLayer
Load parameters to the block.
Decode state and return param.
Login handler, must accept both GET and POST to be able to use OpenID.
Replaces all values that are single-item iterables with the value of its     index 0.
Returns the provider :doc:`config` key based on it's ``id`` value.
Creates the value for ``Set-Cookie`` HTTP header.
Adds the session cookie to headers.
Extracts the session data from cookie.
Converts the value to a signed string with timestamp.
Deserializes and verifies the value created by :meth:`._serialize`.
Converts the :class:`.User` instance to a :class:`dict`.
Computes :attr:`.expiration_time` when the value is set.
``True`` if credentials are valid, ``False`` if expired.
Converts the credentials to a percent encoded string to be stored for         later use.
Returns a HTML with JavaScript that:
Return true if string is binary data.
A :class:`dict` of data parsed from :attr:`.content`.
Accesses **protected resource** on behalf of the **user**.
Resembles the :meth:`dict.get` method.
Resembles the :meth:`dict.values` method.
Decorate the :meth:`.BaseProvider.login` implementations with this     decorator.
Converts the provider instance to a :class:`dict`.
Resolves keyword arguments from constructor or :doc:`config`.
Saves a value to session.
Logs a message with pre-formatted prefix.
Fetches the **protected resource** of an authenticated **user**.
Updates the :attr:`.BaseProvider.user`.
Validates the :attr:`.consumer`.
Enqueues a function for the task queue to execute.
Gets the result of the task.
Wraps scalars or string types as a list, or returns the iterable instance.
Returns an AudioSegment created from the given numpy array.
Returns self as a list of tuples:         [('v', voiced segment), ('u', unvoiced segment), (etc.)]
Executes a Sox command in a platform-independent manner.
Returns a copy of this AudioSegment, but whose silence has been removed.
Normalize the values in the AudioSegment so that its `spl` property         gives `db`.
Serializes into a bytestring.
Convenience function for `np.array(self.get_array_of_samples())` while         keeping the appropriate dtype.
Adds a number of zeros (digital silence) to the AudioSegment (returning a new one).
Takes a spectrogram and returns a 2D array of the form:
Returns the front ID found in `front` at the given `index`.
Removes all points in the fronts that overlap with the segmentation mask.
Merges all segments in `mask` which are touching.
`segmasks` should be in sorted order of [coarsest, ..., finest].
Does a bandpass filter over the given data.
Update the list of the running process and return the list
Split the file and return the list of filenames.
Get the ASN and the IP Block announcing the IP at a specific date.
Get the full history of an IP. It takes time.
Verify that the file has not already been downloaded.
Separates the outcome feature from the data.
Helper function to turn a string representation of "true" into     boolean True.
Attempt to detect requirements files in the current working directory
Configure all Jenkins devel jobs.
Configure a single Jenkins devel job.
Configure all Jenkins release jobs.
Configure a Jenkins release job.
Configure a single Jenkins doc job.
For each package and target check if it is affected by a sync.
For each package and target check if it is a regression.
For each package and target check if it is affected by a sync.
Remove trailing junk from the version number.
Get the number of packages per target and repository.
Get the Jenkins job urls for each target.
Configure a single Jenkins CI job.
Write out the groovy script and configs to file.
Order packages topologically.
Resolve all streams on the network.
Resolve all streams with a specific value for a given property.
Resolve all streams that match a given predicate.
Push a sample into the outlet.
Push a list of samples into the outlet.
Retrieve the complete information of the given stream.
Subscribe to the data stream.
Get a child with a specified name.
Get the next sibling in the children list of the parent node.
Get the previous sibling in the children list of the parent node.
Get child value (value of the first child that is text).
Set the text value of the (nameless) plain-text child of a named          child node.
Set the element's name. Returns False if the node is empty.
Set the element's value. Returns False if the node is empty.
Append a child element with the specified name.
Prepend a child element with the specified name.
Append a copy of the specified element as a child.
Prepend a copy of the specified element as a child.
Remove a given child element, specified by name or as element.
Obtain the set of currently present streams on the network.
See all token associated with a given token.     PAIR lilas
Shows autocomplete results for a given token.
Compute edge ngram of token from min. Does not include token itself.
Allow for iterators to return either an item or an iterator of items.
Import functions or class by their path. Should be of the form:     path.to.module.func
Compute fuzzy extensions of word that exist in index.     FUZZYINDEX lilas
Try to extract the bigger group of interlinked tokens.
Run a search many times to benchmark it.         BENCH [100] rue des Lilas
Print raw content of a DB key.         DBKEY g|u09tyzfe
Compute geodistance from a result to a point.         GEODISTANCE 772210180J 48.1234 2.9876
Compute a geohash from latitude and longitude.         GEOHASH 48.1234 2.9876
Return members of a geohash and its neighbors.         GEOHASHMEMBERS u09vej04 [NEIGHBORS 0]
Get index details for a document by its id.         INDEX 772210180J
Do a reverse search. Args: lat lon.         REVERSE 48.1234 2.9876
Just sends the request using its send method and returns its response.
Concurrently converts a list of Requests to Responses.
Decrypts encrypted ASN.1 data
Extracts the last Windows error message into a python unicode string
Extracts the last Windows error message into a python unicode string
Loads an x509 certificate into a Certificate object
Loads an ASN.1 object of an x509 certificate into a Certificate object
Loads a private key into a PrivateKey object
Loads a private key into a PrivateKey object
Encrypts plaintext using an RSA public key or certificate
Decrypts RSA ciphertext using a private key
Generates a public/private key pair using CryptoAPI
Generates a public/private key pair using CNG
Take a CNG BCRYPT_RSAFULLPRIVATE_BLOB and converts it into an ASN.1     structure
Take a CNG BCRYPT_DSA_KEY_BLOB or BCRYPT_DSA_KEY_BLOB_V2 and converts it     into an ASN.1 structure
Take a CNG BCRYPT_ECCKEY_BLOB and converts it into an ASN.1 structure
Generates a blob for importing a key to CryptoAPI
Verifies an RSASSA-PKCS-v1.5 signature.
Encrypts a value using an RSA public key
Encrypts a value using an RSA public key via CryptoAPI
Encrypts a value using an RSA public key via CNG
Encrypts a value using an RSA private key
Encrypts a value using an RSA private key via CryptoAPI
:return:             A boolean - if the certificate is self-signed
Obtains a credentials handle from secur32.dll for use with SChannel
Perform an initial TLS handshake, or a renegotiation
Reads data from the TLS-wrapped socket
Reads exactly the specified number of bytes from the socket
Writes data to the TLS-wrapped socket
An asn1crypto.x509.Certificate object of the end-entity certificate         presented by the server
A list of asn1crypto.x509.Certificate objects that were presented as         intermediates by the server
Checks a CFErrorRef and throws an exception if there is an error to report
Reads data from the TLS-wrapped socket
Writes data to the TLS-wrapped socket
An asn1crypto.x509.Certificate object of the end-entity certificate         presented by the server
A list of asn1crypto.x509.Certificate objects that were presented as         intermediates by the server
Decrypts AES/RC4/RC2/3DES/DES ciphertext via CryptoAPI
Extracts the last Windows error message into a python unicode string
:return:         A bool if the current machine is running OS X 10.7
Pads a byte string using the EMSA-PSS-Encode operation described in PKCS#1     v2.2.
Extracts trusted CA certificates from the OS X trusted root keychain.
Return the certificate and a hash of it
Extracts the last OS error message into a python unicode string
Converts a CFNumber object to a python float or integer
Converts a CFDictionary object into a python dictionary
Creates a python unicode string from a CFString object
Extracts a bytestring from a CFData object
Creates a CFArrayRef object from a list of CF* type objects.
Creates a CFNumber object from an integer
Converts a CFNumber object to a python float or integer
Creates a python unicode string from a CFString object
Extracts a bytestring from a CFData object
Creates a CFArrayRef object from a list of CF* type objects.
Creates a CFNumber object from an integer
Serializes an asn1crypto.algos.DHParameters object into a byte string
Serializes a public key object into a byte string
Serializes a certificate object into a byte string
Serializes a private key object into a byte string of the PKCS#8 format
Extracts the function signature and description of a Python function
Extracts trusted CA certificates from the Windows certificate store
Extracts the X.509 certificates from the server handshake bytes for use     when debugging
Determines the length of the DH params from the ServerKeyExchange
Raises a TLSVerificationError due to a hostname mismatch
Compares two byte strings in constant time to see if they are equal
Reads data from the TLS-wrapped socket
Writes data to the TLS-wrapped socket
An asn1crypto.x509.Certificate object of the end-entity certificate         presented by the server
A list of asn1crypto.x509.Certificate objects that were presented as         intermediates by the server
Get the filesystem path to a file that contains OpenSSL-compatible CA certs.
Returns the file path to the CA certs file
Checks to see if a cache file needs to be refreshed
Loads an ASN.1 object of an x509 certificate into a Certificate object
Common code to load public and private keys into PublicKey and PrivateKey     objects
Decrypts a byte string using an RSA private key. Uses PKCS#1 v1.5 padding.
Encrypts plaintext using an RSA public key or certificate
Decrypts RSA ciphertext using a private key
:return:         A unicode string of the backend being used: "openssl", "osx", "win",         "winlegacy"
Extracts the last Windows error message into a python unicode string
Encrypts plaintext using RC2 with a 64 bit key
Decrypts RC2 ciphertext using a 64 bit key
Cast HArray signal or value to signal or value of type Bits
convert python slice to value of SLICE hdl type
Find files by pattern in directory
Generate if tree for cases like (syntax shugar for large elifs)
Hdl convertible in operator, check if any of items     in "iterable" equals "sigOrVal"
Generate for loop for static items
Connect src (signals/interfaces/values) to all destinations
Check if number or constant is power of two
Add multiple case statements from iterable of tuleles         (caseVal, statements)
c-like case of switch statement
c-like default of switch statement
This method is called for every value change of any signal.
Serialize HWProcess instance
uniq operation with key selector
Get value from iterable where fn(item) and check     if there is not fn(other item)
:return: generator of first n items from iterrable
Doc on parent class :meth:`HdlStatement._try_reduce`
check if process is just unconditional assignments        and it is useless to merge them
on writeReqRecieved in monitor mode
Convert object to HDL string
Create new signal in this context
Convert python or hdl value/signal object to hdl value/signal object
Get maximum _instId from all assigments in statement
Collect data from interface
write data to interface
Push data to interface
Get name in HDL
:note: doc in :func:`~hwt.synthesizer.interfaceLevel.propDeclCollector._updateParamsFrom`
Sum of all width of interfaces in this interface
Load all operands and process them by self._evalFn
Cast signed-unsigned, to int or bool
Reinterpret signal of type Bits to signal of type HStruct
Sort items from iterators(generators) by alwas selecting item     with lowest value (min first)
Count of complete words between two addresses
Convert transaction template into FrameTmpls
Pack data into list of BitsVal of specified dataWidth
:return: True if two Value instances are same     :note: not just equal
:return: True if two vectors of Value instances are same     :note: not just equal
:return: True if two lists of HdlStatement instances are same
:return: True if all statements are same
Collect inputs/outputs from all child statements         to :py:attr:`~_input` / :py:attr:`_output` attribure on this object
Discover enclosure for list of statements
Discover sensitivity for list of signals
get RtlNetlist context from signals
Walk statements and compare if they can be merged into one statement list
Merge statements in list to remove duplicated if-then-else trees
Merge two lists of statements into one
Simplify statements in the list
Select fields from structure (rest will become spacing)
Walk all simple values in HStruct or HArray
Construct value from pythonic value (int, bytes, enum.Enum member)
Concatenate this with other to one wider value/signal
Evaluate list of values as condition
Create value updater for simulation for value of array type
create hdl vector value
Collect data from interface
Push data to interface
Gues resource usage by HWProcess
Get value of parameter
set value of this param
Find out if this signal is something indexed
Cast value or signal of this type to another compatible type.
Cast value or signal of this type to another type of same size.
Load all declarations from _decl() method, recursively         for all interfaces/units.
Register interface in implementation phase
Reverse byteorder (littleendian/bigendian) of signal or value
Convert object to HDL string
Serialize HdlType instance
Srialize IfContainer instance
Construct SimBitsT with cache
Create basic :class:`.Signal` interface where type is vector
Walk fields in instance of TransTmpl
Convert negative int to positive int which has same bits set
:attention: enclosure has to be discoverd first use _discover_enclosure()  method
:return: True if statements in branches has different effect
Check if is register or wire
:see: doc of method on parent class
:see: doc of method on parent class
:see: doc of method on parent class
:see: doc of method on parent class
:see: doc of method on parent class
:see: doc of method on parent class
Check if not redefining property on obj
Register Param object on interface level object
Auto-propagate params by name to child components and interfaces         Usage:
Associate this object with specified clk/rst
Update all parameters which are defined on self from otherObj
Register unit object on interface level object
Register interface object on interface level object
Register array of items on interface level object
Create operator with result signal
Iterate over bits in vector
Decide to serialize only first obj of it's class
Decide to serialize only objs with uniq parameters and class
get all name hierarchy separated by '.'
Delegate _make_association on items
:note: doc in :func:`~hwt.synthesizer.interfaceLevel.propDeclCollector._updateParamsFrom`
Create a simulation model for unit
Connect to port item on subunit
Check if hdl process has event depenency on signal
Schedule process on actual time with specified priority
Add hdl process to execution queue
Apply stashed values to signals
Read value from signal or interface
Write value to signal or interface.
Add process to events with default priority on current time
Check if is register or wire
Convert all ternary operators to IfContainers
Serialize HWProcess objects as VHDL
Create a new version under this service.
Create a new VCL under this version.
Execute a post request and return the result         :param headers:         :return:
Execute a post request and return the result         :param data:         :param headers:         :return:
Execute a put request and return the result         :param data:         :param headers:         :return:
Execute a patch request and return the result
Execute a delete request and return the result         :param headers:         :return:
Checks to see that the query will not exceed the max query depth
Run a PIF query against Citrination.
Run a dataset query against Citrination.
Run a PIF query against Citrination.
Run each in a list of PIF queries against Citrination.
Get the t-SNE projection, including responses and tags.
Start a model retraining         :param dataview_id: The ID of the views         :return:
Retrieves the results of an existing designrun
Given a filepath, loads the file as a dictionary from YAML
List matched filenames in a dataset on Citrination.
Returns the number of files matching a pattern in a dataset.
Downloads file(s) to a local destination.
Retrieves a PIF from a given dataset.
Create a new data set.
Update a data set.
Create a new data set version.
Retrieves the set of columns from the combination of dataset ids given
Returns a new search template, but the new template has only the extract_as_keys given.
Convert an object to a form ready to dump to json.
Compute the hamming distance between two hashes
Compute the average hash of the given image.
Compute the hamming distance between two images
Set up the Vizio media player platform.
Retrieve latest state of the device.
Mute the volume.
Increasing volume of the device.
Decreasing volume of the device.
Restores the starting position.
Removes a piece from the given square if present.
Checks if the game is over due to checkmate, stalemate or         fourfold repetition.
Checks if the current position is a checkmate.
Restores the previous position and returns the last move from the stack.
Gets an SFEN representation of the current position.
Returns a Zobrist hash of the current position.
Parses an USI string.         Raises `ValueError` if the USI string is invalid.
run_git_log([git_dir]) -> File
Adds a organization-course link to the system
Activates an inactive organization-course relationship
Inactivates an active organization-course relationship
Updates an existing organization in app/local state     Returns a dictionary representation of the object
Retrieves a specific organization from app/local state     Returns a dictionary representation of the object
Find config file and set values
\         returns the bytes of the image file on disk
Create a video object from a video embed
dict: The summation of all data available about the extracted article
make any list element read like a list
Close the network connection and perform any other required cleanup
Extract the most likely article content from the html page
Returns a unicode object representing 's'. Treats bytestrings using the     'encoding' codec.
Add URLs needed to handle image uploads.
Handle file uploads from WYSIWYG.
Render the Quill WYSIWYG.
Get the form for field.
Render the toolbar for the given config.
Resize an image for metadata tags, and return an absolute URL to it.
Read and parse mdp file *filename*.
Write mdp file to *filename*.
Return *driver* and *name* of the first command that can be found on :envvar:`PATH`
Check if ``mdrun`` finished successfully.
Return a list of the mpi command portion of the commandline.
Execute the mdrun command (possibly as a MPI command) and run the simulation.
Run :program:`mdrun` and check if run completed when it finishes.
Launch local smpd.
Define functions for the top level name space.
Concatenate all parts of a simulation.
Find files from a continuation run
Run ``gromacs.grompp`` and return the total charge of the  system.
Generate a string that can be added to a mdp 'include = ' line.
Set the mdp *include* key in the *kwargs* dict.
Create a processed topology.
Return the volume in nm^3 of structure file *f*.
Change values in a Gromacs mdp file.
Remove autogenerated [ molecules ] entries from *filename*.
Return a list of index groups in the index file *ndx*.
Parse output from make_ndx to build list of index groups::
Parse ``make_ndx`` output and return groups as a list of dicts.
Delete all frames.
Returns resid in the Gromacs index by transforming with offset.
Combine individual groups into a single one and write output.
Write individual (named) groups to *out_ndx*.
Concatenate input index files.
Retuns (groupname, filename) with index group.
Process ``make_ndx`` command and  return name and temp index file.
Process a range selection.
Translate selection for a single res to make_ndx syntax.
Path for an output file.
Write compact xtc that is fitted to the tpr reference structure.
Write xtc that is fitted to the tpr reference structure.
Write xtc and tpr with water (by resname) removed.
return os.path.join(os.path.dirname(args[0]), *args[1:])
Create a top level logger.
Generate a list of included files *and* extract them to a temp space.
Find template file *t* and return its real path.
Return a single template *t*.
Prepare a default GromacsWrapper global environment.
Set the environment from ``GMXRC`` provided in *gmxrc*.
Return the textual representation of logging level 'option' or the number.
Pickle the whole collection to *filename*.                  If no extension is provided, ".collection" is appended.
Load collection from pickled file *filename*.
Register a new :class:`Flag` instance with the Flags registry.
Update Flags registry with a list of :class:`Flag` instances.
Convert obj to unicode (if it can be be converted).
Convert string x to the most useful type, i.e. int, float or unicode string.
Return view of the recarray with all int32 cast to int64.
Slow conversion of a recarray into a list of records with python types.
Convert to a list (sep != None) and convert list elements.
Parse the xpm file and populate :attr:`XPM.array`.
Run the command; args/kwargs are added or replace the ones given to the constructor.
Combine the default values and the supplied values.
Execute the command; see the docs for __call__.
Returns the command line (without pipes) as a list.
Returns a special Popen instance (:class:`PopenWithInput`).
Transform arguments and return them as a list suitable for Popen.
Print help; same as using ``?`` in ``ipython``. long=True also gives call signature.
Combine the default values and the supplied values.
Build list of arguments from the dict; keys must be valid  gromacs flags.
Execute the gromacs command; see the docs for __call__.
Convert input to a numerical type if possible.
Open datasource (gzipped, bzipped, uncompressed) and return a stream.
Return open stream if *filename* can be opened with *openfunction* or else ``None``.
Return ``True`` if object *obj* contains the method *m*.
Detect if `obj` is a stream.
Converts between 3-letter and 1-letter amino acid codes.
Context manager to execute a code block in a directory.
Find first *filename* with a suffix from *suffices*.
Return list in which each element is guaranteed to start with :data:`os.path.extsep`.
Returns ``True`` if *obj* can be iterated over and is *not* a  string.
Unlink path but do not complain if file does not exist.
Create a directory *path* with subdirs but do not complain if it exists.
Concatenate files *f*=[...] and write to *o*
Make subplot *numPlot* active on the canvas.
Rename pdbs x1.pdb ... x345.pdb --> x0001.pdb ... x0345.pdb
Initialize the current filename :attr:`FileUtils.real_filename` of the object.
Supply a file name for the class object.
If a file exists then continue with the action specified in ``resolve``.
Start logging of messages to file and console.
Stop logging to logfile and console.
Set the :meth:`warnings.simplefilter` to *action*.
Find executables in a path.
Load Gromacs 2018/2016/5.x tools automatically using some heuristic.
Load Gromacs 4.x tools automatically using some heuristic.
Read and parse index file *filename*.
Return a list of groups in the same format as  :func:`gromacs.cbook.get_ndx_groups`.
Return an index group that contains atoms from all  *groupnames*.
Create a array which masks jumps >= threshold.
Write array to xvg file *filename* in NXY format.
Represent data as a masked array.
Set and change the parameters for calculations with  correlation functions.
Read and cache the file as a numpy array.
Plot xvg file data.
Plot data like :meth:`XVG.plot` with the range of **all** data shown.
errorbar plot for a single time series with errors.
Decimate data *a* to *maxpoints* using *method*.
Return data *a* mean-decimated on *maxpoints*.
Return data *a* circmean-decimated on *maxpoints*.
Return data *a* min-decimated on *maxpoints*.
Return data *a* max-decimated on *maxpoints*.
Return data *a* rms-decimated on *maxpoints*.
Return data *a* percentile-decimated on *maxpoints*.
Return data *a* error-decimated on *maxpoints*.
Parse a processed.top GROMACS topology file
Call the various member self._make_* functions to convert the topology object into a string
Build Gromacs topology files from pdb.
Make index file with the special groups.
Find vdwradii.dat and add special entries for lipids.
Run multiple energy minimizations one after each other.
Set up equilibrium MD.
Write scripts for queuing systems.
Generate a array job.
Reset the molecule's atoms :attr:`number` to be 1-indexed
Returns all dates from first to last included.
Fill missing rates of a currency.
Get a rate for a given currency and date.
Convert amount from a currency to another one.
Group iterable by n elements.
Animate given frame for set number of iterations.
Compute the total number of unmasked regular pixels in a masks.
Compute a circular masks from an input masks radius and regular shape.
Compute a circular masks from an input masks radius and regular shape.
Compute a circular masks from an input masks radius and regular shape.
Compute a blurring masks from an input masks and psf shape.
Compute the total number of borders-pixels in a masks.
Compute the total number of borders-pixels in a masks.
Plot the model datas_ of an analysis, using the *Fitter* class object.
Plot the model datas_ of an analysis, using the *Fitter* class object.
Plot the model datas_ of an analysis, using the *Fitter* class object.
Plot the model datas_ of an analysis, using the *Fitter* class object.
For a deflection stack, comput a new grid stack but subtracting the deflections
Plot the observed _tracer of an analysis, using the *CCD* class object.
Plot the observed _tracer of an analysis, using the *CCD* class object.
Plot an array of data as a figure.
Open a matplotlib figure and plot the array of data on it.
Plot the mask of the array on the figure.
Plot the borders of the mask or the array on the figure.
Plot a set of points over the array of data on the figure.
Plot a grid of points over the array of data on the figure.
Generate a two-dimensional poisson noise_maps-mappers from an image.
Factory for loading the image from a .fits file
Factory for loading the noise-map from a .fits file.
Factory for loading the background noise-map from a .fits file.
Factory for loading the Poisson noise-map from a .fits file.
Factory for loading the psf from a .fits file.
Factory for loading the background sky from a .fits file.
Load the positions of an image.
Output the positions of an image to a positions.dat file.
Create a realistic simulated image by applying effects to a plain simulated image.
Create a realistic simulated image by applying effects to a plain simulated image.
Simulate the PSF as an elliptical Gaussian profile.
Loads the PSF from a .fits file.
Renormalize the PSF such that its data_vector values sum to unity.
Convolve an array with this PSF
Calculate the image-plane pixelization from a regular-grid of coordinates (and its mask).
Setup a rectangular mapper from a rectangular pixelization, as follows:
Compute the Voronoi grid of the pixelization, using the pixel centers.
Setup a Voronoi mapper from an adaptive-magnification pixelization, as follows:
Plot a grid of (y,x) Cartesian coordinates as a scatter plot of points.
Decorate a profile method that accepts a coordinate grid and returns a data grid.
Setup a grid-stack of grid_stack from a mask, sub-grid size and psf-shape.
Setup a grid-stack of masked grid_stack from a mask,  sub-grid size and psf-shape.
Map a function to all grid_stack in a grid-stack
Setup a regular padded grid from a 2D array shape, psf-shape and pixel-scale.
Setup an *PaddedSubGrid* for an input mask, sub-grid size and psf-shape.
Run this phase.
Run this phase.
Run this phase.
Run a fit for each galaxy from the previous phase.
Resize an array to a new size by extracting a sub-set of the array.
Resize an array to a new size around a central pixel.
Write a 2D NumPy array to a .fits file.
Read a 2D NumPy array to a .fits file.
Plot the model image of a specific plane of a lens fit.
Plot the model image of a specific plane of a lens fit.
Calculate the projected convergence at a given set of arc-second gridded coordinates.
Calculate the potential at a given set of arc-second gridded coordinates.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Calculate the potential at a given set of arc-second gridded coordinates.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Calculate the potential at a given set of arc-second gridded coordinates.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Calculate the potential at a given set of arc-second gridded coordinates.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Calculate the potential at a given set of arc-second gridded coordinates.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Compute the intensity of the profile at a given radius.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Calculate the deflection angles at a given set of arc-second gridded coordinates.
Convert a grid of (y, x) coordinates to a grid of their circular radii.
Convert a grid of (y,x) coordinates to an elliptical radius.
Calculate the intensity of the Gaussian light profile on a grid of radial coordinates.
Calculate the intensity of the Sersic light profile on a grid of radial coordinates.
Calculate the intensity of the cored-Sersic light profile on a grid of radial coordinates.
Trace this plane's grid_stacks to the next plane, using its deflection angles.
Trace the positions to the next plane.
Loads the image from a .fits file.
Creates an instance of Array and fills it with a single value
resized the array to a new shape and at a new origin.
Loads the image from a .fits file.
Setup a mask where all pixels are unmasked.
Create an instance of the associated class for a set of arguments
Plot the observed image of the ccd data.
[DEPRECATED] Load the polynomial series for `name` and return it.
[DEPRECATED] Compute the position of `name` at time ``tdb [+ tdb2]``.
[DEPRECATED] Compute the position and velocity of `name` at ``tdb [+ tdb2]``.
[DEPRECATED] Return a tuple of coefficients and parameters for `tdb`.
[DEPRECATED] Return position, given the `coefficient_bundle()` return value.
[DEPRECATED] Return velocity, given the `coefficient_bundle()` return value.
Write `data` to file record `n`; records are indexed from 1.
Return a memory-map of the elements `start` through `end`.
Return the text inside the comment area of the file.
Yield (record_number, n_summaries, record_data) for each record.
Yield (name, (value, value, ...)) for each summary in the file.
Add a new array to the DAF file.
Close this SPK file.
Return a textual description of the segment.
Compute the component values for the time `tdb` plus `tdb2`.
Close this file.
Return a textual description of the segment.
Generate angles and derivatives for time `tdb` plus `tdb2`.
Normalise and check a backend path.
Test if a file is located within the given directory.
Find and load the build backend
Invoke the mandatory build_sdist hook.
:param node:          :param edge:          :param fields:          :param params:          :return:
:param post_id:          :param fields:          :param params:          :return:
Visit a function call.
Process binary operations while processing the first logging argument.
Process f-string arguments.
Check if value has id attribute and return it.
Get a json dict of the attributes of this object.
Convenience method to create a file from a string.
Convience method to create a kappa file object from a file on disk
Add a kappa model given in a string to the project.
Add a kappa model from a file at given path to the project.
Check if the current simulation is running.
Delete file from database only if needed.
Delete the file (if any) from the database.
Edit the download-link inner text.
Returns the freshly rendered content for the template and context         described by the PDFResponse.
Returns a PDF response with a template rendered with the given context.
Checks the input and output to see if they are valid
QAM_BB_TX: A complex baseband transmitter      x,b,tx_data = QAM_bb(K,Ns,M)
Generate a complex baseband MPSK signal with pulse shaping.
Generate return-to-zero (RZ) data bits with pulse shaping.
zz,e_tau = NDA_symb_sync(z,Ns,L,BnTs,zeta=0.707,I_ord=3)
Upsample and filter the signal
Filter the signal
Upsample and filter the signal
Plot the poles and zeros of the FIR filter in the z-plane
Filter the signal using second-order sections
Upsample and filter the signal
Plot the poles and zeros of the FIR filter in the z-plane
Select the proper LockManager based on the current backend used by Celery.
Return the unique identifier (string) of a task instance.
Iterator used to iterate in chunks over an array of size `num_samples`.
Iterator used to iterate in chunks over an array of size `num_samples`.
Load the array `data` in the .mat file `fname`.
Process a 2D array (from PSFLab .mat file) containing a x-z PSF slice.
Evaluate the function in (x, y, z).
Evaluate the function in (x, y, z).         The function is rotationally symmetric around z.
Store the PSF data in `file_handle` (pytables) in `parent_node`.
Return an hash string computed on the PSF data.
Check whether the git executable is found.
Get the Git version.
Print the last commit line and eventual uncommitted changes.
Get filenames for donor and acceptor timestamps for the given parameters
Store parameters in `params` in `h5file.root.parameters`.
Return a dict containing all (key, values) stored in '/parameters'
Return a dict with all parameters and metadata in '/parameters'.
Add an trajectory array in '/trajectories'.
Add the `emission_tot` array in '/trajectories'.
Add the `emission` array in '/trajectories'.
Add the `position` array in '/trajectories'.
Draw random emitted photons from Poisson(emission_rates).
Draw random emitted photons from r.v. ~ Poisson(emission_rates).
Draw random emitted photons from r.v. ~ Poisson(emission_rates).
Generate a list of `Particle` objects.
Initial position for each particle. Shape (N, 3, 1).
List of tuples of (diffusion coefficient, counts) pairs.
Return pathlib.Path for a data-file with given hash and prefix.
Load simulation from disk trajectories and (when present) timestamps.
Print on-disk array sizes required for current set of parameters.
Return the concentration (in Moles) of the particles in the box.
Simulate (in-memory) `time_size` steps of trajectories.
Diffusion coefficients of the two specified populations.
2-tuple of slices for selection of two populations.
Compute hash of D and A timestamps for single-step D+A case.
Compute timestamps for current populations.
Compute timestamps for current populations.
Create a smFRET Photon-HDF5 file with current timestamps.
Print the HDF5 attributes for `node_name`.
Print all the sub-groups in `group` and leaf-nodes children of `group`.
Converts a given string from CamelCase to under_score.
"extensionsRequired": ["KHR_draco_mesh_compression"],         "extensionsUsed": ["KHR_draco_mesh_compression"]
Get the bounding box for the mesh
Set the 3D position of the camera
:return: The current view matrix for the camera
Look at a specific point
Set the camera position move state
Set the rotation state of the camera
:return: The current view matrix for the camera
Initialize, load and run
Draw all the nodes in the scene
Generates random positions inside a confied box.
Pause the music
Get the current position in the music in seconds
Combine diffuse and light buffer
Load a single shader
Load a texture array
Set the current time jumping in the timeline.
Get a program by its label
Get a texture by its label
Get an effect class by the class name
Scan for available templates in effect_templates
Get the absolute path to the root of the demosys package
Load a file in text mode
Ensure glfw library  version is compatible
Translate the buffer format
Get the current time in seconds
Set the current time. This can be used to jump in the timeline.
Resolve scene loader based on file extension
Calls the superclass ``draw()`` methods and checks ``HEADLESS_FRAMES``/``HEADLESS_DURATION``
Loads all the data files using the configured finders.
Clear the window buffer
Start the timer
Check if the loader has a supported file extension
Get or create a Track object.
Get all command names in the a folder
Hack in a data directory
Render the VAO.
Transform vertices. Stores the output in a single buffer.
Set the index buffer for this VAO
Destroy the vao object
Draw code for the mesh. Should be overriden.
Pause the music
Get the current time in seconds
Get all resources registed in effect packages.         These are typically located in ``resources.py``
Get a package by python path. Can also contain path to an effect.
Find an effect class by class name or full python path to class
Returns the runnable effect in the package
FInd the effect package
Fetch the resource list
Load a 2d texture
Initialize multiple shader strings
Get all out attributes in the shader source.            :return: List of attribute names
Print the shader lines
Get components and bytes for an image
Find the last occurance of the file in finders
Checks if we can create the project
Write manage.py in the current directory
Returns the absolute path to template directory
Return Davidson's Consonant Code.
Return Davidson's Consonant Code.
Encode a text using arithmetic coding with the provided probabilities.
Decode the number to a string using the given statistics.
r"""Generate a probability dict from the provided text.
Encode a text using arithmetic coding.
Decode the number to a string using the given statistics.
Return the Fuzzy Soundex code for a word.
Return the Fuzzy Soundex code for a word.
r"""Fill in self.ngcorpus from a Corpus argument.
r"""Get the count of an n-gram in the corpus.
Fill in self.ngcorpus from a Google NGram corpus file.
r"""Return term frequency.
r"""Return the Burrows-Wheeler transformed form of a word.
r"""Return a word decoded from BWT form.
Return the indel distance between two strings.
Return the normalized indel distance between two strings.
Return the Haase Phonetik (numeric output) code for a word.
Return the occurrence fingerprint.
Return the occurrence fingerprint.
Return the Baystat similarity.
Return the Baystat distance.
Return the Baystat similarity.
Return the Tversky index of two strings.
Return the Tversky distance between two strings.
Return the Tversky index of two strings.
Return the longest common subsequence of two strings.
r"""Return the longest common subsequence similarity of two strings.
Return the prefix similarity of two strings.
Return the count fingerprint.
Return the count fingerprint.
Return the phonetic fingerprint of a phrase.
Return the phonetic fingerprint of a phrase.
r"""Return the docs in the corpus, with sentences flattened.
r"""Return the raw corpus.
r"""Calculate the Inverse Document Frequency of a term in the corpus.
Return Reth-Schek Phonetik code for a word.
Return the SfinxBis code for a word.
Return the Beider-Morse Phonetic Matching encoding(s) of a term.
Reassess the language of the terms and call the phonetic encoder.
Return the Beider-Morse encoding(s) of a term.
Apply a set of final rules to the phonetic encoding.
Remove duplicates from a phonetic encoding list.
Return the index value for a language code.
Return the Beider-Morse Phonetic Matching encoding(s) of a term.
Return the strcmp95 similarity of two strings.
Return the strcmp95 distance between two strings.
Return the strcmp95 similarity of two strings.
Return the longest common substring of two strings.
r"""Return the longest common substring similarity of two strings.
Return the Needleman-Wunsch score of two strings.
Return the matrix similarity of two strings.
Return the IBM Alpha Search Inquiry System code for a word.
Return the PhoneticSpanish coding of word.
Return the NCD between two strings using BWT plus RLE.
Return the Daitch-Mokotoff Soundex code for a word.
Return the Daitch-Mokotoff Soundex code for a word.
Return the Norphone code.
r"""Return gain in precision.
r"""Return negative predictive value (NPV).
r"""Return gain in accuracy.
r"""Return :math:`F_{\beta}` score.
r"""Return the significance, :math:`\chi^{2}`.
Return the Double Metaphone code for a word.
Return the phonet code for a word.
Return Snowball Danish stem.
Return the "simplest" Sift4 distance between two terms.
Return the typo distance between two strings.
Return the normalized typo distance between two strings.
Return the normalized typo similarity between two strings.
Return the typo distance between two strings.
Return the normalized typo distance between two strings.
Return the Manhattan distance between two strings.
Return the normalized Manhattan distance between two strings.
Return the Jaro or Jaro-Winkler similarity of two strings.
Return the Jaro or Jaro-Winkler distance between two strings.
Return the Jaro or Jaro-Winkler similarity of two strings.
Return the Hamming distance between two strings.
Return the Hamming distance between two strings.
Return the Metaphone code for a word.
r"""Return the Dolby Code of a name.
r"""Return the Dolby Code of a name.
Calculate the PSHP Soundex/Viewex Coding of a last name.
Calculate the PSHP Soundex/Viewex Coding of a last name.
Return the NYSIIS code for a word.
Return the NYSIIS code for a word.
r"""Return the Chebyshev distance between two strings.
r"""Return the Chebyshev distance between two strings.
Calculate the mean pairwise similarity of a collection of strings.
Calculate the pairwise similarity statistics a collection of strings.
Return the Porter2 (Snowball English) stem.
Build the Synoname toolcode.
Build the Synoname toolcode.
Return the R1 region, as defined in the Porter2 specification.
Return the eudex phonetic hash of a word.
Return the Roger Root code for a word.
Return the Roger Root code for a word.
Return the Kölner Phonetik (numeric output) code for a word.
Convert a Kölner Phonetik code from numeric to alphabetic.
Read input file and write to output.
Return the Lein code for a word.
Return the Lein code for a word.
Return the Q-Grams in src & tar.
r"""Perform encoding of run-length-encoding (RLE).
r"""Perform decoding of run-length-encoding (RLE).
r"""Perform encoding of run-length-encoding (RLE).
r"""Perform decoding of run-length-encoding (RLE).
Return the SoundD code.
Return the NCD between two strings using LZMA compression.
Return the Smith-Waterman score of two strings.
Return the Smith-Waterman score of two strings.
Return the Levenshtein distance between two strings.
Return the normalized Levenshtein distance between two strings.
Return the Levenshtein similarity of two strings.
Return the Levenshtein distance between two strings.
Return the normalized Levenshtein distance between two strings.
Return the omission key.
Return the Minkowski distance (:math:`L^p`-norm) of two strings.
Return the Minkowski distance (:math:`L^p`-norm) of two strings.
Return the occurrence halved fingerprint.
Return the occurrence halved fingerprint.
Calculate the early version of the Henry code for a word.
Calculate the PSHP Soundex/Viewex Coding of a first name.
Calculate the PSHP Soundex/Viewex Coding of a first name.
Convert camelCase (used in PHP) to Python-standard snake_case.
Convert a line of BMPM code from PHP to Python.
r"""Return the cosine similarity of two strings.
Return the Monge-Elkan similarity of two strings.
Return the Monge-Elkan distance between two strings.
Return the Monge-Elkan similarity of two strings.
Return the Phonem code for a word.
Return CLEF Swedish stem.
Return the Soundex code for a word.
Return the Soundex code for a word.
Return the Russell Index (integer output) of a word.
Convert IPA to features.
Get a feature vector.
Return the length similarity of two strings.
Return the Caverphone code for a word.
r"""Return harmonic mean.
r"""Return logarithmic mean.
r"""Return identric (exponential) mean.
r"""Return Seiffert's mean.
r"""Return Lehmer mean.
r"""Return Heronian mean.
r"""Return Hölder (power/generalized) mean.
r"""Calculate the variance.
Return the stem of a word according to the Schinke stemmer.
Return the Phonix code for a word.
Return the Phonix code for a word.
Return the Editex distance between two strings.
Return the normalized Editex distance between two strings.
Return the Editex distance between two strings.
Return the normalized Editex distance between two strings.
Return the position fingerprint.
Return the position fingerprint.
Return the NCD between two strings using arithmetic coding.
Read fn and return the contents.
Return the Spanish Metaphone of a word.
Return the Spanish Metaphone of a word.
Return the FONEM code of a word.
Return the Statistics Canada code for a word.
Return the Synoname similarity type of two words.
Return the Synoname word approximation score for two names.
Return the Synoname similarity type of two words.
Return the normalized Synoname distance between two words.
Return the Tanimoto distance between two strings.
Return the "common" Sift4 distance between two terms.
Return the normalized "common" Sift4 distance between two terms.
Return the "common" Sift4 distance between two terms.
Return the normalized "common" Sift4 distance between two terms.
Return the NCD between two strings using bzip2 compression.
Return the MetaSoundex code for a word.
Return the S-stemmed form of a word.
Return the Ratcliff-Obershelp similarity of two strings.
Return the Refined Soundex code for a word.
Return the Refined Soundex code for a word.
Return the Parmar-Kumbharana encoding of a word.
Calculate the Hamming distance between the Eudex hashes of two terms.
Calculate the distance between the Eudex hashes of two terms.
Return the Euclidean distance between two strings.
Return Lovins' condition K.
Return Lovins' condition N.
Return Lovins' condition S.
Return Lovins' condition X.
Return Lovins' condition BB.
Return the Damerau-Levenshtein distance between two strings.
Return the NCD between two strings using zlib compression.
Return the Phonex code for a word.
Return the Phonex code for a word.
Return the Gotoh score of two strings.
Return the Gotoh score of two strings.
Return the bag distance between two strings.
Return the MLIPNS similarity of two strings.
Return the MLIPNS distance between two strings.
Return the MLIPNS similarity of two strings.
Return a similarity of two strings.
Return a distance between two strings.
Return the SoundexBR encoding of a word.
Return the SoundexBR encoding of a word.
Symmetrical logarithmic scale.
Show usage and available palettes.
Get the current terminal size.
Return the escape sequence for the selected Control Sequence.
Return a value wrapped in the selected CSI and does a reset.
Read points from istream and output to ostream.
Consume data from a line.
Add a set of data points.
Generate a color ramp for the current screen height.
Convert the input ``size`` to human readable, short form.
Run the filter function on the provided points.
Resolve the points to make a line between two points.
Set a text value in the screen canvas.
Render graph to stream.
Normalised data points using numpy.
Normalised data points using pure Python.
Load and parse a .csv file
Loads the content of the text file
Parse a CSV line into a price element
translate the incoming symbol into locally-used
Reuses the same db session
Import prices from CSV file
Display all prices
Delete old prices, leaving just the last.
Return the default session. The path is read from the default config.
Finds the map by in-symbol
Read text lines from a file
Map the price entity
Read the config file
Copy the config template into user's directory
Reads the contents of the config file
Save the config file
Download and save price online
Fetches all the prices for the given arguments
Returns the latest price on the date
Fetches the securities that match the given filters
Descend depth first into all child nodes
Verify that a part that is zoomed in on has equal length.
Test the student code.
Search student output for a pattern.
Check if the right printouts happened.
Check whether the submission did not generate a runtime error.
Test multiple choice exercise.
Check whether a particular function is called.
Decorator to (optionally) run function in a process.
Override the solution code with something arbitrary.
Update/set environemnt variables for student and solution environments.
Check object existence (and equality)
Check whether an object is an instance of a certain class.
Check whether an object (dict, DataFrame, etc) has a key.
Dive into nested tree.
Check whether a function argument is specified.
Calculate a model light curve.
Return the time of periastron passage (calculated using `params.t0`).
Return the time of secondary eclipse center (calculated using `params.t0`).
Loads the class from the class_path string
Checks if an item is iterable (list, tuple, generator), but not string
process pagination requests from request parameter
Search view for http requests
Search for courses
fetch mapped-items structure from cache
Implements call to remove the documents from the index
Implements call to search the index for the desired content.
Call the search engine with the appropriate parameters
Used by default implementation for finding excerpt
Used by default property excerpt
decorate the matches within the excerpt
Parses one line of data file
Writes the specified string to the output target of the report.
Determines whether or not the specified file is excluded by the         project's configuration.
Determines whether or not the specified directory is excluded by the         project's configuration.
Adds an issue to the collection.
Returns the number of issues in the collection.
Retrieves the issues in the collection.
A convenience method for parsing a TOML-serialized configuration.
Retrieves the TidyPy tools that are available in the current Python     environment.
Retrieves the TidyPy issue reports that are available in the current Python     environment.
Retrieves the TidyPy configuration extenders that are available in the     current Python environment.
Produces a stock/out-of-the-box TidyPy configuration.
Produces a TidyPy configuration using the ``pyproject.toml`` in the     project's directory.
Produces the Tidypy configuration to use for the specified project.
Merges the contents of two lists into a new list.
Recursively merges the contents of two dictionaries into a new dictionary.
Prints the specified string to ``stderr``.
Compiles a list of regular expressions.
Determines whether or not the target string matches any of the regular     expressions specified.
Retrieves the contents of the specified file.
Retrieves the AST of the specified file.
Execute an x3270 command
Connect to a host
Get a string of `length` at screen co-ordinates `ypos`/`xpos`
clears the field at the position given and inserts the string             `tosend`
Validate the username/password data against ldap directory
Add an additional server to the server pool and return the         freshly created server.
Remove a connection from the appcontext.
Make a connection to the LDAP Directory.
Make a connection.
Destroys a connection. Removes the connection from the appcontext, and         unbinds it.
query a s3 endpoint for an image based on a string
a "show all" search that doesn't require a query
post will use requests to get a particular url
get will use requests to get a particular url
stream to a temporary file, rename on successful completion
load the secrets credentials file with the Globus OAuthTokenResponse
return a list of logs. We return any file that ends in .log
create an endpoint folder, catching the error if it exists.
return a transfer client for the user
print the status for all or one of the backends.
add the variable to the config
remove a variable from the config, if found.
activate a backend by adding it to the .sregistry configuration file.
delete a backend, and update the secrets file
basic_auth_header will return a base64 encoded header object to     :param username: the username
delete request, use with caution
post will use requests to get a particular url
get will use requests to get a particular url
delete an image to Singularity Registry
get_installdir returns the installation directory of the application
run_command uses subprocess to send a command to the terminal.
list a specific template (if a name is provided) or all templates        available.
list a specific log for a builder, or the latest log if none provided
get a listing of collections that the user has access to.
get a bucket based on a bucket name. If it doesn't exist, create it.
give the user an ipython shell, optionally with an endpoint of choice.
download an image layer (.tar.gz) to a specified download folder.
update the base, including the URL for GitLab and the API endpoint.
a wrapper to get_and_update, but if not successful, will print an        error and exit.
Just update a setting, doesn't need to be returned.
list builders, or instances for the project. They should start with        sregistry-builder
load a google compute config, meaning that we have the following cases:
a "show all" search that doesn't require a query
a "show all" search that doesn't require a query
initialize the database, with the default database path or custom of
get version 1 of the google compute and storage service
get a bucket based on a bucket name. If it doesn't exist, create it.
delete object will delete a file from a bucket
delete an image from Google Storage.
destroy an instance, meaning take down the instance and stop the build.
Generate a robot name. Inspiration from Haikunator, but much more                  poorly implemented ;)
extract a tar archive to a specified output folder
get_content_hash will return a hash for a list of content (bytes/other)
find the SHA256 hash string of a file
write_json will (optionally,pretty print) a json object to file
read_json reads in a json file and returns        the data structure as dict.
clean up will delete a list of files, only if they exist
push an image to an S3 endpoint
get a collection if it exists. If it doesn't exist, create it first.
get a collection, if it exists, otherwise return None.
List local images in the database, optionally with a query.
Remove an image from the database and filesystem.
push an image to Singularity Registry
find_single_recipe will parse a single file, and if valid,        return an updated manifest
run a build, meaning creating a build. Retry if there is failure
a "show all" search that doesn't require a query
write will write a message to a stream,         first checking the encoding
return the image manifest via the aws client, saved in self.manifest
Generate a repr string.
Translate S3 errors to FSErrors.
Create a S3File backed with a temporary file.
Builds a gravatar url from an user or email
Builds an gravatar <img> tag from an user or email
Builds a url to a gravatar from an email address.
Returns True if the user has a gravatar, False if otherwise
Builds a url to a gravatar profile from an email address.
Return a set of resonance forms as SMILES strings, given a SMILES string.
Enumerate all possible resonance forms and return them as a list.
Enumerate all possible tautomers and return them as a list.
Return log messages for a given SMILES string using the default validations.
Break covalent bonds between metals and organic atoms under certain conditions.
Return a standardized canonical SMILES string given a SMILES string.
Return a set of tautomers as SMILES strings, given a SMILES string.
Return a standardized canonical tautomer SMILES string given a SMILES string.
Return a standardized version the given molecule.
Return the tautomer parent of a given molecule.
Return the fragment parent of a given molecule.
Return the stereo parent of a given molecule.
Return the isotope parent of a given molecule.
Return the charge parent of a given molecule.
Return the super parent of a given molecule.
:returns: A callable :class:`~molvs.tautomer.TautomerCanonicalizer` instance.
Main function for molvs command line interface.
Enforce charges on certain atoms, then perform competitive reionization.
Neutralize molecule by adding/removing hydrogens.
Get negatively charged atoms to skip (up to pos_count).
Return the molecule with specified fragments removed.
Return the largest covalent unit.
Construct a constraint from a validation function.
Construct a constraint from valid configurations.
Check that a solution satisfies the constraint.
Fix the value of a variable and remove it from the constraint.
Flip a variable in the constraint.
Create a new constraint that is the projection onto a subset of the variables.
Add a constraint.
create a bqm for a constraint with only one variable
create a bqm for a constraint with two variables.
Iterate over complete graphs.
Load a constraint satisfaction problem from a .cnf file.
Work out if a function is callable with some args or not.
Generates a model chooser definition from a model, and adds it to the         registry.
Parse additional url fields and map them to inputs
Convert a list of JSON values to a list of models
Populate all fields of a model with data
Convert one JSON value to a model object
Write command to remote process
Ensure player backing process is started
Play a new song from a Pandora model
Play the station until something ends it
Set stdout to non-blocking
Format a station menu and make the user select a station
Calculate time to sleep based on exponential function.     The format is::
Gather user input and convert it to an integer
Integrates a system of ordinary differential equations.
Integrates a system of ordinary differential equations.
open the drop box
return pairs of package indices and results of all tasks
return a pair of a package index and result of a task
run the event loops in the background.
Return a pair of a run id and a result.
wait until all event loops end and returns the results.
Convert ``key_vals_dict`` to `tuple_list``.
Open the working area
Collect the result of a task
Returns the full path of the package
Returns the relative path of the result
Returns the full path of the result
Submit multiple jobs
Return the run IDs of the finished jobs
Wait until all jobs finish and return the run IDs of the finished jobs
return the array.array objects for the branch and its counter branch
put a task and its arguments
put a list of tasks and their arguments
return a list of pairs of IDs and results of finished tasks.
return a pair of an ID and a result of a task.
return a list of pairs of IDs and results of all tasks.
return a list results of all tasks.
expand a path config
expand a path config given as a string
expand a path config given as a string
expand a path config given as a tuple
wait until all jobs finish and return a list of pids
return the ROOT.vector object for the branch.
Ensure all config-time files have been generated. Return a             dictionary of generated items.
Write the build info header file, and return (path_to_written_header, set_cmake_definitions)
Decorator to re-try API calls after asking the user for authentication.
return a dictionary of {tag: tarball_url}
return a string containing a tarball url
return a string containing a tarball url
unpack the specified tarball url into the specified directory
return a list of Version objects, each with a tarball URL set
return a list of GithubComponentVersion objects for all tags
return a list of GithubComponentVersion objects for the tip of each branch
return a GithubComponentVersion object for a specific commit if valid
Decorator to re-try API calls after asking the user for authentication.
Return the user's public key (generating and saving a new key pair if necessary)
return a configuration value
indicate whether the current item is the last one in a generator
validate source directory names in components
Read the .yotta_origin.json file (if present), and return the value             of the 'url' property
return a list of GitCloneVersion objects for tags which are valid             semantic version idenfitifiers.
return a GithubComponentVersion object for a specific commit if valid
return the specified script if one exists (possibly inherited from             a base target)
load the configuration information from the target hierarchy
Execute the commands necessary to build this component, and all of             its dependencies.
Calculate error bars from scikit-learn RandomForest estimators.
Retrieves the number of members of the organization.
Retrieves the number of teams of the organization.
Retrieves the number of pull requests on a repo in the organization.
Retrieves the number of closed issues.
Checks to see if the given repo has a top level LICENSE file.
Writes the current organization information to file (csv).
Updates the total.csv file with current data.
Updates languages.csv file with current data.
Checks if a directory exists. If not, it creates one with the specified         file_path.
Returns a list of the names of US Government GitHub organizations
Create a github3.py session connected to GitHub.com
Create a github3.py session for a GitHub Enterprise instance
Create a GitHub session for making requests
Return a list of the stargazers of a GitHub repo
Writes stargazers data to file.
Create CodeGovProject object from github3 Repository object
Create CodeGovProject object from GitLab Repository
Create CodeGovProject object from DOE CODE record
Creates CodeGovProject object from TFS/VSTS/AzureDevOps Instance
Retrieves the traffic for the repositories of the given organization.
Writes all traffic data to file in JSON form.
Writes the referrers data to file.
Writes the user emails to file.
Return a list of the stargazers of a GitHub repo
Given a Git repository URL, returns number of lines of code based on cloc
Compute the labor hours, given a count of source lines of code
Prune the "None" or emptry string values from dictionary items
Read a 'pretty' formatted GraphQL query file into a one-line string.
Submit a GitHub GraphQL query from a file.
Submit a GitHub query.
Send a curl request to GitHub.
Wait until the given UTC timestamp.
Load a JSON data file into the internal JSON data dictionary.
Write the internal JSON data dictionary to a JSON data file.
Create a core_client.py client for a Team Foundation Server Enterprise connection instance
Confirms the key, CSR, and certificate files all match.
Check if a path exists, and is a file.
Check if a path exists, and is a directory.
Check if a path exists, and is a symbolic link.
Get the owner name of a file or directory.
Get the user's umask.
Upload a template file.
Compute the MD5 sum of a file.
Copy a file or directory
Move a file or directory
Remove a file or directory
Require a file to exist and have specific contents and properties.
Determines if a new release has been made.
Upgrade all packages, skip obsoletes if ``obsoletes=0`` in ``yum.conf``.
Check if an RPM package is installed.
Install one or more RPM packages.
Install a group of packages.
Remove one or more packages.
Remove an existing software group.
Get the list of ``yum`` repositories.
Uploads media to an Amazon S3 bucket using s3sync.
Configures the server to use a static IP.
Upgrade all packages.
Check if a package is installed.
Install one or more packages.
Remove one or more packages.
Enable unattended package installation by preseeding ``debconf``     parameters.
Get the state of ``dkpg`` selections.
Check if the given key id exists in apt keyring.
Enables the repository for a most current version on Debian systems.
Check if a group exists.
Create a new group.
Adds the user to the given list of groups.
Creates a user with the given username.
Forces the user to change their password the next time they login.
Run a remote command as the root user.
A backwards compatible version of oct() that works with Python2.7 and Python3.
Run inadyn from the commandline to test the configuration.
Displays a list of environment key/value pairs.
Display percent of disk usage.
Sets a key/value pair in a satchel's local renderer.
Get the installed version of a package
Install the latest version of `setuptools`_.
Install setuptools from scratch using installer
Install Python packages with ``easy_install``.
Install packages using easy_install
Returns true if the virtualenv tool is installed.
Returns true if the virtual environment has been created.
Lists the packages that require the given package.
Retrieves all virtual machines instances in the current environment.
Retrieves the instance name associated with the current host string.
Populates the global env variables with custom default settings.
Dynamically creates a module with the given name.
Converts a string of comma delimited values and returns a list.
Comments-out a line containing an attribute.     The inverse of enable_attribute_or_dryrun().
Writes the given content to a local temporary file.
Recursively finds the most recent timestamp in the given directory.
Returns a named tuple describing the operating system on the remote host.
Renders the given template to a string.
Iterates over sites, safely setting environment variables for each site.
perform topo sort on elements.
Returns a list of hosts that have been configured to support the given site.
Returns an ordered list of all task names.
Returns a dictionary of satchels used in the current configuration, excluding ourselves.
Returns a version of env filtered to only include the variables in our namespace.
Reboots the server and waits for it to come back.
Returns a list of all required packages.
Like run(), but re-runs the command for each site in the current role.
Returns a dictionary representing a serialized state of the service.
The standard method called to apply functionality when the manifest changes.
Check if a PostgreSQL user exists.
Create a PostgreSQL user.
Write the file used to store login credentials for PostgreSQL.
Returns true if a database with the given name exists. False otherwise.
Restores a database snapshot onto the target database server.
Delete a PostgreSQL database.
Directly transfers a table between two databases.
Get the list of network interfaces. Will return all datalinks on SmartOS.
Get the IPv4 address assigned to an interface.
Returns a dictionary representing a serialized state of the service.
Preparse the packaging system for installations.
Updates/upgrades all system packages.
Updates/upgrades all system packages.
Displays all packages required by the current role         based on the documented services provided.
Uninstalls all blacklisted packages.
Writes entire crontab to the host.
Restores a database snapshot onto the target database server.
Writes a key/value pair to a settings file.
Enables the repository for a most current version on Debian systems.
Installs and configures RabbitMQ.
Returns a dictionary representing a serialized state of the service.
Returns the path to the manifest file.
Unmarks the remote server as currently being deployed to.
Update the thumbprint on the remote server but execute no satchel configurators.
Calculates the components functions that need to be executed for a deployment.
Inspects differences between the last deployment and the current code state.
Installs all custom SQL.
Retrieves the most recent timestamp of the media in the static root.
Renders local settings for a specific database.
Return free space in bytes.
Displays a list of all environment key/value pairs for the current role.
Downloads the latest Raspbian image and writes it to a microSD card.
Creates an image for running Raspbian in a QEMU virtual machine.
Enables access to the camera.
Installs the mod-security Apache module.
Installs the mod-rpaf Apache module.
Configures Apache to host one or more websites.
Collects the configurations for all registered services and writes         the appropriate supervisord.conf file.
Clone a remote Git repository into a new directory.
Add a remote Git repository into a directory.
Fetch changes from the default remote repository.
Fetch changes from the default remote repository and merge them.
Retrieves the git commit number of the current head branch.
Get the SSH parameters for connecting to a vagrant VM.
Get the Vagrant version.
Run the following tasks on a vagrant box.
Get the list of vagrant base boxes
Installs Vagrant from the most recent package available from their homepage.
Get the OS distribution ID.
Get the release number of the distribution.
Get the distribution family.
Ensures all tests have passed for this branch.
Returns true if the given host exists on the network.         Returns false otherwise.
Returns the first working combination of username and password for the current host.
Yields a list of tuples of the form (ip, hostname).
Gets the public IP for a host.
Assigns a name to the server accessible from user space.
Get a partition list for all disk or for selected device only
Get a HDD device by uuid
Check if partition is mounted
Run a MySQL query.
Check if a MySQL user exists.
Create a MySQL user.
Check if a MySQL database exists.
Create a MySQL database.
Retrieves the path to the MySQL configuration file.
Returns true if a database with the given name exists. False otherwise.
Restores a database snapshot onto the target database server.
This consolidates a list of LCs for a single TIC object.
Iterative pre-whitening of a magnitude series using the L-S periodogram.
This normalizes the magnitude time-series to a specified value.
Sigma-clips a magnitude or flux time-series.
Phases a magnitude/flux time-series using a given period and epoch.
This normalizes magcols in `lcdict` using `timecol` to find timegroups.
Stellar colors and dereddened stellar colors using 2MASS DUST API:
This drives the `get_starfeatures` function for a collection of LCs.
Converts from DD:MM:SS to a decimal value.
Calculates the autocorr of mag series for specific lag.
This updates objectinfo for a list of checkplots.
This updates the objectinfo for a directory of checkplot pickles.
Calculates the GAIA absolute magnitude for object (or array of objects).
This estimates M: the number of independent frequencies in the periodogram.
This just puts all of the period-finders on a single periodogram.
Overrides the default serializer for `JSONEncoder`.
This smooths the magseries with a Savitsky-Golay filter.
Detrends a magnitude series using External Parameter Decorrelation.
Detrends the x and y coordinate centroids for a Kepler light curve.
This time-bins all the LCs in the list using the specified bin size.
Fit a Savitzky-Golay filter to the magnitude/flux time series.
Fit an arbitrary-order Legendre series, via least squares, to the     magnitude/flux time series.
For all neighbors in a checkplotdict, make LCs and phased LCs.
Plots a phased magnitude/flux time-series using the period provided.
Makes a plot of periodograms obtained from `periodbase` functions.
This reads in a textlc that is complete up to the TFA stage.
This concatenates all text LCs for an objectid with the given aperture.
This concatenates all text LCs for the given object and writes to a pklc.
This concatenates all text LCs for the given objectidlist.
Does phase-folding for the mag/flux time-series given a period.
Generalized LSP value for a single omega.
Generalized LSP value for a single omega.
This validates if an API key for the specified LCC-Server is available.
This gets information on a single object from the LCC-Server.
This calculates the CDPP of a timeseries using the method in the paper:
This gets a single file from a Google Cloud Storage bucket.
This gets a single file from a Google Cloud Storage bucket.
This puts a single file into a Google Cloud Storage bucket.
Makes the phased magseries plot tile for the `checkplot_png` and     `twolsp_checkplot_png` functions.
Precesses target coordinates `ra`, `dec` from `epoch_one` to `epoch_two`.
Returns BJD_TDB or HJD_TDB for input JD_UTC.
An observer which sends the state change to the proxy.
An observer which sends the state change to the proxy.
Handle changes from atom ContainerLists
Create the underlying widget.
Initialize the underlying map options.
Add markers, polys, callouts, etc..
Create the fragment and pull the map reference when it's loaded.
Called when the map is clicked
Called when the map is clicked
Remove the marker if it was added to the map when destroying
If a child is added we have to make sure the map adapter exists
Convert our options into the actual marker object
Convert our options into the actual circle object
Instantiate and configures backends.
Return MetricsInterface instance with specified name.
Record a timing value.
Increment a counter.
Measure a timing for statistical distribution.
Increment a counter.
Measure a timing for statistical distribution.
Measure a value for statistical distribution.
Generate a tag for use with the tag backends.
Increment a counter.
Report a timing.
Report a histogram.
Roll up stats and log them.
Increment a counter.
Measure a timing for statistical distribution.
Measure a value for statistical distribution.
Add data to flow
Export model and transformers to export_folder
Fit CRF according to X, y
Start LanguageBoard web application
In order to obtain the most likely label for a list of text
Fit KimCNNClassifier according to X, y
Make an annotation value that can be used to sort by an enum field.
Convert a string from the database into an Enum value
Convert a string from a form into an Enum value.
Convert an Enum value into a string for the database
Return the config files for an environment & cluster specific app.
Yield the sources that are present.
Merge the configuration sources and return the resulting DotDict.
Return a subset of a dictionary using the specified keys.
Convert obj into a DotDict, or list of DotDict.
Return a config subset using the filter defined in the deploy config.
Return an auth token based on the client+service+seed tuple.
Write configuration to the applicaiton directory.
Imports the config file to yoconfigurator.configs.<config_basename>.
Parses the input string, and returns a reference to the created AST's root
ctx_path : ctx_coords
Display the terms added and removed between two versions     :param version0:     :param version1:     :return:
O:O:.O:O:.-  => O:O:.O:O:.t.-
i.B:.-+u.M:.-O:.-' => i.f.B:.-+u.f.M:.-O:.-
M:.-O:.-'M:.-wa.e.-'t.x.-s.y.-',  => M:.-O:.-'M:.-wa.e.-'t.-x.-s.y.-',
i.f.B:.-+u.f.M:.-O:.-' -> i.B:.-+u.M:.-O:.-
M:.-O:.-'M:.-wa.e.-'t.-x.-s.y.-',  => t.-x.-s.y.-' wa.e.-', M:M:.-',O:.-',_
M:.O:.-O:.O:.-B:.T:.n.-' => s.M:O:.O:O:.-
O:M:.-O:M:.-we.h.-' => O:M:.-'O:M:.-'s.o.-k.o.-',
s.u.-'O:M:.-'O:.-',+s.u.-'M:O:.-O:.-'M:.-', => b.-S:.U:.-'O:M:.-'O:.-', + b.-S:.U:.-'M:O:.-O:.-'M:.-',
O:.M:.- => s.o.-k.o.-'M:O:.-',
Parses the input string, and returns a reference to the created AST's root
path is a mul of coord or a coord
`usls` is an iterable of usl.
usls_data: usl => data[]     :param usls_data:     :return:
script_lvl_0 : PRIMITIVE LAYER0_MARK                             | REMARKABLE_ADDITION LAYER0_MARK
Slow method, retrieve all the terms from the database.         :return:
Returns the mean value.
Record an event with the meter. By default it will record one event.
Returns the mean rate of the events since the start of the process.
Record an event with the derive.
Wrapper to make map() behave the same on Py2 and Py3.
Send metric and its snapshot.
Serialize and send available measures of a metric.
Compose a statsd compatible string for a metric's measurement.
Add a metric to the buffer.
Get method that raises MissingSetting if the value was unset.
Set method that (1) auto-saves if possible and (2) auto-creates         sections.
Connect to a host on a given (SSL) port.
Base method to fetch values and to set defaults in case they         don't exist.
Get VATCode (up to three digit number) for the specified ledger line.
Select the "current" division that we'll be working on/with.
Optionally supply a list of ExactOnline invoice numbers.
Optionally supply a list of foreign (your) invoice numbers.
solve a Sudoku grid inplace
Recieve a streamer for a given file descriptor.
Called by the event loop whenever the fd is ready for reading.
Stop watching a given rule.
Fetch an event.
Return the total downloads, and the downloads column
Respond to ``nsqd`` that you need more time to process the message.
Update the timer to reflect a successfull call
Update the timer to reflect a failed call
encode a dictionary of URL parameters (including iterables) as utf-8
Used to identify when buffered messages should be processed and responded to.
Adds a connection to ``nsqd`` at the specified address.
Trigger a query of the configured ``nsq_lookupd_http_addresses``.
Called when a message has been received where ``msg.attempts > max_tries``
Listen for the named event with the specified callback.
Stop listening for the named event via the specified callback.
Execute the callbacks for the listeners on the specified event with the         supplied arguments.
publish a message to nsq
publish multiple messages in one command (efficiently)
publish multiple messages in one command (efficiently)
Determine the path from the intersphinx inventory entry
Convert docs from SOURCE to Dash.app's docset format.
Determine source and destination using the options.
Add icon to docset
Check whether *filename* in *path* contains the string *content*.
Transform data feature to high level
Retrieves some statistics from a single Trimmomatic log file.
Cleans the working directory of unwanted temporary files
Main executor of the trimmomatic template.
Sets the path to the appropriate jinja template file
Returns the main raw channel for the process
Wrapper to the jinja2 render method from a template file
Adds secondary inputs to the start of the pipeline.
Main executor of the process_mapping template.
Parse an assembly fasta file.
Inserts data from a single contig into\          :py:attr:`~Assembly.contigs`.
Get GC content and proportions.
Filters the contigs of the assembly according to user provided\         comparisons.
Returns the length of the assembly, without the filtered contigs.
Writes the assembly to a new file.
Writes a report with the test results for the current assembly
Parses a pipeline string into a list of dictionaries with the connections      between processes
Returns the lane of the last process that matches fork_process
Connects a linear list of processes into a list of dictionaries
Checks whetner the trace and log files are available
Parses the trace file header and retrieves the positions of each         column key.
Converts a hms string into seconds.
Parses the .nextflow.log file and retrieves the complete list         of processes
Updates the 'submitted', 'finished', 'failed' and 'retry' status         of each process/tag combination.
Checks whether the channels to each process have been closed.
Method used to retrieve the contents of a log file into a list.
Updates the resources info in :attr:`processes` dictionary.
Updates the process stats with the information from the processes
Wrapper method that calls the appropriate main updating methods of         the inspection.
Returns a list with the last ``n`` lines of the nextflow log file
Gets the hash of the nextflow file
Main executor of the split_fasta template.
Brews a given list of processes according to the recipe
Returns a pipeline string from a recipe name.
Main method to run the automatic pipeline creation
Generates a component string based on the provided parameters and         directives
Writes a report from multiple samples.
Main executor of the trimmomatic_report template.
Cleans the temporary fastq files. If they are symlinks, the link     source is removed
Public method for parsing abricate output files.
Parser for a single abricate output file.
Writes the JSON report to a json file
Main executor of the assembly_report template.
Parse an assembly file in fasta format.
Get proportion of GC from a string
Main executor of the skesa template.
Returns the trim index from a ``bool`` list
Assess the optimal trim range for a given FastQC data file.
Checks the health of a sample from the FastQC summary file.
Main executor of the fastqc_report template.
Main executor of the process_mapping template.
Parse a bowtie log file.
Parses the process string and returns the process name and its         directives
Automatically Adds a dependency of a process.
Compiles all status channels for the status compiler process
Returns the nextflow resources string from a dictionary object
Returns the nextflow containers string from a dictionary object
Returns the nextflow params string from a dictionary object.
Write pipeline attributes to json
Wrapper method that writes all configuration files to the pipeline         directory
Export pipeline params as a JSON to stdout
Export pipeline directives as a JSON to stdout
Export all dockerhub tags associated with each component given by         the -t flag.
Returns a kmer list based on the provided kmer option and max read len.
Main executor of the spades template.
Sends a POST request to initialize the live reports
Generates an adapter file for FastQC from a fasta file.
Main executor of the fastq template.
Guesses the compression of an input file.
Get range of the Unicode encode range for a given string of characters.
Returns the valid encodings for a given encoding range.
Main executor of the integrity_coverage template.
Uses Samtools to filter a BAM file according to minimum coverage
Main executor of the process_assembly_mapping template.
Main executor of the process_spades template.
Convers a CamelCase string into a snake_case one
Main executor of the process_newick template.
Factorize s.t. CUR = data
Factorize s.t. CUR = data
Find data points on the convex hull of a supplied data set
Factorize s.t. WH = data
Factorize s.t. WH = data
Factorize s.t. WH = data
Shifts circularly the X squre matrix in order to get a         time-lag matrix.
Returns a set of segments defined by the bound_idxs.
Fit the OLDA model
Partial-fit the OLDA model
Aligns the times to the closest frame times (e.g. beats).
Saves the segment estimations in a JAMS file.
Gets the files of the given dataset.
Reads hierarchical references from a jams file.
Reads the duration of a given features file.
Writes results to file using the standard MIREX format.
Load a ground-truth segmentation, and align times to the nearest     detected beats.
Estimates the beats using librosa.
Make the features beat-synchronous.
Reads the features from a file and stores them in the current         object.
Computes the framesync times based on the framesync features.
Computes all the features (beatsync, framesync) from the audio.
This getter returns the frame times, for the corresponding type of         features.
Selects the features from the given parameters.
Sweeps parameters across the specified algorithm.
Main function to sweep parameters of a certain algorithm.
Main function to parse the arguments and call the main process.
Print all the results.
Compute the results using all the available evaluations.
Parses a config string (comma-separated key=value components) into a dict.
Add a new variable to msaf.config
Main function to parse the arguments and call the main process.
Return the average log-likelihood of data under a standard normal
Log-normalizes features such that each vector is between min_db to 0.
Normalizes the given matrix of features.
Sonifies the estimated times into the output file.
Synchronizes the labels from the old_bound_idxs to the new_bound_idxs.
compute distances of a specific data point to all other samples
Returns the data with a specific label_index, using the previously          learned labels.
Magnitude of a complex matrix.
Extracts the boundaries from a json file and puts them into         an np array.
Extracts the labels from a json file and puts them into         an np array.
Extracts the beats from the beats_json_file and puts them into         an np array.
Factorize s.t. WH = data
(Convex) Non-Negative Matrix Factorization.
Obtains the label module given a label algorithm identificator.
Runs the algorithms with the specified identifiers on the audio_file.
Main process to segment a file or a collection of files.
Create DataFrames of nodes and edges that do not include specified nodes.
Save a Network's data to a Pandas HDFStore.
Build a Network from data in a Pandas HDFStore.
Characterize urban space with a variable that is related to nodes in         the network.
Assign node_ids to data specified by x_col and y_col
Make a request to OSM and return the parsed JSON.
Build the string for a node-based OSM query.
Search for OSM nodes within a bounding box that match given tags.
Run the Cell code using the IPython globals and locals
Redirect the stdout
Return a string representation of the Python object
Get type information for a Python object
Returns the number of confirmations for given         :class:`Transaction <monero.transaction.Transaction>` or         :class:`Payment <monero.transaction.Payment>` object.
Sends a transfer from the default account. Returns a list of resulting transactions.
Sends a transfer. Returns a list of resulting transactions.
Sends a batch of transfers. Returns a list of resulting transactions.
Convert Monero decimal to atomic integer of piconero.
Returns the master :class:`Address <monero.address.Address>` represented by the seed.
Discover the proper class and return instance for a given Monero address.
Integrates payment id into the address.
Encode hexadecimal string as base58 (ex: encoding a Monero address).
Decode a base58 string (ex: a Monero address) into hexidecimal form.
Convert hexadecimal string to mnemonic word representation with checksum.
Calculate hexadecimal representation of the phrase.
Sends a transaction generated by a :class:`Wallet <monero.wallet.Wallet>`.
Create options and verbose options from strings and non-string iterables in     `options` array.
Assigns function to the operators property of the instance.
Helper that returns True if condition is satisfied/doesn't exist.
Move `n` questions back in the questionnaire by removing the last `n`         answers.
Tries to match a regular expression value ``x`` against ``y``.     Aliast``unittest.TestCase.assertEqual()``
Compares two values with regular expression matching support.
Compares an string or regular expression againast a given value.
Returns a matcher instance by class or alias name.
Helper function to append functions into a given list.
Defines the HTTP method to match.         Use ``*`` to match any method.
Defines a URL path to match.
Defines a URL path to match.
Defines a set of URL query params to match.
Defines the body data to match.
Defines the JSON body to match.
Defines a XML body value to match.
Reads the body to match from a disk file.
Enables persistent mode for the current mock.
Defines a simulated exception error that will be raised.
Copies the current Request object instance for side-effects purposes.
Enables the HTTP traffic interceptors.
Removes a specific interceptor by name.
Get key from connection or default to settings.
Build SQL with decryption and casting.
Save the original_value.
Get the decryption for col.
Adds an entity that matches the given lines.
Unload an intent
Unload an entity
Internal pickleable function used to train objects in another process
Retype `src`, finding types in `pyi_dir`. Save in `targets`.
Given a string with source, return the lib2to3 Node.
Given a lib2to3 node, return its string representation.
Reapplies the typed_ast node into the lib2to3 tree.
Parse a type comment string into AST nodes.
parse_arguments('(a, b, *, c=False, **d)') -> ast3.arguments
Copies AST nodes from `type_comment` into the ast3.arguments in `args`.
Return the type given in `expected`.
Pops the parameter and the "remainder" (comma, default value).
Returns the offset after which a statement can be inserted to the `body`.
r"""Recomputes all line numbers based on the number of \n characters.
Upload files to your DG S3 bucket/prefix.
Match the histogram to existing imagery
Plot the image with MatplotLib
Describe the result set of a catalog search for IDAHO images.
Create a leaflet viewer html file for viewing idaho images.
Checks to see if a CatalogID has been ordered or not.
Checks to see if a CatalogID can be atmos. compensated or not.
Set input values on task
Save output data from any task in this workflow to S3
Execute the workflow.
Get the task IDs of a running workflow
Cancel a running workflow.
Get stdout from all the tasks of a workflow.
Get stderr from all the tasks of a workflow.
Renders the list of layers to add to the map.
Show a slippy map preview of the image. Requires iPython.
Compute (gain, offset) tuples for each band of the specified image metadata
Updates a GBDX task.
Write out a geotiff file of the image
append two required tasks to the given output to ingest to VS
Create a vectors in the vector service.
Create a single vector in the vector service
Perform a vector services query using the QUERY API         (https://gbdxdocs.digitalglobe.com/docs/vs-query-list-vector-items-returns-default-fields)
Perform a vector services query using the QUERY API         (https://gbdxdocs.digitalglobe.com/docs/vs-query-list-vector-items-returns-default-fields)
Get a random window of a given shape from within an image
Iterate over random windows of an image
Return a subsetted window of a given size, centered on a geometry object
Iterate over a grid of windows of a specified shape covering an image.
Returns the bounds of a geometry object in pixel coordinates
Delayed warp across an entire AOI or Image
Loads a geotiff url inside a thread and returns as an ndarray
convert mercator bbox to tile index limits
Loads a geotiff url inside a thread and returns as an ndarray
Get stdout for a particular task.
Cancels a running workflow.
Cancels GBDX batch workflow.
Cancels GBDX batch workflow.
Check the heartbeat of the ordering API
Use the google geocoder to get latitude and longitude for an address string
Perform a catalog search over an address string
Perform a catalog search over a specific point, specified by lat,lng
Find and return the S3 data location given a catalog_id.
Perform a catalog search
Return the most recent image
calculate the weighted sums of the tip and branch values and         their second moments.
Plot root-to-tip distance vs time as a basic time-tree diagnostic
initialize the merger model with a coalescent time
determines the coalescent time scale that optimizes the coalescent likelihood of the tree
Print log message *msg* to stdout.
Set a new GTR object
Set auxilliary parameters to every node of the tree.
For each node in the tree, set its root-to-node distance as dist2root         attribute
Calculate the likelihood of the given realization of the sequences in         the tree
Get the multiple sequence alignment, including reconstructed sequences for         the internal nodes.
Overwrite the GTR model given the provided data
Create a GTR model by specifying the matrix explicitly
Overwrite the GTR model given the provided data
Create standard model of molecular evolution.
Find the optimal distance between the two sequences
Find the optimal distance between the two sequences, for compressed sequences
Calculate the probability of observing a node pair at a distance t
Find best root and re-root the tree to the new root
Resolve the polytomies on the tree.
Print the total likelihood of the tree given the constrained leaves
Add a coalescent model to the tree and optionally optimze
parse the arguments referring to the GTR model and return a GTR structure
implementeing treetime tree
Create delta function distribution.
assign dates to nodes
Use the date constraints to calculate the most likely positions of         unconstrained nodes.
Return the likelihood of the data given the current branch length in the tree
calculate H(t) = \int_tau f(t-tau)g(tau) if inverse_time=True                   H(t) = \int_tau f(t+tau)g(tau) if inverse_time=False
Find the global minimum of a function represented as an interpolation object.
Find the median of the function represented as an interpolation object.
parse an abiguous date such as 2017-XX-XX to [2017,2017.999]
Create the conversion object automatically from the tree
get ip address of client         :return:
Set response as {'code': xxx, 'data': xxx}         :param code:         :param data:         :return:
Set raw response         :param body:         :param status:         :param content_type:         :return:
:param info:         :param records: the data got from database and filtered from permission         :return:
call and check result of handle_query/read/insert/update
:param old_records:         :param raw_post:         :param values:         :param records:         :return:
:param text: order=id.desc, xxx.asc         :return: [             [<column>, asc|desc|default],             [<column2>, asc|desc|default],         ]
get columns from select text         :param text: col1, col2         :return: ALL_COLUMNS or ['col1', 'col2']
Serialize a Python object into MessagePack bytes.
Serialize a Python object into MessagePack bytes.
Deserialize MessagePack bytes into a Python object.
Deserialize MessagePack bytes into a Python object.
Terminate connection with Guacamole guacd server.
Send encoded instructions to Guacamole guacd server.
Send instruction after encoding.
Establish connection with Guacamole guacd server via handshake.
Return a utf-8 encoded string from a valid unicode string.
Encode argument to be sent in a valid GuacamoleInstruction.
Prepare the instruction to be sent over the wire.
Register plugin in grappa.
Get instance URL by ID
Asks the user for their email and password.
Prints information about the current user.     Assumes the user is already logged-in.
Prints information about the current user.
Shortcut to do a single position filter on genomic datasets.
Returns a dictionary with the requested facets.
Takes a list of filters and returns JSON
Allows the Query object to be an iterable.
Migrate the data from the Query to a target dataset.
Used to create a new object from an HTTP response
Revoke the token and remove the cookie.
Open the SolveBio shell (IPython wrapper)
Open the SolveBio shell (IPython wrapper) with IPython 5+
Open the SolveBio shell (IPython wrapper) for older IPython versions
Return a parsed dictionary for JSON.
Dump the class data in the format of a .netrc file.
[string] -> [padded_string]
Format a value accoding to its type.
Return a string which represents a row of data cells.
Return a string which represents a horizontal line.
Prefix every cell in a row with an HTML alignment attribute.
Produce a plain-text representation of the table.
Migrate the data from this dataset to a target dataset.
Attempt to create a new dataset given the following params:
Given a dataset and a local path, upload and import the file(s).
Helper method to return a full path from a full or partial path.
Validate SolveBio API host url.
Annotate a set of records with stored fields.
Evaluates the expression with the provided context and format.
Args:             float: volume in the interval [0, 10]
Set the video position on the screen
Returns:             bool: Whether the player is playing
Play the video and block whilst the video is playing
Quit the player, blocking until the process has died
Returns the smallest delimited version of field_key that     is an attribute on document.
Set the form fields for every key in the form_field_dict.
Generate the form for view.
Generate a dictionary representation of the document.  (no recursion)
Choose which widget to display for a field.
Set attributes on the display widget.
Gets the default form field  for a mongoenigne field.
Returns the display value of a field for a particular MongoDB document.
Used during adding/editing of data.
Injects data into the context to replicate CBV ListView.
Returns a list of all mongoadmin implementations for the site
Returns the MongoAdmin object for an app_label/document_name style view
Provides permissions for mongoadmin for use in the context
1. Figures out what value the list ought to have            2. Sets the list
Check Validity of an IP address
Check if IP is local
Format output using *format_name*.
Set the default format name.
Register a new output formatter.
Format the headers and data using a specific formatter.
Get a list of the data types for each column in *data*.
Get the most generic data type for iterable *column*.
Get the data type for *value*.
Wrap tabulate inside a function for TabularOutputFormatter.
r"""Returns a list of system-wide config folders for the application.
Read the default config file.
Read the default, additional, system, and user config files.
Get the absolute path to the user config file.
Get a list of absolute paths to the system config files.
Get a list of absolute paths to the additional config files.
Write the default config to the user's config file.
Write the current config to a file (defaults to user config).
Read a config file *f*.
Read a list of config files.
Convert bytes *b* to a string.
Truncate string values.
Filter the dict *d* to remove keys not in *keys*.
Return the unique items from iterable *seq* (in order).
Replace multiple values in a string
Wrap the formatting inside a function for TabularOutputFormatter.
Run the *cmd* and exit with the proper exit code.
Run multiple commmands in a row, exiting if one fails.
Apply command-line options.
Apply a command-line option.
Set the default options.
Run the linter.
Generate and view the documentation.
Convert all *data* and *headers* to strings.
Override missing values in the *data* with *missing_value*.
Override tab values in the *data* with *new_value*.
Convert all *data* and *headers* bytes to strings.
Align numbers in *data* on their decimal points.
Style the *data* and *headers* (e.g. bold, italic, and colors)
Format numbers according to a format specification.
Get a row separator for row *num*.
Format *data* and *headers* as an vertical table.
Wrap vertical table in a function for TabularOutputFormatter.
Wrap the formatting inside a function for TabularOutputFormatter.
Wrap terminaltables inside a function for TabularOutputFormatter.
Mix all values and make the query
Remember the recipients.
Parse message headers, then remove BCC header.
Add boundary parameter to multipart message if they are not present.
Convert a message into a multipart message.
Convert markdown in message text to HTML.
Add the attachments from the message from the commandline options.
Send email message using Python SMTP library.
Create sample template email and database.
Command line interface.
Request params can be extracted from the ``**kwargs``
create the base url for the api
Make requests to the REST API
Make requests to the Streaming API
Get the tasks attached to the instance
Run the tasks attached to the instance
properly close the client
upload media in chunks
upload a media on twitter
Parse the output format for NetMHC 3.x, which looks like:
Hackish way to get the arguments of a function
log an exception and its traceback on the logger defined
Get all the file's metadata and read any kind of file object
Get the size of a file
Get the data from the response
Open authorize page in a browser,     print the url if it didn't work
get the access token of the user
OAuth dance to get the user's access token
parse the responses containing the tokens
OAuth dance to get the user's access token
Return netChop predictions for each position in each sequence.
Parse netChop stdout.
Check peptide sequences to make sure they are valid for this predictor.
Connect to the stream
Create the connection
Restart the stream on error
Restart the stream on error
returns an :class:`Event` that can be used for site streams
set the environment timezone to the timezone             set in your twitter settings
read the data of the response
Find the message shown when someone calls the help command
Check the permissions of the user requesting a command
return the error if there is a corresponding exception
Get the response data if possible and raise an exception
Decorator to associate a code to an exception
prepare all the arguments for the request
Make sure the user doesn't override the Authorization header
Analyze the text to get the right function
run the function you want
convert the fields of the object into a dictionnary
convert the fields of the object into a dictionnary
load a PKCS#11 library
generate a secret key
generate a key pair
find the objects matching the template pattern
Identifies the group for which a node belongs to.
Finds the index of the node in the sorted list.
Computes the radial position of the node.
Convenience function to find the node's theta angle.
Renders the given edge (n1, n2) to the plot.
Draws all of the edges in the graph.
The master function that is called that draws everything.
This function corrects for the following problems in the edges:
Parse authors string to create lists of authors.
Get all publications.
Get a single publication.
Get a publication list.
Swap the positions of this object with a reference object.
Move this object up one position.
Move this object to the top of the ordered stack.
Move this object to the bottom of the ordered stack.
Load custom links and files from database and attach to publications.
build a vcf file from the supercatg array and the cat.clust.gz output
Calculates the quartet weights for the test at a random     subsampled chunk of loci.
count number of sites with cov=4, and number of variable sites.
return a toyplot barplot of the results table.
Convert ipyrad .loci file to an iqtree-pomo 'counts' file
Clean up a bunch of loose files.
Builds a single end cluster from the refmapped data.
Get the number of mapped and unmapped reads for a sample     and update sample.stats
create some file handles for refmapping
build the command list
returns a subsample of unlinked snp sites
Returns a treemix plot on a toyplot.axes object.
filters for loci with >= N PIS
Returns a data frame with Sample data and state.
Set a parameter to a new value. Raises error if newvalue is wrong type.
Step 7: Filter and write output files
find barcode sequence in the beginning of read
find barcode sequence in the beginning of read
returns an iterator to grab four lines at a time
Submit chunks to be sorted by the barmatch() function then      calls putstats().
submit chunks to be sorted
make toyplot matrix fig
fill a matrix with pairwise data sharing
Get the param name from the dict index value.
function to encode json string
a subfunction for summarizing results
Writes bpp files (.ctl, .seq, .imap) to the working directory.
write outfile with any args in argdict
inserts indels into the catg array
sort seeds from cluster results
parse results from cutadapt into sample data
parse results from cutadapt for paired data
concatenate if multiple input files for a single samples
get dstats from the count array and return as a float tuple
used in bootstrap resampling without a map file
get span distance for each locus in original seqarray
get shape of new bootstrap resampled locus array
converts unicode to utf-8 when reading in json files
parse sample names from the sequence file
runs quartet max-cut on a quartets file
write final tree files
save a JSON file representation of Tetrad Class for checkpoint
inputs results from workers into hdf4 array
write the output stats file and save to Assembly obj.
Used to count the number of unique bases in a site for snpstring.
filter for indels
Get desired formats from paramsdict and write files to outfiles     directory.
write the phylip output file from the tmparr[seqarray]
write the nexus output file from the tmparr[seqarray] and tmparr[maparr]
write a map file with linkage information for SNPs file
write the bisnp string
Write STRUCTURE format for all SNPs and unlinked SNPs
Returns the most common base at each site in order.
write outfile with any args in argdict
plot the tree using toyplot.graph.
iterate over clustS files to get data
stats, cleanup, and link to samples
build a directed acyclic graph describing jobs to be run in order.
Parse the params file args, create and return Assembly object.
Test if there's a newer version and nag the user to upgrade.
call all sites in a locus array.
store phased allele data for diploids
split job into bits and pass to the client
Apply state, ncluster, and force filters to select samples to be run.
checks if the sample should be run and passes the args
submit chunks to consens func and ...
check if dependency program is there
get total number of quartets possible for a split
get total number of quartets sampled for a split
Runs quartet max-cut QMC on the quartets qdump file.
Load a JSON serialized tetrad instance to continue from a checkpoint.
returns reverse complement of a string
prints a progress bar
make the subprocess call to structure
returns a list of files that have finished structure
parse an _f structure output file
call the command as sps
build the command list
distributes jobs to the parallel client
private function to perform a single D-stat test
return array of bootstrap D-stats
Draw a multi-panel figure with tree, tests, and results                   Parameters:         -----------         height: int         ...
returns a fields argument formatted as a list of strings.     and doesn't allow zero.
Download the accessions into a the designated workdir.
Returns the client in async mode.
Get a player information
Get a player's battle log
Get a clan information
Get a tournament information
Search for a tournament
Get a list of top clans by war
Get a list of top players
Get a list of most queried clans
Get a list of most queried players
Get a list of most queried tournaments
Get a list of most queried decks
Get a list of queried tournaments
Get information about a player
Get a player's battle log
Get information about a player's chest cycle
Get inforamtion about a clan
Search for a clan. At least one         of the filters must be present
Get a tournament information
Search for a tournament by its name
Get a list of all the cards in the game
Get a list of all locations
Get a location information
Get a list of top clans by trophy
Get a list of top players
Get the clan badge image URL
Get the arena image URL
Converts a %Y%m%dT%H%M%S.%fZ to a UNIX timestamp         or a datetime.datetime object
(a)sync function to return clan.
(a)sync refresh the data.
Like self.repeat(), but used to repeat every weekday.
Created to take some of the load off of _handle_weekly_repeat_out
Export causative variants for a collaborator
Create the lines for an excel file with verified variants for         an institute
Export mitochondrial variants for a case to create a MT excel report
Update a user in the database
Display a list of SNV variants.
Display a specific SNV variant.
Display a list of STR variants.
Display a list of structural variants.
Display a specific structural variant.
Display a specific STR variant.
Update user-defined information about a variant: manual rank & ACMG.
Build a clinVar submission form for a variant.
Show cancer variants overview.
Show or delete an ACMG evaluation.
Calculate an ACMG classification from submitted criteria.
Parse gene panel file and fill in HGNC symbols for filter.
Return a dictionary with hgnc symbols as keys
Gather information from different sources and return a gene dict
Send a request to MatchMaker and return its response
Return the available MatchMaker nodes
Get the cytoband coordinate for a position
Return the length of a variant
Return the end coordinate for a variant
Find out the coordinates for a variant
docstring for cli
Show all panels for a case.
Update panel to a new version.
Export panel to PDF file
Edit additional information about a panel gene.
Add delivery report to an existing case.
Parse a peddy.ped file          Args:         lines(iterable(str))          Returns:         peddy_ped(list(dict))
Parse a .ped_check.csv file          Args:         lines(iterable(str))          Returns:         ped_check(list(dict))
Parse a .ped_check.csv file          Args:         lines(iterable(str))          Returns:         sex_check(list(dict))
Show all objects in the whitelist collection
Build a small phenotype object
Build a case object that is to be inserted to the database
Parse information about a gene.
Fetch matching genes and convert to JSON.
Display the Scout dashboard.
Fetch the ensembl genes          Args:         build(str): ['37', '38']
Fetch the ensembl genes          Args:         build(str): ['37', '38']
Fetch the file with exac constraint scores          Returns:         exac_lines(iterable(str))
Show all transcripts in the database
Pre-process list of variants.
Pre-process list of SV variants.
Pre-process list of STR variants.
Parse information about variants.
Returns a header for the CSV file with the filtered variants to be exported.
Pre-process case for the variant view.
Find out BAI file by extension given the BAM file.
Pre-process a single variant for the detailed variant view.
Query observations for a variant.
Generate amino acid change as a string.
Calculate end position for a variant.
Returns a judgement on the overall frequency of the variant.
Convert to human readable version of CLINSIG evaluation.
Compose link to COSMIC Database.
Compose link to UCSC.
Translate SPIDEX annotation to human readable string.
Gather information from common gene information.
Sand a verification email and register the verification in the database
Fetch data related to cancer variants for a case.
Gather the required data for creating the clinvar submission form
Collects all variants from the clinvar submission collection with a specific submission_id
Calculate an ACMG classification based on a list of criteria.
Fetch and fill-in evaluation object.
Parse out HGNC symbols from a stream.
Collect all verified variants in a list on institutes and save them to file
Export all genes from the database
Get the clnsig information
Show all indexes in the database
Get a list with compounds objects for this variant.
Export all genes from a build
Build a Individual object
Display a specific SNV variant.
Show all collections in the database
Create a new institute and add it to the database
Update an institute
Get the net of any 'next' and 'prev' querystrings.
Add information from peddy outfiles to the individuals
Parse individual information
Parse the individual information
Parse case information from config or PED files.
Parse out minimal family information from a PED file.
Build a evaluation object ready to be inserted to database
Check if the criterias for Pathogenic is fullfilled
Check if the criterias for Likely Pathogenic is fullfilled
Check if criterias for Likely Benign are fullfilled
Use the algorithm described in ACMG paper to get a ACMG calssification
Add extra information about genes from gene panels
Returns the specified variant.
Return all variants seen in a given gene.
Return all causative variants for an institute
Check if there are any variants that are previously marked causative
Find the same variant in other cases marked causative.
Delete variants of one type for a case
Get a client to the mongo database
Load all the transcripts
Add a gene panel to the database.
Build a Exon object object
Delete a version of a gene panel or all versions of a gene panel
Delete all indexes in the database
Delete a user from the database
Delete all genes in the database
Delete all exons in the database
Delete a case and it's variants from the database
Show all individuals from all cases in the database
Display cases from the database
Returns the currently active user as an object.
Login a user if they have access.
Build a institute object
Create a Event with the parameters given.
Fetch events from the database.
Fetch all events by a specific user.
Add a new phenotype term to a case
Remove an existing phenotype from a case
Add a comment to a variant or a case.
Parse the genotype calls for a variant
Get the genotype information in the proper format
Check if the variant is in the interval given by the coordinates
Render search box and view for HPO phenotype terms
Export all transcripts to .bed like format
Load exons into the scout database
Show all indexes in the database
Load all variants in a region to a existing case
Returns two datetimes: first day and last day of given year&month
Returns all events that have an occurrence within the given         month & year.
Build a user object          Args:         user_info(dict): A dictionary with user information          Returns:         user_obj(scout.models.User)
Check if gene is already added to a panel.
Update an existing gene panel with genes.
Create a new gene panel.
Preprocess a panel of genes.
Get information about a case from archive.
Migrate case information from archive.
Update all information that was manually annotated from a old instance.
Show all hpo terms in the database
Configure Flask extensions.
Setup logging of error/exceptions to email.
Build a gene_panel object
Export causatives for a collaborator in .vcf format
Start the web server.
Generate an md5-key from a list of arguments.
Setup connection to database.
Create indexes for the database
Setup a scout database.
Show all institutes in the database
Show all gene panels in the database
Add a institute to the database
Update the information for an institute
Featch a single institute from the backend
Fetch all institutes.                  Args:             institute_ids(list(str))                  Returns:             res(pymongo.Cursor)
Check if a string is a valid date
Return a datetime object if there is a valid date
Export a list of genes based on hpo terms
Parse the rank score
Add a user to the database.
Check if a connection could be made to the mongo process specified
Display a list of all user institutes.
Load a delivery report into a case in the database
Update an existing user.                               Args:                 user_obj(dict)                      Returns:                 updated_user(dict)
Add a user object to the database
Fetch a user from the database.                      Args:                 email(str)                      Returns:                 user_obj(dict)
Delete a user from the database                  Args:             email(str)              Returns:             user_obj(dict)
Stream *large* static files with special requirements.
Visualize BAM alignments.
Visualize BAM alignments using igv.js (https://github.com/igvteam/igv.js)
Update all compounds for a case
Update a gene object with links
Query the hgnc aliases
Parse an hgnc formated line
Parse lines with hgnc formated genes
Adds submission_objects to clinvar collection and update the coresponding submission object with their id
Set a clinvar submission ID to 'closed'
Collect all open and closed clinvar submission created by a user for an institute
Remove a variant object from clinvar database and update the relative submission object
Get all variants included in clinvar submissions for a case
Parse hpo phenotype              Args:             hpo_line(str): A iterable with hpo phenotype lines              Yields:             hpo_info(dict)
Parse hpo gene information              Args:             hpo_line(str): A iterable with hpo phenotype lines              Yields:             hpo_info(dict)
Parse hpo disease line              Args:             hpo_line(str)
Parse a .obo formated hpo line
Render information about a gene.
Return JSON data about genes.
Load all variants in a region defined by a HGNC id
Load a new case from a Scout config.
Fetch insitiute and case objects.
Preprocess institute objects.
Get the hgnc id for a gene
Update a panel in the database
Update disease terms in mongo database.
Add the frequencies to a variant
Show all users in the database
Load a case into the database
Build a hgnc_gene object
Create and load the OMIM-AUTO panel
Add a gene panel to the database
Fetch a gene panel by '_id'.
Delete a panel by '_id'.
Fetch a gene panel.
Fetch all gene panels and group them by gene
Replace a existing gene panel with a new one
Add a pending action to a gene panel
Return all the clinical gene symbols for a case.
Interact with cases existing in the database.
Emit a record.         Format the record and send it to the specified addressees.
Return a list with the current indexes                  Skip the mandatory _id_ indexes                  Args:             collection(str)
Add the proper indexes to the scout instance.
Delete all indexes for the database
Build a mongo query
Add clinsig filter values to the mongo query object
Creates a secondary query object based on secondary parameters specified by user
Drop the mongo database given.
Parse user submitted panel.
docstring for build_clnsig
Load a bulk of transcript objects to the database
Load a bulk of exon objects to the database
Fetch a hgnc gene
Query the genes with a hgnc symbol and return the hgnc id
Fetch all hgnc genes that match a hgnc symbol
Fetch all hgnc genes
Return the number of hgnc genes in collection
Delete the genes collection
Delete the transcripts collection
Delete the exons collection
Return a dictionary with ensembl ids as keys and transcripts as value.
Return a dictionary with hgnc_symbol as key and gene_obj as value
Return a iterable with hgnc_genes.
Return a set with identifier transcript(s)
Return a dictionary with ensembl ids as keys and gene objects as value.
Check if a hgnc symbol is an alias
Add the correct hgnc id to a set of genes with hgnc symbols
Return a dictionary with chromosomes as keys and interval trees as values
Create exon objects and insert them into the database                  Args:             exons(iterable(dict))
Return all exons                  Args:             hgnc_id(int)             transcript_id(str)             build(str)                  Returns:             exons(iterable(dict))
Update the automate generated omim gene panel in the database.
Display a list of all user institutes.
Display a list of cases for an institute.
Display one case.
Show all MatchMaker matches for a given case
Add or update a case in MatchMaker
Remove a case from MatchMaker
Display a list of SNV variants.
Update (PUT) synopsis of a specific case.
Download a pdf report for a case
Add or remove a diagnosis for a case.
Perform actions on multiple phenotypes.
Update status of a specific case.
Assign and unassign a user from a case.
Search for HPO terms.
Pin and unpin variants to/from the list of suspects.
Mark a variant as sanger validated.
Mark a variant as confirmed causative.
Display delivery report.
Share a case with a different institute.
Request a case to be rerun.
Open the research list for a case.
Add/remove institute tags.
Update default panels for a case.
Download vcf2cytosure file for individual.
Load multiqc report for the case.
Preprocess case objects.
Preprocess a single case.
Gather contents to be visualized in a case report
Get all Clinvar submissions for a user and an institute
Return the list of HGNC symbols that match annotated HPO terms.
Request a rerun by email.
Update default panels for a case.
vcf2cytosure CGH file for inidividual.
Pre-process list of variants.
Find MultiQC report for the case.
Add a patient to MatchMaker server
Delete all affected samples for a case from MatchMaker
Show Matchmaker submission data for a sample and eventual matches.
Build a variant object based on parsed information
Load the hgnc aliases to the mongo database.
Build a hgnc_transcript object
Load a institute into the database
Check if the cadd phred score is annotated
Load a case into the database.
Update one variant document in the database.
Updates the manual rank for all variants in a case
Update compounds for a variant.
Update the compounds for a set of variants.
Update the compound information for a bulk of variants in the database
Update the compounds for a case
Load a variant object
Load a variant object, if the object already exists update compounds.
Perform the loading of variants
Load variants for a case into scout.
Assign a user to a case.
Share a case with a new institute.
Diagnose a case using OMIM ids.
Update default panels for a case.
Mark validation status for a variant.
Create an event for marking a variant causative.
Create an event for updating the ACMG classification of a variant.
Construct the necessary ids for a variant
Parse the simple id for a variant
Parse the variant id for a variant
Parse the variant id for a variant
Parse the unique document id for a variant.
Convert a gene panel with hgnc symbols to a new one with hgnc ids.
Create a new variant id.
Fetches all cases from the backend.
Return the number of cases
Update the dynamic gene list for a case
Fetches a single case from database
Delete a single case from database
Load a case into the database
Add a case to the database            If the case already exists exception is raised
Update a case in the database
Replace a existing case with a new one
Update case id for a case across the database.
Submit an evaluation to the database
Return all evaluations for a certain variant.
Parse a dataframe with ensembl gene information
Parse a dataframe with ensembl transcript information
Parse an ensembl formated line
Parse lines with ensembl formated genes
Parse lines with ensembl formated exons
Parse a dataframe with ensembl exon information
Initializes the log file in the proper format.
docstring for parse_omim_2_line
docstring for parse_omim_morbid
Parse the omim files
Update a case in the database
docstring for setup_scout
Export all transcripts from the database          Args:         adapter(scout.adapter.MongoAdapter)         build(str)          Yields:         transcript(scout.models.Transcript)
Return a formatted month as a table.
Return a day as a table cell.
Return a day as a table cell.
Populate variables used to build popovers.
Return a day as a table cell.
Return a day as a table cell.
Parse metadata for a gene panel
Parse a gene line with information from a panel file
Parse a file with genes and return the hgnc ids
Parse the panel info and return a gene panel
Show all diseases in the database
Update the hpo terms in the database. Fetch the latest release and update terms.
Display a list of all users and which institutes they belong to.
Parse the conservation predictors
Get the conservation prediction
Return the information about case groups
Returns a JSON response, transforming 'context' to make the payload.
Check if any events are cancelled on the given date 'd'.
Add a hpo object
Add a hpo object
Fetch a hpo term
Return a disease term
Load a disease term into the database
Generate a sorted list with namedtuples of hpogenes
Validate that the annotation has the correct namespace,     and is well-formed.
Flatten a multi_segment annotation into mir_eval style.
Convert a pattern_jku annotation object to mir_eval format.
r'''Note transcription evaluation
Construct a validation schema for a given namespace.
Construct a validation schema for arrays of a given namespace.
Return the allowed values for an enumerated namespace.
Get the dtypes associated with the value and confidence fields     for a given namespace.
Print out a listing of available namespaces
Get the dtype associated with a jsonschema type definition
Load the schema file from the package.
r'''Load a .lab file as an Annotation object.
Expand a list of relative paths to a give base directory.
Safely make a full directory path if it doesn't exist.
Naive depth-search into a directory for files with a given extension.
Get the metadata from a jam and an annotation, combined as a string.
Save an annotation as a lab/csv.
Convert jams to labs.
Parse arguments from the command line
Convert a given annotation to the target namespace.
Test if an annotation can be mapped to a target namespace
Convert a pitch_hz annotation to a contour
Convert a pitch_hz annotation to pitch_midi
Convert scaper annotations to tag_open
r"""Load a JAMS Annotation from a file.
Pop a prefix from a query string.
Test if a string matches a query.
Custom serialization functionality for working with advanced data types.
Update the attributes of a JObject.
Validate a JObject against its schema
Append an observation to the data field
Add observations from row-major storage.
Add observations from column-major storage.
Trim the annotation and return as a new `Annotation` object.
Slice the annotation and return as a new `Annotation` object.
Replace this observation's data with a fresh container.
Extract observation data in a `mir_eval`-friendly format.
Extract observation data in a `mir_eval`-friendly format.
Sample the annotation at specified times.
Filter the annotation array down to only those Annotation         objects matching the query.
Add the contents of another jam to this object.
Serialize annotation as a JSON formatted stream to file.
Validate a JAMS object against the schema.
Trim all the annotations inside the jam and return as a new `JAMS`         object.
Slice all the annotations inside the jam and return as a new `JAMS`         object.
Pretty-print a jobject.
Visualize a jams annotation through mir_eval
Display multiple annotations with shared axes
Generate a click sample.
Sonify events with clicks.
Sonify beats and downbeats together.
Sonify multi-level segmentations
Sonify a piano-roll
Sonify a jams annotation through mir_eval
Validate a jams file against a schema
Populate Filterbank instance with data from HDF5 file
Populate Filterbank instance with data from Filterbank file
Print header information
Setup ploting edges.
Plot frequency spectrum of a given file
Plot frequency spectrum of a given file
Plot waterfall of data
Plot the time series.
Write data to blimpy file.
Write data to HDF5 file.
Output stokes parameters (I,Q,U,V) for a rawspec     cross polarization filterbank file
Return the index of the closest in xarr to value val
upgrade data from nbits to 8bits
Read input and output frequency, and output file name
Open a HDF5 or filterbank file
Making sure the selection if time and frequency are within the file limits.
Calculate size of data of interest.
Calculate shape of data of interest.
Populate time axis.             IF update_header then only return tstart
Given the blob dimensions, calculate how many fit in the data selection.
Check if the current selection is too large.
Read header and return a Python dictionary of key:value pairs
Find first blob from selection.
Read blob from a selection.
Read blimpy header and return a Python dictionary of key:value pairs
Find first blob from selection.
Read blob from a selection.
read all the data.             If reverse=True the x axis is flipped.
Updates the header information from the original file to the selection.
Print header information and other derived information.
Write data to .fil file.
Write data to .fil file.
Write data to HDF5 file.
Write data to HDF5 file in one go.
Sets the chunking dimmentions depending on the file type.
Extract a portion of data by frequency range.
Read next header (multiple headers in file)
Read first header in file
Read the next block of data and its header
Read the next block of data and its header
Read the next block of data and its header
Compute some basic stats on the next block of data
Plot a histogram of data values
Do a (slow) numpy FFT and take power of data
Generate a blimpy header dictionary
Script to find the header size of a filterbank file
Command line tool to make a md5sum comparison of two .fil files.
Return the length of the blimpy header, in bytes
Open file and confirm if it is a filterbank file or not.
Read blimpy header and return a Python dictionary of key:value pairs
Apply a quick patch-up to a Filterbank header by overwriting a header value
Generate a serialized string for a sigproc keyword:value pair
Generate a serialzed sigproc header which can be written to disk.
Convert an astropy.Angle to the ridiculous sigproc angle format string.
Calculate number of integrations in a given file
Add SASL features to the <features/> element of the stream.
Process incoming <stream:features/> element.
Process incoming <sasl:auth/> element.
Handle successful authentication.
Process incoming <sasl:challenge/> element.
Process incoming <sasl:response/> element.
Check authorization id and other properties returned by the         authentication mechanism.
Process incoming <sasl:success/> element.
Process incoming <sasl:failure/> element.
Process incoming <sasl:abort/> element.
Schedule function to be called from the main loop after `delay`         seconds.
Make a RosterItem from an XML element.
Make an XML element from self.
Check if `self` is valid roster item.
Check if `self` is valid roster item.
Check if `self` is valid roster push item.
Check if `self` is valid roster set item.
Set of groups defined in the roster.
Return a list of items with given name.
Return a list of items within a given group.
Add an item to the roster.
Remove item from the roster.
Load roster from an XML file.
Save the roster to an XML file.
Handle successful response to the roster request.
Handle failure of the roster request.
Handle a roster push received from server.
Add a contact to the roster.
Modify a contact in the roster.
Remove a contact from the roster.
Send a 'roster set' to the server.
Unlink and free the XML node owned by `self`.
Evaluate XPath expression in context of `self.xmlnode`.
Set history parameters.
Set password for the MUC request.
Get password from the MUC request.
Initialize a `MucItem` object from a set of attributes.
Initialize a `MucItem` object from an XML node.
Create XML representation of `self`.
Initialize a `MucStatus` element from a status code.
Create XML representation of `self`.
Get a list of objects describing the content of `self`.
Clear the content of `self.xmlnode` removing all <item/>, <status/>, etc.
Add an item to `self`.
Get the MUC specific payload element.
Remove the MUC specific stanza payload element.
Create <x xmlns="...muc#user"/> element in the stanza.
Create <query xmlns="...muc#admin"/> element in the stanza.
Make the presence stanza a MUC room join request.
Do NFKC normalization of Unicode data.
Modify stringprep cache size.
Mapping part of string preparation.
Decorator for glib callback methods of GLibMainLoop used to store the     exception raised.
Register an io-handler with the glib main loop.
Called by glib on I/O event.
Call the `interfaces.IOHandler.prepare` method and         remove the handler from unprepared handler list when done.
Remove an i/o-handler.
Add a `TimeoutHandler` to the main loop.
Remove `TimeoutHandler` from the main loop.
Call the timeout handler due.
Stops the loop after the time specified in the `loop` call.
Examines out the response returned by a stanza handler and sends all         stanzas provided.
Process IQ stanza of type 'response' or 'error'.
Get an <iq/> handler for given iq  type and payload.
Process message stanza.
Process stanza not addressed to us.
Process stanza received from the stream.
Install stanza handlers provided by `handler_objects`
Send a stanza somwhere.
Call the event dispatcher.
Add a `TimeoutHandler` to the main loop.
Remove `TimeoutHandler` from the main loop.
Check if two XML elements are equal.
Decode the stanza subelements.
Return the XML stanza representation.
Create a deep copy of the stanza.
Create error response for any non-error message stanza.
Find a SessionHandler instance in the list and move it to the beginning.
Schedule a new XMPP c2s connection.
Gracefully disconnect from the server.
Handle the `AuthenticatedEvent`.
Handle the `AuthorizedEvent`.
Do some housekeeping (cache expiration, timeout handling).
Return a payload class for given element name.
Unquote quoted value from DIGEST-MD5 challenge or response.
Prepare a string for quoting for DIGEST-MD5 challenge or response.
Compute MD5 sum of username:realm:password.
Compute DIGEST-MD5 response value.
Encodes a vCard field into an RFC2425 line.
Create vcard-tmp XML representation of the field.
Create vcard-tmp XML representation of the field.
RFC2426-encode the field content.
Create vcard-tmp XML representation of the field.
RFC2426-encode the field content.
Create vcard-tmp XML representation of the field.
Initialize a `VCardAdr` object from and XML element.
RFC2426-encode the field content.
Create vcard-tmp XML representation of the field.
RFC2426-encode the field content.
Create vcard-tmp XML representation of the field.
Create vcard-tmp XML representation of the field.
RFC2426-encode the field content.
Create vcard-tmp XML representation of the field.
RFC2426-encode the field content.
Create vcard-tmp XML representation of the field.
Create vcard-tmp XML representation of the field.
RFC2426-encode the field content.
Create vcard-tmp XML representation of the field.
Create vcard-tmp XML representation of the field.
RFC2426-encode the field content.
Create vcard-tmp XML representation of the field.
Initialize the mandatory `self.fn` from `self.n`.
Initialize a VCard object from XML node.
Initialize a VCard object from an RFC2426 string.
Parse single RFC2425 record and update attributes of `self`.
Get the RFC2426 representation of `self`.
Complete the XML node with `self` content.
Update current status of the item and compute time of the next         state change.
Handle a successfull retrieval and call apriopriate handler.
Handle a retrieval error and call apriopriate handler.
Handle fetcher timeout and call apriopriate handler.
Add an item to the cache.
Get an item from the cache.
Update state of an item in the cache.
Remove purged and overlimit items from the cache.
Do the regular cache maintenance.
Remove a running fetcher from the list of active fetchers.
Do the regular cache maintenance.
Register a fetcher class for an object class.
Unregister a fetcher class for an object class.
Add a client authenticator class to `CLIENT_MECHANISMS_D`,     `CLIENT_MECHANISMS` and, optionally, to `SECURE_CLIENT_MECHANISMS`
Add a client authenticator class to `SERVER_MECHANISMS_D`,     `SERVER_MECHANISMS` and, optionally, to `SECURE_SERVER_MECHANISMS`
Check the password validity.
Base64-encode the data contained in the reply when appropriate.
Send session esteblishment request if the feature was advertised by         the server.
Convert ASN.1 string to a Unicode string.
Verify certificate for a server.
Return `True` if jid is listed in the certificate commonName.
Check if the cerificate is valid for given domain-only JID         and a service type.
Verify certificate for a client.
Load certificate data from an SSL socket.
Get certificate data from an SSL socket.
Decode DER-encoded certificate.
Load data from a ASN.1 subject.
Load data from a ASN.1 validity value.
Load SubjectAltName from a ASN.1 GeneralNames value.
Load certificate from a file.
Parse the command-line arguments and run the bot.
Request client connection and start the main loop.
Add a handler object.
Remove a handler object.
Update `_handler_map` after `handlers` have been         modified.
Get the next event from the queue and pass it to         the appropriate handlers.
Register an io-handler at the polling object.
Call the `interfaces.IOHandler.prepare` method and         remove the handler from unprepared handler list when done.
Remove an i/o-handler.
The HMAC(key, str) function.
The Hi(str, salt, i) function.
Process a challenge and return the response.
Make a response for the first challenge from the server.
Process the second challenge from the server and return the         response.
Process success indicator from the server.
Complete the XML node with `self` content.
Create a new `Option` object from an XML element.
Add an option for the field.
Complete the XML node with `self` content.
Create a new `Field` object from an XML element.
Add a field to the item.
Complete the XML node with `self` content.
Create a new `Item` object from an XML element.
Add and item to the form.
Make a "submit" form using data in `self`.
Complete the XML node with `self` content.
Initialize a `Form` object from an XML element.
Parse the <reported/> element of the form.
Remove `self` from the containing `DiscoItems` object.
Set the name of the item.
Set the node of the item.
Set the action of the item.
Get the name of the item.
Set the name of the item.
Get the category of the item.
Set the category of the item.
Get the type of the item.
Set the type of the item.
Get the items contained in `self`.
Set items in the disco#items object.
Add a new item to the `DiscoItems` object.
Check if `self` contains an item.
Get the features contained in `self`.
Set features in the disco#info object.
Check if `self` contains the named feature.
Add a feature to `self`.
Remove a feature from `self`.
List the identity objects contained in `self`.
Set identities in the disco#info object.
Check if the item described by `self` belongs to the given category         and type.
Add an identity to the `DiscoInfo` object.
Initialize the Service Discovery process.
Handle successful disco response.
Handle disco error response.
Create error response for the a "get" or "set" iq stanza.
Create result response for the a "get" or "set" iq stanza.
Update the <features/> element with StartTLS feature.
Process incoming StartTLS related element of <stream:features/>.
Request a TLS-encrypted connection.
Handle the <proceed /> element.
Verify the peer certificate on the `TLSConnectedEvent`.
Parse the command-line arguments and run the tool.
Set item of the dictionary.
Do the expiration of dictionary items.
Do the expiration of a dictionary item.
Decode attributes of the stanza XML element         and put them into the stanza properties.
Decode error element of the stanza.
Create a deep copy of the stanza.
Return the XML stanza representation.
Return the XML stanza representation.
Decode payload from the element passed to the stanza constructor.
Set stanza payload to a single item.
Add new the stanza payload.
Return list of stanza payload objects.
Get the first payload item matching the given class         and optional key.
Serialize an XML element into a unicode string.
Add resource binding feature to the <features/> element of the         stream.
Process incoming <stream:features/> element.
Bind to a resource.
Handle resource binding success.
Serialize an XMPP element.
Add a new namespace prefix.
Return the opening tag of the stream root element.
Split an element of attribute qname into namespace and local         name.
Return namespace-prefixed tag or attribute name.
Recursive XML element serializer.
Serialize a stanza.
Called when an error stanza is received.
Update user information.
Get a room user with given nick or JID.
Send a join request for the room.
Send a leave request for the room.
Send a message to the room.
Send a subject change request to the room.
Send a nick change request to the room.
Process <presence/> received from the room.
Process <presence type="unavailable"/> received from the room.
Process <message type="groupchat"/> received from the room.
Process successful result of a room configuration form request.
Request a configuration form for the room.
Process success response for a room configuration request.
Request an "instant room" -- the default configuration for a MUC room.
Change the stream assigned to `self`.
Assign MUC stanza handlers to the `self.stream`.
Remove a room from the list of managed rooms.
Process a groupchat message from a MUC room.
Process an error message from a MUC room.
Process an presence error from a MUC room.
Process an available presence from a MUC room.
Process an unavailable presence from a MUC room.
Get a parameter value.
Load settings from :std:`ArgumentParser` output.
Add a new setting definition.
Validator for string lists to be used with `add_setting`.
Return an integer range validator to be used with `add_setting`.
Make a command-line option parser.
Compare two International Domain Names.
Check if `address` is valid IP address and return it, in a normalized     form.
Prepare localpart of the JID
Prepare domainpart of the JID.
Prepare the resourcepart of the JID.
Check if IPv6 is available.
Check if IPv4 is available.
Randomly reorder SRV records using their weights.
Stop the resolver threads.
Establish a client connection to a server.
Authenticate on the server.
Process first level element of the stream.
Set `_state` and notify any threads waiting for the change.
Start establishing TCP connection with given address.
Handle SRV lookup result.
Start hostname resolution for the next name to try.
Start connecting to the next address on the `_dst_addrs` list.
Handle connection success.
Write raw data to the socket.
Make the `stream` the target for this transport instance.
Send stream head via the transport.
Send an element via the transport.
:Return: `True` when the I/O channel can be read
Stop current thread until the channel is readable.
Stop current thread until the channel is writable.
Handle the 'channel writable' state. E.g. send buffered data via a         socket.
Initiate starttls handshake over the socket.
Continue a TLS handshake.
Handle the 'channel readable' state. E.g. read from a socket.
Handle the 'channel hungup' state. The handler should not be writable         after this.
Handle an error reported.
Disconnect the stream gracefully.
Feed the stream reader with data received.
Pass an event to the target stream or just log it.
Handle the start tag.
Handle an end tag.
Initialize an ErrorElement object from an XML element.
Return the XML error representation.
Initialize an ErrorElement object from an XML element.
Return the XML error representation.
Start threads for an IOHandler.
Remove an IOHandler from the pool.
Add a TimeoutHandler to the pool.
Start threads for a TimeoutHandler.
Remove a TimeoutHandler from the pool.
Start the threads.
Stop the threads.
Wait up to `timeout` seconds, raise any exception from the         threads.
Reset the `LegacyClientStream` object state, making the object ready         to handle new connections.
Initialize authentication when the connection is established         and we are the initiator.
Handle the first stage (<iq type='get'/>) of legacy ("plain" or         "digest") authentication.
Handle the second stage (<iq type='set'/>) of legacy ("plain" or         "digest") authentication.
Do the first stage (<iq type='get'/>) of legacy ("plain" or         "digest") authentication.
Handle legacy authentication timeout.
Handle legacy authentication error.
Handle the first stage authentication response (result of the <iq         type="get"/>).
Do the second stage (<iq type='set'/>) of legacy "plain"         authentication.
Handle the second stage (<iq type='set'/>) of legacy "plain"         authentication.
Do the second stage (<iq type='set'/>) of legacy "digest"         authentication.
Handle the second stage (<iq type='set'/>) of legacy "digest"         authentication.
Handle success of the legacy authentication.
Handle in-band registration error.
Handle registration form received.
Submit a registration form.
Handle registration success.
Add an I/O handler to the loop.
Register an io-handler at the polling object.
Call the `interfaces.IOHandler.prepare` method and         remove the handler from unprepared handler list when done.
Remove an i/o-handler.
handle I/O events
Request software version information from a remote entity.
Factory for the :r:`software_os setting` default.
Initiate an XMPP connection over the `transport`.
Receive an XMPP connection over the `transport`.
Set up stream element handlers.
Handle a stream event.
Called when transport has been connected.
Process <stream:stream> (stream start) tag received from peer.
Process </stream:stream> (stream end) tag received from peer.
Send stream start tag.
Create the <features/> element for the stream.
Process first level element of the stream.
Handle stanza received from the stream.
Process incoming <stream:features/> element.
Mark the other side of the stream authenticated as `peer`
Authentication properties of the stream.
Initiate an XMPP connection over the `transport`.
Receive an XMPP connection over the `transport`.
Fix outgoing stanza.
Fix an incoming stanza.
Prepare the I/O handlers.
Initialize `Register` from an XML node.
Complete the XML node with `self` content.
Return Data Form for the `Register` object.
Make `Register` object for submitting the registration form.
Get jabber:x:delay elements from the stanza.
Initialize Delay object from an XML node.
Complete the XML node with `self` content.
Parse the command-line arguments and run the bot.
Accept any incoming connections.
Decode the stanza subelements.
Return the XML stanza representation.
Create a deep copy of the stanza.
Create "accept" response for the "subscribe" / "subscribed" /         "unsubscribe" / "unsubscribed" presence stanza.
Create "deny" response for the "subscribe" / "subscribed" /         "unsubscribe" / "unsubscribed" presence stanza.
Convert a Traceback into a dictionary representation
Activate an plan in a CREATED state.
Execute the PreparedBillingAgreement by creating and executing a   matching BillingAgreement.
Create, validate and process a WebhookEventTrigger given a Django   request object.
Check that the Paypal API keys are configured correctly
Make a subparser for a given type of DNS record
Make an ArgumentParser that accepts DNS RRs
Remove comments from a zonefile
Parse a zonefile into a dict.
Parse a zonefile into a dict
Replace {$origin} in template with a serialized $ORIGIN record
Replace {$ttl} in template with a serialized $TTL record
Replace {SOA} in template with a set of serialized SOA records
Quote a field in a list of DNS records.     Return the new data records.
Replace {txt} in template with the serialized TXT records
Load and return a PySchema class from an avsc string
Generate Python source code for one specific class
Temporarily disable automatic registration of records in the auto_store
Dump record in json-encodable object format
Load from json-encodable
Create a Record instance from a json-compatible dictionary
Create a Record instance from a json serialized dictionary
Return a dictionary the field definition
Create proper PySchema class from cls
Return a python dict representing the jsonschema of a record
Return a root jsonschema for a given record
Load from json-encodable
Writes a stream of json serialised pyschema Records to a file object
Set a value at the front of an OrderedDict
Create the upstream applications.
Send a message upstream to a de-multiplexed application.
Handle a downstream message coming from an upstream steam.
Rout the message down the correct stream.
Handle the disconnect message.
default is to wait for the child applications to close.
Handle downstream `websocket.close` message.
interest_accrued         :param valuation_date:         :type valuation_date:         :return:         :rtype:
Recursively walk a set of paths and return a listing of contained files.
Subdivide groups of paths according to a function.
Sort a file into a group based on on-disk size.
Byte-for-byte comparison on an arbitrary number of files in parallel.
Display a list of files and prompt for ones to be kept.
High-level code to walk a set of paths and find duplicate groups.
Pretty-print the contents of :data:`DEFAULTS`
Code to handle the :option:`--delete` command-line option.
Use ``\\r`` to overdraw the current line with the given text.
Generates a single filter expression for ``filter[]``.
Creates a query (AND and =) from a dictionary.
Specify query string to use with the collection.
Sends all filters to the API.
Returns all entities present in the collection with ``attributes`` included.
Tries to escape the values that are passed to filter as correctly as possible.
compute centrality score of sentences.
import summarizers on-demand
Make the plot with parallax performance predictions.
Plot the bright limit of Gaia in V as a function of (V-I).
Set up command line parsing.
Calculate the parallax error for the given input source magnitude and colour.
Set up command line parsing.
Make the plot with photometry performance predictions.
Returns the number of transits across the Gaia focal plane averaged over ecliptic longitude.
Calculate the sky averaged parallax error from G and (V-I).
Calculate the sky averaged position errors from G and (V-I).
Obtain (V-I) for the input spectral type.
Obtain M_V (absolute magnitude in V-band) for the input spectral type.
Obtain M_G (absolute magnitude in G-band) for the input spectral type.
Make the plot with radial velocity performance predictions.
A utility function for selecting the first non-null query.
Convert to unicode, and add quotes if initially a string
Call `func` on each element in the collection.
Return a new Collection excluding some items
Return a new Collection with some items removed.
Return a new Collection with the last few items removed.
Return a new Collection with the first few items removed.
Build a list of dicts, by calling :meth:`Node.dump`         on each item.
Find a single Node among this Node's descendants.
Yild all groups of simple regex-like expression.
Compile list of minimal runs for given events.
Convert performance (FLOP/s) to other units, such as It/s or cy/CL.
Run complete analysis.
Print human readable report of model.
Run complete analysis.
Report generated model in human readable form.
Replace all matching ID nodes in ast (in-place), with replacement.
Round float to next multiple of base.
Split list of integers into blocks of block_size and return block indices.
Dispatch to cache predictor to get cache stats.
Run complete anaylysis and return results.
Print generated model data in human readable format.
Run complete analysis and return results.
Convert cycles (cy/CL) to other units, such as FLOP/s or It/s.
Print generated model data in human readable format.
Run complete analysis.
Print generated model data in human readable format.
Strip all labels, which are never referenced.
Add IACA markers to an assembly file.
Run IACA analysis on an instrumented binary.
Execute command line interface.
Check arguments passed by user that are not checked by argparse itself.
Run command line interface.
Initialize and run command line interface.
Create a sympy.Symbol with positive and integer assumptions.
Prefix and indent all lines in *textblock*.
Transform ast of multidimensional declaration to a single dimension declaration.
Transform ast of multidimensional reference to a single dimension reference.
Transform ast of "type var_name[N]" to "type* var_name = aligned_malloc(sizeof(type)*N, 32)"
Return list of array references in AST.
Reduce absolute path to relative (if shorter) for easier readability.
Set constant of name to value.
Register variable of name and type_, with a (multidimensional) size.
Return a dictionary with all arrays sizes.
Return the offset from the iteration center in number of elements.
Transform a (multidimensional) variable access to a flattend sympy expression.
Return the number of global loop iterations that are performed.
Return the order of indices as they appear in array references.
Return a dictionary of lists of sympy accesses, for each variable.
Transform a dictionary of indices to a global iterator integer.
Print variables information in human readble format.
Print constants information in human readble format.
Create or open intermediate file (may be used for caching).
Print source code of kernel.
Convert mathematical expressions to a sympy representation.
Return a tuple of offsets of an ArrayRef object in all dimensions.
Return base name of ArrayRef object.
Return index type used in loop nest.
Generate declaration statements for arrays.
Generate and return compilable source code with kernel function from AST.
Generate and return compilable source code from AST.
Compile source (from as_code(type_)) to assembly or object and return (fileptr, filename).
Run an IACA analysis and return its outcome.
Compile source to executable with likwid capabilities and return the executable name.
Convert any string to a sympy object or None.
Return a cachesim.CacheSimulator object based on the machine description.
Return local folder path of header files.
Align iteration with cacheline boundary.
*size* is given in kilo bytes
Fix environment variable to a value within context. Unset if value is None.
Run *cmd* with likwid-perfctr and returns result as dict.
Report gathered analysis data in human readable form.
Return an error code between 0 and 99.
Remove the quotes delimiting a docstring.
Parse the given file-like object and return its Module object.
Consume one token and verify it is of the expected kind.
Skip tokens in the stream until a certain token kind is reached.
Parse a single docstring and return its value.
Parse the __all__ definition in a module.
Parse a module (and its children) and return a Module object.
Verify the current token is of type `kind` and equals `value`.
Parse a 'from x import y' statement.
Parse the 'y' part in a 'from x import y' statement.
Use docutils to check docstrings are valid RST.
Load the source for the specified file.
Create socket and set listening options     :param host:     :param port:     :param handler:     :return:
Enable or disable prompt         :param arg: on|off         :return:
Go to specific frame         :param line:         :return:
load filename=(file)         load base64=(base64 encoded)
Exit shell and shoebot
Make the current window fullscreen
Un-fullscreen the current window
Exit shell and shoebot
Show help on all commands.
Set a variable.
Allow commands to have a last parameter of 'cookie=somevalue'
Draw a daisy at x, y
Grab contents of 'doc' and return it
Create the gtk.TextView used for shell output
Create the gtk.TextView inside a Gtk.ScrolledWindow         :return: container, text_view
load context-free grammar
Returns a connection to a url which you can read().
Returns True when the url generates a "404 Not Found" error.
Determine the MIME-type of the document behind the url.
Draw a rectangle from x, y of width, height.
Set the current rectmode.
Move relatively to the last point.
Draw a line using relative coordinates.
Draws a curve relatively to the last point.
Constructs a path between the given list of points.
Set the current transform mode.
Set a scale at which to draw objects.
Set the stroke width.
Set the font to be used with new text instances.
Set or return size of current font.
Draws a string of text according to current font settings.
Returns the height of a string of text according to the current         font settings.
Visualization of the edges in a network.
Visualization of a shortest path between two nodes.
Returns a copy of all styles and a copy of the styleguide.
Check the rules for each node in the graph and apply the style.
Returns a copy of the styleguide for the given graph.
Tells the connection manager to receive the next 1024 byte of messages         to analyze.
copytree that works even if folder already exists
Serialize ``obj`` to a JSON formatted ``str``.
Parses the text data from an XML element defined by tag.
Creates a unique filename in the cache for the id.
Returns the age of the cache entry, in days.
Returns the angle between two points.
Returns the distance between two points.
Returns the new coordinates of (x,y) after transformation.
Returns a BezierPath object with the transformation applied.
Return True if a part of the two bounds overlaps.
Returns bounds that encompass the union of the two.
Returns True if the given point or rectangle falls within the bounds.
Draws a line from (x1,y1) to (x2,y2)
Draws an outlined path of the input text
Parses the text data from an XML element defined by tag.
Inverts the layer.
Flips the layer, either HORIZONTAL or VERTICAL.
Limit to framerate, should be called after         rendering has completed
Run single frame of the bot
Executes the contents of a Nodebox/Shoebot script         in current surface's context.
Returns RGB values for a hex color string.
Executes a raw SQL statement on the database.
Deletes the row with given id.
Sets call_transform_mode to point to the         center_transform or corner_transform
Load changed code into the execution environment.
Replace functions in namespace with functions from edited_source.
Context in which the user can run the source in a custom manner.
Boids match velocity with other boids.
Returns the angle towards which the boid is steering.
Tendency towards a particular place.
Calculates the next motion frame for the flock.
Yield match, end_idx for each match
Returns a copy of the layout for the given graph.
Returns a new graph with predefined styling.
Create a copy of the graph (by default with nodes and edges).
Remove nodes and edges and reset the layout.
Add node from id and return the node object.
Remove node with given id.
Remove edges between nodes with given id's.
Returns the edge between the nodes with given id1 and id2.
Iterates the graph layout and updates node positions.
Returns the distance from the center to the given node.
Returns nodes with the given category attribute.
Returns a list of leaves, nodes connected to leaves, etc.
The number of edges in relation to the total number of possible edges.
Rebuilds the graph around the given node id.
Callback from graph.events when a node is clicked.
Compute a cubic Bezier approximation of an elliptical arc.
Transform from the local frame to absolute space.
Create the gtk.TextView used for shell output
Pass a load of settings into the canvas
Size is only set the first time it is called
Ask the drawqueue to output to target.
Calculates the angle between two points.
Calculates the coordinates of a point from the origin.
Handle right mouse button clicks
Show the variables window.
Hide the variables window
Tell the canvas to perform a snapshot when it's finished rendering         :param format:         :return:
Widget Action to Make the window fullscreen and update the bot.
Widget Action to Toggle fullscreen from the GUI
Widget Action to toggle showing the variables window.
:param args: color in a supported format.
Save the contents of current surface into a file or cairo surface/context
Import Nodebox libraries.
Set the canvas size
Set callbacks for input events
Returns the color and its complement in a list.
Returns a list of complementary colors.
Returns a list with the split complement of the color.
Returns the left half of the split complement.
Returns the right half of the split complement.
Returns colors that are next to each other on the wheel.
Returns colors in the same hue with varying brightness/saturation.
Returns a triad of colors.
Returns a tetrad of colors.
Outlines each contour in a path with the colors in the list.
Returns a 0.0 - 1.0 brightness adjusted to a light source.
Returns a list of colors drawn from a morgueFile image.
Returns RGB values based on a descriptive string.
Returns a color rotated on the artistic RYB color wheel.
Returns the name of the nearest named hue.
Returns a mix of two colors.
Returns the Euclidean distance between two colors (0.0-1.0).
Returns a list of colors based on pixel values in the image.
Returns the colors that have the given word in their context.
Returns the intersection of each color's context.
Returns a deep copy of the list.
Returns the darkest color from the list.
Returns one average color for the colors in the list.
Returns a sorted copy with the colors arranged according to the given comparison.
Returns a reversed copy of the list.
Returns a list that is a repetition of the given list.
Rectangle swatches for all the colors in the list.
Returns intermediary colors for given list of colors.
Populates the list with a number of gradient colors.
Returns a copy of the range.
Returns a color with random values in the defined h, s b, a ranges.
Returns True if the given color is part of this color range.
Returns a list of (hue, ranges, total weight, normalized total weight)-tuples.
Returns the color information as XML.
Saves the color information in the cache as XML.
Returns a random color within the theme.
Returns a number of random colors from the theme.
Use a closure so that draw attributes can be saved
Returns the PathElement at time t (0.0-1.0) on the path.
Returns the length of the line.
Returns a list with the lengths of each segment in the path.
:return: xml for menu, [(bot_action, label), ...], [(menu_action, label), ...]
:return: base_item, rel_paths
Iterate through a gtk container, `parent`,     and return the widget with the name `name`.
:param script: script to look for in bin folder
:param directory: base directory of python environment
:return: python environments in ~/.virtualenvs
Returns the meta description in the page.
Returns the meta keywords in the page.
Returns a sorted copy of the list.
Returns a copy of the list without duplicates.
Returns the largest possible clique for the node with given id.
Returns all the cliques in the graph of at least the given size.
Convert a string into an OSC Blob,     returning a (typetag, data) tuple.
Returns the binary message (so far) with typetags.
The body of the tread: read lines and put them on the queue.
Check whether there is no more content to expect.
Send new source code to the bot
:param cmd:         :param args:         :return:
Close outputs of process.
:yield: stdout_line, stderr_line, running
Returns the center point of the path, disregarding transforms.
Determines if an item in a paragraph is a list.
Uses mimetex to generate a GIF-image from the LaTeX equation.
Parses data from Wikipedia page markup.
Subtitutes <li> content to Wikipedia markup.
Subtitutes <table> content to Wikipedia markup.
Returns a list of internal Wikipedia links in the markup.
Returns a list of tables in the markup.
Returns a list of categories the page belongs to.
Given a Variable and a value, cleans it out
Destructively rips this element out of the tree.
Returns the closest parent of this Tag that matches the given         criteria.
Returns the parents of this Tag that match the given         criteria.
Iterates over a generator looking for things that match.
Encodes an object to a string in some encoding, or to Unicode.         .
Cheap function to invert a hash.
Recursively destroys the contents of this tree.
Return only the first child of this Tag matching the given         criteria.
Adds a certain piece of text to the tree as a NavigableString         subclass.
Handle character references as data.
Decorator to run some code in a bot instance.
Returns the center point of the path, disregarding transforms.
Draw just the exposed part of the backing store, scaled to fit
Update the backing store from a cairo context and         schedule a redraw (expose event)
Return a JSON string representation of a Python data structure.
Return a dict in the form of
Function to output to a cairo surface
Create canvas and sink for attachment to a bot
Create a canvas and a bot with the same canvas attached to it
Add all widgets to specified vbox         :param container:         :return:
:return: success, err_msg_if_failed
Called when a slider is adjusted.
Returns XML element's attribute, or default if none.
Drags given node to mouse location.
Displays a popup when hovering over a node.
Returns a cached textpath of the given text in queue.
Draws a popup rectangle with a rotating text queue.
write FILENAME         Write a local copy of FILENAME using FILENAME_tweaks for local tweaks.
Amend a filename with a suffix.
Merge tweaks into a main config file.
u"""         Write `text` to the file.
Check if the file still has its original contents.
Check that a checker's visitors are correctly named.
Make a reasonable class name for a class node.
Parse the pylint output-format=parseable lines into PylintError tuples.
Format a list of error_names into a 'pylint: disable=' line.
Print the help string for the edx_lint command.
Convert Undefined array entries to None (null)
dict.items() but with a separate row for each value in a MultiValueDict
Parse the description in the README file
Create a transformation class object
Create a log transform class for *base*
Create a exponential transform class for *base*
Return a trans object
Calculate breaks in data space and return them         in transformed space.
Transform from date to a numerical format
Transform from Timeddelta to numerical format
Transform to Timedelta from numerical format
Transform from Timeddelta to numerical format
Transform to Timedelta from numerical format
Truncate infinite values to a range.
Squish values into range.
Convert any values outside of range to a **NULL** type object.
Censor any values outside of range with ``None``
Determine if range of vector is close to zero.
Expand a range with a multiplicative or additive constant
Expand a range with a multiplicative or additive constants
Convert sequence of numerics to timedelta
Round to multiple of any number.
Return the minimum and maximum of x
Return the precision of x
Sort elements of multiple types
Check if value is close to an integer
Return true if range is approximately in same order of magnitude
Map values in the range [0, 1] onto colors
Create a n color gradient palette
Create a continuous palette using an MPL colormap
Create a discrete palette using an MPL Listed colormap
Create a palette that desaturate a color by some proportion
Create a palette from a list of values
Scale data continuously
Map values to a continuous palette
Map values to a discrete palette
Register a parser for a attribute type.
Uses cookiecutter to generate files for the project.
Sets up a new project from a template
Update package with latest template. Must be inside of the project     folder to run.
Switch a project's template to a different template.
Raises `ExistingBranchError` if the specified branch exists.
Raises `InvalidEnvironmentError` when one isnt set
Raises `InvalidTempleProjectError` if repository is not a temple project
Determine the current git branch
Cleans up temporary resources
Given an old version and new version, check if the cookiecutter.json files have changed
Apply a template to a temporary directory and then copy results to target.
Checks if a temple project is up to date with the repo
Updates the temple project to the latest template
Reads the temple YAML configuration file in the repository
Obtains the configuration used for cookiecutter templating
Perform a github API call
Deploys the package and documentation.
Schedule a retry
Record a purchase in Sailthru
Adds/updates Sailthru when a user adds to cart/purchases/upgrades a course
Fulfills an order.
Returns a Sailthru client for the specified site.
Get an object from the cache
Save an object in the cache
Get a value from configuration.
Get the name of the file containing configuration overrides     from the provided environment variable.
Parse the config values
Check if a software is installed into machine.
Print a message if the class attribute 'verbose' is enabled
Writes a section for a plugin.
Returns a class instance from a .py file.
Execute an specific method for each class instance located in path
Run a scan in the path setted.
Install all the dependences
Finds the value depending in current eplus version.
!! Must only be called once, when empty !!
An external file manages file paths.
Returns first occurrence of value of filter column matching filter criterion.
sets all empty fields for which a default value is defined to default value
path_or_content: path or content_str or content_bts or string_io or bytes_io
Shortcut method for getting a setting value.
Try to get `key` from the environment.
Updates the current configuration with the values in `conf_dict`.
Return a setting value.
Handle creating the new etcd client instance and other business.
Return a dictionary of settings loaded from etcd.
Undocumented cross-compatability functionality with jetconfig         (https://github.com/shakefu/jetconfig) that is very sloppy.
Main script for `pyconfig` command.
Handles the -m argument.
Print an error message and exit.
Return the filename of `module` if it can be imported.
Parse `filename` appropriately and then output calls according to the     `args` specified.
Return `output` colorized with Pygments, if available.
Return a list of :class:`_PyconfigCall` from recursively parsing     `directory`.
Return a list of :class:`_PyconfigCall` from parsing `filename`.
Return this call as if it were being assigned in a pyconfig namespace.
Return this call as it is called in its source.
Return the call key, even if it has to be parsed from the source.
Return only the default value, if there is one.
Return the default argument, formatted nicely.
Create regex and return. If error occurs returns None.
Convert status (id) to its string name.
Returns the remaining duration for a recording.
Make an HTTP request to a given URL with optional parameters.
Get available service endpoints for a given service type from the     Opencast ServiceRegistry.
Convert datetime into a unix timestamp.     This is the equivalent to Python 3's int(datetime.timestamp()).
Try to create a directory. Pass without error if it already exists.
Send the state of the current recording to the Matterhorn core.
Update the status of a particular event in the database.
Update the status of a particular service in the database.
Update the status of a particular service in the database.
Update the current agent state in opencast.
Find the best match for the configuration file.
Update configuration from file.
Check configuration for sanity.
Initialize logger based on configuration
Serve the status page of the capture agent.
Serve the preview image with the given id
Start all services.
Return a response with a jsonapi error object
Return a response with a list of jsonapi data objects
Serve a json representation of internal agentstate as meta data
Serve a JSON representation of events
Extract the set of configuration parameters from the properties attached     to the schedule
Ingest a finished recording to the Opencast server.
Run the actual command to record the a/v material.
Returns a simple fragment
Returns list of unique `FragmentResource`s by order of first appearance.
Returns the fragment in a dictionary representation.
Returns a new Fragment from a dictionary representation.
Add content to this fragment.
Add a resource by URL needed by this Fragment.
Register a Javascript function to initialize the Javascript resources.
Get some resource HTML for this Fragment.
Returns `resource` wrapped in the appropriate html tag for it's mimetype.
Render a fragment to HTML or return JSON describing it, based on the request.
Renders a standalone page as a response for the specified fragment.
Render the specified fragment to HTML for a standalone page.
Get mappable parameters from YAML.
Construct a pylearn2 dataset.
Construct pylearn2 dataset labels.
Build a trainer and run main_loop.
Construct pylearn2 dataset labels.
Load the dataset using pylearn2.config.yaml_parse.
Fits the model with random restarts.         :return:
Fit and score an estimator with cross-validation
Context manager (with statement) that changes the current directory     during the context.
Format a timedelta object for display to users
UserWarning if array contains non-finite elements
Return number of samples in array-like x.
Check that all arrays have consistent first dimensions.
The config object loads its values from two sources, with the         following precedence:
Create a Config object from config dict directly.
Get an entry from within a section, using a '/' delimiter
Get the estimator, an instance of a (subclass of)         sklearn.base.BaseEstimator
SHA1 hash of the config file itself.
Plot 1. All iterations (scatter plot)
Yield integer coordinates on the line from (x0, y0) to (x1, y1).
Diff two thrift structs and return the result as a ThriftDiff instance
Check if two thrift messages are diff ready.
Returns true if all fields of other struct are isomorphic to this         struct's fields
push the packet into the queue
Deal with the incoming packets
Command line options.
Read the user configuration
Save the given user configuration.
Determine the username
Determine the user password
Removes a firewall rule from the NIC.
Creates a firewall rule on the specified NIC and server.
Replace all properties of an image.
Retrieves a list of LANs available in the account.
Removes a LAN from the data center.
Retrieves the list of NICs that are part of the LAN.
Retrieves a single load balancer by ID.
Retrieves a list of load balancers in the data center.
Removes the load balancer from the data center.
Creates a load balancer within the specified data center.
Updates a load balancer
Retrieves the list of NICs that are associated with a load balancer.
Associates a NIC with the given load balancer.
Removes a NIC from the load balancer.
Retrieves a single location by ID.
Retrieves a NIC by its ID.
Retrieves a list of all NICs bound to the specified server.
Removes a NIC from the server.
Creates a NIC on the specified server.
Updates a NIC with the parameters provided.
Retrieves a single request by ID.
Retrieves a server by its ID.
Retrieves a list of all servers bound to the specified data center.
Removes the server from your data center.
Creates a server within the data center.
Updates a server with the parameters provided.
Retrieves a list of volumes attached to the server.
Attaches a volume to a server.
Detaches a volume from a server.
Retrieves a list of CDROMs attached to the server.
Attaches a CDROM to a server.
Detaches a volume from a server.
Reboots the server.
Removes a snapshot from your account.
Removes a snapshot from your account.
Restores a snapshot to the specified volume.
Removes a snapshot.
Retrieves a single group by ID.
Updates a group.
Retrieves a list of all shares though a group.
Retrieves a specific resource share available to a group.
Shares a resource through a group.
Removes a resource share from a group.
Retrieves a single user by ID.
Updates a user.
Retrieves a list of all users that are members of a particular group.
Adds an existing user to a group.
Removes a user from a group.
Retrieves a list of all resources.
Retrieves a single resource of a particular type.
Retrieves a single volume by ID.
Retrieves a list of volumes in the data center.
Removes a volume from the data center.
Creates a volume within the specified data center.
Convert Python snake case back to mixed case.
Find a item a given list by a matching name.
Parse command line options and create a server/volume composite.
Poll the data center to become available (for the next provisionig job)
Command line options.
Parse command line options and create a server/volume composite.
Command line options.
Command line options.
Parse command line options and dump a datacenter to snapshots and file.
Get details about the currently authenticated user
Get details about specific user
Get the currently authenticated user ID
Add a list of jobs to the currently authenticated user
Replace the currently authenticated user's list of jobs with a new list of     jobs
Remove a list of jobs from the currently authenticated user
Get one or more users
Create a project
Create a fixed project
Get one or more projects
Get a single project by ID
Search for all projects
Place a bid on a project
Get the list of bids
Get the list of milestones
Award a bid on a project
Accept a bid on a project
Retract a bid on a project
Highlight a bid on a project
Create a milestone payment
Create a milestone request
Get a list of jobs
Create a thread
Create a project thread
Add a message to a thread
Add a message to a thread
Get one or more messages
Search for messages
Get one or more threads
Find matching q-value for each score in 'scores'
Estimate pi0 according to bioconductor/qvalue
Infer peptides and conduct error-rate estimation in different contexts.
Infer proteins and conduct error-rate estimation in different contexts.
Merge multiple OSW files and (for large experiments, it is recommended to subsample first).
Backpropagate multi-run peptide and protein scores to single files
Export TSV/CSV tables
Filter sqMass files
Use `kwargs` to select for desired attributes from list of zipcode dicts
Returns a restclients.Group object for the group identified by the         passed group ID.
Creates a group from the passed restclients.Group object.
Returns True if the netid is in the group, False otherwise.
Statically parse the version number from __init__.py
Create 3 datasets in a group to represent the sparse array.
Pedantic yet imperfect. Test to see if "name" is a valid python identifier
Deletes all objects and containers in the account.
Deletes all objects in the container.
Deletes the item (account, container, or object) at the path.
Helper function that will convert an options list into a dict         of key/values.
Performs a direct HTTP request to the Swift service.
Sends a DELETE request to the account and returns the results.
HEADs the object and returns the results.
GETs the object and returns the results.
Performs a GET on the account as a listing request.
Performs a GET on the container as a listing request.
Performs a GET on the item (account, container, or object).
Resolves an option value into options.
Performs a POST on the item (account, container, or object).
Performs a HEAD on the item (account, container, or object).
Performs a PUT on the account.
Performs a PUT on the container.
Performs a PUT on the object.
Performs a PUT on the item (account, container, or object).
Generates a TempURL and sends that to the context.io_manager's     stdout.
read([size]) -> read at most size bytes, returned as a string.
readline([size]) -> next line from the file, as a string.
readlines([size]) -> list of strings, each a line from the file.
Check whether the "file" is empty reading the single byte.
Gets the status of a commit.
Return a passphrase as found in a passphrase.ghost file
Return a dict from a list of key=value pairs
Return a human readable format of a key (dict).
Return a human readable format of a list.
Insert a key to the stash
Lock a key to prevent it from being deleted, purged or modified
Unlock a key to allow it to be modified, deleted or purged
Retrieve a key from the stash
Delete a key from the stash
List all keys in the stash
Purge the stash from all of its keys
Export all keys to a file
Load all keys from an exported key file to the stash
Migrate all keys from a source stash to a destination stash.
Use an ssh type key to connect to a machine via ssh
Put a key inside the stash
Return a key with its parameters if it was found.
Return a list of all keys.
Delete a key if it exists.
Export all keys in the stash to a list or a file
Import keys to the stash from either a list of keys or a file
Turn a json serializable value into an jsonified, encrypted,         hexa string.
Return a dictionary consisting of the key itself
Delete the key and return true if the key was deleted, else false
Put and return the only unique identifier possible, its url
Put and return the only unique identifier possible, its path
Create an Elasticsearch index if necessary
Create a bucket.
Insert the key         :return: Key name
Delete the key.         :return: True if it was deleted, False otherwise
Renders the hero slider.
Acquire the lock to read
Release the lock after reading
Acquire the lock to write
Add a task to the registry.
Remove a task from the registry.
Get a task from the registry.
Get the list of tasks
Create an configuration object from a dictionary.
Add metadata to an item.
Execute a Perceval job on RQ.
Initialize the archive manager.
Run the backend with the given parameters.
Execute a backend of Perceval.
Configure the index to work with
Create a mapping
Write items to the queue
Add and schedule a task.
Remove and cancel a task.
Get the items fetched by the jobs.
Check that the task arguments received are valid
Parse the archive arguments of a task
Custom method to execute a job and notify of its result
Schedule a job in the given queue.
Cancel the job related to the given task.
Run thread to listen for jobs and reschedule successful ones.
Start scheduling jobs.
Schedule a task.
Cancel or 'un-schedule' a task.
Handle successufl jobs
Handle failed jobs
Build the set of arguments required for running a job
Register the API view class in the bananas router.
Register a generic class based view wrapped with ModelAdmin and fake model
Get full namespaced url name to use for reverse()
Derives a PEP386-compliant version number from VERSION.
Compat: drf-yasg 1.12+
Compat: drf-yasg 1.11
Perform a lookup in _ENGINE_MAPPING using engine_string.
Get database name and database schema from path.
Return a django-style database configuration based on ``url``.
Parse a database URL and return a DatabaseInfo named tuple.
Log in django staff user
Retrieve logged in user info
Change password for logged in django staff user
Parse string to bool.
Create a field by field info dict.
create a Validator instance from data_struct_dict
Launch minterm from pyserial
Set the timeout for the communication with the device.
Clears the input and output buffers
Write output to the port and wait for response
restores the nodemcu to default baudrate and then closes the port
Download a file from device to local filesystem
reading data from device into local file
sends a file to the device using the transfer protocol
execute the lines in the local file 'path
write lines, one by one, separated by \n to device
formats and sends a chunk of data to the device according         to transfer protocol
Read a chunk of data
list files on the device
Execute a file on the device using 'do
Prints a file on the device to console
Show device heap size
Compiles a file specified by path on the device
Removes a file on the device
Backup all files from the device
List file on target
Generates a Cartesian product of the input parameter dictionary.
Takes a list of explored parameters and finds unique parameter combinations.
Tries to make directories for a given `filename`.
Renames a given `filename` with valid wildcard placements.
Adds a logger with a given `name`.
Extracts the wildcards and file replacements from the `trajectory`
Turns a ConfigParser into a StringIO stream.
Compares two objects recursively by their elements.
Can be used to decorate a function as a manual run function.
Decorator: Copy the docstring of `fromfunc`
Creates and runs BRIAN network based on the parameters in `traj`.
Adds all necessary parameters to the `traj` container
Creates a service from a constructor and checks which kwargs are not used
Adds all necessary parameters to the `traj` container.
Checks if one the parameters in `group_node` is explored.
Pre-builds the neuron groups.
Pre-builds the connections.
Makes a subfolder for plots.
Extracts monitor data and plots.
Function that parses the batch id from the command line arguments
Chooses exploration according to `batch`
Alternative naming, you can use `node.vars.name` instead of `node.v_name`
Alternative naming, you can use `node.func.name` instead of `node.f_func`
Renames the tree node
Method used by f_store/load/remove_items to find a corresponding item in the tree.
Method used by f_store/load/remove_items to find a corresponding item in the tree.
Method used by f_store/load/remove_items to find a corresponding item in the tree.
Method used by f_store/load/remove_items to find corresponding items in the tree.
Removes a subtree from the trajectory tree.
Deletes a single node from the tree.
Removes a single node from the tree.
Removes a given node from the tree.
Adds a given item to the tree irrespective of the subtree.
Adds a new item to the tree.
Checks if a list contains strings with invalid names.
Generically creates a new group inferring from the `type_name`.
Generically creates a novel parameter or result instance inferring from the `type_name`.
Renames a given `instance` based on `parent_node` and `name`.
Returns an iterator over a node's children.
Fast search for a node in the tree.
Searches for an item in the tree below `node`
Performs a backwards search from the terminal node back to the start node
Searches for all occurrences of `name` under `node`.
Searches for an item (parameter/result/group node) with the given `name`.
Searches for an item (parameter/result/group node) with the given `name`.
Returns a list of all children names
Returns the parent of the node.
Adds an empty generic group under the current node.
Adds a link to an existing node.
Removes a link from from the current group node with a given name.
Recursively removes the group and all it's children.
Removes a child of the group.
Checks if the node contains a specific parameter or result.
Searches for all occurrences of `name` under `node`.
Searches and returns an item (parameter/result/group node) with the given `name`.
Returns a link dictionary.
Adds an empty parameter group under the current node.
Adds a parameter under the current node.
Adds an empty result group under the current node.
Adds a result under the current node.
Adds a derived parameter under the current group.
Adds a config parameter under the current group.
Takes a unit string like ``'1. * volt'`` and returns the BRIAN2 unit.
Simply checks if data is supported
Simply checks if data is supported
To add a monitor use `f_set_single('monitor', brian_monitor)`.
Flattens a nested dictionary.
Nests a given flat dictionary.
Plots a progress bar to the given `logger` for large for loops.
Takes a function and keyword arguments and returns the ones that can be passed.
Sorts a list of results in O(n) in place (since every run is unique)
Resets to the progressbar to start a new one
Calculates remaining time as a string
Turns an ordinary data item into a shared one.
Creates shared data on disk with a StorageService on disk.
Interface with the underlying storage.
Returns the actula node of the underlying data.
Checks if outer data structure is supported.
Calls the corresponding function of the shared data item
Target function that manipulates the trajectory.
Notifies the Server to shutdown
Handles data and returns `True` or `False` if everything is done.
Simply keeps a reference to the stored data
Collects all settings within a section
Collects all info from three sections
Copies parsed arguments into the kwargs passed to the environment
Adds parameters and config from the `.ini` file to the trajectory
Converts a rule given as an integer into a binary list representation.
Creates an initial state for the automaton.
Plots an automaton ``pattern`` and stores the image under a given ``filename``.
Iterates through a class' (`cls`) mro to get all slots as a set.
Convert a numeric timestamp to a timezone-aware datetime.
Schedule a command to run at a specific time each day.
Direct link to the overview group
Loads a particular item from disk.
Stores a particular item to disk.
Reads out the properties for storing new data into the hdf5file
Stores several items from an iterable
Extracts file information from kwargs.
Backs up a trajectory.
Merges another trajectory into the current trajectory (as in self._trajectory_name).
Prepares a trajectory for merging.
Loads a single trajectory from a given file.
Stores general information about the trajectory in the hdf5file.
Recalls names of all explored parameters
Summarizes the parameter settings.
Stores a single row into an overview table
Creates a new table, or if the table already exists, returns it.
Returns an HDF5 node by the path specified in `name`
Adds or changes a row in a pytable.
Copies data from `insert_dict` into a pytables `row`.
Extracts information from a given item to be stored into a pytable row.
Stores a group node.
Extracts storage flags for data in `data_dict`         if they were not specified in `flags_dict`.
Stores a parameter or result to hdf5.
Reads a DataFrame from dis.
Stores data as carray, earray or vlarray depending on `flag`.
Removes a link from disk
Removes a parameter or result or group from the hdf5 file.
Returns the longest string size for a string entry across data.
Reads a DataFrame from dis.
Reads data from an array or carray
Helper function that creates a novel trajectory and loads it from disk.
Creates a run set name based on ``idx``
Adds classes or paths to classes to the trajectory to create custom parameters.
Makes the trajectory iterate over all runs.
Presets parameter value before a parameter is added.
Searches for all occurrences of `name` in each run.
Returns a *shallow* copy of a trajectory.
Pass a ``node`` to insert the full tree to the trajectory.
Prepares the trajectory to explore the parameter space.
Overwrites the run information of a particular run
Adds a new run to the `_run_information` dict.
Checks if two trajectories live in the same space and can be merged.
Backs up the trajectory with the given storage service.
Can be used to merge several `other_trajectories` into your current one.
Updates the `run_information` of the current trajectory.
Renames a full name based on the wildcards and a particular run
Merges derived parameters that have the `run_ALL` in a name.
Merges parameters from the other trajectory into the current one.
Stores the trajectory to disk and recursively all data in the tree.
Notifies the explored parameters what current point in the parameter space         they should represent.
Modifies the trajectory for single runs executed by the environment
Returns a list of run names.
Returns a dictionary containing information about a single run.
Finds a single run index given a particular condition on parameters.
Can be used to manually allow running of an experiment without using an environment.
Sets the start timestamp and formatted time to the current time.
Summarizes the parameter settings.
Creates a new node. Checks if the new node needs to know the trajectory.
Returns a dictionary with pairings of (full) names as keys and instances/values.
Stores individual items to disk.
Removes parameters, results or groups from the trajectory.
Recursively removes all children of the trajectory
Find the nearest even period for the specified date/time.
return the number of seconds in the specified period
Divide a timedelta by a float value
Get the ratio of two timedeltas
Wrapper function for scoop, that does not configure logging
Sets niceness of a process
Performs a single run of the experiment.
Starts running a queue handler and creates a log file for the queue.
Loads a class from a string naming the module and class name.
Returns the length of the parameter range.
String summary of the value handled by the parameter.
Checks if the parameter considers two values as equal.
Checks if two values agree in type.
Checks if input data is supported by the parameter.
Checks if two values agree in type.
Explores the parameter according to the iterable.
Explores the parameter according to the iterable and appends to the exploration range.
Checks if data values are  valid.
Returns a dictionary of formatted data understood by the storage service.
Loads the data and exploration range from the `load_dict`.
Reconstructs the data and exploration array.
Checks if two values agree in type.
Checks if input data is supported by the parameter.
Checks if two values agree in type.
Checks if a data is csr, csc, bsr, or dia Scipy sparse matrix
Reconstructs a matrix from a list containing sparse matrix extracted properties
Reconstructs the data and exploration array
Returns a dictionary for storage.
Reconstructs objects from the pickle dumps in `load_dict`.
Summarizes data handled by the result as a string.
Method to put data into the result.
Returns items handled by the result.
Sets a single data item of the result.
Removes `*args` from the result
Loads data from `load_dict`
Adds a single data item to the pickle result.
Reconstructs all items from the pickle dumps in `load_dict`.
Simply merge all trajectories in the working directory
Main function to protect the *entry point* of the program.
Runs a simulation of a model neuron.
Adds all parameters to `traj`
Explores different values of `I` and `tau_ref`.
Runs a network before the actual experiment.
Runs a network in an experimental run.
Extracts subruns from the trajectory.
Adds parameters for a network simulation.
Pre-builds network components.
Pre-builds network components.
Function to create generic filenames based on what has been explored
Returns next element from chain.
Merges all files in a given folder.
__common_triplet(input_string, consonants, vowels) -> string
__surname_triplet(input_string) -> string
__name_triplet(input_string) -> string
``control_code(input_string) -> int``
``build(surname, name, birthday, sex, municipality) -> string``
``get_birthday(code) -> string``
Set self.thermostats to a json list of thermostats from ecobee
Write api tokens to a file
Delete the vacation with name vacation
Resume currently scheduled program
Send a message to the thermostat
Generate the delay in seconds in which the DISCOVER will be sent.
Generate the time in seconds in which DHCPDISCOVER wil be retransmited.
Generate time in seconds to retransmit DHCPREQUEST.
Generate RENEWING time.
Return the self object attributes not inherited as dict.
Reset object attributes when state is INIT.
Workaround to get timeout in the ATMT.timeout class method.
Workaround to change timeout values in the ATMT.timeout class method.
Select an offer from the offers received.
Set renewal, rebinding times.
Process a received NAK packet.
Timeout of renewing on RENEWING state.
Timeout of request rebinding on REBINDING state.
Receive NAK in REQUESTING state.
Receive ACK in RENEWING state.
Receive NAK in RENEWING state.
Receive ACK in REBINDING state.
Receive NAK in REBINDING state.
Action on renewing on RENEWING state.
Assign a value, remove if it's None
Append a value to multiple value parameter.
Remove a value from multiple value parameter.
Pass in an Overpass query in Overpass QL.
Arguments:         - `self`:         - `text`:
Update values of a port.
Retrieve a port.
Retrieve a list of ports.
Return the number of ports.
Allocate or reallocate a floating IP.
Update an existing floating IP.
deallocate a floating IP.
Retrieve a floating IP.
Retrieve a list of floating ips.
Return the number of floating IPs.
Update an existing scaling IP.
Retrieve a scaling IP.
Retrieve a list of scaling ips.
Delete an ip address.
Retrieve a list of ports.
Retrieve a port.
Update values of a port.
Determine if a vif is on isonet
Delete the quota entries for a given tenant_id.
Validate the CIDR for a subnet.
Create a subnet.
Update values of a subnet.
Retrieve a subnet.
Retrieve a list of subnets.
Return the number of subnets.
Delete a subnet.
Only two fields are allowed for modification:
Updates a SG rule async and return the job information.
Returns combined list of tuples: [(table, column)].
A decorator to be used on another decorator
Will add the tenant_id to the context from body.
Creates a job with support for subjobs.
Delete an ip address.
Selects an open lswitch for a network.
Register a floating ip with Unicorn
Register a floating ip with Unicorn
Check for overlapping ranges.
Find a deallocated network segment id and reallocate it.
Deletes locks for each IP address that is no longer null-routed.
Creates locks for each IP address that is null-routed.
Diagnose a port.
Set tag on model object.
Get a matching valid tag off the model.
Pop all matching tags off the model and return them.
Validates a VLAN ID.
Get all known tags from a model.
Validate and set all known tags on a port.
Creates a payload for the redis server
Run migrations in 'offline' mode.
Run migrations in 'online' mode.
Method to send notifications.
Returns a tuple of start_period and end_period.
Creates the view for a job while calculating progress.
Retrieve a mac_address_range.
Delete a mac_address_range.
alexm: i believe this method is never called
Delete a segment_allocation_range.
Returns a WSGI filter app for use with paste.deploy.
Returns a set of VIFs from `get_instances` return value.
Create a network.
Update values of a network.
Retrieve a network.
Retrieve a list of networks.
Return the number of networks.
Delete a network.
Configure all listeners here
Produces a list of ports to be updated async.
Implements the 'if' operator with support for multiple elseif-s.
Implements the '==' operator, which does type JS-style coertion.
Implements the '===' operator.
Implements the '<' operator with JS-style type coertion.
Implements the '<=' operator with JS-style type coertion.
Implements the 'merge' operator for merging lists.
Implements the missing operator for finding missing variables.
Implements the missing_some operator for finding missing variables.
Improve QTextCursor.atBlockStart to ignore spaces
Called when the mode is activated/deactivated
Comments/Uncomments the selected lines or the current lines if there         is no selection.
Setup the python editor, run the server and connect a few signals.
Add a new empty code editor to the tab widget
Shows an open file dialog and open the file if the dialog was         accepted.
Save the current editor document as.
setup the style menu for an editor tab
Setup the panels menu for the current editor.         :param editor:
Update action states when the current tab changed.
Run the current current script
Open the a new tab when goto goes out of the current document.
Worker that returns a list of calltips.
Go to assignements worker.
Returns the list of defined names for the document.
Returns the icon resource filename that corresponds to the given typename.
Request a go to assignment.
r""" Read a given BGEN file.
Do various ${} substitutions
Search through lines for match.             Raise an Exception if a match
Return true if ``instance`` is an instance of any the Directive         types in ``typeList``
r""" Compute allele frequency from its expectation.
r""" Compute dosage from allele expectation.
r""" Allele expectation.
Fit distance-based AD.
Returns the value of the nearest neighbor from the training set.
Predict if a particular sample is an outlier or not.
Predict the distances for X to center of the training set.
Find min and max values of every feature.
Predict if a particular sample is an outlier or not.
Do nothing and return the estimator unchanged
Reset internal data-dependent state.         __init__ parameters are not touched.
Compute the header.
Create a shared public/private key pair for certificate pushing,         if the settings allow.
Returns an unsaved class object based on the valid properties passed in.
Returns the default value for this field.
Static method for error handling.
Takes data from app layer and serializes the models into the store.
Takes data from the store and integrates into the application.
We check whether a class has more than 1 FK reference to itself.
Stores an OWS service in mongodb.
Lists all services in mongodb storage.
Write numpy data to an .fcs file (FCS3.0 file format)
TODO: use ows exceptions
Read tdms file and return channel names and data
Creates an fcs file for a given tdms file
Store an OWS service in database.
Lists all services in memory storage.
Get service for given ``name`` from memory storage.
Get parameter in GET request.
Find requested version in GET request.
Find requested request type in POST request.
Find requested version in POST request.
Provide a timzeone-aware object for a given datetime and timezone name
Verify ssl service certificate.
Returns True if left and right are equal
Tag the current workdir state.
Return a PEP-440 dev version appendix to the main version number.
Call 'setup egg_info' and return the parsed meta-data.
Bump a development version.
Distribute the project.
Package the project with PEX.
Prepare for a release.
Perform source code checks via pylint.
Check for uncommitted changes, return `True` if everything is clean.
Tag the current workdir state.
Return a PEP-440 dev version appendix to the main version number.
Run a command and return its stripped captured output.
Run a command and flush its output.
Adds a new patch with patchname to the queue
Exit with error code and message.
Checks if a backup file of the filename in the current patch         exists
Creates a backup of file
Run command as a subprocess and wait until it is finished.
Creates the directory and all its parent directories if it does not         exist yet
Create hard link as link to this file
Copy file to destination
Control / check a running Sphinx autobuild process.
Build Sphinx docs.
Build Sphinx docs and publish to Confluence.
Provide a zipped stream of the docs tree.
Upload to PyPI.
Upload docs in ``docs_base`` to the target of this uploader.
Add given directory to PYTHONPATH, e.g. for pylint.
A context that enters a given directory and restores the old state on exit.
Run a command, or just echo it, depending on `commit`.
Emit a banner just like Invoke's `run(…, echo=True)`.
Emit a normal message.
Emit a warning message.
Emit an error message to stderr.
Apply all patches up to patch_name
Apply next patch in series file
Apply all patches in series file
Determine location of `tasks.py`.
Load and return configuration as a ``Bunch``.
Convert a path part to regex syntax.
Convert the given glob `spec` to a compiled regex.
Build a DEB package.
Add a patch to the patches list
Insert list of patches at the front of the curent patches list
Add a list of patches to the patches list
Remove a patch from the patches list
Checks if the .version file in dirname has the correct supported             version number
Build the project.
Adds the group and its arguments to a argparse.ArgumentParser instance
Adds the argument to an argparse.ArgumentParser instance
Adds the subparsers to an argparse.ArgumentParser
Windows allow application paths to be registered in the registry.
Return a generator of full paths to the given command.
Process each way.
Get a list of nodes not found in OSM data.
Process each node.
Extract information of one route.
Create a meaningful route name.
Construct an id for agency using its tags.
Process the files and collect necessary data.
Process each relation.
Create `calendar`, `stop_times`, `trips` and `shapes`.
Fill the fields that are necessary for passing transitfeed checks.
Create station stop times for each trip.
Write the GTFS feed in the given file.
Write GTFS text files in the given path.
Extract agency information.
Extract stops in a relation.
Extract shape of one route.
Sends an APDU to the device, and waits for a response.
Register a U2F device
Decrypt a message using this double ratchet session.
Encrypt a message using this double ratchet session.
Create a connection to an other mesh.
Whether a connection can be established between those two meshes.
Create a loader for a knitting pattern set.
Walk the knitting pattern in a right-to-left fashion.
:return: the dump as a string
:return: the string from a :class:`io.StringIO`
:return: the dump as bytes.
:return: bytes from a :class:`io.BytesIO`
Saves the dump in a file-like object in text mode.
Dump the content to a `file`.
Dump the ocntent into the `file` in binary mode.
Saves the dump in a file named `path`.
:return: a temporary file where the content is dumped to.
Saves the dump in a temporary file and returns its path.
:return: a binary temporary file where the content is dumped to.
:return: a color that can be used by the image
set the pixel but convert the color before.
set the color of the pixel.
set the pixel at ``(x, y)`` position to :paramref:`color`
:return: whether ``(x, y)`` is inside the :ref:`bounds           <png-builder-bounds>`         :rtype: bool
Set the pixel at the position of the :paramref:`color_in_grid`         to its color.
Same as :meth:`set_color_in_grid` but with a collection of         colors in grid.
Return the SVG for an instruction.
Return the SVG dict for the SVGBuilder.
Call when there is a change in the instructions.
Get the object at an :paramref:`index`.
Load all files from a folder recursively.
:return: the absolute path for the `folder` relative to         the module_location.         :rtype: str
Load a folder located relative to a module and return the processed         result.
Load a file relative to a module.
Load an example from the knitting pattern examples.
load and process the content behind a url
Load an object from a string and return the processed JSON content
dump a knitting pattern to a file.
Create an iterable from the iterables that contains each element once.
Go through the layout and build the SVG.
Create a definition for the instruction.
Create a symbol out of the supplied :paramref:`svg_dict`.
Compute the scale of an instruction svg.
Create an SVG from the knitting pattern set.
Add a new, empty knitting pattern to the set.
Return a SVGDumper for this instruction.
Transfer this instruction to a new row.
Index of the instruction in the instructions of the row or None.
The color in "#RRGGBB" format.
Initialize the parsing process.
Parse a knitting pattern set.
Fill a pattern collection.
Parse an instruction.
Parse a pattern.
Create a new knitting pattern.
Parse a collection of rows.
Connect the parsed rows.
:return: the type of a knitting pattern set.
Create a new pattern set.
Add a new row to the pattern.
Write bytes to the file.
Write a string to the file.
Similar to :meth:`place` but with an id as :paramref:`symbol_id`.
Adds the defs to the SVG structure.
Writes the current SVG to the :paramref:`file`.
The instructions in a grid.
Add the arguments `(args, kw)` to `_walk` to the todo list.
Walk through the knitting pattern by expanding an row.
expand the consumed meshes
expand the produced meshes
place the instruction on a grid
Loop through all the instructions that are `_todo`.
Returns an `InstructionInGrid` object for the `instruction`
Iterate over instructions.
Iterate over rows.
Iterate over connections between instructions.
The minimum and maximum bounds of this layout.
process the :paramref:`path`.
:return: an xml-dictionary with the same content as           :meth:`instruction_to_svg`.
replaces fill colors in ``<g inkscape:label="color"         inkscape:groupmode="layer">`` with :paramref:`color`
Returns an xml-dictionary with the same content as         :meth:`default_instruction_to_svg`
dump to the file
Convert the specification into an instruction
Derivative of the covariance matrix over the parameters of L.
Listen to parameters change.
Effect-sizes parameter, B.
r"""Bernoulli likelihood sampling.
Poisson likelihood sampling.
r"""Maximise the marginal likelihood.
r"""Covariance of the prior.
r"""Maximise the marginal likelihood.
Log of the marginal likelihood for the null hypothesis.
Optimal s according to the marginal likelihood.
LMLs, fixed-effect sizes, and scales for single-marker scan.
LML, fixed-effect sizes, and scale of the candidate set.
Log of the marginal likelihood for the null hypothesis.
Optimal s according to the marginal likelihood.
LML, fixed-effect sizes, and scale of the candidate set.
r"""Sample from the specified distribution.
Return :class:`.FastScanner` for association scan.
Log of the marginal likelihood.
Gradient of the log of the marginal likelihood.
r"""Gradient of the log of the marginal likelihood.
Estimates the covariance-matrix of the optimal beta.
Disable parameter optimization.
Enable parameter optimization.
Maximise the marginal likelihood.
Return :class:`.FastScanner` for association scan.
Log of the marginal likelihood.
Log of the marginal likelihood for optimal scale.
Log of the marginal likelihood for arbitrary scale.
r"""Return :class:`glimix_core.lmm.FastScanner` for the current         delta.
r"""Log of the marginal likelihood.
r"""Initialize the mean and covariance of the posterior.
Fetch an image from url and convert it into a Pillow Image object
Convert string datas into a Pillow Image object
Check that the image's size superior to `size`
Check that the image width is superior to `width`
Check that the image height is superior to `height`
Build an engine and a session.
Get a default connection string.
Converts the text category to a tasks.Category instance.
Converts the date in the format: Thu 03.
Parse numeric fields.
Generate a :term:`URI` based on parameters passed.
Create a Flask application.
Register a :class:`skosprovider.providers.VocabularyProvider`.
Remove the provider with the given id or :term:`URI`.
Get a provider by id or :term:`uri`.
Launch a query across all or a selection of providers.
Get all concepts from all providers.
Get a concept or collection by its uri.
Find a module if its name starts with :code:`self.group` and is registered.
Load a module if its name starts with :code:`self.group` and is registered.
upload and/or update the theme with the current git state
Build the backend and upload it to the remote server at the given index
Schedule a state update to keep the connection alive
Add a ``upload_bel_namespace`` command to main :mod:`click` function.
Add a ``clear_bel_namespace`` command to main :mod:`click` function.
Add a ``write_bel_namespace`` command to main :mod:`click` function.
Add a ``write_bel_annotation`` command to main :mod:`click` function.
Return an iterator over the models to be converted to the namespace.
Get the reference BEL namespace if it exists.
Make a namespace.
Convert a PyBEL generalized namespace entries to a set.
Update an already-created namespace.
Add this manager's namespace to the graph.
Add this manager as an annotation to the graph.
Upload the namespace to the PyBEL database.
Remove the default namespace if it exists.
Write as a BEL namespace file.
Write as a BEL annotation file.
Write a BEL namespace mapping file.
Get the namespace hash.
Get a :mod:`click` main function with added BEL namespace commands.
Iterator of the list of items in the XML source.
Get the long_description from the README.rst file. Assume UTF-8 encoding.
expects the id of an existing dropbox and returns its instance
Saves an error in the error list.
Parses all data from the source, saving model instances.
Receives an item and returns a dictionary of field values.
Get an item from the database or an empty one if not found.
Saves a model instance to the database.
Build a :mod:`click` CLI main function.
preserve the file ending, but replace the name with a random token
creates an encrypted archive of the dropbox outside of the drop directory.
returns the number of bytes that the cleansed attachments take up on disk
returns a list of strings
returns the user submitted text
returns a list of absolute paths to the attachements
returns a list of absolute paths to the cleansed attachements
Dump a provider to a format that can be passed to a     :class:`skosprovider.providers.DictionaryProvider`.
Add a Flask Admin interface to an application.
Create a Flask application.
Add  a :mod:`click` main function to use as a command line interface.
accepts a single file upload and adds it to the dropbox as attachment
Write as a BEL namespace.
Write as a BEL annotation.
Make a session.
Create the tables for Bio2BEL.
Store a "populate" event.
Store a "populate failed" event.
Store a "drop" event.
Get all actions.
Count all actions.
Iterator to read the rows of the CSV file.
Build a module configuration class.
Return the SQLAlchemy connection string if it is set.
Get all Bio2BEL modules.
Clear all downloaded files.
Add a ``populate`` command to main :mod:`click` function.
Add a ``drop`` command to main :mod:`click` function.
Add several commands to main :mod:`click` function for handling the cache.
Add a ``summarize`` command to main :mod:`click` function.
Create the empty database (tables).
Drop all tables from the database.
Get the :mod:`click` main function to use as a command line interface.
Provide a label for a list of labels.
Find the best label for a certain labeltype.
Filter a list of labels, leaving only labels of a certain language.
Transform a dict with keys `label`, `type` and `language` into a     :class:`Label`.
Transform a dict with keys `note`, `type` and `language` into a     :class:`Note`.
Transform a dict with key 'citation' into a :class:`Source`.
Provide a single sortkey for this conceptscheme.
Iterate over instantiated managers.
Clear all caches.
Generate a summary sheet.
Write a BEL namespace names/identifiers to terminology store.
Write all as BEL.
Run a combine web interface.
List all actions.
Count the number of BEL relations generated.
Dump as a list of INDRA statements.
Get a :mod:`click` main function with added BEL commands.
convert from 'list' or 'tuple' object to pgmagick.CoordinateList.
convert from 'list' or 'tuple' object to pgmagick.VPathList.
Draw a Bezier-curve.
:param opacity: 0.0 ~ 1.0
similar to 'pkg-config --modversion GraphicsMagick++
Runs a command inside the sandbox and returns the results.
Returns a list of accepting roles.
Returns the ACL for the given content identified by ``uuid``.
Given a dbapi cursor, lookup all the api keys and their information.
Expands all environment variables in a settings dictionary.
Process post-publication events coming out of the database.
Given an archive URI, parse to a split ident-hash.
Declaration of routes that can be browsed by users.
Declare all routes.
Returns a list of includes to be given to `cnxepub.collation.collate`.
Obtain the licenses in a dictionary form, keyed by url.
Validates the model using a series of checks on bits of the data.
Adds a model (binder or document) that is awaiting publication     to the database.
Lookup a document by id and version.
Check the aggregate state on the pending document.
Check the aggregate state on the pending document.
Update the state of the document's state values.
Check the publication's current state.
Given a tree, parse to a set of models
Reassemble a Binder object coming out of the database.
Given a publication id as ``publication_id``,     write the documents to the *Connexions Archive*.
Return the list of publications that need moderation.
Configures the session manager
Returns a dictionary of all unique print_styles, and their latest tag,     revision, and recipe_type.
Returns all books with any version of the given print style.
Return the list of API keys.
Returns a dictionary with all the past baking statuses of a single book.
Retriggers baking for a given book.
Insert a module with the given ``metadata``.
Publishes the ``model`` and return its ident_hash.
Publishes the ``model`` and return its ident_hash.
Get the previous publication of the given     publication as an ident-hash.
Republish the collection identified as ``ident_hash`` with     the given ``version``.
Accept a publication request at form value 'epub
Allows the user (at ``uid``) to accept the license(s) for     a publication (at ``id``).
Invoke the baking process - trigger post-publication
Configures the caching manager
Iterate cycles in the series.
Count cycles in the series.
Recipe to render a given FST node.
FST node located at the given path
Determine if we're on the targetted node.
Return a list of all enrollments for the passed course_id.
Return a list of all enrollments for the passed course sis id.
Return a list of all enrollments for the passed section_id.
Return a list of all enrollments for the passed section sis id.
Return a list of enrollments for the passed user regid.
Enroll a user into a course.
calculates the capacity according to      THe Engineering of Foundations textbook by Salgado
List the roles for an account, for the passed account SIS ID.
Get information about a single role, for the passed Canvas account ID.
Get information about a single role, for the passed account SIS ID.
Returns a list of courses for the passed account ID.
Return a list of courses for the passed account SIS ID.
Return a list of published courses for the passed account ID.
Return a list of published courses for the passed account SIS ID.
Return a list of courses for the passed regid.
Create a canvas course with the given subaccount id and course name.
Returns participation data for the given account_id and term_id.
Returns grade data for the given account_id and term_id.
Returns statistics for the given account_id and term_id.
Returns participation data for the given sis_course_id.
Returns per-student data for the given course_id.
Returns prefix for a given multicodec
Create an external tool using the passed json_data.
Update the external tool identified by external_tool_id with the passed         json data.
Delete the external tool identified by external_tool_id.
Get a sessionless launch url for an external tool.
Get a sessionless launch url for an external tool.
Get a sessionless launch url for an external tool.
Check if a parameter is available on an object
Returns a list of users for the given course id.
Returns a list of users for the given sis course id.
Create and return a new user and pseudonym for an account.
Return a user's logins for the given user_id.
Update an existing login for a user in the given account.
return url path to next page of paginated data
Return a list of the admins in the account.
Flag an existing user as an admin within the account.
Flag an existing user as an admin within the account sis id.
Remove an account admin role from a user.
Remove an account admin role from a user for the account sis id.
Create a new grading standard for the passed course.
Create a canvas section in the given course id.
Update a canvas section with the given section id.
List quizzes for a given course
Return list of subaccounts within the account with the passed         canvas id.
Update the passed account. Returns the updated account.
Return the authentication settings for the passed account_id.
Update the authentication settings for the passed account_id.
Return a term resource for the passed SIS ID.
Imports a directory of CSV files.
Get the status of an already created SIS import.
Creates a zip archive from files in path.
Modify an existing assignment.
Returns the list of reports for the canvas account id.
Convenience method for create_report, for creating a course         provisioning report.
Convenience method for create_report, for creating a course sis export         report.
Convenience method for create_report, for creating an unused courses         report.
Returns a completed report as a list of csv strings.
Returns the status of a report.
Move detections in direction dx, dy.
Horizontally flip detections according to an image flip.
Get the logo for a channel
Get the text to display when the field is empty.
Parse uniformly args and kwargs from a templatetag
Create and register metrics from a list of MetricConfigs.
Setup logging for the application and aiohttp.
Configure the MetricRegistry.
Return a :class:`PrometheusExporter` configured with args.
Create Prometheus metrics from a list of MetricConfigs.
Run the :class:`aiohttp.web.Application` for the exporter.
Setup an :class:`aiohttp.web.Application`.
Inner wrapper to search for blocks by name.
Translate argb(...) to color string
Check if string is LESS variable     args:         value (str): string     returns:         bool
Round half-way away from zero.
Parse file.         kwargs:             filename (str): File to parse             debuglevel (int): Parser debuglevel
block_decl               : block_open declaration_list brace_close
block_open                : css_font_face t_ws brace_open
mixin_decl                : open_mixin declaration_list brace_close
mixin_guard_cond_list    : mixin_guard_cond_list t_comma mixin_guard_cond                                      | mixin_guard_cond_list less_and mixin_guard_cond
variable_decl            : variable t_colon style_list t_semicolon
identifier_list           : identifier_list t_comma identifier_group
ident_parts               : ident_parts ident_part                                       | ident_parts filter_group
color                   : css_color                                     | css_color t_ws
Query Wolfram|Alpha using the v2.0 API
Add request content data to request body, set Content-type header.
Call the API with a GET request.
Call the API with a DELETE request.
Call the API with a PUT request.
Call the API with a POST request.
Split sentences in groups, given a specific group length.
Call the disambiguation service in order to process a pdf file .
Call the disambiguation service in order to get meanings.
Call the disambiguation service in order to get meanings.
Call the disambiguation service in order to disambiguate a search query.
Call the segmenter in order to split text in sentences.
Recognise the language of the text in input
Fetch the concept from the Knowledge base
Estimates the accuracy of the predictions from the MDR ensemble
Estimates the accuracy of the predictions from the constructed feature.
Estimates the quality of the ContinuousMDR model using a t-statistic.
Calculates the entropy, H(X), in the given base
Calculates the conditional entropy, H(X|Y), in the given base
Calculates the mutual information between two variables, I(X;Y), in the given base
Calculates the MDR entropy, H(XY), in the given base
Calculates the MDR conditional entropy, H(XY|labels), in the given base
Fits a MDR model to all n-way combinations of the features in X.
Checks if a GitHub call returned multiple pages of data.
Fetch all tags for repository from Github.
Get the creation date of the repository from GitHub.
Fetch events for all issues and add them to self.events
Fetch time for tag from repository.
Fetch commit data for specified event.
Parse the given ChangeLog data into a list of Hashes.
Create the signal handler map
Convert an ISO formated date and time string to a datetime object.
Generate formated list of issues for changelog.
Generate a header for a tag section with specific parameters.
Generate log between 2 specified tags.
Apply all filters to issues and pull requests.
Generate log for unreleased closed issues.
Generate ready-to-paste log from list of issues and pull requests.
Delete all issues with labels from exclude-labels option.
Add all issues, that should be in that tag, according to milestone.
Filter issues that belong to specified tag range.
Include issues with labels, specified in self.options.include_labels.
Filter all issues that don't have a label.
Filter issues for include/exclude labels.
Fetch and filter tags, fetch dates and sort them in time order.
Sort all tags by date.
Get date and time for tag, fetching it if not already cached.
Detect link, name and time for specified tag.
Filter tags according since_tag option.
Filter tags according due_tag option.
Filter tags according between_tags option.
Filter tags according exclude_tags and exclude_tags_regex option.
Filter tags according exclude_tags_regex option.
Filter tags according exclude_tags option.
Takes a base91 char string and returns decimal
Set a specified aprs-is filter for this connection
Set callsign and password
Initiate connection to APRS server and attempt to login
Send a line, or multiple lines sperapted by '\\r\\n'
When a position sentence is received, it will be passed to the callback function
Attemps connection to the server
Convert UUID to binary blob
Convert binary blob to UUID instance
Convert the python value for storage in the database.
Convert the database value to a pythonic value.
Register model(s) with app
Disconnect from all databases
Apply pagination to query
Apply user specified filters to query
List items from query
Retrieve items from query
Conveniently get the security configuration for the specified     application without the annoying 'SECURITY_' prefix.
Get a Flask-Security configuration value.
Creates a new vector from members.
Evaluate a file with the given name into a Python module AST node.
Evaluate the forms in stdin into a Python module AST node.
Evaluate the forms in a string into a Python module AST node.
Run a Basilisp script or a line of code, if it is provided.
Decorator function which can be used to make Python multi functions.
Remove the method defined for this key and return it.
Remove reader metadata from the form's meta map.
Resolve a namespaced symbol into a Python name or Basilisp Var.
Resolve a non-namespaced symbol into a Python name or a local     Basilisp Var.
Resolve a Basilisp symbol as a Var or Python name.
Add a new symbol to the symbol table.
Return a string representation of a Lisp object.
Bootstrap a new module with imports and other boilerplate.
Create a Sequence from Iterable s.
Replace characters which are not valid in Python symbols     with valid replacement strings.
Replace munged string components with their original     representation.
Create a Fraction from a numerator and denominator.
Get the default logging handler for Basilisp.
Partition coll into groups of size n.
Read a namespaced token from the input stream.
Read a collection from the input stream and create the     collection using f.
Read a list element from the input stream.
Read a vector element from the input stream.
Return a set from the input stream.
Return a map from the input stream.
Return a numeric (complex, Decimal, float, int, Fraction) from the input stream.
Return a string from the input stream.
Return a symbol from the input stream.
Return a keyword from the input stream.
Read metadata and apply that to the next object in the     input stream.
Read a function reader macro from the input stream.
Read a quoted form from the input stream.
Read a syntax-quote and set the syntax-quoting state in the reader.
Read an unquoted form and handle any special logic of unquoting.
Read a derefed form from the input stream.
Read a character literal from the input stream.
Read a regex reader macro from the input stream.
Return a data structure evaluated as a reader     macro from the input stream.
Read the next full form from the input stream, consuming any     reader comments completely.
Read the next full form from the input stream.
Read the contents of a stream as a Lisp expression.
Read the contents of a string as a Lisp expression.
Read the contents of a file as a Lisp expression.
Update the internal line and column buffers after a new character         is added.
Push one character back onto the stream, allowing it to be         read again.
Return the bytes for a Basilisp bytecode cache file.
Hook into Python's import machinery with a custom Basilisp code     importer.
Find the ModuleSpec for the specified Basilisp module.
Load and execute a cached Basilisp module.
Load and execute a non-cached Basilisp module.
Compile the Basilisp module into Python code.
Create a new symbol.
Return an iterable of possible completions for the given text.
Create a new keyword.
Chain a sequence of generated Python ASTs into a tuple of dependency nodes
Turn a collection of Lisp forms into Python AST nodes.
Remove reader metadata from the form's meta map.
Return True if the Var can be redefined.
Return a Python AST Node for a `def` expression.
Return a Python AST Node for a `deftype*` expression.
Return a Python AST Node for a `do` expression.
Generate a list of Python AST nodes from function method parameters.
Return a Python AST node for a function with a single arity.
Return the Python AST nodes for a argument-length dispatch function     for multi-arity functions.
Return a Python AST node for a function with multiple arities.
Return a Python AST Node for a `fn` expression.
Generate custom `if` nodes to handle `recur` bodies.
Return a Python AST node for a Basilisp `import*` expression.
Return a Python AST Node for a Basilisp function invocation.
Return a Python AST Node for a `let*` expression.
Return a Python AST Node for a `loop*` expression.
Return a Python AST Node for a `quote` expression.
Return a Python AST node for `recur` occurring inside a `fn*`.
Return a Python AST node for `recur` occurring inside a `deftype*` method.
Return a Python AST node for `recur` occurring inside a `loop`.
Return a Python AST Node for a `recur` expression.
Return a Python AST Node for a `set!` expression.
Return a Python AST Node for a `throw` expression.
Return a Python AST Node for a `try` expression.
Generate Var.find calls for the named symbol.
Generate a Python AST node for accessing a Var.
Generate a Python AST node for Python interop method calls.
Generate a Python AST node for Python interop method calls.
Assign a Python variable named `ns_var` to the value of the current     namespace.
Bootstrap a new module with imports and other boilerplate.
Creates a new set from members.
Eliminate no-op constant expressions which are in the tree         as standalone statements.
Eliminate dead code from function bodies.
Eliminate dead code from if/elif bodies.
Eliminate dead code from while bodies.
Returns the nth rest sequence of coll, or coll if i is 0.
Returns the nth next sequence of coll.
Coerce the argument o to a ISeq. If o is None, return None.
Concatenate the sequences given by seqs into a single ISeq.
Return a function which is the partial application of f with args.
Dereference a Deref object and return its contents.
Completer function for Python's readline/libedit implementation.
Collect Python starred arguments into a Basilisp list.
Create a Basilisp function, setting meta and supplying a with_meta     method implementation.
Initialize the dynamic `*ns*` variable in the Namespace `which_ns`.
Set the value of the dynamic variable `*ns*` in the current thread.
Get the value of the dynamic variable `*ns*` in the current thread.
Resolve the aliased symbol in the current namespace.
Add generated Python code to a dynamic variable in which_ns.
Return the value of the `*print-generated-python*` dynamic variable.
Create a new unbound `Var` instance to the symbol `name` in namespace `ns`.
Return the value currently bound to the name in the namespace specified         by `ns_qualified_sym`.
Add a gated default import to the default imports.
Add a Symbol alias for the given Namespace.
Refer all _public_ interns from another namespace.
Refer all the Vars in the other namespace.
Return an iterable of possible completions for the given text in         this namespace.
Creates a new list from members.
Regenerate the signing key for this instance. Store the new key in         signing_key property.
Handle a request whose date doesn't match the signing key scope date.
Encode body of request to bytes and update content-type if required.
Generate the Canonical Headers section of the Canonical Request.
Generate the AWS4 auth string to sign for the request.
Generate the canonical path as per AWS4 auth requirements.
Generate the signing key string as bytes.
Convert a datetime object into a valid STIX timestamp string.
Validates Status information. Raises errors for required         properties.
Validates Collection information. Raises errors for required         properties.
Implement the ``Get Objects`` endpoint (section 5.3)
Implement the ``Get an Object`` endpoint (section 5.5)
Implement the ``Add Objects`` endpoint (section 5.4)
Implement the ``Get Object Manifests`` endpoint (section 5.6).
Update the API Root's information and list of Collections
Update the properties of this API Root.
Update the list of Collections contained by this API Root.
Validates server information. Raises errors for required properties.
Update the Server information and list of API Roots
Check that the server is returning a valid Content-Type
Returns the the amount of memory available for use.
Returns the default number of slave processes to be spawned.
Create a shared memory array from the shape of array.
Create a shared memory array of given shape and type, filled with `value`.
Copy an array to the shared memory.
Map-reduce with multile processes.
format of table header:
kill all slaves and reap the monitor
schedule can be             (sch, chunk) or sch;             sch is 'static', 'dynamic' or 'guided'.
ensure the master exit from Barrier
adapt source to a packarray according to the layout of template
Return a random (abbreviated if `abbr`) day of week name.
Return a random (abbreviated if `abbr`) month name or month number if     `numerical`.
Return a random year.
Return a check digit of the given credit card number.
Return a random credit card number.
Return a random ZIP code, either in `#####` or `#####-####` format.
Return a random phone number in `#-(###)###-####` format.
Return a random job title.
Return a random email text.
Return a str of decimal with two digits after a decimal mark.
Return a random sentence to be used as e.g. an e-mail subject.
Return a random paragraph.
Return a lowercased string with non alphabetic chars removed.
Return a random user name.
Return a random domain name.
Return random e-mail address in a hopefully imaginary domain.
Return a random taxation ID number for a company.
Return a random government registration ID for a company.
Return a random taxation ID number for a natural person.
Return SHA1 hexdigest of a password (optionally salted with a string).
Return a random string for use as a password.
returns a dictionary of arg_name:default_values for the input function
Remove the key from the request cache and from memcache.
Returns the current version/module in -dot- notation which is used by `target:` parameters.
Return a dictionary of key/values from os.environ.
Deconstruct the ``Constraint`` instance to a tuple.
Connect to LASAF through a CAM-socket.
Send commands to LASAF through CAM-socket.
Receive message from socket interface as list of OrderedDict.
Parse a FIQL formatted string into an ``Expression``.
Encode objects like ndb.Model which have a `.to_dict()` method.
Custom json dump using the custom encoder above.
Override of the default decode method that also uses decode_date.
Overriding the default JSONEncoder.default for NDB support.
Validate version before release.
Set parent ``Expression`` for this object.
Get the parent ``Expression`` for this object.
Add an ``Operator`` to the ``Expression``.
Add an element of type ``Operator``, ``Constraint``, or         ``Expression`` to the ``Expression``.
Update the ``Expression`` by joining the specified additional         ``elements`` using an "AND" ``Operator``
Update the ``Expression`` by joining the specified additional         ``elements`` using an "OR" ``Operator``
Parse received response.
Translate a list of tuples to OrderedDict with key and val as strings.
Parse CAM message to OrderedDict based on format /key:val.
Check if specific message is present.
Prepare message to be sent.
Connect to LASAF through a CAM-socket.
Send commands to LASAF through CAM-socket.
Receive message from socket interface as list of OrderedDict.
Enable a given scan field.
Load scanning template from filename.
Get information about given keyword. Defaults to stage.
r"""     Include a Python source file in a docstring formatted in reStructuredText.
Find and return the location of package.json.
Extract the JSPM configuration from package.json.
Figure out where `jspm_packages/system.js` will be put by JSPM.
Handle YOURLS API errors.
Validate response from YOURLS server.
Create new dependent variable vector.
Create new independent variable vector.
Verify that two waveforms can be combined with various mathematical functions.
Run module tracing.
Shorten URL with optional keyword and title.
Get database statistics.
Print STDOUT resulting from a Bash shell command formatted in reStructuredText.
recursively flatten nested objects
Make a placeholder object that uses its own name for its repr
returns the size of size as a tuple of:
attempt to parse a size in bytes from a human-readable string.
Command line interface for YOURLS.
Generate Python interpreter version entries for 2.x or 3.x series.
Generate Python interpreter version entries.
Translate >=, ==, <= to words.
Get requirements in reStructuredText format.
Generate version string from tuple (almost entirely from coveragepy).
r"""     Read a `Touchstone <https://ibis.org/connector/touchstone_spec11.pdf>`_ file.
r"""     Write a `Touchstone`_ file.
Perform generic operation on a waveform object.
Calculate running area under curve.
r"""     Return the running average of a waveform's dependent variable vector.
r"""     Return the numerical derivative of a waveform's dependent variable vector.
r"""     Return the imaginary part of the Fast Fourier Transform of a waveform.
r"""     Return the magnitude of the Fast Fourier Transform of a waveform.
r"""     Return the real part of the Fast Fourier Transform of a waveform.
r"""     Return the group delay of a waveform.
r"""     Return the numerical average of a waveform's dependent variable vector.
r"""     Return the numerical integral of a waveform's dependent variable vector.
r"""     Return the maximum of a waveform's dependent variable vector.
r"""     Return the minimum of a waveform's dependent variable vector.
r"""     Return the phase of a waveform's dependent variable vector.
r"""     Round a waveform's dependent variable vector to a given number of decimal places.
r"""     Return the square root of a waveform's dependent variable vector.
r"""     Return a waveform that is a sub-set of a waveform, potentially re-sampled.
r"""     Return the dependent variable value at a given independent variable point.
Only allow lookups for jspm_packages.
Get first sentence of first paragraph of long description.
Crawls the (specified) template files and extracts the apps.
Build the filepath by appending the extension.
r"""     Validate if an object is an :ref:`EngineeringNotationNumber` pseudo-type object.
r"""     Validate if an object is an :ref:`TouchstoneData` pseudo-type object.
r"""     Validate if an object is an :ref:`TouchstoneNoiseData` pseudo-type object.
r"""     Validate if an object is an :ref:`TouchstoneOptions` pseudo-type object.
r"""     Validate if an object is a :ref:`WaveInterpOption` pseudo-type object.
r"""     Validate if an object is a :ref:`WaveVectors` pseudo-type object.
Build mathematical expression from hierarchical list.
Parse function calls.
Parse mathematical expression using PyParsing.
Remove consecutive delimiters.
Remove unnecessary delimiters (parenthesis, brackets, etc.).
r"""     Convert number to string guaranteeing result is not in scientific notation.
r"""     Convert a number to engineering notation.
r"""     Return the fractional part of a number represented in engineering notation.
r"""     Return the mantissa of a number represented in engineering notation.
Round floating point number(s) mantissa to given number of digits.
r"""     Format a list of numbers (vector) or a Numpy vector for printing.
Convert number or number string to a number string in scientific notation.
Return mantissa and exponent of a number in scientific notation.
Using a schema, deserialize a stream of consecutive Avro values.
Seeks and removes the sourcemap comment. If found, the sourcemap line is     returned.
Return a tuple with the absolute path and relative path (relative to STATIC_URL)
Check whether `self.app` is missing the '.js' extension and if it needs it.
Bundle the app and return the static url to the bundle.
Trace the dependencies for app.
Convert the bytes object to a hexdump.
Parse a docstring into ParameterInfo and ReturnInfo objects.
Get a list of all valid identifiers for the current context.
Lazily load a callable.
Split a line into arguments using shlex and a dequoting routine.
Return help information for a context or function.
Find a function in the given context by name.
Return a listing of all of the functions in this context including builtins.
Check if an argument is a flag.
Process arguments from the command line into positional and kw args.
Try to find the value for a keyword argument.
Invoke a function given a list of arguments with the function listed first.
Invoke a one or more function given a list of arguments.
Parse and invoke a string line.
Parse a single typed parameter statement.
Parse a single return statement declaration.
Attempt to find the canonical name of this section.
Classify a line into a type of object.
Wrap, format and print this docstring for a specific width.
Convert value to type 'typename'
Convert binary data to type 'type'.
Convert value to type and format it as a string
Validate that all required type methods are implemented.
Check if type is known to the type system.
Instantiate a complex type.
Return the type object corresponding to a type name.
Check if format is known for given type.
Check if we have enough arguments to call this function.
Add type information for a parameter by name.
Add type information to the return value of this function.
Use a custom function to print the return value.
Try to convert a prefix into a parameter name.
Get the parameter type information by name.
Return our function signature as a string.
Format the return value of this function as a string.
Convert and validate a positional argument.
Check if there are any missing or duplicate arguments.
Given a parameter with type information, convert and validate it.
Format this exception as a string including class name.
Convert this exception to a dictionary.
Parse a list of validator names or n-tuples, checking for errors.
Find all annotated function inside of a container.
Decorate a function to give type information about its parameters.
Specify how the return value of this function should be handled.
Specify that this function returns a typed value.
Declare that a class defines a context.
Annotate a function using information from its docstring.
Mark a function as callable from the command line.
Given an object with a docstring, return the first line of the docstring
Check if a given string is in the correct URL format or not
Download a file pointed to by url to a temp file on local disk
Calculate statistics for given data.
Check if the specifed file exists and is not empty
Extract SLAs from a set of rules
Take the (col, value) in 'values', append value into 'col' in self.data[]
Parse the top output file     Return status of the metric parse
get a list of urls from a seeding url, return a list of urls
Check whether the SLA has passed or failed
plot timeseries for sub-metrics
check whether the given sub metric is in important_sub_metrics list
plot CDF for important sub-metrics
Parse the netstat output file     :return: status of the metric parse
Parse the vmstat file     :return: status of the metric parse
graph_data_on_the_same_graph: put a list of plots on the same graph: currently it supports CDF
Create Analysis and save in Naarad from config     :param config:     :return:
Returns a list of test_id for which naarad analysis failed     :return: list of test_ids
Parse the vmstat file     :return: status of the metric parse
Run the given function with the given args.
Create a traceback for an Octave evaluation error.
Test whether the name is an object.
Get or create a function pointer of the given name.
Get or create a user class of the given type.
Clean up resources used by the session.
Read the data from the given file path.
Save a Python object to an Octave file on the given path.
Create a struct from session data.
Convert the Python values to values suitable to send to Octave.
Test if a list contains simple numeric data.
Configure root logger.
Make an Octave class for a given class name
Convert to a value to send to Octave.
Get a pointer to the private object.
Return true if file is a valid RAR file.
Read current member header into a RarInfo object.
Process current member with 'op' operation.
Open RAR archive file.
Return file-like object for 'member'.
Return a list of file names in the archive.
Return the instance of RarInfo given 'name'.
Print a table of contents for the RAR file.
Extract the RarInfo objects 'members' to a physical            file on the path targetpath.
Load ``cron`` modules for applications listed in ``INSTALLED_APPS``.
Register tasks with cron.
Print the tasks that would be installed in the     crontab, for debugging purposes.
Uninstall tasks from cron.
Create a project handler
Load the projects config data from local path
Get the dependencies of the Project
Set the focus to `newvalue`.
Set many foci to values taken by iterating over `new_values`.
Apply a function to the focus.
Returns a list of all the foci within `state`.
Applies a function `fn` to all the foci within `state`.
Sets all the foci within `state` to `value`.
Returns a class representing the 'kind' of optic.
Play a game of naughts and crosses against the computer.
Do upload items to S3.
Build file object from items.
Load and validate the header of a pcap file.
Remove the IP packet layer, yielding the transport layer.
Strip the Ethernet frame from a packet.
set keys of capabils into fields of object         :capabils: dict
To be used under python2.4 because functools.update_wrapper() is available only from python2.5+
Returns the account state information associated with a specific address.
Returns the hash value associated with a specific block index.
Returns the system fees associated with a specific block index.
Returns the contract information associated with a specific script hash.
Returns the transaction output information corresponding to a hash and index.
Invokes a contract with given parameters and returns the result.
Invokes a contract's function with given parameters and returns the result.
Invokes a script on the VM and returns the result.
Validates if the considered string is a valid NEO address.
Returns True if the considered string is a valid RIPEMD160 hash.
Returns a list of paramaters meant to be passed to JSON-RPC endpoints.
Return an XML element representing this element
validate a request from plivo
Return a node with label. Create node if label is new
Get or create edges using get_or_create_node
Parse dom into a Graph.
Parse a string into a Graph.
Return the other node
Decorator for using a function as a queue worker. Example:                  >>>
Renders the barcode using `self.writer`.
[pandas.read_sql]                  Arguments:             Query {[type]} -- [description]                  Returns:             [pd.DataFrame or generate] -- [description]
Call that method in the pyramid configuration phase.
A to-bytes specific to Python 3.5 and below.
A to-bytes specific to Python 3.6 and above.
Validate the given litezip as `struct`.     Returns a list of validation messages.
Generates a simple call, with an index for something.
Generates a bytecode from an object.
Download a file or folder from the S3-like service.
Upload a file or folder to the S3-like service.
Compiles Pyte objects into a bytecode list.
Simulates the actions of the stack, to check safety.
Given the parsed xml to an `ElementTree`,     parse the id from the content.
[insert bulk data]
Iterate over the instructions in a bytecode string.
Like union, but ignores whether the two intervals intersect or not
Removes any trailing /1 or /2 off the end of the name
Returns true if the sequence is all Ns (upper or lower case)
Replaces all occurrences of 'old' with 'new'
Replaces the sequence from start to end with the sequence "new"
Removes any leading or trailing N or n characters from the sequence
Replaces the sequence from start to end with the sequence "new"
Replace every non-acgtn (case insensitve) character with an N
Returns the number of sequences in a file
Makes a multi fasta file of random sequences, all the same length
Add basic authentication to the requests of the clients.
Authenticate via an api key.
yield objects from json files in the folder and subfolders.
Return a dict of schema names mapping to a Schema.
Return a jsonschema.RefResolver for the schemas.
Validate an object against the schema.
Return a list of valid examples for the given schema.
Return a list of examples which violate the schema.
Implements PBKDF2 with the same API as Django's existing     implementation, using cryptography.
Pickled data is serialized as base64
:type value: any         :rtype: bytes
Retrieve original value and check it wasn't signed more         than max_age seconds ago.
Returns a PEP 386-compliant version number from VERSION.
Build authorization URL for User Agent.
Process tokens and errors from redirect_uri.
Get OneDrive object representing list of objects in a folder.
Add comment message to a specified object.
Convert or dump object to unicode.
Write problems as restructured text to a file (or stdout/stderr).
Add a value check function for the specified field.
Add a value predicate function for the specified field.
Add a record check function.
Add a unique check on a single column or combination of columns.
Validate `data` and return a list of validation problems found.
Validate `data` and return a iterator over problems found.
Apply value check functions on the given record `r`.
Apply header checks on the given record `r`.
Apply record length checks on the given record `r`.
Apply value predicates on the given record `r`.
Apply record checks on `r`.
Apply record predicates on `r`.
Apply unique checks on `r`.
Invoke 'each' methods on `r`.
Apply 'assert' methods on `r`.
Apply 'check' methods on `r`.
Apply skip functions on `r`.
Convert the record to a dictionary using field names as keys.
Create an example CSV validator for patient demographic data.
Recursively create and set the drop target for obj and childs
Event handler for drag&drop functionality
Return a copy of the drop target (to avoid wx problems on rebuild)
Open the inspector windows for a given object
Take a pythoncard background resource and convert to a gui2py window
Take a pythoncard background resource and convert to a gui2py window
Convert PythonCard font description to gui2py style
Loads HTML page from location and then displays it
Programatically select a (default) property to start editing it
Select a property (and start the editor)
Convenience function for accessing tag parameters
Process an outgoing communication
Show a tip message
Get the selected object and store start position
Move the selected object
Release the selected object (pass a wx_obj if the event was captured)
support cursor keys to move components one pixel at a time
delete all of the selected objects
create a copy of each selected object
Adjust facade with the dimensions of the original object (and repaint)
Capture the new control superficial image after an update
Returns the pyth item data associated with the item
Do a reverse look up for an item containing the requested data
Remove the item from the list and unset the related data
Remove all the item from the list and unset the related data
Deletes the item at the zero-based index 'n' from the control.
Remove all items and column headings
Associate the header to the control (it could be recreated)
Remove all items and reset internal structures
Returns the index of the selected item (list for multiselect) or None
Sets the item at index 'n' to be the selected item.
Returns the label of the selected item or an empty string if none
Associate the given client data with the item at position n.
Adds the item to the control, associating the given data if not None.
Deletes the item at the zero-based index 'n' from the control.
Construct a string representing the object
Find an object already created
Recreate (if needed) the wx_obj and apply new properties
Remove event references and destroy wx object (and children)
Create a new object exactly similar to self
Raises/lower the component in the window hierarchy (Z-order/tab order)
Store the gui/wx object parent for this component
Return parent window name (used in __repr__ parent spec)
Capture the screen appearance of the control (to be used as facade)
called when adding a control to the window
Re-parent a child control with the new wx_obj parent
automatically adjust relative pos and size of children controls
make several copies of the background bitmap
Draw the image as background
Associate the component to the control (it could be recreated)
Update a property value with (used by the designer)
Return a list of children sub-components that are column headings
Set the row label format string (empty to hide)
Update the grid if rows and columns have been added or deleted
Update all displayed values
update the column attributes to add the appropriate renderer
Associate the header to the control (it could be recreated)
Insert a number of rows into the grid (and associated table)
Insert a number of rows into the grid (and associated table)
Remove all rows and reset internal structures
Called to position/size the edit control within the cell rectangle.
Fetch the value from the table and prepare the edit control
Complete the editing of the current cell. Returns True if changed
Return True to allow the given key to start editing
This will be called to let the editor do something with the first key
enable or disable all menu items
check if all menu items are enabled
Recursively find a menu item by its id (useful for event handlers)
enable or disable all top menus
check if all top menus are enabled
Helper method to remove a menu avoiding using its position
Recursively find a menu item by its id (useful for event handlers)
Process form submission
Construct a sequence of name/value pairs from controls
Add a tag attribute to the wx window
Make the first column of the table non-breaking.
Get an autodoc.Documenter class suitable for documenting the given     object.
Reformat a function signature to a more compact form.
Join a number of strings to one, limiting the length to *max_chars*.
Import a Python object given its full name.
Generate a proper list of table nodes for autosummary:: directive.
Show a simple pop-up modal dialog
Ask for confirmation (yes/no or ok and cancel), returns True or False
Show a dialog to select a font
Show a dialog to pick a color
Show a dialog to choose a directory
Remove all items and reset internal structures
Force appearance of the button next to the item
Get the type of an image from the file's extension ( .jpg, etc. )
Get the type of an image from the file's extension ( .jpg, etc. )
Set icon based on resource values
automatically adjust relative pos and size of children controls
Open, read and eval the resource from the source file
Save the resource to the source file
Create the GUI objects defined in the resource (filename or python struct)
Create a gui2py window based on the python resource
Create a gui2py control based on the python resource
Recursive convert a live GUI object to a resource list/dict
translate gui2py attribute name from pythoncard legacy code
Read from the clipboard content, return a suitable object (string or bitmap)
Write content to the clipboard, data can be either a string or a bitmap
Find out what items are documented in source/*.rst.
Find out what items are documented in the given object's docstring.
Find out what items appear in autosummary:: directives in the     given lines.
Add the object and all their childs
Select the object and show its properties
load the selected item in the property editor
Update the tree item when the object name changes
Open a popup menu with options regarding the selected object
Re-parent a child control with the new wx_obj parent (owner)
Same as :func:`~bitstruct.pack_into()`, but data is read from a     dictionary.
Return a Message instance according to the data received from         Facebook Messenger API.
Use the new message to search for a registered view according         to its pattern.
Read elements from the file.
Read and return the matrix header.
Read full header tag.
Read a numeric matrix.     Returns an array with rows of the numeric matrix.
Read a cell array.     Returns an array with rows of the cell array.
Read a struct array.     Returns a dict with fields of the struct array.
Read variable array (of any supported type).
Determine if end-of-file is reached for file fd.
Load data from MAT-file:
Write data element tag and data.
Write variable header
Write variable data to file
Write compressed variable data to file
Write the numeric array
Save data to MAT-file:
Private method to execute command.
Convert {'Element': 1234} to WebElement Object
Convert WebElement Object to {'Element': 1234}
Switch to the given window.
Sets the width and height of the current window.
Sets the x,y position of the current window.
Execute JavaScript Synchronously in current context.
Execute JavaScript Asynchronously in current context.
Save the screenshot to local.
Find an element in the current context.
Check if an element in the current context.
Check if an element in the current context.
Find elements in the current context.
Wait for element till satisfy the given condition
Wait for elements till satisfy the given condition
The factory method to create WebDriverResult from JSON Object.
Add element_by alias and extension' methods(if_exists/or_none).
Implement the check_unused_args in superclass.
format a string by a map
Find name of exception by WebDriver defined error code.
Format the endpoint url by data and then request the remote server.
Internal method to send request to the remote server.
Private method to execute command with data.
find an element in the current element.
Check if an element in the current element.
find elements in the current element.
Assert whether the target is displayed
Test the functionality of the rController object
Returns a list of buttons currently pressed
Decodes an encoded 7-bit ASCII header value into it's actual value.
Adds a preview to the index.
Renders the message view to a response.
Splits the docstring of the given value into it's summary and body.
Renders and returns an unsent message with the provided context.
Renders the message subject for the given context.
Renders and returns an unsent message with the given context.
A simple method that runs a ManagementUtility.
Perform the actual serialization.
Utility function for the RedisLogRecord.
JSON-encode a record for serializing through redis.
Start a pydev settrace
Builds and registers a :class:`Selector` object with the given name and configuration.
Dict[str, NodeFilter]: Returns the node filters for this selector.
Returns a decorator function for adding a node filter.
Selector: Returns a new :class:`Selector` instance with the current configuration.
Resolves this query relative to the given node.
str: A message describing the query failure.
Asserts that the page doesn't have the given path.
Checks if the page has the given path.
Checks if the page doesn't have the given path.
Select this node if it is an option element inside a select tag.
Returns the given expression filtered by the given value.
Returns an instance of the given browser with the given capabilities.
str: A long description of this query.
str: The desired element visibility.
Returns the XPath query for this selector.
Resolves this query relative to the given node.
Returns whether the given node matches all filters.
node.Base: The current node relative to which all interaction will be scoped.
str: Path of the current page, without any domain information.
str: Host of the current page.
Switch to the given frame.
Execute the wrapped code, accepting a confirm.
Execute the wrapped code, dismissing a confirm.
Execute the wrapped code, dismissing a prompt.
Save a snapshot of the page.
Save a screenshot of the page.
Reset the session (i.e., remove cookies and navigate to a blank page).
Returns whether the given node matches the filter rule with the given value.
str: The package version.
Resolves this query relative to the given node.
str: The title for the current frame.
str: The value of the form element.
Returns the :class:`Session` for the current driver and app, instantiating one if needed.
Asserts that an element has the specified CSS styles. ::
Asserts that the current node matches a given selector. ::
Asserts that the page has the given title.
Asserts that the page doesn't have the given title.
Checks if the page has the given title.
Checks if the page doesn't have the given title.
Find all elements on the page matching the given selector and options.
Resolves this query relative to the given node.
Returns the inner content of a given XML node, including tags.
Returns the inner text of a given XML node, excluding tags.
Returns the given URL with all query keys properly escaped.
bool: Whether the given value is valid.
str: A message describing the query failure.
Attempts to fill the result cache with at least the given number of results.
str: A normalized representation for a user-provided value.
Returns whether the given count matches the given query options.
Normalizes the given value to a string of text with extra whitespace removed.
Returns a compiled regular expression for the given text.
bool: Whether this window is the window in which commands are being executed.
Resizes the window to the given dimensions.
bool: Whether the server for this app is up and responsive.
Will parse git log messages in the 'short' format
Get outer traceback text for logging.
Get object repr block.
Get logger for log calls.
Logger instance to use as override.
Get simple (string/number/boolean and None) assigned values from source.
Low-level method to call the Slack API.
Checks the integrity of a specific target. Gets called     multiple times from check_integrity()
Wrapper function that sends to commands in a target's 'formula'     to run_commands()
Helper function that returns the node data     of the node with the name supplied
Returns the filename of the appropriate sakefile
Send message to Slack
Get available messages and send through to the protocol
Main interface. Instantiate the SlackAPI, connect to RTM         and start the client.
Prepare transcriptiondata from the transcription sources.
Check the consistency of a given transcription system conversino
Function tries to identify a sound in the data.
Normalize the string according to normalization list
Parse a sound from its name
Parse a string and return its features.
Function tries to identify a sound in the data.
Return a dict of keys that differ with another config object.
Given a string add necessary codes to format the string.
Run when a task starts.
Run when a task finishes correctly.
Display info about playbook statistics.
Run when a task is skipped.
Load a dictionary into the model.
Translate the object to native configuration.
Find the necessary file for the given test case.
Given a model, return a representation of the model in a dict.
Given two models, return the difference between them.
POST to URL and get result as a response object.
Get an access token from the provider token URI.
Return query parameters as a dict from the specified URL.
Return a URL with the query component removed.
Handle an internal exception that was caught and suppressed.
Return a response object from the given parameters.
Return a HTTP 302 redirect response object containing the error.
Return a response object from the given JSON data.
Generate authorization code HTTP response.
Generate access token HTTP response from a refresh token.
Generate access token HTTP response.
Get a token response from POST data.
Get authorization object representing status of authentication.
Render link as HTML output tag <a>.
Return an object described by the accessor by traversing the attributes          of context.
Calculate how many days the month spans.
Open the smbus interface on the specified bus.
Read a single byte from the specified device.
Read many bytes from the specified device.
Read a single byte from the specified cmd register of the device.
Write a single byte to the specified device.
Write a single byte to the specified device.
Write many bytes to the specified device. buf is a bytearray
Write a byte of data to the specified cmd register of the device.
Write a buffer of data to the specified cmd register of the device.
calculate the sampling period in seconds
Calculate the adc value that corresponds to a specific bin boundary diameter in microns.
Checks the connection between the Raspberry Pi and the OPC
Turn ON the OPC (fan and laser)
Turn OFF the OPC (fan and laser)
Read the configuration variables and returns them as a dictionary
Read the second set of configuration variables and return as a dictionary.
Set only the Fan power.
Toggle the power state of the laser.
Read the firmware version of the OPC-N2. Firmware v18+ only.
Read the PM data and reset the histogram
Turn ON the OPC (fan and laser)
Turn OFF the OPC (fan and laser)
Read the gain-scaling-coefficient and sample flow rate.
Return the bin boundaries.
Sends a new data frame.
Returns a new instance of self         times is not supported yet.
Returns a new instance of self         times is not supported yet.
Adjusts the time from kwargs to timedelta         **Will change this object**
Find all the timestrings within a block of text.
Check the token and raise an `oauth.Error` exception if invalid.
Creates a Local File Copy on Uploadcare Storage.
Uploads a file and returns ``File`` instance.
Uploads file from given url and returns ``FileFromUrl`` instance.
Uploads file from given url and returns ``File`` instance.
Extract uuid from each item of specified ``seq``.
A common function for building methods of the "list showing".
Iterates over the "iter_content" and draws a progress bar to stdout.
Makes REST API request and returns response as ``dict``.
Get the possible events from settings
TODO: Add code to lpush to redis stack                     rpop when stack hits size 'X'
Encodes data to slip protocol and then sends over serial port
Reads in data from a serial port (length bytes), decodes SLIP packets
Checks the TUN adapter for data and returns any that is found.
Check the serial port for data to write to the TUN adapter.
Helper function to generate formsets for add/change_view.
Pass the submitted value through the sanitizer before returning it.
Get the field sanitizer.
Maxheap version of a heappop.
Maxheap version of a heappop followed by a heappush.
Fast version of a heappush followed by a heappop.
Set the state of Home Mode
Returns the status of Home Mode
Return a list of cameras.
Return a list of cameras matching camera_ids.
Return bytes of camera image.
Set the state of Home Mode
Async function to connect to QTM
Get the QTM version.
Wait for an event from QTM.
Get the settings for the requested component(s) of QTM in XML format.
Get measured values from QTM for a single frame.
Stream measured frames from QTM until :func:`~qtm.QRTConnection.stream_frames_stop`            is called.
Stop streaming frames.
Take control of QTM.
Release control of QTM.
Load a measurement.
Save a measurement.
Load a project.
Set event in QTM.
Get a single analog data channel.
Get a single force data channel.
Get 3D markers with residual.
Get 2D linearized markers.
Wait for any or specified event
>>> replace_ext('one/two/three.four.doc', '.html')     'one/two/three.four.html'     >>> replace_ext('one/two/three.four.DOC', '.html')     'one/two/three.four.html'     >>> replace_ext('one/two/three.four.DOC', 'html')     'one/two/three.four.html'
Determine if ``li`` is the last list item for a given list
Find consecutive li tags that have content that have the same list id.
Build the list structure and return the root list
This returns a table object with all rows and cells correctly populated.
Generate the string data that for this particular t tag.
Remove all tags that have the tag name ``tag``
Callback function that is called everytime a data packet arrives from QTM
Parse response from QTM instances
Extract a name to index dictionary from 6dof settings xml
Find the location of a dataset on disk, downloading if needed.
Load the CIFAR10 image dataset.
Plot an array of images.
Create a plot of weights, visualized as "bottom-level" pixel arrays.
Create a plot of conv filters, visualized as pixel arrays.
Create a callable that generates samples from a dataset.
Encode a text string by replacing characters with alphabet index.
Create a callable that returns a batch of training data.
Add a convolutional weight array to this layer's parameters.
Encode a dataset using the hidden layer activations of our network.
Find a layer output name for the given layer specifier.
Compute R^2 coefficient of determination for a given input.
Return expressions that should be computed to monitor training.
Compute a greedy classification for the given set of data.
Compute class posterior probabilities for the given set of data.
Compute the logit values that underlie the softmax output.
Compute the mean accuracy on a set of labeled data.
Extract a single batch of data to pass to the model being trained.
Load a saved network from a pickle file on disk.
Create a matrix of randomly-initialized weights.
Create a vector of randomly-initialized values.
Get the outputs from a network that match a pattern.
Get the parameters from a network that match a pattern.
Construct common regularizers from a set of keyword arguments.
A list of Theano variables used in this loss.
Build a Theano expression for computing the accuracy of graph output.
Helper method to create a new weight matrix.
Helper method for defining a basic loop in theano.
Create a rate parameter (usually for a recurrent network layer).
Construct an activation function by name.
Train a model using a training and validation set.
Select a random sample of n items from xs.
Train a model using a training and validation set.
Train a model using a training and validation set.
Train a model using a training and validation set.
Add a :ref:`layer <layers>` to our network graph.
Add a :ref:`loss function <losses>` to the model.
Clear the current loss functions from the network and add a new one.
Train our network, one batch at a time.
Train the network until the trainer converges.
Construct a string key for representing a computation graph.
A list of Theano variables for feedforward computations.
A list of Theano variables for loss computations.
Get a parameter from a layer in the network.
Compute a forward pass of all layers from the given input.
Compute a forward pass of the inputs, returning the network output.
Compute R^2 coefficient of determination for a given labeled input.
Save the state of this network to a pickle file on disk.
Load a saved network from disk.
Return a variable representing the regularized loss for this network.
Return expressions that should be computed to monitor training.
Number of "neurons" in this layer's default output.
Create Theano variables representing the outputs of this layer.
Bind this layer into a computation graph.
Resolve the names of inputs for this layer into shape tuples.
Resolve the names of outputs for this layer into shape tuples.
Log some information about this layer.
Log information about this layer's parameters.
Given a list of layers, find the layer output with the given name.
Get a shared variable for a parameter by name.
Helper method to create a new weight matrix.
Helper method to create a new bias vector.
Create a specification dictionary for this layer.
Returns the radial frequency envelope:
Returns the envelope of a LogGabor
Returns the image of a LogGabor
Return true if substring is in string for files     in specified path
Find doublefann library
Run SWIG with specified parameters
Read textgrid from stream.
Sort the tiers given the key. Example key functions:
Add an IntervalTier or a TextTier on the specified location.
Write the object to a file.
Convert the object to an pympi.Elan.Eaf object
Add a point to the TextTier
Add an interval to the IntervalTier.
Remove an interval, if no interval is found nothing happens.
Remove a point, if no point is found nothing happens.
Give all the intervals or points.
Returns the true list of intervals including the empty intervals.
Parse an EAF file
Write an Eaf object to file.
Add an annotation.
Add an entry to a controlled vocabulary.
Add a description to a controlled vocabulary.
Add an external reference.
Add a language.
Add lexicon reference.
Add a linguistic type.
Add a linked file.
Clean up all unused timeslots.
Copies a tier to another :class:`pympi.Elan.Eaf` object.
Extracts the selected time frame as a new object.
Give all child tiers for a tier.
Give the ref annotations between times of the form         ``[(start, end, value, refvalue)]``
Give a list of all reference annotations of the form:         ``[(start, end, value, refvalue)]``
Give a list of all tiers matching a linguistic type.
.. deprecated:: 1.2
.. deprecated:: 1.2
remove all annotations from a tier
Remove all licenses matching both key and value.
Remove all properties matching both key and value.
Remove a reference annotation.
Convert the object to a :class:`pympi.Praat.TextGrid` object.
Get experiment or experiment job.
Get experiment or experiment job statuses.
Get experiment or experiment job resources.
Get experiment or experiment job logs.
Check a polyaxonfile.
Download outputs for job.
Login to Polyaxon.
Show current logged Polyaxon user.
Stop build job.
Get build job resources.
Initialize a new polyaxonfile specification.
Run polyaxonfile specification.
List bookmarked projects for user.
Remove trailing spaces unless they are quoted with a backslash.
Check whether a path is ignored. For directories, include a trailing slash.
Given a list of patterns, returns a if a path matches any pattern.
Returns a whether a path should be ignored or not.
Get experiment group by uuid.
Delete experiment group.
Update experiment group.
Stop experiments in the group.
Set and get the global configurations.
Get the global config values by keys.
Set the global config values.
Activate a user.
Create a tar file based on the list of files passed
Prints the tensorboard url for project/experiment/experiment group.
Start a tensorboard deployment for project/experiment/experiment group.
Check if the current cli version satisfies the server requirements
Print the current version of the cli and platform.
Open dashboard in browser.
Grant superuser role to a user.
Start a notebook deployment for this project.
Install polyaxon using the current config to the correct platform.
Create a new project.
Get info for current project, by project_name, or user/project_name.
List experiment groups for this project.
List experiments for this project.
Download code of the current project.
Will be used to create the console script
Display debug information for the storage
Apply X1 to X9 rules of the unicode algorithm.
Split the storage to run of char types at the same level.
Inject the current working file
Convert compiled .ui file from PySide2 to Qt.py
Append to self, accessible via Qt.QtCompat
Qt.py command-line interface
Add Pyblish to file-menu
Maintain selection during context
Maintain current time during context
Popup with information about how to register a new GUI
Write the *class array* section.
Write the complete dx object to the file.
Read DX field from file.
Return text cast to the correct type or the selected type
Initialize the corresponding DXclass from the data.
Parse the dx file and construct a DX field object with component classes.
Level-0 parser and main loop.
Level-1 parser for comments.
Level-1 parser for objects.
Level-2 parser for gridpositions.
Level-2 parser for gridconnections.
Level-2 parser for arrays.
Level-2 parser for a DX field object.
Set parsername as the current parser and apply it.
Add a new tokenized line from the file to the token buffer.
Populate the instance from the plt file *filename*.
Resample data to a new grid with edges *edges*.
compute/update all derived data
B-spline function over the data grid(x,y,z).
Load saved (pickled or dx) grid and edges from <filename>.pickle
Initialize Grid from gOpenMol plt file.
export density to file using the given format.
Pickle the Grid object
Export the density grid to an OpenDX file.
Returns the coordinates of the centers of all grid cells as an         iterator.
Check if *other* can be used in an arithmetic operation.
Returns a function F(x,y,z) that interpolates any values on the grid.
Populate the instance from the ccp4 file *filename*.
Detect the byteorder of stream `ccp4file` and return format character.
Read header bytes
Get the data for a specific device for a specific end date
Get all devices
Create URL with supplied path and `opts` parameters dict.
Set a url parameter.
Start subscription manager for real time data.
Update home info.
Update home info async.
Return list of Tibber homes.
Retun an instance of TibberHome for given home id.
Update current price info async.
Update current price info.
Update current price info async.
Update current price info.
Return the price unit.
Connect to Tibber and subscribe to Tibber rt subscription.
Return all the values for a single axis of the data.
Draw a constant line on the y-axis with the label
Add a data set to the graph
Calculates the margin to the left of the plot area, setting   border_left.
Calculate the margin in pixels to the right of the plot area,   setting border_right.
Calculate the margin in pixels above the plot area, setting   border_top.
Add pop-up information to a point on the graph.
Calculate the margin in pixels below the plot area, setting   border_bottom.
Add text for a datapoint
Draw the X axis labels
Draw the Y axis labels
Build the execution environment.
Write the data to the output socket.
Store the HTTP status and headers to be sent when self.write is         called.
A Cherrypy wsgiserver-compatible wrapper.
\         Generates a new nickname based on original nickname followed by a         random number
\         When the connection to the server is registered, send all pending         data.
\         Work on a task from the BotnetBot
Send a validation email to the user's email address.
Send a password reset to the user's email address.
Use `token` to allow one-time access to a view.
Delete the user's avatar.
Throttle POST requests only.
Call a docker method in a background thread
Check for a task state like `docker service ps id`
Stop and remove the service
Check lower-cased email is unique.
Check the old password is valid and set the new password.
Set the new password for the user.
Validate if email exists and requires a verification.
Delete auth token when `delete` request was issued.
Disallow users other than the user whose email is being reset.
Validate `email` and send a request to confirm it.
Update token's expiration datetime on every auth action.
Send a notification by email.
Authenticate a user from a token form field
Custom authentication to check if auth token has expired.
Displays bokeh output inside a notebook.
Get widget for param_name
Return name,widget boxes for all parameters (i.e., a property sheet)
Forces a parameter value to be text
Returns True if the cluster is up, False otherwise.
Get the basic info from the current cluster.
Execute a search query and get back search hits that match the query.         `<http://www.elasticsearch.org/guide/reference/api/search/>`_
Scroll a search request created by specifying the scroll parameter.         `<http://www.elasticsearch.org/guide/reference/api/search/scroll/>`_
Clear the scroll request created by specifying the scroll parameter to         search.         `<http://www.elasticsearch.org/guide/reference/api/search/scroll/>`_
Converts bytes to a human readable format
Total Memory Size of Synology DSM
Function to get specific network (eth0, total, etc)
Returns a specific volume
Build and execute login request
Function to handle sessions for a GET request
Function to execute and handle a GET request
Aggregate a `list` of prefixes.
Walk a py-radix tree and aggregate it.
Random coincidence matrix.
Return the value counts given the reliability data.
Compute Krippendorff's alpha.
process and attach data from fortran_cdf.get_multi_*
Read all attribute properties, g, r, and z attributes
Read all CDF z-attribute data
process and attach data from fortran_cdf.get_multi_*
Creates the context for a specific request.
The cached token of the current tenant.
Return a dictionary of all global_settings values.
Initialize an empty JSON file.
A simpler version of data to avoid infinite recursion in some cases.
Handle the retrieval of the code
Helper method to get a value from the config
Migrates the old config file format to the new one
Start the webserver that will receive the code
Wait until the user accepted or rejected the request
Request new access information from reddit using the built in webserver
Check whether the tokens are set and request new ones if not
Set the token on the Reddit Object again
Check if plugin is configured.
Extract date part from run id
Remove all keys with Nones as values
Extracts Schema information from Iglu URI
Create an Elasticsearch field name from a schema string
Convert a Snowplow enriched event TSV into a JSON
Extract the used view from the TemplateResponse context (ContextMixin)
Print the entire template context
Print a set of variables
Highlight common SQL words in a string.
Briefly print the dictionary keys.
Apply some HTML highlighting to the contents.     This can't be done in the
Expand a _("TEST") call to something meaningful.
Call a method, but     :param func:     :type func:     :param extra_exceptions:     :type extra_exceptions:     :return:     :rtype:
Format an item in the result.         Could be a dictionary key, value, etc..
Send a verification email for the email address.
Send a notification about a duplicate signup.
Mark the instance's email as verified.
Determine if the confirmation has expired.
Send a verification email to the user.
Create a new user instance.
Create a new email and send a confirmation to it.
Update the instance the serializer is bound to.
Validate the provided email address.
Validate the provided 'is_primary' parameter.
Validate the provided data.
Validate the provided confirmation key.
Send out a password reset if the provided data is valid.
Reset the user's password if the provided information is valid.
Validate the provided reset key.
Create a new user from the data passed to the serializer.
Validate the provided email address.
Create a new email address.
Handle execution of the command.
Get a user by their ID.
Attempt to authenticate a set of credentials.
Save the provided data using the class' serializer.
Return an HTML tree block describing the given object.
Return the dict key or attribute name of obj which refers to         referent.
Parse the next token in the stream.
Walk the object tree, pretty-printing each branch.
Walk the object tree, pretty-printing each branch.
Extracts text from `content` meant for database indexing. `content` is     some LaTeX code.
Set where to look for input files when encountering the ``\\input`` or         ``\\include`` macro.
Return the textual representation of the given `node`.
u"""     Encode a UTF-8 string to a LaTeX snippet.
List all files in all locations.
List all files in all app storages.
Looks for files in the app directories.
Find a requested media file in an app's media fixtures locations.
Set instance variables based on an options dict
Perform the bulk of the work of collectmedia.
Deletes the given relative path using the destination storage backend.
Checks if the target file should be deleted if it already exists
Reorder a list to match target by moving a sequence at a time.
Move a sub sequence in a list
Unpack `\\uNNNN` escapes in 's' and encode the result as UTF-8
Set the current space to Space ``name`` and return it.
Create a child space.
Create a child space from an module.
Create a child space from an module.
Create a child space from an Excel range.
Create a new child space.
Create a node from arguments and return it
Decorator/function to create cells from Python functions.
Get a modelx object from its full name.
Get node from object name and arg string
Get and/or set the current model.
Get and/or set the current space of the current model.
Hook to override default showwarning.
Custom showtraceback for monkey-patching IPython's InteractiveShell
Not Used: Custom exception hook to replace sys.excepthook
if maxlen > 0, the message is shortened to maxlen traces.
Monkey patch shell's error handler.
Restore default IPython showtraceback
Restore Python settings to the original states
Retrieve an object by its absolute name.
Alias to :func:`get_tree`.
Display the model tree window.
Get impls from their interfaces.
Update all LazyEvals in self
Make a copy of itself and return it.
Return a :class:`CellNode` object for the given arguments.
Return the value of the cells.
Reorder a list to match target by moving a sequence at a time.
Move a sub sequence in a list
Convert column name to index.
Read values from an Excel range into a dictionary.
Get range from a workbook.
Calculate the Method Resolution Order of bases using the C3 algorithm.
Create a new code object by altering some of ``code`` attributes
Replace local variables with free variables
Remove the last redundant token from lambda expression
Find the first FuncDef ast object in source
Extract parameters from a function definition
Extract names from a function definition
Replace function name
True if only one lambda expression is included
Reload the source function from the source module.
Get long description from README.
Convert the cells in the view into a DataFrame object.
Create a cells in the space.
Create a cells from a module.
Create multiple cells from an Excel range.
Retrieve an object by a dotted name relative to the space.
Create or get the base space from a list of spaces
Create a new dynamic root space.
Create a dynamic root space
Create multiple cells from an Excel range.
Delete a space.
Convert multiple cells to a frame.
Convert a CellImpl into a Series.
Remove all descendants of(reachable from) `source`.
Remove all nodes with `obj` and their descendants.
Return nodes with `obj`.
Rename the model itself
Rename self. Must be called only by its system.
Clear values and nodes calculated from `source`.
Clear values and nodes of `obj` and their dependants.
Retrieve an object by a dotted name relative to the model.
Check if C3 MRO is possible with given bases
Get all the boards for this organisation. Returns a list of Board s.
Get all members attached to this organisation. Returns a list of         Member objects
Get information for this list. Returns a dictionary of values.
Create a card for this list. Returns a Card object.
Returns a dictionary value
Parses option_settings as they are defined in the configuration file
Creates an archive from a directory and returns     the file that was created.
Adds configuration files to an existing archive
Creats an application and sets the helpers current         app_name to the created application
Creats an application and sets the helpers current         app_name to the created application
Returns whether or not the given app_name exists
Returns whether or not the given environment exists
Updates an application version
Returns an environment name for the given cname
Deploys a version to an environment
Describes events from the given environment
Get all information for this Label. Returns a dictionary of values.
Update the current label's name. Returns a new Label object.
Update the current label. Returns a new Label object.
Get information for this card. Returns a dictionary of values.
Get list information for this card. Returns a List object.
Get the checklists for this card. Returns a list of Checklist objects.
Adds a comment to this card by the current user.
Add a label to this card, from a dictionary.
Add an existing label to this card.
Add a member to this card. Returns a list of Member objects.
Get Information for a member. Returns a dictionary of values.
Create a new board. name is required in query_params. Returns a Board         object.
Enable singledispatch for class methods.
Deploys to an environment
Create a ChecklistItem object from JSON object
adds arguments for the deploy command
Deploys to an environment
Get all information for this board. Returns a dictionary of values.
Get the lists attached to this board. Returns a list of List objects.
Get a Card for a given card id. Returns a Card object.
Get the checklists for this board. Returns a list of Checklist objects.
Update this board's information. Returns a new board.
Create a list for a board. Returns a new List object.
Create a label for a board. Returns a new Label object.
Get all information for this Checklist. Returns a dictionary of values.
Get the items for this checklist. Returns a list of ChecklistItem objects.
Update the current checklist. Returns a new Checklist object.
Add an item to this checklist. Returns a dictionary of values of new         item.
Rename the current checklist item. Returns a new ChecklistItem object.
Set the state of the current checklist item. Returns a new ChecklistItem object.
Describes recent events for an environment.
Adds the API key and user auth token to the query parameters
Check HTTP reponse for known errors
Build the URI for the API call.
Create an Organisation object from a JSON object
Create Board object from a JSON object
Create Label object from JSON object
Create List object from JSON object
Create a Card object from JSON object
Create a Checklist object from JSON object
Create a ChecklistItem object from JSON object
Create a Member object from JSON object
adds arguments for the deploy command
Deploys to an environment
Gets a word which removes insignificant letters at the end of the given     word::
Picks only a coda from a decimal.
Write the password in the file.
Use an integer list to split the string     contained in `text`.
Main command line interface.
Create the cipher object to encrypt or decrypt a payload.
check for a valid scheme
Connect to MQTT broker
Connect to MQTT broker
Send a CONNECT control packet.
Handles CONNACK packet from the server
Encode an UTF-8 string into MQTT format.      Returns a bytearray
Encode and store a CONNACK control packet.
Decode a CONNACK control packet.
Encode and store a SUBACK control packet.
Encode and store an UNSUBCRIBE control packet
Decode a UNSUBACK control packet.
Encode and store an UNSUBACK control packet
Decode a PUBREL control packet.
Send request to API.
Factory for creating a permission for an admin `deposit-admin-access`.
Create Invenio-Deposit-UI blueprint.
Create a new deposit identifier.
Extract actions from class.
Check if a given record is indexed.
Refresh the list of blocks to the disk, collectively
Create error handlers on blueprint.
Create Invenio-Deposit-REST blueprint.
Handle the sort of the files through the PUT deposit files.
Load default location.
Load minter from PIDStore registry based on given value.
Load schema from JSONSchema registry based on given value.
Build a JSON Flask response using the given data.
Serialize a object.
JSON Files Serializer.
JSON Files/File serializer.
Index the record after publishing.
Check that deposit has a defined status (default: draft).
Preserve fields in deposit.
Return an instance of deposit PID.
Convert deposit schema to a valid record schema.
Convert record schema to a valid deposit schema.
Store changes on current instance in database and index it.
Create a deposit.
Publish new deposit.
Publish the deposit after for editing.
Publish a deposit.
Update selected keys.
Clear only drafts.
Update only drafts.
List of Files inside the deposit.
Converts a reStructuredText into its node
API call to get a specific log entry
API call to get a specific log entry
API call to get a list of templates
API call to get a specific template
[DECPRECATED] API call to create an email
API call to create a template
API call to create a new locale and version of a template
API call to create a new version of a template
API call to update a template version
API call to get list of snippets
API call to get a specific Snippet
API call to create a Snippet
Make a dictionary with filename and base64 file data
API call to send an email
Return instances of all other tabs that are members of the tab's         tab group.
Process and prepare tabs.
Creates a db file with the core schema.
Fit MeanShift clustering algorithm to data.
Sort clusters by the concentration of a particular analyte.
Return a datetime oject from a string, with optional time format.
Returns the total number of data points in values of dict.
Returns total length of analysis.
Converts analytes in format '27Al' to 'Al27'.
Converts analytes in format 'Al27' to '27Al'.
Copy all csvs in nested directroy to single directory.
Convert boolean array into a 2D array of (start, stop) pairs.
Generate boolean array from list of limit tuples.
Combine elements of ddict into an array of shape (len(ddict[key]), len(keys)).
Identify clusters using Meanshift algorithm.
Identify clusters using K - Means algorithm.
Returns list of SRMS defined in the SRM database
Read LAtools configuration file, and return parameters as dict.
Creates a copy of the default SRM table at the specified location.
Adds a new configuration to latools.cfg.
Change the default configuration.
Return boolean arrays where a >= and < threshold.
Exclude all data after the first excluded portion.
'Defragment' a filter.
Set the 'focus' attribute of the data file.
Plot a detailed autorange report for this sample.
Transform boolean arrays into list of limit pairs.
Correct spectral interference.
Divide all analytes by a specified internal_standard analyte.
Apply calibration to data.
Function for calculating the ablation time for each         ablation.
Calculate local correlation between two analytes.
Plot the local correlation between two analytes.
Make new filter from combination of other filters.
Optimise data selection based on specified analytes.
Plot analytes as a function of Time.
Plot analytes gradients as a function of Time.
Plot analytes against each other.
Plot the results of a group of filters in a crossplot.
Plot analytes as a function of Time.
Plot analytes gradients as a function of Time.
Plot analytes against each other.
Plot histograms of all items in dat.
Function for visualising the autorange mechanism.
Plot the calibration lines between measured and known SRM values.
Fetch LAtools reference data from online repository.
Automatically separates signal and background in an on/off data stream.
Convenience factory function for csv reader.
Rewrite a dsv file, filtering the rows.
generate single escape sequence mapping.
Remove duplicates from the stack in first-seen order.
Calculate the standard error of a.
Despikes data with exponential decay and noise filters.
Correct spectral interference.
Calculates the ratio of all analytes to a single analyte.
Calibrates the data to measured SRM values.
Creates a subset of samples, which can be treated independently.
Calculate a gradient threshold filter to the data.
Create a clustering classifier based on all samples, or a subset.
Apply a clustering classifier based on all samples, or a subset.
Plot the local correlation between two analytes.
Prints the current status of filters for specified samples.
Clears (deletes) all data filters.
Remove 'fragments' from the calculated filter
Report how many data are removed by the active filters.
Optimise data selection based on specified analytes.
Plot the result of signal_optimise.
Set the 'focus' attribute of the data file.
Plot a histogram of the gradients in all samples.
Plot analytes against each other.
Plot analyte gradients against each other.
Plot histograms of analytes.
Plot analytes as a function of time.
Plot analyte gradients as a function of time.
Plot filter reports for all filters that contain ``filt_str``         in the name.
Function for visualising per-ablation and per-sample means.
Save analysis.lalog in specified location
Split one long analysis file into multiple smaller ones.
Plot a fitted PCA, and all components.
Remove mean and divide by standard deviation, using bayes_kvm statistics.
Remove median, divide by IQR.
Optimise data selection based on specified analytes.
Plot the result of signal_optimise.
Apply standard deviation filter to remove anomalous values.
Clear all filters.
Remove unused filters.
Turn on specified filter(s) for specified analyte(s).
Make filter for specified analyte(s).
Identify a filter by fuzzy string matching.
Make filter from logical expression.
Make logical expressions describing the filter(s) for specified analyte(s).
Flexible access to specific filter using any key format.
Extract filter components for specific analyte(s).
Get info for all filters.
Function for logging method calls and parameters
Write and analysis log to a file.
Reads an latools analysis.log file, and returns dicts of arguments.
Dump a single grid to its ZINC representation.
Parse the given Zinc text and return the equivalent data.
Append the item to the metadata.
Append the items to the metadata.
Construct a regular polygon.
Construct a circle.
Create a |Shape| from a dictionary specification.
Resize the shape by a proportion (e.g., 1 is unchanged), in-place.
Rotate the shape, in-place.
Flip the shape in the x direction, in-place.
Flip the shape in the y direction, in-place.
Flip the shape in an arbitrary direction.
Draw the shape in the current OpenGL context.
Update the shape's position by moving it forward according to its velocity.
Retrieve the Haystack timezone
Determine an appropriate timezone for the given date/time object
Parse the incoming grid.
Parse a Project Haystack scalar in ZINC format.
Add an item at a specific location, possibly replacing the         existing item.
Dump the given grids in the specified over-the-wire format.
Parse a file-like object or string.
Encrypts file with gpg and random generated password
Return the link to the Jupyter nbviewer for the given notebook url
The string for creating a code example for the gallery
get the output file with the specified `ending`
Process the notebook and create all the pictures and files
Create the rst file from the notebook node
Create the python script from the notebook node
Create the rst string to download supplementary data
Create the thumbnail for html output
Save the thumbnail image
Create the rst files from the input directories in the         :attr:`in_dir` attribute
Method to recursivly process the notebooks in the `base_dir`
Class method to create a :class:`Gallery` instance from the         configuration of a sphinx application
Return the url corresponding to the given notebook file
:param request:     :return:
:param request:     :return:
Decrypts file from entered links
Set the value and returns *True* or *False*.
Creates a Swagger definition from a colander schema.
Creates a list of Swagger params from a colander request schema.
Create a list of Swagger path params from a cornice service path.
Store a parameter schema and return a reference to it.
Store a response schema and return a reference to it.
Build the Swagger "paths" and "tags" attributes from cornice service         definitions.
Extract path object and its parameters from service definitions.
Extract swagger operation details from colander view definitions.
Extract schema from view args and transform it using         the pipeline of schema transformers
Convert node schema into a parameter object.
Merge b into a recursively, without overwriting values.
returns all translatable fields in a model (including superclasses ones)
Process the source image through the defined processors.
Return all thumbnails in a dict format.
Creates and return a thumbnail of a given size.
Deletes a thumbnail of a given size
Simulate an incoming message
Register a virtual subscriber which receives messages to the matching number.
Register a provider on the gateway
Send a message object
Create a viewset method for the provided `transition_name`
View wrapper for JsonEx responses. Catches exceptions as well
Forward an object to clients.
Refresh the project from the original cookiecutter template.
Perform continuous integration tasks.
Return project's metadata as a dict.
Generate a number in the range [0, num_buckets).
Get erc20 information (`name`, `symbol` and `decimals`)         :param erc20_address:         :return: Erc20_Info
Send tokens to address         :param to:         :param amount:         :param erc20_address:         :param private_key:         :return: tx_hash
Return a dict of stats.
Return a list of personalities readed from the input line.
Return a dict of arrays.
Return a dict of components in the line.
Search for the oldest event timestamp.
Aggregate and return dictionary to be indexed in ES.
Calculate statistics aggregations.
List the aggregation's bookmarks.
Appends towrite to the write queue
Reads a given number of bytes
Return value on success, or raise exception on failure.
Comsume all pending events.
Send a message to this actor. Asynchronous fire-and-forget.
Get the anonymization salt based on the event timestamp's day.
Read settings from file     :param configfile:
Register elasticsearch templates for events.
Send a message to `actor` and return a :class:`Future` holding a possible     reply.
Run the actual request
Send and log plain text error reply.         :param code:         :param message:
Preprocess an event by anonymizing user information.
Process events queue.
num_datapoints = min(duration/resolution, limit)
Reads a given number of bytes
Parse a raw query string into fields         :param raw_query_string: Raw InfluxDB query string
Parse tokens of select query         :param tokens: A list of InfluxDB query tokens
Parse tokens of list query         :param tokens: A list of InfluxDB query tokens
Parse tokens of delete query         :param tokens: A list of InfluxDB query tokens
Parse the date range for the query
Extract date from string if necessary.
Validate query arguments.
Build the elasticsearch query.
Build the result using the query result.
Validate query arguments.
Build the elasticsearch query.
Build the result using the query result.
Build a file-download event.
Build a record-view event.
Check if we can write to the given file
Show the list of available rules and quit     :return:
Start the http proxy     :param config:     :return:
Verifies and sends message.
Adds an attachment to the message.
Records all messages. Use in unit tests for example::
Checks if the user is rooted.
Build nbextension cmdclass dict for the setuptools.setup method.
:param middleware: Middleware in order of execution
Load a configuration module and return a Config
Register resources with the ResourceManager.
Raises an exception if value for ``key`` is empty.
Setup the context. Should only be called by         __enter__'ing the context.
Teardown a Resource or Middleware.
Hook to setup this service with a specific DataManager.
Count the number of nodes in each subgraph induced by an annotation.
Build a DatafFame to show the overlap between different sub-graphs.
Render the graph as JavaScript in a Jupyter Notebook.
Render the graph as an HTML string.
Generate the annotations JSON for Ideogram.
Remove nodes with the given function and namespace.
Preprocess the excel sheet
Preprocess the excel file.
Writes the NeuroMMSigDB excel sheet to BEL
Extract an undirected graph of only correlative relationships.
Return a set of all triangles pointed by the given node.
Get a set of triples representing the 3-cycles from a directional graph.
Apply Jens' transformation (Type 1) to the graph.
Apply Jens' Transformation (Type 2) to the graph.
Summarize the stability of the graph.
Flatten list abundances.
Expand all list abundances to simple subject-predicate-object networks.
Helper to deal with cartension expansion in unqualified edges.
Return nodes that are both in reactants and reactions in a reaction.
Expand all reactions to simple subject-predicate-object networks.
Insert a graph and return the resulting ORM object (mocked).
Get several graphs by their identifiers.
Prepare a citation data dictionary from a graph.
Counts the citations in a graph based on a given filter
Group the citation counters by subgraphs induced by the annotation.
Count the number of publications of each author to the given graph.
Count the number of citations from each year.
Create a citation timeline counter from the graph.
Complete the Counter timeline.
Count the confidences in the graph.
Overwrite all PubMed citations with values from NCBI's eUtils lookup service.
Update the context of a subgraph from the universe of all knowledge.
Adds a highlight tag to the given nodes.
Returns if the given node is highlighted.
Removes the highlight from the given nodes, or all nodes if none given.
Adds a highlight tag to the given edges.
Remove the highlight from the given edges, or all edges if none given.
Highlight all nodes/edges in the universe that in the given graph.
Remove the highlight from all nodes/edges in the graph that are in the subgraph.
Get the out-edges to the given node that are causal.
Return a set of all nodes that have an in-degree of 0.
Returns a set of all ABUNDANCE nodes that have an causal out-degree of 0.
Get top centrality dictionary.
Remove all values that are zero.
Collapse all of the given functions' variants' edges to their parents, in-place.
Collapse pairs of nodes with the given namespaces that have the given relationship.
Collapse pairs of nodes with the given namespaces that have orthology relationships.
Collapse to a graph made of only causal gene/protein edges.
Output the HBP knowledge graph to the desktop
Return if the node is an upstream leaf.
Check if the node is both a source and also has an annotation.
Prune unannotated nodes on the periphery of the sub-graph.
Remove all leaves and source nodes that don't have weights.
Generate a mechanistic sub-graph upstream of the given node.
Generate a mechanistic sub-graph for each biological process in the graph using :func:`generate_mechanism`.
Takes a graph stratification and runs neurommsig on each
Calculate the composite NeuroMMSig Score for a given list of genes.
Perform a single run (realization) over all microstates and return the     canonical cluster statistics
Perform a number of runs
Get the set of possible successor edges peripheral to the sub-graph.
Get the set of possible predecessor edges peripheral to the sub-graph.
Count the source nodes in an edge iterator with keys and data.
Count the target nodes in an edge iterator with keys and data.
Get a summary dictionary of all peripheral nodes to a given sub-graph.
Add all of the members of the complex abundances to the graph.
Adds all of the members of the composite abundances to the graph.
Adds all of the reactants and products of reactions to the graph.
Add the reference nodes for all variants of the given function.
Enrich the sub-graph with the unqualified edges from the graph.
Edges between entities in the sub-graph that pass the given filters.
Add causal edges between entities in the sub-graph.
Return the set of all namespaces with incorrect names in the graph.
Get all namespaces that are used in the BEL graph aren't actually defined.
Return the set of all incorrect names from the given namespace in the graph.
Get the names from a namespace that wasn't actually defined.
Group the errors together for analysis of the most frequent error.
Get the (n) most common errors in a graph.
Iterate over pairs in list s -> (s0,s1), (s1,s2), (s2, s3), ...
Count the number of elements in each value of the dictionary.
Count the number of elements in each value (can be list, Counter, etc).
Calculate the tanimoto set similarity.
Calculate the tanimoto set similarity using the minimum size.
Return a dictionary of distances keyed by the keys in the given dict.
Return a distance matrix keyed by the keys in the given dict.
r"""Calculate an alternative distance matrix based on the following equation.
Prepares C3 JSON for making a bar chart from a Counter
Prepare C3 JSON string dump for a time series.
Calculate the betweenness centrality over nodes in the graph.
Iterate over all possible circulations of an ordered collection (tuple or list).
Check if a pair of nodes has any contradictions in their causal relationships.
Return if the set of BEL relations contains a contradiction.
Prepare the (internal) percolation graph from a given graph
r'''     Generate statistics for a single run
Compute the average size of the largest cluster
Compute the average moments of the cluster size distributions
Compute the binomial PMF according to Newman and Ziff
Render the graph as an HTML string.
Create a summary dictionary.
Get the pair as a tuple of BEL/hashes.
Get the triple as a tuple of BEL/hashes.
Returns the effect from the root to the target nodes represented as {-1,1}
Return the highest ranked edge from a multiedge.
Group the nodes occurring in edges by the given annotation.
Make an expand function that's bound to the manager.
Make a delete function that's bound to the manager.
Create an excel sheet ready to be used in SPIA software.
Return set of HGNC names from Proteins/Rnas/Genes/miRNA, nodes that can be used by SPIA.
Build an adjacency matrix for each KEGG relationship and return in a dictionary.
Populate the adjacency matrix.
Export a SPIA data dictionary into an Excel sheet at the given path.
Export a SPIA data dictionary into a directory as several TSV documents.
Export the graph to a SPIA Excel sheet.
Overlays tabular data on the network
Load and pre-process a differential gene expression data.
Run the reverse causal reasoning algorithm on a graph.
Thinly wraps :func:`export_namespace` for an iterable of namespaces.
Helps remove extraneous whitespace from the lines of a file
Get gene info from Entrez.
Write a boilerplate BEL document, with standard document metadata, definitions.
Induce a sub-graph on the nodes that pass the given predicate(s).
Get a sub-graph induced over all nodes matching the query string.
Get the giant component of a graph.
Get a random graph by inducing over a percentage of the original nodes.
Get a random graph by keeping a certain percentage of original edges.
Shuffle the node's data.
Shuffle the relations.
Check if all edges between two nodes have the same relation.
Return if all edges are consistent in a graph. Wraps :func:`pybel_tools.utils.is_edge_consistent`.
Rewire a graph's edges' target nodes.
Check if the source and target nodes are the same.
Check if pmod of source causes activity of target.
Check if the degradation of source causes activity of target.
Check if the translocation of source causes activity of target.
Print a summary of the number of edges passing a given set of filters.
Fail for edges with citations whose references are one of the given PubMed identifiers.
Pass for nodes that have the given namespace.
Pass for nodes that have one of the given namespaces.
Search for nodes with the given namespace(s) and whose names containing a given string(s).
Assign if a value is greater than or less than a cutoff.
Calculate the one-sided probability of getting a value more extreme than the distribution.
Calculates a graph's concordance as well as its statistical probability.
Returns the concordance scores for each stratified graph based on the given annotation
Returns the results of concordance analysis on each subgraph, stratified by the given annotation.
Get a mapping from drugs to their list of gene.
Run EpiCom analysis on many graphs.
Convert the Alzheimer's and Parkinson's disease NeuroMMSig excel sheets to BEL.
Remove all edges between node pairs with inconsistent edges.
Gets all walks under a given length starting at a given node
Matches a simple metapath starting at the given node
Build a database of scores for NeuroMMSig annotated graphs.
Calculate the scores over all biological processes in the sub-graph.
Get the average score over multiple runs.
Return an iterable over all nodes that are leaves.
Calculate the ratio of in-degree / out-degree of a node.
Iterate over all nodes without a score.
Remove a random in-edge from the node with the lowest in/out degree ratio.
Remove random edges until there is at least one leaf node.
Calculate the score for all leaves.
Return the final score for the target node.
Calculate the new score of the given node.
Evolve a single run over all microstates (bond occupation numbers)
Print a summary of the number of nodes passing a given set of filters.
Build a filter that only passes on nodes in the given list.
Build a filter that fails on nodes in the given list.
Build a filter that fails on nodes of the given function(s).
Returns all variants of the given node.
Build a dictionary of {node pair: set of edge types}.
Return a histogram of the different types of relations present in a graph.
Get annotation/value pairs for values for whom the search string is a substring
Count in how many edges each annotation appears in a graph
Add the same edge, but in the opposite direction if not already present.
Build a template BEL document with the given PubMed identifiers.
Output PubMed identifiers from a graph to a stream.
The group index with respect to wavelength.
Login on backend with username and password
Get a specific resource list
Get a specific resource by name
Delete a specific resource by name
Create or update a specific resource
Log into the backend and get the token
Connect to alignak backend and retrieve all available child endpoints of root
Get all items in the specified endpoint of alignak backend
Method to update an item
Method to delete an item or all items
Get count of rows in table object.
Select multiple row
Select row index
Select last row
Verify table cell value with given text
Verify table cell value with given text
Verify partial table cell value
Get all accessibility application name that are currently running
Start memory and CPU monitoring, with the time interval between         each process scan
Stop memory and CPU monitoring
Get list of items in given GUI.
Get object properties.
Get object property value.
Get all states of given object
Checks whether a window or component exists.
Wait till a window or component exists.
Wait till a window does not exist.
Checks whether a window or component exists.
Check whether an object state is enabled or not
Verify check item.
Get access key of given object
Returns True if path1 and path2 refer to the same file.
Get the clipboard data ('Paste').
Set the clipboard data ('Copy').
Clear contents of general pasteboard.
Get LDTP format accessibile name
Match given string, by escaping regex characters
Select (click) a menu item.
Check a menu item exist.
Verify a menu item is enabled
Verify a menu item is checked
Check (click) a menu item.
Get a list of the running applications.
Get the current frontmost application.
Get a random app that has windows.
Launch the application with the specified bundle ID
Launch app with a given bundle path.
Terminate app with a given bundle ID.         Requires 10.6.
Add keypress to queue.
Send one character with no modifiers.
Check whether given keyboard character is a single character.
Send one character with the given modifiers pressed.
Convenience method to wait for focused element to change         (to element matching kwargs criteria).
Retrieve a list of actions supported by the object.
Perform the specified action.
Method which indicates if the object matches specified criteria.
Perform _match but on another object, not self.
Return a list of all children that match the specified criteria.
Return a list of all children (recursively) that match the specified         criteria.
Get the base application UIElement.
Return the specified menu item.
Activate the application (bringing menus and windows forward).
Return the bundle ID of the application.
Return the specified menu item.
Return the specified item in a pop up menu.
Double-click and drag the left mouse button without modifiers         pressed.
Click the left mouse button without modifiers pressed.
Click the right mouse button without modifiers pressed.
Click the left mouse button with modifiers pressed.
Click the right mouse button with modifiers pressed.
Click the left mouse button and drag object.
Click the left mouse button with modifiers pressed.
Generic wait for a UI event that matches the specified         criteria to occur.
Convenience method to wait for creation of some UI element.
Convenience method to wait for a window with the given name to         disappear.
Convenience method to wait for value attribute of given element to         change.
Convenience method to wait for focused element to change (to new         element given).
Convenience method to wait for focused window to change
Create a junction at link_name pointing to source.
call a function on the main thread (async)
call a function on the main thread after a delay (async)
Press key. NOTE: keyrelease should be called
Release key. NOTE: keypress should be called before this
Logs the message in the root logger with the log level
On window create, call the function with given arguments
Register at-spi event
Press scrollbar down with number of iterations
Press scrollbar up with number of iterations
Press scrollbar right with number of iterations
Press scrollbar left with number of iterations
Get all combo box item
Authenticate the gmusicapi Mobileclient instance.
Get playlist information of a user-generated Google Music playlist.
Create song list from a user-generated Google Music playlist.
Returns a standardized column header.
Build a file path from *paths* and return the contents.
Extract (float) value of dependent tag or None if absent.
Send a JSON request.
Return a list of registered projects.
Return a PYBOSSA Project for the project_id.
Return a list with matching project arguments.
Create a project.
Update a project instance.
Delete a Project with id = project_id.
Return a list of registered categories.
Return a PYBOSSA Category for the category_id.
Return a list with matching Category arguments.
Create a Category.
Update a Category instance.
Delete a Category with id = category_id.
Return a list of tasks for a given project ID.
Return a list of matched tasks for a given project ID.
Create a task for a given project ID.
Update a task for a given task ID.
Delete a task for a given task ID.
Return a list of task runs for a given project ID.
Return a list of matched task runs for a given project ID.
Delete the given taskrun.
Return a list of results for a given project ID.
Return a list of matched results for a given project ID.
Update a result for a given result ID.
Return the object without the forbidden attributes.
Create a helping material for a given project ID.
Return a list of helping materials for a given project ID.
Return a list of matched helping materials for a given project ID.
Update a helping material for a given helping material ID.
Authenticate the gmusicapi Musicmanager instance.
Download Google Music songs.
Upload local songs to Google Music.
Split data into lines where lines are separated by LINE_TERMINATORS.
Seek next line relative to the current file position.
Return the last lines of the file.
Return the top lines of the file.
Iterator generator that returns lines as data is added to the file.
Convert Unix path from Cygwin to Windows path.
Replace mutagen metadata field list values in mutagen tags with the first list value.
Convert number field values split by a '/' to a single number value.
Compare two song collections to find missing songs.
Exclude file paths based on regex patterns.
Check a song metadata field value for a pattern.
Match a local file against a set of metadata filters.
Generate a filename for a song based on metadata.
Create directory structure and file name based on metadata template.
Walk a directory tree with configurable depth.
Returns string representation of format field.
Returns string representation of sample-format values.
Appends a new format tag-value for all samples.
Load songs from local filepaths.
Load playlists from local filepaths.
Load songs from local playlist.
Prepare the lines read from the text file before starting to process         it.
Extract an alphabetically sorted list of elements from the compounds of         the material.
Add an assay to the material.
Create a complete copy of self.
Determine the assay of self.
Get the masses of elements in the package.
Determine the masses of elements in the package.
Calculate the density at the specified temperature.
Calculate the density at the specified temperature, pressure, and         composition.
Adds an error to the given product's field
Yields a sequence of (product, quantity) tuples from the         cleaned form data.
Set the parent path and the path from the new parent path.
Create a sub account in the account.
Remove an account from the account's sub accounts.
Create an account in the general ledger structure.
Returns the account and all of it's sub accounts.
Validates whether the accounts in a list of account names exists.
Returns a report of this class.
Create a transaction in the general ledger.
Generate a transaction list report.
Generate a transaction list report.
Generate a transaction list report.
Calculate a path relative to the specified module file.
Calculate the local Nusselt number.
Calculate the average Nusselt number.
Calculate the local heat transfer coefficient.
Calculate the average heat transfer coefficient.
Prepare the lines read from the text file before starting to process         it.
Add an assay to the material.
Create a MaterialPackage based on the specified parameters.
Create a complete copy of self.
Create a template csv file for a data set.
Generate URL on the modularized endpoints and url parameters
Used to instantiate a regular HTTP request object
Creates a form for specifying fields from a model to display.
Calculate dynamic viscosity at the specified temperature and         composition:
Calculate dynamic viscosity at the specified temperature and         composition:
Calculate dynamic viscosity at the specified temperature and         composition:
Calculate the alpha value given the material state.
Sends an e-mail to the given address.
Calculate the enthalpy at the specified temperature and composition         using equation 9 in Merrick1983b.
Returns true if the condition passes the filter
Create an entity and add it to the model.
Remove an entity from the model.
Prepare the model for execution.
Execute the model.
Extract an alphabetically sorted list of elements from the         material's compounds.
Add an assay to the material.
Create a MaterialPackage based on the specified parameters.
Create a MaterialStream based on the specified parameters.
Calculate the enthalpy of the package at the specified temperature.
Calculate the temperature of the package given the specified         enthalpy using a secant algorithm.
Set the enthalpy of the package to the specified value, and         recalculate it's temperature.
Set the temperature of the package to the specified value, and         recalculate it's enthalpy.
Create a complete copy of the package.
Determine the mass of the specified compound in the package.
Determine the mole amounts of all the compounds.
Determine the mole amount of the specified compound.
Determine the sum of mole amounts of all the compounds.
Determine the masses of elements in the package.
Determine the masses of elements in the package and return as a         dictionary.
Determine the mass of the specified elements in the package.
Calculate the enthalpy flow rate of the stream at the specified         temperature.
Calculate the enthalpy of formation of the dry-ash-free (daf) component of the coal.
Set the temperature of the stream to the specified value, and         recalculate it's enthalpy.
Create a complete copy of the stream.
Determine the mass flow rate of the specified compound in the stream.
Determine the amount flow rates of all the compounds.
Determine the amount flow rate of the specified compound.
Determine the sum of amount flow rates of all the compounds.
Determine the mass flow rates of elements in the stream.
Determine the mass flow rate of the specified elements in the stream.
Calculate the Grashof number.
Calculate the Reynolds number.
Calculate the Ralleigh number.
Calculate the Nusselt number.
Calculate the Sherwood number.
Calculates all of the discounts available for this product.
Applies the best discounts on the given product, from the given         discounts.
Returns the data rows for the table.
Creates an instance of self.form_type using request.GET
Renders the reports based on data.content_type's value.
Summarises paid items and payments.
Shows the history of payments into the system
Shows all of the credit notes that have been generated.
Summarises the usage of a given discount.
Shows all of the credit notes in the system.
Shows all of the invoices in the system.
Returns a list of all attendees.
Lists attendees for a given product/category selection along with     profile data.
Prepare the activity for execution.
Create a sub component in the business component.
Remove a sub component from the component.
Retrieve a child component given its name.
Add an activity to the component.
Retrieve an activity given its name.
Prepare the component for execution.
Execute the component at the current clock cycle.
Prepare the entity for execution.
Execute the entity at the current clock cycle.
Calculate the amounts from the specified compound masses.
Calculate the mole fractions from the specified compound masses.
Calculate the masses from the specified compound amounts.
Calculate the mole fractions from the specified compound amounts.
Determine the mass fraction of an element in a chemical compound.
Determine the set of elements present in a list of chemical compounds.
Determine the molar mass of a chemical compound.
Determine the stoichiometry coefficient of an element in a chemical     compound.
Determine the stoichiometry coefficients of the specified elements in     the specified chemical compound.
Add an assay to the material.
Create a MaterialPackage based on the specified parameters.
Adds the categories that the user does not currently have.
Returns the number of items purchased for this user (sum of quantities).
Usage: {% include_if_exists "head.html" %}
Execute the activity at the current clock cycle.
Prepare the activity for execution.
Execute the activity at the current clock cycle.
View for editing an attendee's profile
Runs the checkout process for the current cart.
Allows staff to extend the reservation on a given user's cart.
Allows staff to send emails to users based on their invoice status.
Renders a single user's badge.
Get the datetime at a given period.
Calculate the default path in which thermochemical data is stored.
Writes a compound to an auxi file at the specified directory.
Load all the thermochemical data factsage files located at a path.
Load all the thermochemical data auxi files located at a path.
List all compounds that are currently loaded in the thermo module, and     their phases.
Calculate the heat capacity of the compound for the specified temperature     and mass.
Calculate the heat capacity of the compound phase.
Calculate the heat capacity of the compound phase at the specified         temperature.
Calculate the phase's magnetic contribution to heat capacity at the         specified temperature.
Calculate the enthalpy of the compound phase at the specified         temperature.
Calculate the phase's magnetic contribution to enthalpy at the         specified temperature.
Calculate the entropy of the compound phase at the specified         temperature.
Calculate the phase's magnetic contribution to entropy at the         specified temperature.
Calculate the heat capacity of the compound phase at the specified         temperature.
Calculate the phase's magnetic contribution to Gibbs energy at the         specified temperature.
Calculate the heat capacity of a phase of the compound at a specified         temperature.
Calculate the enthalpy of a phase of the compound at a specified         temperature.
Create a dictionary of datasets and a material object for air.
Calculate dynamic viscosity at the specified temperature and         composition:
Calculate dynamic viscosity at the specified temperature and         composition:
Render the report in the specified format
Generates an invoice for the given cart.
Convert an RGB color representation to a HEX color representation.
Convert an RGB color representation to a YIQ color representation.
Convert an RGB color representation to an HSV color representation.
Convert a HEX color representation to an RGB color representation.
Convert a YIQ color representation to an RGB color representation.
Convert an HSV color representation to an RGB color representation.
read the db file content         :rtype: dict
Update the object with new data.
Reduce dicts of dicts to dot separated keys.
Print file fields to standard output.
Download a file.
Add arguments to the parser for collection in app.args.
Return a list :obj:`GenProject` projects.
Return a list of Data objects for given project.
Query for Data object annotation.
Return a list of Processor objects.
Print processor input fields and types.
POST JSON data object to server
Create an object of resource:
Upload files and data objects.
Upload a single file on the platform.
Download files of data objects.
Gets the subclasses of a class.
Add arguments to the parser for collection in app.args.
Search the cache for variants matching provided coordinates using the corresponding search mode.
Returns a unique list of seq
Given a list of values and names, accepts the index value or name.
Moves an issue_data from one namespace to another.
Retrieves a task from asana.
Applies a setting value to a key, if the value is not `None`.
Add arguments to the parser for collection in app.args.
Return a list of data types.
Query for Data object annotation.
Passthrough for pyserial Serial.write().
Use the serial block definitions in V3 and V4 to create one field list.
Sqlite callback accepting the cursor and the original row as a tuple.
Sqlite callback accepting the cursor and the original row as a tuple.
Wrapper for struct.unpack with SerialBlock buffer definitionns.
Move data from raw tuple into scaled and conveted values.
Break out a date from Omnimeter read.
Remove an observer from the meter update() chain.
Initialize second(and last) tariff schedule :class:`~ekmmeters.SerialBlock`.
Return the requested tariff schedule :class:`~ekmmeters.SerialBlock` for meter.
Initialize holidays :class:`~ekmmeters.SerialBlock`
Initialize second (and last) month tarifff :class:`~ekmmeters.SerialBlock` for meter.
Get the months tariff SerialBlock for meter.
Define a single season and assign a schedule
Read a single schedule tariff from meter object buffer.
Extract the tariff for a single month from the meter object buffer.
Recommended call to read all meter settings at once.
Internal method to set the command result string.
Initialize :class:`~ekmmeters.SerialBlock` for V3 read.
Insert to :class:`~ekmmeters.MeterDB`  subclass.
Fire update method in all attached observers in order of attachment.
Initialize A read :class:`~ekmmeters.SerialBlock`.
Initialize lookup table for string input of LCD fields
Munge A and B reads into single serial block with only unique fields.
Write calculated fields for read buffer.
Single call wrapper for LCD set."
Recursively iterate over all DictField sub-fields.
Recursively iterate over all schema sub-fields.
Add arguments to the parser for collection in app.args.
Creates a local map of github labels/milestones to asana tags.
Color some text in the given ANSI color.
Write the text to the stream and flush immediately.
Return a summary of the results.
Parse some arguments using the parser.
Setup the environment for an example run.
with describe(thing) as it:             ...
Transform a describe node into a ``TestCase``.
Transform the body of an ``ExampleGroup``.
Transform an example node into a test method.
Transform the body of an ``Example`` into the body of a method.
Return an argument list node that takes only ``self``.
Register the path hook.
Transform the source code, then return the code object.
Apply the argument parser.
Load a spec from either a file path or a fully qualified name.
Discover all of the specs recursively inside ``path``.
Construct a function that checks a directory for process configuration
Construct a function that checks a directory for messages
Create an A-HREF tag that points to another page usable in paginate.
Remove a process
Restart a process
Call results.func on the attributes of results
Return a service based on parsed command-line options
Removes a particular node from the nodelist.
Returns the time a particular node has been last refreshed.
Increments the number of times this resource has been modified by all         processes.
:returns: The total number of elements in the reference list.         :rtype: int
This method should only be called while the reference is locked.
Set a devices state.
Pull a device from the API.
Pull the accounts locations.
Pull the accounts vacations.
Create a vacation.
Delete a vacation by ID.
Authenticate with the API and return an authentication token.
Return a list of water heater devices.
Returns a list of tokens interleaved with the delimiter.
check which processes need to be restarted
Generate a basic error to include the current state.
Generate an error to indicate that infinite recursion was encountered.
Generate a basic error to include the current state.
Generate an error to indicate that infinite recursion was encountered.
Query to test if a value exists.
Query to get the value.
Produce a function that always returns a supplied value.
Convert a function taking multiple arguments into a function taking a single iterable argument.
Convert a function taking a single iterable argument into a function taking multiple arguments.
Run a process, return a deferred that fires when it is done
Wrap all sqlalchemy model in settings.
Match a literal sequence.
Optionally match a parser.
Match a parser one or more times repeatedly.
Match a parser zero or more times repeatedly.
Match a parser one or more times separated by another parser.
Match a parser zero or more times separated by another parser.
Check all processes
Discard data and cancel all calls.
Check the state of HTTP
Add a heart to a service collection
Wrap a service in a MultiService with a heart
Freeze and shrink the graph based on a checkpoint and the output node names.
Freeze and shrink the graph based on a session and the output node names.
Generate the binary strings for a comma seperated list of commands.
Conert an integer to binary (i.e., a string of 1s and 0s).
Send a string of binary data to the FireCracker with proper timing.
Set RTS and DTR to the requested state.
Send X10 commands when module is used from the command line.
Parse the tag, instantiate the class.
The default Django render() method for the tag.
Render the tag, with all arguments resolved to their actual values.
Validate the syntax of the template tag.
Return the context data for the included template.
Wrap the context data in a :class:`~django.template.Context` object.
Parse the "as var" syntax.
Return the context data for the inclusion tag.
Create a TensorFlow Session from a Caffe model.
Generate an appropriate parser.
Get the pylint command for these arguments.
Make a sequence into rows of num_columns columns.
*Deprecated*: Use more_itertools.collapse instead.
Yield every other item from the iterable
Assert that for all items in the iterable, they're in order based on comp
Resets the iterator to the start.
Parse the remainder of the token, to find a "as varname" statement.
Get the list of xformer functions for the given signature.
Returns a transformer function for the given signature.
Generate the correct function for a variant signature.
Generate the correct function for an array signature.
Generate the correct function for a struct signature.
Handle a base case.
Get the signature of a dbus object.
Create fork and store it in current instance
Convert list of dictionaries to dictionary of lists
Subdivide list into N lists
Decorator that prints memory information at each call of the function
get all fields of model, execpt id
Derived from code from pybitcointools (https://github.com/vbuterin/pybitcointools)     by Vitalik Buterin
Derived from code from pybitcointools (https://github.com/vbuterin/pybitcointools)     by Vitalik Buterin
Download remote .tar.bz file.
Check whether sceneInfo is valid to download from AWS Storage.
Verify whether the file (scene) exists on AWS Storage.
Open an archive on a filesystem.
Slugify a name in the ISO-9660 way.
Increment an ISO name to avoid name collision.
Slugify a path, maintaining a map with the previously slugified paths.
:return: List of table names in the database.         :rtype: list
Get sqlite_master table information as a list of dictionaries.
Test whether a path can be written to.
Test whether a stream can be written to.
Construct a contour generator from a curvilinear grid.
Construct a contour generator from a rectilinear grid.
Construct a contour generator from a uniform grid.
Wait until we can make a socket connection to sphinx.
Yields each node of object graph in postorder.
Appy selector to obj and return matching nodes.
Accept a list of tokens. Returns matched nodes of self.obj.
Production for a full selector.
Find nodes in rhs which have parents in lhs.
Return nodes from rhs which have ancestors in lhs.
Find nodes in rhs having common parents in lhs.
Apply each validator in validators to each node in obj.
Get contour lines at the given level.
Get contour polygons between the given levels.
Draw edges as Bézier curves.
Hunt down the settings.py module by going up the FS path
Clean up any created database and schema.
Truncates field to 0,1; then normalizes to a uin8 on [0,255]
See `diffusion_correlated` for information related to units, etc
Workhorse of feature_guess
Checks whether or not adding a particle should be present.
platonics = create_many_platonics(N=50)     dorun(platonics)
Translate an image in fourier-space with plane waves
Load default users and groups.
The first-order Barnes approximation
Correct, normalized version of Barnes
Barnes w/o normalizing the weights
Pairwise distance between each point in `a` and each point in `b`
Convert windowdow coordinates to cheb coordinates [-1,1]
Convert cheb coordinates to windowdow coordinates
Determine admin type.
Validate privacy policy value.
Validate state value.
Create a new group.
Delete a group and all associated memberships.
Query group by a group name.
Query group by a list of group names.
Query group by user.
Invite a user to a group.
Invite a user to a group (should be done by admins).
Invite users to a group by emails.
Subscribe a user to a group (done by users).
Verify if given user is a group member.
Determine if given user can see other group members.
Determine if user can invite people to a group.
Filter a query result.
Get a user's memberships.
Get all pending group requests.
Get a group's members.
Modify query as so to order the results.
Create a new membership.
Create a new group admin.
Get specific GroupAdmin object.
Delete admin from group.
Get all groups for for a specific admin.
Get count of admins per group.
Edit an existing, individual status update.
Permanently delete an existing status update.
Create one or more new status updates.
Set the verbosity level of a certain log handler or of all handlers.
Otsu threshold on data.
Harris-motivated feature detection on a d-dimensional image.
Identifies slabs in an image.
Start from scratch and initialize all objects / draw self.particles
Clips a list of inds to be on [0, self.N]
Translate index info to parameter name
Get the amount of support size required for a particular update.
Get position and radius of one or more particles
Get position of one or more particles
Returns the wavefront aberration for an aberrated, defocused lens.
Returns a prefactor in the electric field integral.
Calculates one of three electric field integrals.
Calculates the perfect-pinhole PSF, for a set of points (x,y,z).
Calculates the perfect-pinhole PSF, for a set of points (x,y,z).
Calculates a scalar (non-vectorial light) approximation to a confocal PSF
Wraps a point-spread function in x and y.
Convert a scalar ``a`` to a list and all iterables to list as well.
Conditionally delete key (or list of keys) 'k' from dict 'd'
Context manager for switching the current path of the process. Can be used:
Return the frequency center of the tile (says fftshift)
Iterate the vector of all corners of the hyperrectangles
Test whether coordinates are contained within this tile.
Read the file and perform any transforms to get a loaded image
Update the value of the progress and update progress bar.
Put a figure label in an axis
Compare the data, model, and residuals of a state.
each element of std0 should correspond with the element of std1
Plot two parts of the ortho view, the two sections given by ``orientation``.
Returns a list of the global parameter names.
Calculates the number of pixels to use for J at a given memory usage.
Finds the particles in a tile, as numpy.ndarray of ints.
Ensures that all particles are included in exactly 1 group
Returns the index of the lowest of the passed values. Catches nans etc.
Levenberg-Marquardt optimization on a set of particles.
Levenberg-Marquardt optimization for every particle in the state.
Optimizes all the parameters of a state.
Fits a new component to an old component
workhorse for do_run_1
LM run evaluating 2 steps (damped and not) and choosing the best.
Workhorse for do_run_2
Returns the error expected after an update if the model were linear.
Calculates the cosine of the residuals with the model.
Checks if the full J should be updated.
The gradient of the cost w.r.t. the parameters.
Execute a Broyden update of J
Execute an eigen update of J
Geodesic acceleration correction to the LM step.
Takes an array param_vals, updates function, returns the new error
Returns the error expected after an update if the model were linear.
Calculates the cosine of the residuals with the model.
The gradient of the cost w.r.t. the parameters.
workhorse for the self.do_run_xx methods.
Calls LMParticles.do_internal_run for each group of particles.
Updates all the parameters of the state + rscale(z)
Resets the aug_state and the LMEngine
Class property: Sum of the squared errors,         :math:`E = \sum_i (D_i - M_i(\\theta))^2`
Update a single parameter or group of parameters ``params``         with ``values``.
jTj of a `func` wrt to parmaeters `params`. (see _graddoc)
Update the current comparison (real) image
Switch out the data for the model's recreation of the data.
Return component by category name
Sets the memory usage level of the state.
Get the value of a list or single parameter.
Notify parent of a parameter change
Combine the fields from all components
Set the shape for all components
Ensure that shared parameters are the same value everywhere
Read all environment variables to see if they contain PERI
Used for breadcrumb dynamic_list_constructor.
List all user memberships.
List all pending memberships, listed only for group admins.
List all user pending memberships.
Create new group.
List user group members.
Remove user from a group.
Get an initial featuring of sphere positions in an image.
Completely optimizes a state from an image of roughly monodisperse     particles.
Combines centroid featuring with the globals from a previous state.
Workhorse for creating & optimizing states with an initial centroid     guess.
Used to check if there is a dict in a dict
Calculates the 3D psf at a particular z pixel height
Convert from pixel to 1/k_incoming (laser_wavelength/(2\pi)) units
Returns the 'size' of the psf in each direction a particular z (px)
Calculates a linescan psf
Calculates a pinhole psf
Make an HTTP request and return the body
Set a key `k` to value `v`
Return True if key `k` exists
Make request and convert JSON response to python objects
Return bets with given filters and ordering.
Subscribe to event for given bet ids.
Returns a 'minified' version of the javascript content
Returns a big list of all log lines since the last run
Create a token referencing the object id with extra data.
Validate secret link token.
Load data in a token.
Create a token referencing the object id with extra data.
Load data in a token.
Create the secret link token.
Validate a secret link token (non-expiring + expiring).
Validate a secret link token (non-expiring + expiring).
Watchdog timer function.
Converts the input format to a regular         expression, as well as extracting fields
Validate that date is in the future.
Validate that accept have not been set.
Validate that accept have not been set.
Verify token and save in session if it's valid.
Do not warn on external images.
Connect receivers to signals.
Receiver for request-accepted signal to send email notification.
Receiver for request-confirmed signal to send email notification.
Receiver for request-created signal to send email notification.
Receiver for request-rejected signal to send email notification.
Render a template and send as email.
Create a new secret link.
Validate a secret link token.
Load token data stored in token (ignores expiry date of tokens).
Revoken a secret link.
Create a new access request.
Get access request for a specific receiver.
Confirm that senders email is valid.
Create a secret link from request.
Verify a given NIST message hash and signature for a beacon value.
Template filter to check if a record is embargoed.
Create an access request.
Get reverse direction of ordering.
Get direction (ascending/descending) of ordering.
Get column which is being order by.
Get query with correct ordering.
Open the file referenced in this object, and scrape the version.
Set the version for this given file.
Load test data fixture.
Creates an Event object from the Source configuration
Creates an Event object from the Source configuration
Accept/reject access request.
Create a TCP connection to Riemann with automatic reconnection
Stop this client.
Remove all or self.queueDepth events from the queue
Receives a list of events and transmits them to Riemann
Create a UDP connection to Riemann
Adapts an Event object to a Riemann protobuf event Event
Encode a list of Tensor events with protobuf
Decode a protobuf message into a list of Tensor events
Send a Tensor Event to Riemann
Get the relative path to the API resource collection
Generate preview for URL.
Uploads new version of the blog website
Show all messages in the `messages` key of the given dict.
Adds images to the last article
Send message dicts through r_q, and throw explicit errors for          pickle problems
Loop through messages and execute tasks
Build a log message and reset the stats
If not in a hot_loop, call supervise() to start the tasks
Comptaibility layer for old :class:`SASLInterface`         implementations.
Implement the ``trace`` profile specified in :rfc:`4505`.
Calculate the byte wise exclusive of of two :class:`bytes` objects     of the same length.
Given a string key a corresponding node in the hash ring is returned.
Get the ``portMappings`` field for the app container.
Perform post-construction operations.
Add keyboard shortcuts to navigate the filesystem.
Handle activation of item in listing.
Handle selection of item in listing.
Handle selection of path segment.
Return list of valid *path* segments.
Set current location to *path*.
Set current location to *path*.
Raises a `requests.exceptions.HTTPError` if the response has a non-200     status code.
Recursively make requests to each endpoint in ``endpoints``.
Perform a GET request and get the contents of the JSON response.
Get a JSON field from the response JSON.
Attach to Marathon's event stream using Server-Sent Events (SSE).
Parse value from string.
Parse a value from an environment variable.
Finalize options to be used.
Set up a client key if one does not exist already.
Set up a client key in Vault if one does not exist already.
Read data from Vault. Returns the JSON-decoded response.
Write data to Vault. Returns the JSON-decoded response.
Read some data from a key/value version 2 secret engine.
Create or update some data in a key/value version 2 secret engine.
Perform a request.
Return appropriate :py:class:`Item` instance for *path*.
Add *item* as child of this item.
Fetch and return new children.
Fetch and return new child items.
Fetch and return new child items.
Fetch and return new child items.
Return number of children *parent* index has.
Return index for *row* and *column* under *parent*.
Return index of item with *path*.
Return parent of *index*.
Return data for *index* according to *role*.
Return label for *section* according to *orientation* and *role*.
Return if *index* has children.
Fetch additional data under *index*.
Return index of item with *path*.
Return item at *index*.
Return if *index* has children.
Fetch additional data under *index*.
Run the server, i.e. start listening for requests on the given host and         port.
Create a marathon-acme instance.
Initialise the logging by adding an observer to the global log publisher.
Parse the field and value from a line.
Handle the field, value pair.
Dispatch the event to the handler.
Issue a certificate for the given domain.
Ensure that self/cls contains a Storage backend.
Ensure that all forward references on the provided object have the     appropriate backreferences.
Retrieve value from store.
Initializes the bot, plugins, and everything.
Sends a message to the specified channel
Sends a message to a user as an IM
Return the maximum file descriptor value.
Close a file descriptor if it is open.
Close open file descriptors.
Redirect a system stream to the provided target.
Show current allow and deny blocks for the given acl.
Add a user to the given acl allow block.
Remove a user from the given acl (both allow and deny).
Create a new acl.
Applies a given HTML attributes to each field widget of a given form.
Returns a certain model as defined in a string formatted `<app_name>.<model_name>`.
Tries to get a site URL from environment and settings     in the following order:
Returns a module from a given app by its name.
Run the mongod process.
Create a proxy to a class instance stored in ``proxies``.
Return primary key; if value is StoredObject, verify         that it is loaded.
Assign to a nested dictionary.
Retrieve user by username
Adds a user object to the user manager
Lazy load RepoFile objects on demand.         :param repo_path:         :return:
Used to send a message to the specified channel.
Schedules a function to be called after some period of time.
Given a URL, return a package         :param url:         :return:
Read the contents of the rpm itself         :return:
Print translate result in a better format     Args:         data(str): result
Returns Gravatar image URL for a given string or UserModel.
Returns Gravatar image HTML tag for a given string or UserModel.
Parses an xml_path with the inherited xml parser         :param xml_path:         :return:
Load the repo database from the remote source, and then parse it.         :return:
Cast value to its frozen counterpart.
Prints information about the user and bot version.
Get input string port value         :param port_name:         :param default:         :return: :rtype:
:param success_or_fail: string that is 'success' or 'fail'         :param message:
Checks if the url contains S3. Not an accurate validation of the url
Execute the command from the arguments.         :return: None or Error
Method for creating a new Application Template.         USAGE: cloud-harness create <dir_name> [--destination=<path>]
Import the file and inspect for subclass of TaskTemplate.         :param template_file: filename to import.
Select path by criterion.
Select file path by criterion.
Select dir path by criterion.
Count how many files in this directory. Including file in sub folder.
Count how many folders in this directory. Including folder in sub folder.
Count how many files in this directory (doesn't include files in         sub folders).
Count how many folders in this directory (doesn't include folder in         sub folders).
Select file path by extension.
Select file path by text pattern in file name.
Select file path by text pattern in absolute path.
Select file path by size.
Select file path by modify time.
Select file path by access time.
Select file path by create time.
Make a zip archive.
Create a compressed zip archive backup for a directory.
Investigate pickling errors.
Gets a representation of the Repository content in a list of directories(files) format.
Load repository from a directory path and update the current instance.
Save repository .pyrepinfo to disk.
Check if there is a Repository in path.
get directory info from the Repository.
get parent directory info of a file or directory from the Repository.
get file information dict from the repository given its relative path and name.
Remove directory from repository.
Rename a directory in the repository. It insures renaming the directory in the system.
Rename a directory in the repository. It insures renaming the file in the system.
Remove file from repository.
Pull a file's data from the Repository.
Get a list of keys for the accounts
Ensure value is string.
Pre-process input argument, whether if it is:
Build a workflow definition from the cloud_harness task.
Execute the cloud_harness task.
Stream reports to application logs
Stream reports to application logs
Monitors data kept in files in the predefined directory in a new thread.
Called when a file in the monitored directory has been moved.
:param success_or_fail: string that is 'success' or 'fail'         :param message:
Move an active project to the archive.
The equivalent of 'mkdir -p' in shell.
List the contents of the archive directory.
Restore a project from the archive.
Tears down all temp files and directories.
Return a new :class:`pathlib_mate.pathlib2.Path` object with updated information.
Test whether a file target is not exists or it exists but allow         overwrite.
Copy this file to other place.
Create new storage service client.
List the entities found directly under the given path.
Download a file from storage service to local disk.
Check if a certain path exists in the storage service.
Get the parent entity of the entity pointed by the given path.
Create a folder in the storage service pointed by the given path.
Upload local file content to a storage service destination folder.
Delete an entity from the storage service using its path.
Validate a string as a valid storage path
Decorate methods when repository path is required.
Check if there is a Repository in path.
Remove all repository from path along with all repository tracked files.
Given a path, return relative path to diretory
Check whether a given relative path is a repository file path
Walk the repository relative path and yield file relative/full path.
Remove directory from repository tracking.
Rename a directory in the repository. It insures renaming the directory in the system.
Copy a directory in the repository. New directory must not exist.
Pull a file's data from the Repository.
Rename a file in the repository. It insures renaming the file in the system.
Remove file from repository.
Creates a new cross-service client.
Renames an item in this collection as a transaction.
Return md5 hash value of a piece of a file
Return sha256 hash value of a piece of a file
Return sha512 hash value of a piece of a file
Print ``top_n`` big dir in this dir.
Print ``top_n`` big file in this dir.
Print ``top_n`` big dir and ``top_n`` big file in each dir.
Find out how many files, directorys and total size (Include file in         it's sub-folder).
Execute every ``.py`` file as main script.
Trail white space at end of each line for every ``.py`` file.
Get most recent access time in timestamp.
Create a new storage service REST client.
Get generic entity by UUID.
Retrieve entity by query param which can be either uuid/path/metadata.
Set metadata for an entity.
Get metadata of an entity.
Update the metadata of an entity.
Delete the selected metadata entries of an entity.
List all the projects the user have access to.
Get information on a given project
Create a new project.
Delete a project. It will recursively delete all the content.
Create a new folder.
Get information on a given folder.
List files and folders (not recursively) contained in the folder.
Delete a folder. It will recursively delete all the content.
Upload a file content. The file entity must already exist.
Copy file content from source file to target file.
Download file content.
Get a signed unauthenticated URL.
List names of options and positional arguments.
List values of options and positional arguments.
List values of options and positional arguments.
Add an Option object to the user interface.
Append a positional argument to the user interface.
Read program documentation from a DocParser compatible file.
Shorthand for '\n'.join(self._wrap(par, indent, width) for par in text).
Parse text blocks from a file.
Pop, parse and return the first self.nargs items from args.
Adds parameters to the request params
Defines if the an exception should be thrown after the request is sent
Return a URL to redirect the user to for OAuth authentication.
Exchange the authorization code for an access token.
Extracts a version from a string in the form: `.*[0-9]+(_[0-9]+)*.*`, e.g. Irods4_1_9CompatibleController.
Return a sequence containing the fields to be displayed on the         changelist.
Handle a dict that might contain a wrapped state for a custom type.
Wrap the marshalled state in a dictionary.
Runs GenotypeGVCFs on one or more gVCFs generated by HaplotypeCaller.
Writes the data to the given file::
Start the event loop to collect data from the serial device.
Create a new user.
Parse a page of producer or staff results
Parse a page of character results.
Parse a page of user results
Creates a tarball from a group of files
Applies a function to a set of files and an output directory.
Job version of move_files for one file
Enable HTTP access to a dataset.
Calls Pindel to compute indels / deletions
Returns the list of streams that belong to the device
Imports a stream from the given directory. You export the Stream         by using stream.export()
Search vndb.org for a term and return matching results from type.
Returns the list of users in the database
Use BWA to create reference index files
Attempt to sync with the ConnectorDB server
Register a marshaller and/or unmarshaller for the given class.
Build a file path from *paths* and return the contents.
Job version of s3am_upload
Run s3am with 3 retries
Output the names to the given file
Output the parent-child relations to the given file
Iterates over the labels of terms in the ontology
Iterates over the parent-child relationships in an ontolog
Add an argument to the given arg_parser with the given name.
Creates and returns an ArgumentParser object prepopulated with 'no clean', 'cores' and         'restart' arguments.
Creates and returns a list that represents a command for running the pipeline.
Handles HTTP error codes for the given request
Run the given query on the connection (POST request to /query)
Subscribe to the given stream with the callback
Creates the given user - using the passed in email and password.
Returns the list of devices that belong to the user
Imports a device from the given directory. You export the device         by using device.export()
Use SAMtools to create reference index file
RNA quantification via Kallisto
RNA quantification with RSEM
Set/clear boolean field value for model object
Update the descriptive metadata interactively.
Create a proto dataset.
Report / update the name of the dataset.
Show the descriptive metadata in the readme.
Use YAML from a file or stdin to populate the readme.
Add a file to the proto dataset.
Add metadata to a file in the proto dataset.
Convert a proto dataset into a dataset.
DEPRECATED: Copy a dataset to a different location.
Copy a dataset to a different location.
Recommend top K items for all users which are in the test set.
Send the given command thru the websocket
Unsubscribe from the given stream (with the optional transform)
Called when the websocket is opened
Called when the websocket is closed
Called when there is an error in the websocket
This function is called whenever there is a message received from the server
Isolates a particular variant type from a VCF file using GATK SelectVariants
Helper to write the JSON configuration to a file
Gets the data for a given term
Searches the OLS with the given term
Iterates over all terms, lazily with paging
Iterates over all terms, lazily with paging
Iterates over the descendants of a given term
Iterates over the labels for the descendants of a given term
Iterates over parent-child relations
Run Fastqc on the input reads
Compress anything to bytes or string.
Parse a I[.F] seconds value into (seconds, microseconds).
Parse the date/time string into a :class:`datetime.datetime` object.
Change unicode output into bytestrings in Python 2
Given a datetime in UTC, return local time
Strip comments from line string.
Strip comments from json string.
Rebuild the internal timezone info in dateutil/zoneinfo/zoneinfo*tar*
Convert a registry key's values to a dictionary.
Load a timezone name from a DLL offset (integer).
Get the zonefile metadata
Get the configuration for the given JID based on XMPP_HTTP_UPLOAD_ACCESS.
Set the time zone data of this object from a _tzfile object
The ``tzfile`` implementation of :py:func:`datetime.tzinfo.fromutc`.
Retrieve a :py:class:`datetime.tzinfo` object by its ``tzid``.
Look up a zone ID for a zone string.
Fetch all pieces of a Route 53 config from Amazon.
Diff two XML configs and return an object with changes to be written.
Validate a changeset is compatible with Amazon's API spec.
Create a new HMAC hash.
Decodes the given token's header and payload and validates the signature.
Create a token based on the data held in the class.
Decodes the given token into an instance of `Jwt`.
Compare against another `Jwt`.
Download a file.
Produce a 'camelized' class name, e.g.
Produce an 'uncamelized', 'pluralized' class name, e.g.
Adds a paramber to the Population
Private, static method: mutates parameter
Test a file is a valid json file.
Return True if the callable throws the specified exception
Convert the result back into the input type.
Parses several HTML elements, returning a list of elements.
Parse the html, returning a single element/document.
Convert all tags in an XHTML tree to HTML by removing their     XHTML namespace.
Return an HTML string representation of the document.
Get or set any <label> element associated with this element.
Find any links like ``<a rel="{rel}">...</a>``; returns a list of elements.
Get/set the form's ``action`` attribute.
Get/set the value (which is the contents of this element)
Get/set the value of this select (the selected option).
Get/set the value of this element, using the ``value`` attribute.
given a class/instance return the full class path (eg, prefix.module.Classname)
iterate through the attributes of every logger's handler
Validate request params.
Validate request id.
Ensure that the given path is decoded,     NONE when no expected encoding works
Parse a string of HTML data into an Element tree using the     BeautifulSoup parser.
Parse a file into an ElemenTree using the BeautifulSoup parser.
Convert a BeautifulSoup tree to a list of Element trees.
String representation of the exception.
Render the traceback for the interactive console.
Helper function that returns lines with extra information.
Render the sourcecode.
Pull the version part out of a string.
Sort locations into "files" (archives) and "urls", and return         a pair of lists (files,urls)
Find all available versions for project_name
Return an InstallationCandidate or None
Get the Content-Type of the given url, using a HEAD request
Yields all links in the page
Generate list of '(package,src_dir,build_dir,filenames)' tuples
Return filenames for package's data files in 'src_dir
Check namespace packages' __init__ for declare_namespace
Filter filenames for package's data files in 'src_dir
Parse a requirements file and yield InstallRequirement instances.
Joins a line ending in '\' with the previous line.
Flatten one level of attribute access.
coerce takes a value and attempts to convert it to a float,  or int.
Binds the app context to the current context.
Pops the app context.
Can be overridden by a subclass to hook into the matching         of the request.
Binds the request context to the current context.
Make a filename relative, where the filename path, and it is     relative to rel_to
Return True if given Distribution is installed in user site.
Register a custom template filter, available application wide.  Like         :meth:`Flask.template_filter` but for a blueprint.
Register a custom template global, available application wide.  Like         :meth:`Flask.template_global` but for a blueprint.
Like :meth:`Flask.before_first_request`.  Such a function is         executed before the first request to the application.
Generates a URL to the given endpoint with the method provided.
Safely join `directory` and `filename`.
Prints the completion code of the given shell
Return a directory to store cached wheels in for link.
Return (hash, length) for path using hashlib.new(algo)
Replace #!python with #!/path/to/python     Return True if file was changed.
Yield all the uninstallation paths for dist based on RECORD-without-.pyc
Build one wheel.
Yield names and strings used by `code` and its nested code objects
Add paths for egg-info files for an external egg-base.
Returns the effective username of the current process.
Parse the cache control headers returning a dictionary with values         for the different directives.
Update zipimporter cache data for a given normalized path.
Load the Windows launcher (executable) suitable for launching a script.
Generate a legacy script wrapper and install it
Make sure there's a site.py in the target dir, if needed
Write changed .pth file back to disk
Add filters to a filterer from a list of names.
Configure a handler from a dictionary.
Add handlers to a logger from a list of names.
Perform configuration which is common to root and non-root loggers.
Run a distutils setup script, sandboxed in its directory
Get an item or attribute of an object but prefer the item.
Determine the default cache location
Find eggs in zip files; possibly multiple nested eggs.
Declare that package 'packageName' is a namespace package
Yield non-empty/non-comment lines of a string or sequence
Get an mro for a type or classic class
Return an adapter factory for `ob` from `registry`
Ensure that the parent directory of `path` exists
Invoke `callback` for all distributions (including existing ones)
Give an error message for problems extracting file(s)
Run the excel_to_html function from the     command-line.
Parse number format patterns
Yield ``Requirement`` objects for each specification in `strs`
Set up global resource manager (deliberately not state-saved)
Prepare the master working set and make the ``require()``     API available.
Verify that extras_require mapping is valid
Verify that install_requires is a valid requirements list
Handle 'include()' for list/tuple attrs without a special handler
Roll n-sided dice and return each result and the total
Validate JSON-RPC request.
Get request method for service application.
Apply application method.
The name of the current blueprint
Add install_req as a requirement to install.
Call handler for all pending reqs.
Check if req_to_install should be skipped.
Prepare a single requirements files.
Clean up files, remove builds.
Create the installation order.
Convert QuerySet objects to their list counter-parts
Tokenize a document and add an annotation attribute to each token
Copy annotations from the tokens listed in src to the tokens in dest
Merge tok into the last element of tokens (modifying the list of     tokens in-place).
Return (unbalanced_start, balanced, unbalanced_end), where each is     a list of text and tag chunks.
Parse the given HTML and returns token objects (words with attached tags).
This function takes a list of chunks and produces a list of tokens.
The text representation of the start tag for a tag.
Serialize a single lxml element as HTML.  The serialized form     includes the elements tail.
fixup_ins_del_tags that works on an lxml document in-place
True if the element contains any block-level elements, like <p>, <td>, etc.
Yield '(op,arg)' pair for each operation in code object 'code
Extract the constant value of 'symbol' from 'code'
Turn any URLs into links.
Breaks any long words found in the body of the text (not attributes).
Parse a whole document into a string.
Parses several HTML elements, returning a list of elements.
Parse the html, returning a single element/document.
Define the accept schema of an API (GET or POST).
Define the return schema of an API.
Get a TreeWalker class for various types of tree with built-in support
Export the svn repository at the url to the destination location
Return the maximum revision for all files under a given location
A decorator to register a function as an endpoint.         Example::
Register a custom template filter.  Works exactly like the         :meth:`template_filter` decorator.
Register a custom template global function. Works exactly like the         :meth:`template_global` decorator.
Handle :class:`~werkzeug.routing.BuildError` on :meth:`url_for`.
Yield unique values in iterable, preserving order.
Place the runtime requirements from pkg_info into metadata.
Convert PKG-INFO to a prototype Metadata 2.0 (PEP 426) dict.
Convert .egg-info directory with PKG-INFO to the Metadata 1.3 aka     old-draft Metadata 2.0 format.
break up a module path to its various parts (prefix, module, class, method)
return the actual test methods that matched self.method_name
Walk all the directories of basedir except hidden directories
Remove paths in ``self.paths`` with confirmation (unless         ``auto_confirm`` is True).
Rollback the changes previously made by remove().
Inject default arguments for load functions.
Like :func:`dumps` but writes into a file object.
Like :func:`loads` but reads from a file object.
Like :func:`htmlsafe_dumps` but writes into a file object.
Sets multiple keys and values from a mapping.
Ensure that if a link can be found for this, that it is found.
Move self._temp_build_dir to self._ideal_build_dir/self.req.name
Ensure that a source_dir is set.
Remove the source files from this requirement, if they are marked         for deletion
Return a pkg_resources.Distribution built from self.egg_info_path
r"""     Return full path to the user-specific cache dir for this application.
Return full path to the user-specific data dir for this application.
Return full path to the user-specific log dir for this application.
Return full path to the user-specific config dir for this application.
Create a reusable class from a generator function
Send an item into a generator expecting a final return value
Apply a function to all ``send`` values of a generator
Create a new generator by relaying yield/send interactions     through another generator
Wrapper around six.text_type to convert None to empty string
Parse a string or file-like object into a tree
Parse a HTML document into a well-formed tree
Parse a HTML fragment into a well-formed tree fragment
pass in a word string that you         would like to see probable matches for.
get all probable matches         and then initialize t(f|e)
Bind and activate HTTP server.
Report startup info to stdout.
Loads bytecode from a file or file like object.
Clean up current location and download the url repository         (and vcs infos) into location
Return a list of supported tags for each version specified in     `versions`.
Find rel="homepage" and rel="download" links in `page`, yielding URLs
Read a local path, with special support for directories
Construct a (possibly null) ContentChecker from a URL
Evaluate a URL as a possible download, and maybe retrieve it
Return a list of supported tags for each version specified in     `versions`.
Prints the traceback and invokes the ipython debugger on any exception
Remove duplicate entries from sys.path along with making them     absolute
Append ./build/lib.<platform> in case we're running in the build dir     (especially for Guido :-)
Return a set containing all existing directory entries from sys.path
Add 'sitedir' argument to sys.path if missing and handle .pth files in     'sitedir
Check if user site directory is safe for inclusion
Add a per user site-package to sys.path
Set 'copyright' and 'credits' in __builtin__
Return True if Cython or Pyrex can be imported.
Counts the number of lines in a file.
Adds line breaks after every occurance of a given character in a file.
Calculates  the median of a list of integers or floating point numbers.
Calculates the average or mean of a list of numbers
Finds the percentage of one number over another.
Run the application and conserve the traceback frames.
Return a static resource from the shared folder.
Return a string representing the user agent.
Returns true if the name looks like a URL
Download link url into temp_dir using provided session
Handle currencyFormat subdirectives.
Handle exchange subdirectives.
Print the informations from installed distributions found.
Similar to :meth:`HTTPResponse.read`, but with an additional         parameter: ``decode_content``.
Renders a template from the template folder with the given     context.
Renders a template from the given template source string     with the given context.
Use parse_version from pkg_resources or distutils as available.
Install the wheel into site-packages.
Check if a name is declared in this or an outer scope.
Create a whl file from all the files under 'base_dir'.
Create service, start server.
List of wheels matching a requirement.
Export the Bazaar repository at the url to the destination location
Check for an update for pip.
Build a response by making a request or using the cache.
Group a sequence of objects by a common attribute.
Returns True if the two strings are equal, False otherwise.
Verifies the given signature matches the expected signature
Returns the signature for the given value
Verifies the signature for the given value.
Unsigns the given string.
Signs the given string and also attaches a time information.
Lowlevel helper function to implement :meth:`loads_unsafe` in         serializer subclasses.
Like :meth:`loads_unsafe` but loads from a file.
JSON-RPC server error.
Exclude any apparent package that apparently doesn't include its         parent.
Generate a public/private key pair.
Unpack a wheel.
Regenerate the entry_points console_scripts for the named distribution.
Handles the list of edges for any graph changing.
Handles the component being changed.
Get datetime string from datetime object
1514736000 --> datetime object
Removes all components from the canvas
Removes listeners from a domain model
Returns the components of an ellipse.
Returns the components of a polygon.
Returns the components of a polyline.
Returns the components of a B-spline (Bezier curve).
Returns the components of an image.
Test if the point is within this ellipse
Perform the action.
attrs pipe can extract attribute values of object.
attrdict pipe can extract attribute values of object into a dict.
Convert data from previous pipe with specified encoding.
Regiser all default type-to-pipe convertors.
Construct the SQLAlchemy engine and session factory.
Convert Paginator instance to dict
Check that a process is not running more than once, using PIDFILE
This function will check whether a PID is currently running
Convert two words to a floating point
Convert two words to a floating point
Yield each integer from a complex range string like "1-9,12,15-20,23"
Parses the dot_code string and replaces the existing model.
Handles the open action.
Handles saving the current model to the last file.
Handles adding a Node to the graph.
Handles adding an Edge to the graph.
Handles adding a Subgraph to the main graph.
Handles adding a Cluster to the main graph.
Handles display of the dot code in a text editor.
Handles the user attempting to exit Godot.
Save the object to a given file like object in the given format.
Load the object to a given file like object with the given             protocol.
Save the object to file given by filename.
!DEMO!         Cached list of keys that can be used to generate sentence.
Add chain to current shelve file
Remove chain from current shelve file
Build markov chain from source on top of existin chain
Adds a node to the graph.
Removes a node from the graph.
Returns the node with the given ID or None.
Removes an edge from the graph. Returns the deleted edge or None.
Adds an edge to the graph.
Adds a subgraph to the graph.
Parses a DOT file and returns a Godot graph.
Returns a tuple of the form (ADD_EDGE, src, dest, options).
Returns a graph given a file or a filename.
Build a Godot graph instance from parsed data.
Formats a number of seconds using the best units.
Handle the file path changing.
Split a sequence into pieces of length n
Do url-encode resource ids
Generate random string with parameter length.     Example:
Appends a child to the object's children.
Inserts a child into the object's children.
Deletes a child at a specified index from the object's children.
Gets the label to display for a specified object.
Sets the label for a specified object.
Adds the event listeners for a specified object.
Handles a list of nodes being set.
Removes the node corresponding to each item in 'features'.
Handles a list of edges being set.
Removes the node corresponding to each item in 'features'.
Arrange the components of the node using Graphviz.
Give new nodes a unique ID.
Give new edges a unique ID.
Append next object to pipe tail.
Wrap a conditoinal function(stopper function) to Pipe object.
Initialize the database connection.
Attach this connection's default database to the context using our alias.
Arrange the components of the node using Graphviz.
Handles the container of drawing components changing.
Handles the poition of the component changing.
Test if a point is within this polygonal region
Return a dictionary of network name to active status bools.
Initialize the database connection.
Broadcast an event to the database connections registered.
Method that gets run when the Worker thread is started.
flush the line to stdout
Create a new URL from `input_url` with modifications applied.
Removes the user & password and returns them along with a new url.
Generate the user+password portion of a URL.
Normalize a host for a URL.
Build a basic 035 subfield with basic information from the OAI-PMH request.
Strip out namespace data from an ElementTree.
Take an ElementTree and converts the nodes into BibRecord records.
Take an ElementTree and converts the nodes into BibRecord records.
Start a server instance. This method blocks until the server terminates.
Load values from a dictionary structure. Nesting can be used to             represent namespaces.
Extract and return oembed content for given urls.
:X: list of dict         :y: labels
Extract __*meta*__ from meta_file.
Make the request params given location data
Get the tax rate from the ZipTax response
Check if there are exceptions that should be raised
Recursively extract all text from node.
Extract a package in a new temporary directory.
:X: list of dict
Ensure that a needed directory exists, creating it if it doesn't
Return list containing URIs with base URI.
Return list of overlay names.
Store the given key:value pair for the item associated with handle.
Return absolute path at which item content can be accessed.
checks to make sure that the card passes a luhn mod-10 checksum
Unregisters a provider from the site.
Populate the internal registry's dictionary with the regexes for each         provider instance
Find the right provider for a URL
Load up StoredProviders from url if it is an oembed scheme
Iterate over the returned json and try to sort out any new providers
Return the git hash as a string.
Try to automatically detect an image field
Try to automatically detect an image field
Return an ImageFileField instance
Build a dictionary of metadata for the requested object.
Override the base.
Add the 909 OAI info to 035.
Check if we shall add cnum in 035.
Remove hidden notes and tag a CERN if detected.
Remove INSPIRE specific notes.
Move title info from 245 to 111 proceeding style.
Remove dashes from ISBN.
Remove duplicate BibMatch DOIs.
700 -> 701 Thesis supervisors.
269 Date normalization.
260 Date normalization.
Check fields 980 and 773 to see if the record has already been published.
Checks if files are not being uploaded to server.
Adds a path to search through when attempting to look up a module.
:X: list of dict         :y: labels
Removes the space between initials.         eg T. A. --> T.A.
Automatically build the provider index.
Call this on an lxml.etree document to remove all namespaces
Checks that the versions are consistent
Creates a new instance of a rule in relation to the config file.
Iterates over the actions and executes them in order.
Creates a new instance of a rule by merging two dictionaries.
:param formatted_address: A string like "email
:param recipient_list: List of recipients i.e. ['testing
Add extra details to the message.  Separate so that it can be overridden
Reads a dom xml element in oaidc format and             returns the bibrecord object
display a progress that can update in place
print format_msg to stderr
echo a prompt to the user and wait for an answer
Ensure `image_rendition` is added to the global context.
Returns the records listed in the webpage given as         parameter as a xml String.
Adds an URL to the download queue.
Add or update a key, value pair to the database
Get the value of a given key
Recursively get the tree below the given key
Delete a given key or recursively delete the tree below it
Logs into the specified ftp server and returns connector.
Extract a package in a new directory.
Plot heatmap which shows features with classes.
Fetch/refresh the current instance's data from the NuHeat API
Set the thermostat mode
Updates the target temperature on the NuHeat API
Update (patch) the current instance's data on the NuHeat API
Add a number of months to a timestamp
Add a number of months to a date
Generate a unix style timestamp (in seconds)
Given a date or a datetime, return a datetime at 23:59:59 on that day
:param X: features.
Authenticate against the NuHeat API
Make a request to the NuHeat API
Read dataset from csv.
Select items with label from dataset.
Provide signifance for features in dataset with anova using multiple hypostesis testing
return True if callback is an instance of a class
these kwargs come from the
Overridden to not get rid of newlines
create string suitable for HTTP User-Agent header
Add a MARCXML datafield as a new child to a XML document.
Given a document, return XML prettified.
Properly format arXiv IDs.
Remove the space between initials, eg T. A. --> T.A.
Convert journal name to Inspire's short form.
Add correct nations field according to mapping in NATIONS_DEFAULT_MAP.
Fix bad Unicode special dashes in string.
Convert some HTML tags to latex equivalents.
Download URL to a file.
Run a shell command.
Create a logger object.
Uncompress a zipped file from given filepath to an (optional) location.
Perform the actual uncompression.
Convert a date-value to the ISO date standard.
Convert a date-value to the ISO date standard for humans.
Convert list of images to PNG format.
Generate a safe and closed filepath.
Get letters from string only.
Extract a package in a new temporary directory.
Return the best effort start_date.
Convert a record to MARCXML format.
Extract oembed resources from a block of text.  Returns a list     of dictionaries.
Generates a &lt;link&gt; tag with oembed autodiscovery bits for an object.
Generates a &lt;link&gt; tag with oembed autodiscovery bits.
A stand-in for the normal sys.exit()
return the parser for the current name
load the module so we can actually run the script's function
get the contents of the script
parse and import the script, and then run the script's main function
load the script and set the parser and argument info
return True if this script can be run from the command line
Recusively merge the 2 dicts.
Generate a fake request object to allow oEmbeds to use context processors.
dynamically load a class given a string of the format          package.Class
Gets the Marc xml of the files in xaml_jp directory
Gets the Marc xml of the files in xaml_rich directory
A decorator for a function implementing dispatch_fn for dispatch_key.
Override the base get_record.
Check fields 980 and 773 to see if the record has already been published.
269 Date normalization.
700 -> 701 Thesis supervisors.
653 Free Keywords.
Verifies a block prior to registration.
Registers `block` to `block_type` in the registry.
Unregisters the block associated with `block_type` from the registry.
Extract a package in a new directory.
Add (register) all filters to Pelican.
Return a field created with the provided elements.
Create a list of records from the marcxml description.
Create a record object from the marcxml description.
Filter the given field.
Return a record where all the duplicate fields have been removed.
Return True if rec1 is identical to rec2.
Return the list of field instances for the specified tag and indications.
Add a new field into the record.
Delete the field with the given position.
Delete all/some fields defined with MARC tag 'tag' from record 'rec'.
Add the fields into the record at the required position.
Move some fields to the position specified by 'field_position_local'.
Delete all subfields with subfield_code in the record.
Return the the matching field.
Replace a field with a new field.
Return the subfield of the matching field.
Delete subfield from position specified.
Add subfield into specified position.
Modify subfield at specified position.
Move subfield at specified position.
Return first (string) value that matches specified field of the record.
Return the list of values for the specified field of the record.
Generate the XML for record 'rec'.
Generate the XML for field 'field' and returns it as a string.
Return the DOI(s) of the record.
Print a record.
Print a list of records.
Return the global and local positions of the first occurrence of the field.
Find subfield instances in a particular field.
Remove empty subfields and fields from the record.
Remove all non-empty controlfields from the record.
Order subfields from a record alphabetically based on subfield code.
Compare 2 fields.
Check if a field is well-formed.
Shift all global field positions.
Return true if MARC 'tag' matches a 'pattern'.
Check if the global field positions in the record are valid.
Sort the fields inside the record by indicators.
Sort a set of fields by their indicators.
Create a record object using the LXML parser.
Retrieve all children from node 'node' with name 'name'.
Iterate through all the children of a node.
Check and correct the structure of the record.
Return a warning message of code 'code'.
Compare twolists using given comparing function.
Parse an XML document and clean any namespaces.
Clean MARCXML harvested from OAI.
Converts the file associated with the file_name passed into a MP3 file.
Return a session for yesss.at.
Check for working login data.
Return the date of the article in file.
Get the MARCXML of the files in xaml_jp directory.
Attach fulltext FFT.
Convert the list of bibrecs into one MARCXML.
Yield single conversion objects from a MARCXML file or string.
Load configuration from config.
Try to match the current record to the database.
Keep only fields listed in field_list.
Clear any fields listed in field_list.
Add 035 number from 001 recid with given source.
Add a control-number 00x for given tag with value.
650 Translate Categories.
Determine whether the desired version is a reasonable next version.
Retrieve the data for a reference.
Adds the reference to the record
Downloads a file from the FTP server to target folder
Changes the working directory on the server.
Creates a folder in the server
Delete a file from the server.
Delete a folder from the server.
Returns the filesize of a file
Uploads a file on the server to the desired location
Add a mail to the queue to be sent.
Parse an HTTP accept-like header.
Parse a `Cache-Control`_ header, returning a dictionary of key-value pairs.
Parse a content type like header.
Parse a HTTP Link header.
Parse a comma-separated list header.
Parse a named parameter list in the "common" format.
Parse a HTTP Link header.
Add a new value to the list.
Parses a block of text indiscriminately
All of the class properties are written to a text file
Writes the params to file that skytool_Free needs to generate the sky radiance distribution.
Write the params to file that surftool_Free needs to generate the surface facets
Write the params to file that surftool_Free needs to generate the surface facets
Read the phytoplankton absorption file from a csv formatted file
Read the pure water absorption from a csv formatted file
Read the pure water scattering from a csv formatted file
Calculates the total scattering from back-scattering
Calculates the total absorption from water, phytoplankton and CDOM
Calculates the total attenuation from the total absorption and total scattering
Meta method that calls all of the build methods in the correct order
Loads a text file to a python dictionary using '=' as the delimiter
Reads in a PlanarRad generated report
Renew or get a token to use for transactions with the Midas Server     instance.
Create a bitstream in the given item.
Function to recursively upload a folder and all of its descendants.
Descend a path to return a folder id starting from the given folder id.
Get a folder id from a path on the server.
Download a folder to the specified path along with any children.
Download the requested item to the specified path.
Recursively download a file or item from the Midas Server instance.
Do the generic processing of a request to the server.
List the folders in the users home area.
Get the default API key for a user.
List the public users in the system.
Get a user by the first and last name of that user.
Get a user by the first and last name of that user.
Get a user by the email of that user.
Create a new community or update an existing one using the uuid.
Get a community based on its name.
Get a community based on its id.
Get the non-recursive children of the passed in community_id.
List all communities visible to a user.
Get the attributes of the specified folder.
Get the non-recursive children of the passed in folder_id.
Delete the folder with the passed in folder_id.
Move a folder to the destination folder.
Create an item to the server.
Get the attributes of the specified item.
Download an item to disk.
Delete the item with the passed in item_id.
Get the metadata associated with an item.
Set the metadata associated with an item.
Share an item to the destination folder.
Move an item from the source folder to the destination folder.
Return all items with a given name and parent folder id.
Return all items with a given name and parent folder name.
Create a link bitstream.
Generate a token to use for upload.
Get the resources corresponding to a given query.
Add a Condor DAG to the given Batchmake task.
Extract DICOM metadata from the given item
Log in to get the real token using the temporary token and otp.
Search item metadata using Apache Solr.
Associate a result item with a particular scalar value.
Associate a result item with a particular scalar value.
Create a new scalar data point.
Obtain particular version of the doc at key.
Find a hash value for the linear combination of invocation methods.
Connects to a Siemens S7 PLC.
Takes a list of signals and sets a handler for them
Default handler, a generic callback method for signal processing
Run all status tasks, then run all tasks in the resume queue
Register a function/method to be called when execution is aborted
Returns a list of available drivers names.
Fetch time series data from OpenTSDB
Fetch and sort time series data from OpenTSDB
Prints each item from an iterable.
Extract function signature from an existing partial instance.
Interpolates input and output values for `pin`.
Sets the output to the given value.
Integrate SIR epidemic model
Return the URL of the server.
commands.getoutput() replacement that also works on windows.
Create coverage reports and open them in the browser.
Sort keys for xpi files
Return an exception given status and error codes.
Read one VLQ-encoded integer value from an input data stream.
Read a table structure.
Parse the user data header portion of the replay.
Transform duration into a human-readable form.
Print a summary of the game details.
This function displays an error message when a wrong value is typed.
The following opens the log file of PlanarRad.
The following gets back coordinates of the mouse on the canvas.
Sign this with a private key
either invalid or one of quorum, noquorum, quorumpossible
Convert the transient block to a :class:`ethereum.blocks.Block`
setup a timeout for waiting for a proposal
make privkeys that support coloring, see utils.cstr
encode args for method: method_id|data
create an object which acts as a proxy for the contract on the chain
Retrieve the last analog data value received for the specified pin.
Set the specified pin to the specified value.
Set the specified pin to the specified value.
Disables analog reporting for a single analog pin.
Enables analog reporting. By turning reporting on for a single pin.
Get the stepper library version number.
Write data to an i2c device.
This method retrieves the i2c read data as the result of an i2c_read() command.
Configure a pin as a servo pin. Set pulse min, max in ms.
Configure stepper motor prior to operation.
Move a stepper motor for the number of steps at the specified speed
open the serial port using the configuration data         returns a reference to this instance
write the data to the serial port             return: None
Set the brightness level for the entire display
Write the entire buffer to the display
Set all led's to off.
Use requests to fetch remote content
Find image URL in background-image
Find image URL in <img>'s src attribute
Find image URL in <a>'s href attribute
Decondition an image from the VGG16 model.
Condition an image for use with the VGG16 model.
Create a function for the response of a layer.
Get symbolic output of a layer.
Finishes the load job. Called automatically when the connection closes.
Load a single row into the target table.
Monkey-patch compiler to allow for removal of default compiler flags.
Retrieve the decrypted value of a key in a giraffez         configuration file.
Set a decrypted value by key in a giraffez configuration file.
Display results in table format
Execute commands using CLIv2.
Return a :code:`dict` of connections from the configuration settings.
Retrieve a connection by the given :code:`dsn`, or the default connection.
Retrieve a column from the list with name value :code:`column_name`
Serializes the columns into the giraffez archive header         binary format::
Sets the current encoder output to Python `str` and returns         a row iterator.
Convert string with optional k, M, G, T multiplier to float
Convert string with SoapySDR device settings to dict
Wrap text to terminal width with default indentation
Setup command line parser
Wait for all PSD threads to finish and return result
Write PSD of one frequncy hop (asynchronously in another thread)
Read data from file-like object
Write data to file-like object
Submits a callable to be executed with the given arguments.
Convert integration time to number of repeats
read_byte(addr) -> result
read_byte_data(addr, cmd) -> result
read_word_data(addr, cmd) -> result
read_block_data(addr, cmd) -> results
block_process_call(addr, cmd, vals) -> results
read_i2c_block_data(addr, cmd, len=32) -> results
Return the node name where the ``name`` would land to
Return the node where the ``name`` would land to
Return the encoding, idletime, or refcount about the key
Move ``value`` from set ``src`` to set ``dst``         not atomic
Sets each key in the ``mapping`` dict to its corresponding value
Returns a list of values ordered identically to ``*args``
Rename key ``src`` to ``dst``
Rename key ``src`` to ``dst`` if ``dst`` doesn't already exist
Returns a list of keys matching ``pattern``
Returns the number of keys in the current database
Return a set of datetimes, after filtering ``datetimes``.
Return a datetime with the same value as ``dt``, to a         resolution of days.
Return a datetime with the same value as ``dt``, to a         resolution of weeks.
Return the starting datetime: ``number`` of months before ``now``.
Return a set of datetimes that should be kept, out of ``datetimes``.
Return a set of datetimes that should be deleted, out of ``datetimes``.
Return a set of dates that should be kept, out of ``dates``.
Return a set of date that should be deleted, out of ``dates``.
Prepare the date in the instance state for serialization.
Returns the bit specified from the address.
Writes the value given to the bit in the address specified.
Wait until a file exists.
When deactivated the :class:`PortEventListener` will not run         anything.
Get package version from installed distribution or configuration file if not     installed
Add number of photos to each gallery.
Set currently authenticated user as the author of the gallery.
Check the status of the incoming response, raise exception if status is not 200.
Used by every other method, it makes a GET request with the given params.
Makes a request to prepare for file upload.
Used to make a remote file upload to openload.co
Checks a remote file upload to status.
Request a list of files and folders in specified folder.
issue a command to read the archive records after a known time stamp.
calculates the derived fields (those fields that are calculated)
setup system logging to desired verbosity.
use values in opts data to generate instances of publication services.
read command line options to configure program behavior.
Store keyword args to be written to output file.
Write output file.
Append a number to duplicate field names to make them unique.
Returns a NetworkX multi-graph instance built from the result set
Plot of a NetworkX multi-graph instance
Generates a pylab pie chart from the result set.
Generates a pylab plot from the result set.
Re-implementation of the permission_required decorator, honors settings.
Adds ``is_rendered`` to the context and the widget's context data.
Returns the widgets sorted by position.
Unregisters the given widget.
Saves the setting value into the database.
Checks if an update is needed.
Create a spark bolt array from a local array.
Create a spark bolt array of ones.
Join two bolt arrays together, at least one of which is in spark.
Check that arguments are consistent with spark array construction.
Filter array along an axis.
Apply a function across an axis.
Reduce an array along an axis.
Join this array with another array.
Converts a BoltArrayLocal into a BoltArraySpark
Converts a BoltArrayLocal into an RDD
Unstack array and return a new BoltArraySpark via flatMap().
Apply a function on each subarray.
Split values of distributed array into chunks.
Move indices in the keys into the values.
Apply an array -> array function on each subarray.
Apply a generic array -> object to each subarray
Remove the padding from chunks.
Obtain number of chunks for the given dimensions and chunk sizes.
Obtain slices for the given dimensions, padding, and chunks.
Obtain a binary mask by setting a subset of entries to true.
Repartitions the underlying RDD
Return the first element of an array
Apply a function across an axis.
Filter array along an axis.
Reduce an array along an axis.
Compute a statistic over an axis.
Return the mean of the array over the given axis.
Return the variance of the array over the given axis.
Return the standard deviation of the array over the given axis.
Return the sum of the array over the given axis.
Return the maximum of the array over the given axis.
Return the minimum of the array over the given axis.
Join this array with another array.
Return an array with the axes transposed.
Return the array with two axes interchanged.
Return an array with the same data but a new shape.
Remove one or more single-dimensional axes from the array.
Cast the array to a specified type.
Returns the contents as a local array.
Coerce singletons and lists and ndarrays to tuples.
Coerce a list of arguments to a tuple.
Checks to see if a list of axes are contained within an array shape.
Test that a and b are close and match in shape.
Use arguments to route constructor.
Reshape just the keys of a BoltArraySpark, returning a         new BoltArraySpark.
Transpose just the keys of a BoltArraySpark, returning a         new BoltArraySpark.
Reshape just the values of a BoltArraySpark, returning a         new BoltArraySpark.
Transpose just the values of a BoltArraySpark, returning a         new BoltArraySpark.
Create a local bolt array of ones.
Create a local bolt array of zeros.
Join a sequence of arrays together.
Equation B.8 in Clauset
Return the most likely alpha for the data given an xmin
Use the maximum L to determine the most likely value of alpha
Use the maximum likelihood to determine the most likely value of alpha
Calculate md5 fingerprint.
Calculate sha256 fingerprint.
Returns a tuple with (location of next data field, contents of requested data field).
Calculate two's complement.
Decode base64 coded part of the key.
Validates SSH public key.
Performs a step to establish the context as an initiator.
Performs a step to establish the context as an acceptor.
The set of mechanisms supported by the credential.
Return an :class:`OIDSet` of all the mechanisms supported by the underlying GSSAPI     implementation.
Factory function to create a new :class:`OIDSet` with a single member.
Transliterate `data` with the given parameters::
Detect the input's transliteration scheme.
Add a variety of default schemes.
converts an array of integers to utf8 string
set the value of delta to reflect the current codepage
Handle unrecognised characters.
A convenience method
Returns a file handle which is used to record audio
Load and generate ``num`` number of top-level rules from the specified grammar.
Build the ``Quote`` instance
Make the list of verbs into present participles
Return string with unicodenames (unless that is disabled)
Load the includes of an encoding Namelist files.
Return a dict with the data of an encoding Namelist file.
Detect infinite recursion and prevent it.
Returns the set of codepoints contained in a given Namelist file.
Returns list of CharsetInfo about supported orthographies
Return all XML <scanning-codepoints> in received XML
Return list of unicodes for <scanning-codepoints>
Refresh access token
Check the validity of the token :3600s
Calls right function according to file extension
Call right func to save data according to file extension
Write json data into a file
Get data from json file
Get data from .yml file
Write data into a .yml file
Return specific time an auth_hash will expire.
Update user data.
Retrieve the current user (or None) from the database.
Update subs to send added/removed for collections with user_rel.
Resolve and validate auth token, returns user object.
Check request, return False if using SSL or local connection.
Retrieve username from user selector.
Register a new user account.
Read encoded contents from specified path or return default.
Return an Alea ID for the given object.
Return Alea ID mapping for all given ids of specified model.
Return an object ID for the given meteor_id.
Return all object IDs for the given meteor_ids.
Return an object for the given meteor_id.
Generate ID if required.
Generate ID if required.
Set default value for AleaIdField.
Unset default value for AleaIdField.
Use schema_editor to apply any forward changes.
Use schema_editor to apply any reverse changes.
Update command options.
Convert a UNIX-style path into platform specific directory spec.
Return string of `length` elements chosen from `alphabet`.
Decorator to mark a method as an API endpoint for later registration.
Clear out cache for api_path_map.
Debug print name and val.
Validate arguments to be supplied to func.
Handle new websocket connection.
Handle closing of websocket connection.
Process a message received from remote.
Yield DDP messages from a raw WebSocket message.
Process a single DDP message.
Send `data` (raw string or EJSON payload) to WebSocket client.
DDP connect handler.
DDP ping handler.
DDP sub handler.
DDP unsub handler.
DDP method handler.
Inform client that WebSocket service is available.
Convert a string of format host[:port] into Addr(host, port).
Spawn greenlets for handling websockets and PostgreSQL calls.
Add WebSocketServer for each (host, port) in listen_addrs.
Setup WebSocketServer on listen_addr (host, port).
Add a backdoor (debug) server.
Run PostgresGreenlet and web/debug servers.
Run DDP greenlets.
Stop subtasks and let run() finish.
Generate a new ID, optionally using namespace of given `name`.
Import all `ddp` submodules from `settings.INSTALLED_APPS`.
Return an error dict for self.args and kwargs.
Emit a formatted log record via DDP.
Context manager which yields a function for adding multiple routes from a given module.
Add routes by an resource instance's methods.
Run an `aiohttp.web.Application` using gunicorn.
Standalone method to send a single gcm notification
Sends a GCM message with the given content type
Returns the instance of the given module location.
Wrapper for making an api request from giphy
Retrieves a specifc gif from giphy based on unique id
Uploads a gif from the filesystem to Giphy.
convert '(1,1)' to 'B2' and 'B2' to '(1,1)' auto-recongnize
Flips the negative eigenvalues of X.
Picks the elements of the basis to use for the given data.
Transform a list of bag features into its projection series         representation.
Get a live version string using versiontools
Fit the transformer on the stacked points.
Fit and transform the stacked points.
Compute the minimum and maximum to be used for later scaling.
Undo the scaling of X according to feature_range.
Choose the codewords based on a training set.
Transform a list of bag features into its bag-of-words representation.
Checks whether the array is either integral or boolean.
Sets up a :class:`ProgressBarHandler` to handle progess logs for     a given module.
Signal the start of the process.
r'''     Estimate the alpha divergence between distributions:         \int p^\alpha q^(1-\alpha)     based on kNN distances.
r'''     Estimates \int p^2 based on kNN distances.
Set up the different functions we need to call.
Ks as an array and type-checked.
Returns a version of X as a :class:`Features` object.
If unstacked, convert to stacked. If stacked, do nothing.
Make a Features object with no metadata; points to the same features.
Specify the data to which kernel values should be computed.
Compute kernels from X to :attr:`features_`.
Transform a list of bag features into a matrix of its mean features.
Start listening to the server
Connect to the server
Disconnect from the server
Send a command to the server
Read a block and return the result as XML
Retrieve the video feed by username         Returns:         gdata.youtube.YouTubeVideoFeed object
Displays a video in an embed player
Method for `Regenerate Key <https://m2x.att.com/developer/documentation/v2/keys#Regenerate-Key>`_ endpoint.
Method for `List Devices from an existing Distribution <https://m2x.att.com/developer/documentation/v2/distribution#List-Devices-from-an-existing-Distribution>`_ endpoint.
Method for `Add Device to an Existing Distribution <https://m2x.att.com/developer/documentation/v2/distribution#Add-Device-to-an-existing-Distribution>`_ endpoint.
Method for `List Devices from an existing Collection <https://m2x.att.com/developer/documentation/v2/collections#List-Devices-from-an-existing-Collection>`_ endpoint.
Method for `Create/Update Data Stream <https://m2x.att.com/developer/documentation/v2/device#Create-Update-Data-Stream>`_ endpoint.
Method for `Create/Update Data Stream <https://m2x.att.com/developer/documentation/v2/device#Create-Update-Data-Stream>`_ endpoint.
Create an API Key for this Device via the `Create Key <https://m2x.att.com/developer/documentation/v2/keys#Create-Key>`_ endpoint.
Method for `Post Device Update (Single Values to Multiple Streams) <https://m2x.att.com/developer/documentation/v2/device#Post-Device-Update--Single-Values-to-Multiple-Streams->` endpoint.
Method for `Export Values from all Data Streams of a Device <https://m2x.att.com/developer/documentation/v2/device#Export-Values-from-all-Data-Streams-of-a-Device>`_ endpoint.
Method for `Search Values from all Data Streams of a Device <https://m2x.att.com/developer/documentation/v2/device#Search-Values-from-all-Data-Streams-of-a-Device>`_ endpoint.
Generic method for a resource's Update Metadata endpoint.
Generic method for a resource's Update Metadata Field endpoint.
Generic method for a resource's Update endpoint.
Method for `Update Data Stream <https://m2x.att.com/developer/documentation/v2/device#Create-Update-Data-Stream>`_ endpoint.
Read the first feature from the geojson and return it as a Polygon         object.
Set the fields of this class with the metadata of the analysed         changeset.
Add suspicion reason and set the suspicious flag.
Execute the count and verify_words methods.
Verify the fields source, imagery_used and comment of the changeset         for some suspect words.
Verify if the software used in the changeset is a powerfull_editor.
Load a list of trees from a Newick formatted string.
Serialize a list of trees in Newick format.
Load a list of trees from an open Newick formatted file.
Load a list of trees from a Newick formatted file.
Parse a Newick formatted string into a `Node` object.
Create a new `Node` object.
The representation of the Node in Newick format.
Return a unicode string representing a tree in ASCII art fashion.
Apply a function to matching nodes in the (sub)tree rooted at self.
Set the name of all non-leaf nodes in the subtree to None.
Set the name of all leaf nodes in the subtree to None.
Clear all comments in json_str.
Start asynchronous HTTP Server on an individual process.
Raises an exception if the given app setting is not defined.
Returns the value of the argument with the given name.
Returns a list of the arguments with the given name.
Gets the value of the cookie with the given name, else default.
Deletes the cookie with the given name.
Returns the OAuth parameters as a dict for the given request.
Fetches the given relative API path, e.g., "/bret/friends"
Makes a Facebook API REST request.
Handles the login for the Facebook user, returning a user object.
Fetches the given relative API path, e.g., "/btaylor/picture"
Parses a multipart/form-data body.
Parse a Content-type like header.
Adds a new value for the given key.
Returns all values for the given header as a list.
Returns an iterable of all (name, value) pairs.
Updates the dictionary with a single header line.
Returns a dictionary from HTTP header text.
Converts a name to Http-Header-Case.
Converts a string argument to a byte string.
Converts a string argument to a unicode string.
Converts a string argument to a subclass of basestring.
Walks a simple data structure, converting byte strings to unicode.
Generator over all subclasses of a given class, in depth-first order.
Return words from <tokens> that are most closely related to <word>.
Compare vectors. Borrowed from A. Parish.
Generate a json file for each txt file in the /data/corpora directory.
Accept either strings or Gods as inputs.
Print parents' names and epithets.
Returns all the information regarding a specific stage run
Returns:           bool: True if `content_type` is `application/json`
Returns:           `str` when not json.           `dict` when json.
Performs a HTTP request to the Go server
Make the request appear to be coming from a browser
Returns an instance of :class:`Stage`
Return a dict as a list of lists.
Schedule a pipeline run
Helper to instantiate an :class:`gocd.api.artifact.Artifact` object
Yields the output and metadata from all jobs in the pipeline
Helper to instantiate a :class:`gocd.api.stage.Stage` object
Create template config for specified template name.
Returns a set of all pipelines from the last response
Serializes a dictionary into Appinfo data.     :param obj: A dictionary to serialize.     :return:
Write a GRO file.
Write a PDB file.
Determine molecule numbers for given total,      absolute and relative numbers
Adapt the size of the box to accomodate the lipids.
Write a basic TOP file.
Return a stream for a given resource file in the module.
Parse lipid definition from string:
Build/return a list of [(bead, x, y, z), ...]
Send a message to a particular user.
Send a message to a group of users.
action_blocks : action_blocks action_block
Checks the config.json file for default settings and auth values.
Verifies the profile name exists in the config.json file.
Retrieve auth from profile configuration and set in msg.auth attr.
Create a profile for the given message type.
Display the required items needed to configure a profile for the given     message type.
Get the required 'settings' from the user and return as a dict.
Get the required 'auth' from the user and return as a dict.
Create the profile entry.
Write the settings into the data portion of the cfg.
Write the settings into the auth portion of the cfg.
Build the message params.
Send the message via HTTP POST, default is json-encoded.
Set the message token/channel, then call the bas class constructor.
Factory function to return the specified message instance.
SlackPost input validator function.
Add a message to the futures executor.
Do some final preprocessing and send the message.
Lookup chat_id of username if chat_id is unknown via API call.
Build the message params.
send via HTTP Post.
Start sending the message and attachments.
Send the SMS/MMS message.         Set self.sid to return code of message.
Put the parts of the email together.
Add email header info.
Add body content of email.
Start session with email server.
Get an SMTP session with SSL.
Get an SMTP session with TLS.
Initialize application object.
Remove leading needle string (if exists).
Remove trailing needle string (if exists).
Covert name from CamelCase to "Normal case".
Format a time in seconds.
Remove tags from a file.
Save metadata tags.
Test for existence of ``needle`` regex within ``haystack``.
Validate keys and values.
Clear all keys from the comment.
Return a string representation of the data.
Read the chunks data
Removes the chunk from the file
Update the size of the chunk
Insert a new chunk at the end of the IFF file
Save ID3v2 data to the AIFF file
Completely removes the ID3 chunk from the AIFF file
Load stream and tag information from a file.
parse a C source file, and add its blocks to the processor's list
add the current accumulated lines and create a new block
Draw a string with the given font.
Draw a prepared :class:`GlyphLayout`
convert a series of simple words into some HTML text
analyze a simple word to detect cross-references and styling
convert words of a paragraph into tagged HTML text, handle xrefs
convert a code sequence to HTML
convert a field's content into some valid HTML
Parses the API responses for the     :py:meth:`route53.connection.Route53Connection.get_hosted_zone_by_id` method.
Save the metadata to the given filename.
Update all parent atoms with the new size.
Find a mapping that can apply to the given controller.  Returns None if unsuccessful.
Mutates any attributes on ``obj`` which are classes, with link to ``obj``.
Automatically hide setup() and teardown() methods, recursively.
Register a text key.
Sends the GET request to the Route53 endpoint.
Sends the POST request to the Route53 endpoint.
Sends the DELETE request to the Route53 endpoint.
APEv2 tag value factory.
Load tags from a filename.
Save changes to a file.
Remove tags from a file.
Given a ChangeSet, POST it to the Route53 API.
Draw a rectangular region of an image.
Replace old_pages with new_pages within fileobj.
Find the last page of the stream 'serial'.
Load file information from a filename.
Remove tags from a file.
Write tag data into the Theora comment packet/page.
Parses the API responses for the     :py:meth:`route53.connection.Route53Connection.create_hosted_zone` method.
process a block content and return a list of DocMarkup objects            corresponding to it
return the DocMarkup corresponding to a given tag in a block
Lock a file object 'safely'.
Convert a basestring to a valid UTF-8 str.
Parses a ChangeInfo tag. Seen in CreateHostedZone, DeleteHostedZone,     and ChangeResourceRecordSetsRequest.
Retrieves a :class:`Glyph` that renders the given character.
Calculates the width of the given string in this font.
Procesa TCU, CP, FEU diario.
Remove tags from a file.
Parse an ID3v1 tag, returning a list of ID3v2.4 frames.
Return an ID3v1.1 tag string from a dict of ID3v2.4 frames.
Read a certain number of bytes from the source file.
Load tags from a filename.
Return all frames with a given name (the list may be empty).
Delete all tags of a given kind; see getall.
Deprecated; use the add method.
Save changes to a file.
Remove tags from a file.
Convert older tags into an ID3v2.4 tag.
Convert older (and newer) tags into an ID3v2.3 tag.
Load stream and tag information from a file.
Release all resources associated with the sound.
Play the sound as a `one-shot`.
Set the loop points within the sound.
Parses the API responses for the     :py:meth:`route53.connection.Route53Connection.list_hosted_zones` method.
Compress the log message in order to send less bytes to the wire.
return the list of glyph names and their unicode values
filter `alist' by taking _out_ all glyph names that are in `filter
dump a given encoding
checks that a given file exists
builds a list of input files from command-line arguments
Render metadata block as a byte string.
Remove Vorbis comments from a file.
Load file information from a filename.
Save metadata blocks to a file.
Used to parse the various Values from the ResourceRecords tags on     most rrset types.
Parses the API responses for the     :py:meth:`route53.connection.Route53Connection.list_resource_record_sets_by_zone_id`     method.
Internal bookkeeping to handle nested classes
Register a user-defined text frame key.
Creates an XML element for the change.
Procesa los datos descargados correspondientes a un día `key_dia`.
Initiate log file.
Check if text Entry is valid (number).
Joins the map structure into HTML attributes.
Initializes an app to work with this extension.
Binds a navigation bar into this extension instance.
The arguments which will be passed to ``url_for``.
``True`` if current request has same endpoint with the item.
Calculates all of the metrics associated with the registered gadgets.
Resets the specified statistic's data (deletes it) for the given     frequency/ies.
Command handler for the "metrics" command.
Returns the GET array's contents for the specified variable.
Tries to extract a boolean variable from the specified request.
Gets the next colour in the Geckoboard colour list.
Returns the default GET parameters for a particular Geckoboard     view request.
Returns a number widget for the specified metric's cumulative total.
Shows a pie chart of the metrics in the uids[] GET variable array.
Returns the data for a line chart for the specified metric.
Returns a Geck-o-Meter control for the specified metric.
Returns a funnel chart for the metrics specified in the GET variables.
Returns all of the active statistics for the gadgets currently registered.
Get the context for this view.
Performs sanitation of the path after validating
Ensures the passed schema instance is compatible
Attaches a flask.Blueprint to the bundle
Returns the DottedRule that results from moving the dot.
Computes the FIRST set for every symbol in the grammar.
Checks if a bundle exists at the provided path
Attaches a bundle object
Return the antecedents and the consequent of a definite clause.
Return a list of all propositional symbols in x.
See if the clauses are true in a partial model.
Remove the sentence's clauses from the KB.
Updates the cache with setting values from the database.
Play an n-person, move-alternating game.     >>> play_game(Fig52Game(), alphabeta_player, alphabeta_player)     3
Return the value to player; 1 for win, -1 for loss, 0 otherwise.
Update a dict, or an object with slots, according to `entries` dict.
The distance between two (x, y) points.
Try to find some reasonable name for the object.
Open a file based at the AIMA root directory.
Number of bits to represent the probability distribution in values.
Return a predictor that takes a weighted vote.
Return the value with the greatest total weight.     >>> weighted_mode('abbaa', [1,2,3,1,2])     'b
Leave one out cross-validation over the dataset.
Generate a DataSet with n examples.
Compare various learners on various datasets using cross-validation.     Print results as a table.
Add an example to the list of examples, checking it first.
Return a copy of example, with non-input attributes replaced by None.
Return a random sample from the distribution.
Return true if we remove a value.
Solve a CSP by stochastic hillclimbing on the number of conflicts.
Return an instance of the Zebra Puzzle.
Return the number of conflicts var=val has with other variables.
Start accumulating inferences from assuming var=value.
Undo a supposition and all inferences from it.
Return a list of variables in current assignment that are in conflict
Assign var, and keep track of conflicts.
Print the queens and the nconflicts values (for debugging).
Print error and stop command
Find the best segmentation of the string of characters, given the     UnigramTextModel P.
Encodes text, using a code which is a permutation of the alphabet.
Index a whole collection of files.
Index the text of a document.
Compute a score for this word on this docid.
Present the results as a list.
Get results for the query and present them.
Search for a decoding of the ciphertext.
Returns a ``SettingDict`` object.
Returns the value of the named setting.
Returns the value of the named setting.
Solve an MDP by policy iteration [Fig. 17.7]
Return the state that results from going in this direction.
Convert a mapping from (x, y) to v into a [[..., v, ...]] grid.
Returns a ``SettingDict`` object for this queryset.
Creates and returns an object of the appropriate type for ``value``.
Returns ``True`` if this model should be used to store ``value``.
Print the board in a 2-d array.
List the nodes reachable in one step from this node.
Return a list of nodes forming the path from the root to this node.
Return a new individual crossing self and other.
Make a digraph into an undirected graph by adding symmetric edges.
Add a link from A to B of given distance, in one direction only.
Place the next queen at the given row.
Set the board, and find all the words in it.
The total score for the words found, according to the rules.
A reflex agent for the two-state vacuum environment. [Fig. 2.8]
Run the Environment for given number of time steps.
Return all things exactly at a given location.
Remove a thing from the environment.
Return all things within radius of location.
Move a thing to a new location.
Put walls around the entire perimeter of the grid.
Parse a list of words; according to the grammar.         Leave results in the chart.
Add edge to chart, and see if it extends or predicts another edge.
See what edges can be extended by this edge.
Returns a list of ``(Model, ModelAdmin)`` tuples for ``base_model``         subclasses.
A decision-theoretic agent. [Fig. 13.1]
Return the node for the variable named var.         >>> burglary.variable_node('Burglary').variable         'Burglary
Multiply two factors, combining their variables.
Make a factor eliminating var by summing over its values.
Return my probabilities; must be down to one variable.
Wait for x seconds             each wait command is 100ms
Get/decode/validate json from request
Validation data by specific validictory configuration
Return json from querying Web Api
:param images: nhwc     :return:
:param clspatch:     :param args:     :param kwargs:     :return:
slic args :     n_segments=100, compactness=10., max_iter=10,     sigma=0, spacing=None,     multichannel=True, convert2lab=None, enforce_connectivity=True,     min_size_factor=0.5, max_size_factor=3, slic_zero=False
slic args :     n_segments=100, compactness=10., max_iter=10,     sigma=0, spacing=None,     multichannel=True, convert2lab=None, enforce_connectivity=True,     min_size_factor=0.5, max_size_factor=3, slic_zero=False
contextmanager for PlotMovieWriter     Example:
get user input without echo
getProcessOwner - Get the process owner of a pid
scanProcessForCwd - Searches a given pid's cwd for a given pattern
scanAllProcessesForCwd - Scans all processes on the system for a given search pattern.
scanProcessForMapping - Searches a given pid's mappings for a certain pattern.
scanAllProcessesForMapping - Scans all processes on the system for a given search pattern.
scanAllProcessessForOpenFile - Scans all processes on the system for a given filename
Get input from a list of choices (q to quit)
Get a multi-line string as input
Get a list of strings as input
Get an output file name as input
Create and connect to socket for TCP communication with hub.
Send TCP command to hub and return response.
Receive TCP response, looping to get whole thing or timeout.
Get current light data, set and return as list of Bulb objects.
Return the color property as list of [R, G, B], each 0-255.
Set brightness of bulb.
Set color and brightness of bulb.
Update light objects to their current values.
put job if possible, non-blocking         :param fun:         :param args:         :param kwargs:         :return:
read lines from a textfile     :param filepath:     :return: list[line]
read file as is
return image size (height, width)     :param fname:     :return:
Clean up after ourselves, removing created files.
Get an instance of PIL.Image from the given file.
Generate indexes and run server from the given directory downwards.
get caller's __name__
call class instance method for initial setup ::
USE carefully ^^
:param anglerange:     :param imagez:     :return:
depthmask : shape of [batch, h, w]
Returns the roster table for the given year.
Returns the over/under for the game as a float, or np.nan if not         available.
Returns a dictionary of weather-related info.
Returns a dataframe of the play-by-play data from the game.
Returns the linescore for the game as a DataFrame.
Returns a dataframe of the play-by-play data from the game.
Returns a unique identifier for a class instantiation.
Returns the age of the player on a given date.
Returns the player's handedness.         :returns: 'L' for left-handed, 'R' for right-handed.
Returns a DataFrame of per-36-minutes stats.
Returns a DataFrame of per-100-possession stats.
Returns a DataFrame of shooting stats.
Returns a DataFrame of play-by-play stats.
Returns a table of a player's basic game-by-game stats for a season.
Parse play details from a play-by-play string describing a play.
TODO: Docstring for clean_multigame_features.
TODO: Docstring for get_sparse_lineups.
Docstring will be filled in by __init__.py
Converts kwargs given to GPF to a querystring.
Convenience function that creates a block matrix with the specified     blocks.
Returns the adjacency matrix of a bipartite graph whose biadjacency     matrix is `A`.
Cleans up the features collected in parse_play_details.
Returns the real name of the franchise given the team ID.
Returns the roster table for the given year.
Returns a DataFrame with schedule information for the given year.
Returns the SRS (Simple Rating System) for a team in a year.
Returns the coach ID for the team's OC in a given year.
Returns the coach ID for the team's DC in a given year.
Returns the name of the offensive scheme the team ran in the given         year.
Returns a Series (dict-like) of the team's opponent's stats from the         team-season page.
Gets the HTML for the given URL using a GET request.
Parses a table from sports-reference sites into a pandas dataframe.
Converts a relative URL to a unique ID.
Docstring will be filled in by __init__.py
Converts kwargs given to PSF to a querystring.
Returns the result of incrementing `version`.
Gets the current version from the specified file.
Prints the specified message and exits the program with the specified     exit status.
Main function for the processes that read from the HDF5 file.
Wait until all processes have reached the barrier.
Wait until all processes have reached the barrier.
Close the queue, signalling that no more data can be put into the queue.
Get a block of data from the node at path.
Render data with template and then write to path
Replace '../' leaded url with absolute uri.
Indexes the row based on the request parameters.
Returns the row the view is displaying.
The paginator instance associated with the view, or `None`.
Return a single page of results, or `None` if pagination is disabled.
parse config, return a dict
text: unicode text to render
parse post source files name to datetime object
run a server binding to port
Deploy new blog to current directory
Touch a new post in src/
Clean htmls rux built: `rm -rf post page index.html`
Parse a stream.
Write to a stream.
Read a varint from file, parse it, and return the decoded integer.
Close the stream.
Write down buffer to the file.
Return a BlockContext instance of all the {% block %} tags in the template.
Parse a alias:block_name string into separate parts.
Temporarily update the context to use the BlockContext for the given alias.
Find the first matching block in the current block_context
Load a series of widget libraries.
Return a list of widget names for the provided field.
Allow reuse of a block within a template.
When dealing with optgroups, ensure that the value is properly force_text'd.
Set a list of exceptions that should be ignored inside the wait loop.
convert seconds to a pretty "d hh:mm:ss.s" format
Send a message to a list of users without passing through `django.contrib.messages`
Send a message to all users aka broadcast.
Mark all message instances for a user as read.
Mark all messages as read (i.e. delete from inbox) for current logged in user
Mark the message as read (i.e. delete from inbox)
Renders a list of unread stored messages for the current user
Renders a list of unread stored messages for the current user
Renders a list of archived messages for the current user
Retrieve unread messages for current user, both from the inbox and         from other storages
Write a command to the receiver and read the value it returns.
Send a command string to the amplifier.
Return the status of the device.
Power the device off.
Power the device on.
Set volume level of the device. Accepts integer values 0-200.
Select a source from the list of sources.
Write a command to the receiver and read the value it returns.
Configure an object with a user-supplied factory.
Uploads an image file to Imgur
Return true if the IP address is in dotted decimal notation.
Return true if the IP address is in binary notation.
Return true if the IP address is in octal notation.
Return true if the IP address is in decimal notation.
Function internally used to check if the given netmask     is of the specified notation.
Return true if the netmask is in bits notatation.
Return true if the netmask is in wildcard bits notatation.
Binary to decimal conversion.
Internally used to check if an IP/netmask is in the given notation.
Convert among IP address notations.
Convert a netmask to another notation.
Set the IP address/netmask.
Return the hexadecimal notation of the address/netmask.
Return the binary notation of the address/netmask.
Return the octal notation of the address/netmask.
Prepare the item to be compared with this address/netmask.
Subtract two IP addresses.
Return the bits notation of the netmask.
Return the wildcard bits notation of the netmask.
Set the IP address and the netmask.
Change the current IP.
Change the current netmask.
Upload a file to S3 possibly using the multi-part uploader         Return the key uploaded
Copy a file from one bucket into another
Recursively upload a ``folder`` into a backet.
Lookup AQI database for station codes in a given city.
Request station data for a specific station identified by code.
The relative path to asset without suffix.         Example::
The list of asset extensions.         Example::
The format extension of asset.         Example::
The list of unknown extensions, which are actually parts of asset         filename. Example::
The list of compiler extensions.         Example::
The list of all processors (preprocessors, compilers,         postprocessors) used to build asset.
MIME type of the asset.
Implicit MIME type of the asset by its compilers.
Register :class:`~gears.processors.DirectivesProcessor` as         a preprocessor for `text/css` and `application/javascript` MIME types.
Register default compilers, preprocessors and MIME types.
Trigger an ``event`` on this channel
Connect to a Pusher websocket
Handle websocket incoming messages
Import settings from the given file system path to given settings instance.
Export the given settings instance to the given file system path.
Fetch the IDASettings instance for the curren plugin with directory scope.
Enumerate the keys found at any scope for the current plugin.
Decodes a limited set of HTML entities.
Encode data with specific algorithm
Decode data with specific algorithm
Add signature to data
Verify and remove signature
Verify and remove magic
Add header to data
Read header from data
Remove header from data
Read header version from data
Generate HMAC hash
Generate HMAC hash
Returns the response that should be used for any given exception.
Returns a given table for the given user.
Returns a list of tables for the given user.
Fetch packages and summary from Crates.io
Extracts the identifier from an item depending on its type.
Extracts the update time from an item.
Get crates in alphabetical order
Get a crate by its ID
Return the items from Crates.io API using pagination
Return the textual content associated to the Response object
Fetch questions from the Kitsune url.
Fetch questions from the Kitsune url
Retrieve all answers for a question from older to newer (updated)
Return the textual content associated to the Response object
Fetch items from the ReMo url.
Extracts the update time from a ReMo item.
Extracts the category from a ReMo item.
Retrieve all items for category using pagination
Returns a list of event data from submitted IO blocks.
Fetch events from the MozillaClub URL.
Retrieve all cells from the spreadsheet.
Get the events fields (columns) from the cells received.
Return data files in directory *dirname*
Calculates the md5-hash of the file.      :param file_path: full path to the file.
Load default permission factory.
Create Invenio-Records-UI blueprint.
Create Werkzeug URL rule for a specific endpoint.
Display record view.
r"""Display default view.
r"""Record serialization view.
Load test data fixture.
Close the socket to free system resources.
Remove the client from the users of the socket.
Send a Timer metric with the specified duration in milliseconds
Send a Gauge metric with the specified value
Send a GaugeDelta metric to change a Gauge by the specified value
Send a Set metric with the specified unique value
Return a batch client with same settings of the client
Return a client with same settings of the batch client
Send buffered metrics in batch requests
Return a TCP batch client with same settings of the TCP client
Send buffered metrics in batch requests over TCP
Return a TCPClient with same settings of the batch TCP client
Convert OpenMath object to Python
Convert Python object to OpenMath
Register a conversion from Python to OpenMath
Register a conversion from OpenMath to Python
Return list of choices's keys
Register form field data function.                  Could be used as decorator
Walk and dump (disasm) descriptor.
Find all missing imports in list of Pbd instances.
Return random value for CharField     >>> result = any_form_field(forms.CharField(min_length=3, max_length=10))     >>> type(result)     <type 'str'>
Return random value for DecimalField
Return random value for EmailField
Return random value for DateTimeField
Return random value for FloatField
Return random value for IntegerField
Return random value for TimeField
Return random value for ChoiceField
Return random value for MultipleChoiceField
Return one of first ten items for field queryset
Encodes an OpenMath object as an XML node.
Encodes an OpenMath element into a string.
Decodes a stream into an OpenMath object.
Decodes a stream into an OpenMath object.
Decodes an XML element into an OpenMath object.
Deploy the app to PYPI.
Deploy a version tag.
Return random value for BigIntegerField        >>> result = any_field(models.BigIntegerField())      >>> type(result)      <type 'long'>
Return random value for CharField        >>> result = any_field(models.CharField(max_length=10))      >>> type(result)      <type 'str'>
Return random value for DecimalField        >>> result = any_field(models.DecimalField(max_digits=5, decimal_places=2))      >>> type(result)      <class 'decimal.Decimal'>
Return random value for FloatField        >>> result = any_field(models.FloatField())      >>> type(result)      <type 'float'>
Return random value for IntegerField      >>> result = any_field(models.IntegerField())      >>> type(result)      <type 'int'>
Return random value for TimeField      >>> result = any_field(models.TimeField())      >>> type(result)      <type 'datetime.time'>
Evaluate an OpenMath symbol describing a global Python object
Apply the setstate protocol to initialize `inst` from `state`.
r"""         Helper function to build an OMS object                  EXAMPLES::
Convert a list of OM objects into an OM object
Convert a tuple of OM objects into an OM object
Decodes a PackBit encoded data.
Encodes data using PackBits encoding.
Write fasta_dict to fasta_file
Helper function to record and log an error message
Parse the gff file into the following data structures:
Transfer children from old_parent to new_parent
Check and normalise the value of precision (must be positive integer).
Format a given number.
Format a number into currency.
given a filename, return the ABFs ID string.
Determine the protocol used to record an ABF file
set the sweep and channel of an ABF. Both start at 0.
iterate over every sweep
read the header and populate self with information about comments
return the average of part of the current sweep.
create kernel based on this ABF info.
ensure the ./swhlab/ folder exists.
Given a list of list of dicts, return just the dicts.
returns len() of each item in a list, as a list.
Return all 'key' from a list of dicts. (or list of list of dicts)
Given a list (l) of dicts (d), return AV and SD.
given a key, return a list of values from the matrix with that key.
given a recarray, return it as a list of dicts.
Put 2d numpy data into a temporary HTML file.
return a list of Is where the data first crosses above threshold.
Return [{},{},{}] as a 2d matrix.
Try to format anything as a 2D matrix with column names.
save something to a pickle file
convert a dictionary to a pretty formatted string.
return an abf of the *FIRST* of every type of thing.
determine the comment cooked in the protocol.
convert silly C:\\names\\like\\this.txt to c:/names/like/this.txt
given an ABF file name, return the ABF of its parent.
given an ABF and the groups dict, return the ID of its parent.
given an ABF, find the parent, return that line of experiments.txt
given a path or list of files, return ABF IDs.
return an "FTP" object after logging in.
upload everything from localFolder into the current FTP folder.
use the GUI to ask for a string.
use the GUI to pop up a message.
use the GUI to ask YES or NO.
Import a blosc array into a numpy array.
Export a numpy array to a blosc array.
Add a workspace entry in user config file.
Remove workspace from config file.
List all available workspaces.
check out the arguments and figure out what to do.
Clone a repository.
Tells you if you have an old version of ndio.
Converts an array to its voxel list.
Converts a voxel list to an ndarray.
Execute update subcommand.
Set Console handler.
Execute command with os.popen and return output.
Import a png file into a numpy array.
Export a numpy array to a png file.
return list of time points (sec) of all AP events in experiment.
provide all stats on the first AP.
return a list of [stamp, project] elements.
Gets the block-size for a given token at a given resolution.
Get a RAMONVolume volumetric cutout from the neurodata server.
Get volumetric cutout data from the neurodata server.
Post a cutout to the server.
Accepts data in zyx. !!!
Plot two channels of current sweep (top/bottom).
if the module is in this path, load it from the local folder.
Import a TIFF file into a numpy array.
Export a numpy array to a TIFF file.
Load a multipage tiff into a single variable in x,y,z format.
Write config in configuration file.         Data must me a dict.
Clone repository from url.
protocol: membrane test.
protocol: vast IV.
protocol: repeated IC ramps.
protocol: repeated IC steps.
Get version from package resources.
call processAbf() for every ABF in a folder.
make sure a figure is ready.
save the existing figure. does not close it.
plot every sweep of an ABF file (with comments).
plot every sweep of an ABF file.
plot the current sweep protocol.
plot the protocol of all sweeps.
create and save a two column frames HTML file.
wrap HTML in a top and bottom (with css) and save to disk.
Return the status-code of the API (estimated using the public-tokens         lookup page).
Requests a list of next-available-IDs from the server.
Call the restful endpoint to merge two RAMON objects into one.
Get the propagate status for a token/channel pair.
Creates a project with the given parameters.
Lists a set of projects related to a dataset.
Arguments:             name (str): Name of dataset to delete
Create a new channel on the Remote, using channel_data.
Show specific workspace.
Show details for all workspaces.
Get the base URL of the Remote.
Ping the server to make sure that you can access the base URL.
given a list of files, return a dict organized by extension.
populate class properties relating to files in the folder.
generate a data view for every ABF in the project folder.
convert every .image we find to a ./swhlab/ image
hyperpolarization step. Use to calculate tau and stuff.
increasing ramps in (?) pA steps.
A custom save method that handles figuring out when something is activated or deactivated.
Write to file_handle if supplied, othewise print output
A helper method that supplies the root directory name given a         timestamp.
Runs the review process for all the launchers.
Helper to prompt the user for input on the commandline.
return "YYYY-MM-DD" when the file was modified.
Converts a dense annotation to a DAE, using Marching Cubes (PyMCubes).
Converts a dense annotation to a obj, using Marching Cubes (PyMCubes).
Converts a dense annotation to a .PLY, using Marching Cubes (PyMCubes).
show basic info about ABF class variables.
read the ABF header and save it HTML formatted.
use 1 colormap for the whole abf. You can change it!.
generate sweepX (in seconds) to match sweepY
save any object as /swhlab4/ID_[fname].pkl
save any object from /swhlab4/ID_[fname].pkl
Guess the appropriate data type from file extension.
Reads in a file from disk.
Converts in_file to out_file, guessing datatype in the absence of     in_fmt and out_fmt.
Builds a graph using the graph-services endpoint.
Compute invariants from an existing GraphML file using the remote         grute graph services.
Convert a graph from one GraphFormat to another.
Return the fields specified in the pattern using Python's         formatting mini-language.
Loads the files that match the given pattern.
Load the file contents into the supplied dataframe using the         specified key and filetype.
Create a plot of one area of interest of a single sweep.
Reanalyze data for a single ABF. Also remakes child and parent html.
analyze every unanalyzed ABF in the folder.
create ID_plot.html of just intrinsic properties.
simple timer. returns a time object, or a string.
return the semi-temporary user folder
return the path of the last loaded ABF.
return the path of the last loaded ABF.
Check if the listener limit is hit and warn if needed.
Bind a listener to a particular event.
Add a listener that is only called once.
Remove a listener from the emitter.
Remove all listeners, or those of the specified *event*.
Schedule a coroutine for execution.
Execute a sync function.
Dispatch an event to a listener.
Call each listener for the event with the given arguments.
Get the number of listeners for the event.
Exports a RAMON object to an HDF5 file object.
Get a RAMONVolume volumetric cutout from the neurodata server.
Get volumetric cutout data from the neurodata server.
Post a cutout to the server.
Creates a project with the given parameters.
Create a new channel on the Remote, using channel_data.
Convert each TIF to PNG. Return filenames of new PNGs.
generate text to go inside <body> for single ABF page.
read experiment.txt and return a dict with [firstOfNewExp, color, star, comments].
expects a folder of ABFs.
Add a new dataset to the ingest.
Generate the dataset dictionary
Generate the project dictionary.
Genarate the project dictionary.
Identify the image size using the data location and other parameters
Verify the path supplied.
Try to post data to the server.
Arguments:             file_name(str : '/tmp/ND.json'): The file name to store the json to
Find path for given workspace and|or repository.
Get a list of public tokens available on this server.
Return the project info for a given token.
Insert new metadata into the OCP metadata database.
Adds a new subvolume to a token/channel.
simple example how to load an ABF file and plot every sweep.
run TIF_to_jpg() on every TIF of a folder.
Get a response object for a given url.
Returns a delete resquest object taking in a url and user token.
Ping the server to make sure that you can access the base URL.
create some fancy graphs to show color-coded variances.
return an array of times (in sec) of all APs.
Import a HDF5 file into a numpy array.
Export a numpy array to a HDF5 file.
Create an API subclass with fewer methods than its base class.
Whether a given method exists in the known API.
Try and convert matching Elements to unicode strings.
Handle an incoming message appropriately.
If you send a message directly to me
Create a new instance from the API token.
Format an outgoing message for transmission.
Get the WebSocket URL for the RTM session.
Generates the instructions for a bot and its filters.
Respond to a message on the current socket.
Check the first message matches the expected handshake.
Accepts list of [('executable_file_path', 'options')],     Returns first working executable_file_path
Get the imported task classes for each task that will be run
Get the options for each task that will be run
Adds a character matrix to DendroPy tree and infers gaps using     Fitch's algorithm.
cldf dumpdb <DATASET> <SQLITE_DB_PATH> [<METADATA_PATH>]
A user-friendly description of the handler.
Create a Parselet instance from s (str) containing         the Parsley script as YAML
Create a Parselet instance from s (str) containing         the Parsley script as JSON
Build the abstract Parsley tree starting from the root node         (recursive)
Build part of the abstract Parsley extraction tree
Extract values as a dict object following the structure         of the Parsley script (recursive)
Use CLDF reference properties to implicitely create foreign key constraints.
Create a URL for the specified endpoint.
Read codeml file.
Raise an appropriate error for a given response.
Truncate the supplied text for display.
Returns a cache key consisten of a username and image size.
Function to be called when saving or changing an user's avatars.
Returns a field object instance for a given PrefProxy object.
Updates field object with data from a PrefProxy object.
Returns locals dictionary from a given frame.
Prints file details in the current directory
Calculate a percentage.
Get slabs info.
Return the status of all servers.
Show the dashboard.
Show server statistics.
Show server slabs.
For every parameter, create a matcher if the parameter has an         annotation.
Dispatch a call. Call the first function whose type signature matches         the arguemts.
Convert a byte value into a human-readable format.
Do preparations before printing the first row                  Args:             *args: first row cells
Convert GRIB to Tif
Returns a dictionary with preferences for a certain app/module.
Binds PrefProxy objects to module variables used by apps as preferences.
Automatically discovers and registers all preferences available in all apps.
Marks a preference.
Add objects to the environment.
Replace any config tokens in the file's path with values from the config.
Get the path to the file relative to its parent.
Read and return the contents of the file.
Write data to the file.
Configure the Python logging module for this file.
Create the file.
Replace any config tokens with values from the config.
Return the path to this directory.
Remove the directory.
Prepare the Directory for use in an Environment.
Clean up children and remove the directory.
Find the path to something inside this directory.
List the contents of the directory.
Write to a file in the directory.
Read a file from the directory.
Add objects to the directory.
Save the state to a file.
Load a saved state file.
Clean up the saved state.
Generate the ``versionwarning-data.json`` file.
Recursively merge values from a nested dictionary into another nested     dictionary.
Return a ConfigNode object representing a child node with the specified         relative path.
Get the value represented by this node.
Update the configuration with new data.
Load the config and defaults from files.
Apply the config to a string.
Objective and gradient for the rosenbrock function
Return a list of buckets in MimicDB.
Add the bucket to MimicDB after successful creation.
Sync either a list of buckets or the entire connection.
Return the key from MimicDB.
Return None if key is not in the bucket set.
Return a list of keys from MimicDB.
Remove each key or key name in an iterable from the bucket set.
Remove key name from bucket set.
Return an iterable of keys from MimicDB.
Proximal operator for the l1-norm: soft thresholding
Minimize the proximal operator of a given objective using L-BFGS
Applies a proximal operator to the columns of a matrix
Adds a proximal operator to the list of operators
Decorates a function with the given docstring
Create :class:`OutgoingSMS` object and send SMS using Twilio.
Evaluate the files identified for checksum.
Check the integrity of the datapackage.json
Guess the filetype and read the file into row sets
Helper to make sure the given character is valid for a reference number
Extract the files to be added based on the includes
Run the executable and capture the input and output...
Run a specific command using the manager
Get metadata for a given file
Working directory for the repo
Add repo to the internal lookup table...
Lookup a repo based on username reponame
Run a shell command within the repo's context
Check if the datapackage exists...
Create the datapackage file..
Initialize an empty repository with datapackage.json
Clone a URL. Examples include:
Update metadata with the content of the files
Update metadata with the commit information
Update metadata with the action history
Collect information from the dependent repo's
Post to metadata server
Called when socket is read-ready
Called when socket is write-ready
Show details of available plugins
Load all plugins from dgit extension
Search for a plugin
Receives the serial data into the self._raw buffer         :return:
Do connection-based processing (I/O and timers)
Send a message containing the RPC method call
Assign addresses, properties, etc.
Return the authorative source of the link.
Return the authorative target of the link.
See Link Reject, AMQP1.0 spec.
Check if the delivery can be processed.
See Link Reject, AMQP1.0 spec.
Check if the delivery can be processed.
Create a new sender link.
Create link from request for a sender.
Create a new receiver link.
Create link from request for a receiver.
Check if a URL exists
Post to the metadata server
Initialize a repo-specific configuration file to execute dgit
Look through the local directory to pick up files to check
Materialize queries/other content within the repo.
Helper function to run commands
Initialize a Git repo
Delete files from the repo
Get the permalink to command that generated the dataset
Add files to the repo
Convert our Python object to JSON acceptable to Holvi API
Parse the hostname and port out of the server_address.
Create a TCP connection to the server.
Create a TCP listening socket for a server.
Handle I/O and Timers on a single Connection.
Receives the serial data into the self._raw buffer         :return:
Return source code based on tokens.
Decorator that prevents callbacks from calling into methods that are         not reentrant
Get a buffer of data that needs to be written to the network.
Rejects the SenderLink, and destroys the handle.
Clean up after connection failure detected.
Update the profile
Try the library. If it doesnt work, use the command line..
Run a shell command
Log all repo actions to .dgit/log.json
Get the commit history for a given dataset
Create fiji-macros for stitching all channels and z-stacks for a well.
Set self.path, self.dirname and self.basename.
List of paths to images.
Path to {ScanningTemplate}name.xml of experiment.
Get path of specified image.
Get list of paths to images in specified well.
Field columns for given well. Equivalent to --X in files.
Stitches all wells in experiment with ImageJ. Stitched images are         saved in experiment root.
Get OME-XML metadata of given field.
Get a list of stitch coordinates for the given well.
Select a font; size given in points
Get width of a string in the current font
Create a new droplet
Retrieve a droplet by id
Retrieve a droplet by name (return first if duplicated)
Change the size of this droplet (must be powered off)
Change the name of this droplet
wait for all actions to complete on a droplet
Send a request to the REST API
create request url for resource
Send a request for this resource to the API
Send list request for all members of a collection
Get a list of all domain records for the given domain name
Change the name of this domain record
Retrieve a single domain record given the id
Internal method to set the initial default font. Change              the font using set_font method.
Convenience method for just changing font size.
Data type may be "raw" or "percent"
Called by the PDFLite object to prompt creating              the page objects.
Returns a list of the pages that have              orientation changes.
Called by the PDFLite object to prompt creating              the font objects.
Creates reference images, that can be              drawn throughout the document.
Logs the user on to FogBugz.
return the absolute position of x,y in user space w.r.t. default user space
Select a font; size given in points
Get width of a string in the current font
Prompt the objects to output pdf code, and save to file.
Standard first line in a PDF.
Chop list_ into n chunks. Returns a list.
Test to see if the line can has enough space for the given length.
Test to see if the page has enough space for the given text height.
Create a copy, and return it.
Take a snapshot of a droplet
Don't use this, use document.draw_table
Creates a new label and returns the response
Get labels by name
Delete the specified label
Create a new tag
Create a new alert
Get alerts that match the alert type and args.
Update an alert
Retrieve the location of the themes directory from the location of this package
Get a specific log or log set
Find a slider attacker
Frees the memory used by all of the dynamically allocated C arrays.
Reads data from the socket.
Generator that reads a line of data from the server.
Generator that reads a block of data from the server.
Generator for the lines of an info (textual) response.
The complete content of an info response.
Call a command on the server.
Parse timezone to offset in seconds.
Convert timestamp string to time in seconds since epoch.
Convert timestamp string to a datetime object.
Convert timestamp string to time in seconds since epoch.
Convert timestamp string to a datetime object.
Convert timestamp string to time in seconds since epoch.
Convert timestamp string to a datetime object.
Convert timestamp string to a datetime object.
Convert timestamp string to time in seconds since epoch.
Convert timestamp string to time in seconds since epoch.
Parse a datetime to a unix timestamp.
Parse a datetime to a datetime object.
Fix the alert config .args() dict for the correct key name
Convenience method for posting
Convenience method for deleting
Convenience method for getting
List all scheduled_queries
List all tags for the account.
Get alert by name or id
Delete the specified InactivityAlert
Create the scheduled query
Unparse a range argument.
Parse a newsgroup info line to python types.
Parse a header line.
Parse a string a iterable object (including file like objects) to a     python dictionary.
Parse a dictionary of headers to a string.
Assets if the requested operations are allowed in this context.
Fills the response object from the passed data.
Run the tests that are loaded by each of the strings provided.
Return a docstring from a list of defaults.
Load kwargs key,value pairs into __dict__
Add the default values to the class docstring
Return the current value.
Return the symmertic error
Set free/fixed status
Set the value,bounds,free,errors based on corresponding kwargs
Load the metrics file from the given path
Create an instance using the result of the timezone() call in          "pytz".
Extract required fields from an array
Apply the criteria to filter out on the metrics required
Extracts the specific arguments of this CLI
Extracts the specific arguments of this CLI
Parse the querystring into a normalized form.
Return objects representing segments.
Make a call to the meter via JSON RPC
Set the value of this attribute for the passed object.
Paginate an iterable during a request.
Extracts the specific arguments of this CLI
option_group = "[" , expression , "]" ;
Set the value (and bounds) of the named parameter.
Return a list of Parameter objects
Return an array with the parameter values
Return an array with the parameter errors
Reset the value of all Derived properties to None
Read and return the request data.
Extracts the specific arguments of this CLI
Encode URL parameters
HTTP Get Request
HTTP Post Request
Make an API call to get the metric definition
Extracts the specific arguments of this CLI
Run the steps to execute the CLI
Gets the filesize of a remote file
Download remote .tar.bz file.
Make a callable returning True for names starting with the given prefix.
Extracts the specific arguments of this CLI
r''' Return a datetime.tzinfo implementation for the given timezone
Correct the timezone information on the given datetime
Extracts the specific arguments of this CLI
Extracts the specific arguments of this CLI
Escape-aware text splitting:
Point to a position in source code.
Find the first method this input dispatches to.
Find and evaluate/return the first method this input dispatches to.
Send output in textual format
Call back function to be implemented by the CLI.
Extracts the specific arguments of this CLI
Parse string to create an instance
Check off requirements that are met by name/version.
Check if requirement is already satisfied by what was previously checked
Create an instance from :class:`pkg_resources.Requirement` instance
Convert back to a :class:`pkg_resources.Requirement` instance
Bump dependencies using given requirements.
Restore content in target file to be before any changes
Extract only the required fields for the create/update API call
Extracts the specific arguments of this CLI
Transforms the object into an acceptable format for transmission.
Apply the criteria to filter out on the output required
Call back function to be implemented by the CLI.
Initialize based on a list of fortune files
Initialize based on a list of fortune files with set chances
virtue discovers and runs tests found in the given objects.
Extends a collection with a value.
special_handling = "?" , identifier , "?" ;
number = digit - "0" . {digit} ;
Parse string requirements into list of :class:`pkg_resources.Requirement` instances
Extracts the specific arguments of this CLI
Call back function to be implemented by the CLI.
Insert a value at the passed index in the named header.
Flush and close the stream.
Writes the given chunk to the output buffer.
Serializes the data into this response using a serializer.
Flush the write buffers of the stream.
Insert a value at the passed index in the named header.
The parse tree generated by the source.
The diretives parsed from the comments.
The python source of the parser generated from the input source.
Returns the python source code for the generated parser.
Builds the python source code for the Parser TokenType enum.
Builds the class definition of the parser.
Gets the entry_point value for the parser.
Generates the source code for a rule.
Gets the variable part of the source code for a rule.
Convert an expression to an Abstract Syntax Tree Node.
Convert a parse tree node into an absract syntax tree node.
Flattens a list of optree operands based on a pred.
Convert an abstract syntax tree to python source code.
Convert an abstract syntax operator tree to python source code.
Convert an AST terminal to python source code.
Convert an AST sepcial handling to python source code.
Finds all directives with a certain name, or that passes a predicate.
Custom flattening method for the parse tree.
A directive is a line in a comment that begins with '!'.
Extracts the specific arguments of this CLI
Extracts the specific arguments of this CLI
Extracts the specific arguments of this CLI
Handle the results of the API call
Get a new id if the provided one is None.
Configure handling of command line arguments.
Configure logging based on command line options
Run the steps to execute the CLI
Convert a list of nodes in postfix order to an Optree.
Pretty print an optree, starting at root.
Builds the URL configuration for this resource.
Extracts the specific arguments of this CLI
Dump an object in req format to the fp given.
Dump an object in req format to a string.
Load an object from the file pointer.
Loads an object from a string.
Extracts the specific arguments of this CLI
Extracts the specific arguments of this CLI
Load the metrics file from the given path
Read the file and parse JSON into dictionary
Prints out table header based on the size of the data in columns
Gets the maximum length of each column in the field table
Gets the maximum length of each column
Escape underscores so that the markdown is correct
Prints out table header based on the size of the data in columns
Prints out table rows based on the size of the data in columns
Prints out table rows based on the size of the data in columns
Look up each of the metrics and then output in Markdown
Bump dependency requirements using filter.
Reverse all bumpers
Expand targets by looking for '-r' in targets.
Creates the virtualenv for the project
Creates the Nginx configuration for the project
Creates scripts to start and stop the application
Dasherizes the passed value.
Redirect to the canonical URI for this resource.
Entry-point of the request / response cycle; Handles resource creation         and delegation.
Deserializes the text using a determined deserializer.
Serializes the data using a determined serializer.
Entry-point of the dispatch cycle for this resource.
Ensure we are authenticated.
Ensure that we're allowed to use this HTTP method.
Process an `OPTIONS` request.
Add specific command line arguments for this command
Extracts the specific arguments of this CLI
Output results in CSV format
Output results in structured JSON format
Output results in raw JSON format
Output results in JSON format
Call back function to be implemented by the CLI.
The default predicate used in Node.trimmed.
Pretting print a parse tree.
Returns a partial of _get_repetition that accepts only a text argument.
Return (leading whitespace, trailing text) if ignore_whitespace is true, or ("", text) if   False.
Returns the number of characters at the beginning of text that are whitespace.
Trim a ParseTree.
Wraps the decorated function in a lightweight resource.
Use for streaming writes to a less process     Taken from pydoc.pipepager:     /usr/lib/python2.7/pydoc.py     and     /usr/lib/python3.5/pydoc.py
Extracts the specific arguments of this CLI
Return the list of all contained scope from global to local
Return the list of all contained scope from global to local
The current position of the cursor.
The index of the deepest character readed.
Puts the cursor on the next character.
Usefull string to compute error message.
Increment the cursor to the next character.
Save current position.
You could set the name after construction
Update internal counters
Update the Set with values of another Set
Create a new Set produce by the union of 2 Set
Update Set with common values of another Set
Create a new Set produce by the intersection of 2 Set
Remove values common with another Set
Create a new Set produce by a Set subtracted by another Set
Remove common values             and Update specific values from another Set
Create a new Set with values present in only one Set
Add it to the Set
Remove it but raise KeyError if not found
Retrieve all values
Retrieve the first Signature ordered by mangling descendant
Retrieve the last Signature ordered by mangling descendant
Get a signature instance by its internal_name
Retrieve a Set of all signature by symbol name
Retrieve the unique Signature of a symbol.         Fail if the Signature is not unique
Retrieve a Set of all signature by (return) type
Retrieve a Set of all signature that match the parameter list.         Return a pair:
Find an arrow (->)         aka a function able to translate something to t2
Normalize an AST nodes.
Debug method, help detect cycle and/or         other incoherence in a tree of Node
allow to completly mutate the node into any subclasses of Node
Check if given hit is withing the limits.
Compute a signature Using resolution!!!
Process the signature and find definition for type.
update self with cookie_string.
Deletes the specified file from the local filesystem.
Deletes the specified file from the given S3 bucket.
Saves the specified file to the local file system.
Build an enum statement
Add a mapping with key thing_name for callobject in chainmap with         namespace handling.
Attach a method to a class.
Attach a method to a parsing class and register it as a parser hook.
Attach a method to a parsing class and register it as a parser rule.
Attach a class to a parsing class and register it as a parser directive.
Allow to alias a node to another name.
Return the text value of the node
Save the current index under the given name.
Extract the string between saved and current index.
Merge internal rules set with the given rules
Evaluate a rule by name.
Evaluate the hook by its name
Read one byte in stream
Consume all the stream. Same as EOF in BNF.
Tell the clusterizer the meaning of the field names.
Tell the clusterizer the meaning of the field names.
Set the data type of the hits.
Set the data type of the cluster.
Create a tree.{Complement, LookAhead, Neg, Until}
Create a tree.Rule
Create a tree.Seq
Create a tree.Alt
Add a repeater to the previous sequence
Create a tree.Capture
Create a tree.Bind
Create a tree.Hook
Parse a int in parameter list
Parse a str in parameter list
Parse a char in parameter list
Parse a node name in parameter list
Parse a hook name
Parse a hook parameter
Add a directive in the sequence
Add a directive in the sequence
Allow to get the YML string representation of a Node.::
Provide a '.dot' representation of all State in the register.
write a '.dot' file.
write a '.png' file.
Provide a useful representation of the register.
Manage transition of state.
Only one Living State on the S0 of each StateRegister
Infer type on block is to type each of is sub-element
Infer type on the subexpr
Dump tag,rule,id and value cache. For debug.
Return list containing URIs with base URI.
Return absolute path at which item content can be accessed.
Return list of overlay names.
Store the given key:value pair for the item associated with handle.
Generates code for a rule.
Normalize a test expression into a statements list.
Generates python code for a scope.
Generates python code for an optional clause.
recurs into list for indentation
recurs into list for string computing
function that connect each other one sequence of MatchExpr.
main function for creating a bottom-up tree automata             for a block of matching statements.
Test if a node set with setint or setstr equal a certain value
Create a Grammar from a string
Create a Grammar from a file
Parse source using the grammar
Parse filename using the grammar
Set a node to a value captured from another node
get the value of subnode
Check all necessary system requirements to exist.
Create virtual environment.
Install library or project into virtual environment.
Iterate over dict items.
Iterate over dict keys.
r"""Bootstrap Python projects and libraries with virtualenv and pip.
Parse args from command line by creating argument parser instance and     process it.
Convert config dict to command line args line.
Print error message to stderr, using ANSI-colors.
Print message via ``subprocess.call`` function.
r"""Call given command with ``subprocess.call`` function.
Run post-bootstrap hook if any.
Save error traceback to bootstrapper log file.
Convert Python object to string.
Default serializer for json.
Get list of depositions (as iterator).
Dump the deposition object as dictionary.
Return the extension of fpath.
Add the extension ext to fpath if it doesn't have it.
Parses a file with a list of: <subject_file>:<subject_class_label>.
Creates a file where each line is <subject_file>:<subject_class_label>.
Joins path to each line in filelist
Deletes all files in filelist
Returns a folder path of path with depth given by folder_dept:
Returns the length of the file using the 'wc' GNU command
Merge two dictionaries.
Return a folder path if it exists.
Imports filetree and root_path variable values from the filepath.
Remove the nodes that match the pattern.
Return the number of nodes that match the pattern.
Converts an array-like to an array of floats
Return number of samples in array-like x.
Check that all arrays have consistent first dimensions.
Make arrays indexable for cross-validation.
Input validation for standard estimators.
Warning utility function to check that data type is floating point.
Convert an arbitrary array to numpy.ndarray.
Convert a FWHM value to sigma in a Gaussian kernel.
Convert a sigma in a Gaussian kernel to a FWHM value.
Create requests session with any required auth headers         applied.
Create requests session with AAD auth headers
Return a grid with coordinates in 3D physical space for `img`.
Return the header and affine matrix from a Nifti file.
Read a Nifti file and return as nipy.Image
Crops image to a smaller size
Create a new image of the same class as the reference image
Get BibDocs for Invenio 1.
Get BibDocs for Invenio 2.
Dump all BibDoc metadata.
Get bibdocs to check.
Return the h5py.File given its file path.
Return all dataset contents from h5path group in h5file in an OrderedDict.
Return the node of type node_type names within h5path of h5file.
Read the images, load them into self.items and set the labels.
Save the Numpy array created from to_matrix function to the output_file.
Call CLI command with arguments and returns its return value.
Dump the oauth2server tokens.
Upload the package to an index server.
Get UserEXT objects.
Dump the UserEXt objects as a list of dictionaries.
Open a volumetric file using the tools following the file extension.
Check that image is a proper img. Turn filenames into objects.
Dump the community object as dictionary.
Get record ids for Invenio 1.
Get record ids for Invenio 2.
Get all restrictions for a given collection, users and fireroles.
Get recids matching query and with changes.
Dump MARCXML and JSON representation of a record.
Dump the remote accounts as a list of dictionaries.
Search for dicoms in folders and save file paths into         self.dicom_paths set.
Update this set with the union of itself and dicomset.
Return a set of unique field values from a list of DICOM files
Returns a list of the dicom files within root_path
Return the attributes values from this DicomFile
Concatenate `images` in the direction determined in `axis`.
Pixelwise division or divide by a number
Return the image with the given `mask` applied.
Return an image with the binarised version of the data of `img`.
Return a z-scored version of `icc`.     This function is based on GIFT `icatb_convertImageToZScores` function.
Return the thresholded z-scored `icc`.
Check that image is a proper img. Turn filenames into objects.
Helper function for loading JSON data verbatim into model.
Write the content of the `meta_dict` into `filename`.
Write the data into a raw format file. Big endian is always used.
Copy .mhd and .raw files to dst.
Initialize app context for Invenio 2.x.
Cache for heavy function calls.
Get roles connected to an action.
SPSS .sav files to Pandas DataFrame through Rpy2
SPSS .sav files to Pandas DataFrame through savreader module
Dump the remote tokens as a list of dictionaries.
Load the oauth2server token from data dump.
Migrate a record from a migration dump.
Return the `rois_img` only with the ROI values from `roi_values`.     Parameters     ----------     rois_img: niimg-like
Return the largest connected component of a 3D array.
Return a sorted list of the non-zero unique values of arr.
Get the center of mass for each ROI in the given volume.
Pick one 3D volume from a 4D nifti image file
Dump the oauth2server Client.
Retrieve pandas object or group of Numpy ndarrays         stored in file
Store object in HDFStore
First set_mask and the get_masked_data.
Return the data masked with self.mask
Set self._smooth_fwhm and then smooths the data.         See boyle.nifti.smooth.smooth_imgs.
Return a vector of the masked data.
Save this object instance in outpath.
Setup logging configuration.
Return a dictionary of meta data from meta header file.
Return a dictionary of meta data from meta header file.
Return a 3D volume from a 4D nifti image file
Get user accounts from Invenio 2.
Dump the users as a list of dictionaries.
Load the raw JSON dump of the Deposition.
Create deposit Bucket, Files and SIPs.
Return a joblib.Memory object.
Return a joblib.Memory object.
Generate all combinations of the elements of iterable and its subsets.
Dump the community object as dictionary.
Use openpyxl to read an Excel file.
Return the workbook from the Excel file in `xl_path`.
Return a list of not null values from the `col_name` column of `df`.
Return a DataFrame with the duplicated values of the column `col_name`     in `df`.
Return the duplicated items in `values`
Load a single record into the database.
Inspect records in a migration dump.
Convert to string all values in `data`.
Create a tinyDB Query object with the format:     (where(`field_name`) `operator` `field_value`)
Update the unique matching element to have a given set of fields.
Check for get_data and get_affine method in an object
Return the shape of img.
Check that image is a proper img. Turn filenames into objects.
Returns true if array1 and array2 have the same shapes, false     otherwise.
Run as sample test server.
Start a new profiler.
Start a new profiler.
Stop the profiler.
Check if the profiler is running.
Load user from data dump.
Calculate image translations in parallel.
Append key-value pairs to msg, for display.
Thresholds a distance matrix and returns the result.
Checks if a config value is set to a valid bool value.
Set a config by name to a value.
Set AAD token cache.
Set AAD metadata.
Return index of the nth match found of pattern in strings
Generate a dcm2nii configuration file that disable the interactive     mode.
Transform a named tuple into a dictionary
Imports the contents of filepath as a Python module.
Copies the files in the built file tree map     to despath.
:param idset1:         :param idset2:
:param idset1:         :param idset2:
idset1_name: string         key of an idset_with_reference
Load a Nifti mask volume.
Load a Nifti mask volume and return its data matrix as boolean and affine.
Creates a binarised mask with the union of the files in filelist.
Create record based on dump.
Create a new record from dump.
Update an existing record.
Create persistent identifiers.
Delete a record and it's persistent identifiers.
Create a single file with all versions.
Delete the bucket.
Get files from data dump.
Check if record is deleted.
Load community featuring from data dump.
Create a client for Service Fabric APIs.
Dump data from Invenio legacy.
Check data in Invenio legacy.
Aggregate the rows of the DataFrame into a single value.
Subset only some of the columns of the DataFrame.
Modify some columns (i.e. apply a function) and add the         result to the table.
Pipeable grouping method.
Pipeable subsetting method.
Similar to :py:attr:`pos` but for the size instead.
Normalizes the given vector.          The vector given may have any number of dimensions.
Sets the animation to be used by the object.                  See :py:meth:`Actor.setAnimation()` for more information.
write the collection of reports to the given path
reserve a XML file for the slice at <relative_path>.xml
convert test reports into an xml file
Escape a single character
Escape a string so that it only contains characters in a safe set.
Adds a menu to the list of menus.
Copy the attributes from a source object to a destination object.
Returns DataFrameRow of the DataFrame given its index.
Query Wolfram Alpha and return a Result object
Return list of all Pod objects in result
Re-calculates the position of the Label.
Write tersoff potential file from parameters to string
Subset only some of the columns of the DataFrame.
Modify some columns (i.e. apply a function)          and add the result to the table.
Aggregate the rows of each group into a single value.
Redraws the background and any child widgets.
Make LTSV Reader for reading selected labels.
Make LTSV Reader for reading selected labels.
Checks if elements of set2 are in set1.
Checks if all elements from set2 are in set1.
Map a buffer region using this attribute as an accessor.
Draw vertices in the domain.
Helper method that calls all callbacks registered for the given action.
Returns the size of the layer, with the border size already subtracted.
Serialize object back to XML string.
Parse MARC XML document to dicts, which are contained in         self.controlfields and self.datafields.
Parse control fields.
Parse data fields.
Add new datafield into :attr:`datafields` and take care of OAI MARC         differencies.
.. deprecated::             Use :func:`get_subfields` instead.
Return content of given `subfield` in `datafield`.
Exports the mesh to the INP format.
Add the fields into the list of fields.
Returns the dimension of the embedded space of each element.
Returns the number of vertices of eache element according to its type/
Returns a dataframe containing volume and centroids of all the elements.
Returns the aspect ratio of all elements.
Makes a node set from an element set.
Converts a node set to surface.
Returns the mesh as a matplotlib.tri.Triangulation instance. (2D only)
Get the given param from each of the DOFs for a joint.
Set the given param for each of the DOFs for a joint.
Given an angle and an axis, create a quaternion.
Set the state of this body.
Set the rotation of this body using a rotation matrix.
Set the kinematic/dynamic attribute for this body.
Convert a body-relative offset to world coordinates.
Convert a point in world coordinates to a body-relative offset.
Convert a relative body offset to world coordinates.
Add a force to this body.
Add a torque to this body.
Connect this body to another one using a joint.
Set the target velocities for this object's degrees of freedom.
Set the CFM values for this object's degrees of freedom.
Set the CFM values for this object's DOF limits.
Set the ERP values for this object's DOF limits.
Set the linear axis of displacement for this joint.
A list of axes of rotation for this joint.
Create a new body.
Create a new joint that connects two bodies together.
Move one body to be near another one.
Set the states of some bodies in the world.
Determine whether the given bodies are currently connected.
Callback function for the collide() method.
Iterate over all ``<record>`` tags in `xml`.
Load and parse a source file.
Load and parse a source file.
Parse an AMC motion capture data file.
Traverse the bone hierarchy and create physics bodies.
Traverse the bone hierarchy and create physics joints.
Parse persons from given datafield.
Returns:             list: Authors represented as :class:`.Person` objects.
Get list of VALID ISBN.
Get list of VALID ISSNs (``022a``).
URL's, which may point to edeposit, aleph, kramerius and so on.
Returns:             PublicationType: :class:`.PublicationType` enum **value**.
r'''Create a callable that implements a PID controller.
Load a skeleton definition from a file.
Load a skeleton definition from a text file.
Load a skeleton definition from an ASF text file.
Set PID parameters for all joints in the skeleton.
Get a list of all current joint torques in the skeleton.
Get a list of the indices for a specific joint.
Get a list of the indices for a specific body.
Get the current joint separations for the skeleton.
Enable the joint motors in this skeleton.
Add torques for each degree of freedom in the skeleton.
Converts a list-like to string with given line width.
Returns an Abaqus INP formated string for a given linear equation.
Returns a set as inp string with unsorted option.
Load marker data from a CSV file.
Load marker data from a C3D file.
Process data to produce velocity and dropout information.
Load attachment configuration from the given text source.
Reposition markers to a specific frame of data.
Get a list of the distances between markers and their attachments.
Return an array of the forces exerted by marker springs.
Create and configure a skeleton in our model.
Load marker data and attachment preferences into the model.
Settle the skeleton to our marker data at a specific frame.
Iterate over a set of marker data, dragging its skeleton along.
Update the simulator to a specific frame of marker data.
Follow a set of marker data, yielding kinematic joint angles.
Move the body according to a set of torque data.
Returns the material definition as a string in Abaqus INP format.
Returns the material definition as a string in Abaqus INP format.
Returns the DNA/DNA melting temp using nearest-neighbor thermodynamics.
Draw all bodies in the world.
Writes a xy_report based on xy data.
Writes a field report and rewrites it in a cleaner format.
View the output of the datafeeds and/or notifications used in your DASHBOARDS
List components that are available on your machine
Get room stream to listen for messages.
Get list of users in the room.
Set the room name.
Set the room topic.
Post a message.
Build a call to use the new ``get_config`` function from args passed to     ``Config.__init__``.
Returns the value specified in the XDG_CONFIG_HOME environment variable         or the appropriate default.
Return an error message for use in exceptions thrown by         subclasses.
Return True if the last exception was thrown by a         Descriptor instance.
Create a connection with given settings.
Issue a POST request.
Issue a GET request.
Get URL used for authentication
Build a request for twisted
Issue a request.
Tells if this message is a text message.
Get a room by name.
e.g. ``200 OK``
Attach an observer.
Fetch new messages.
Called when a connection is made, and used to send out headers
Get a dictionary of CSL styles.
Cleanup code after asked to stop producing.
Send a block of bytes to the consumer.
Build headers for each field.
Returns file type for given file field.                  Args:             field (str): File field
Returns the file size for given file field.
Create the __set__ method for the descriptor.
Turn a funcs list element into a class object.
Generate a path value of type result_type.
Given an ASCII str, returns a path of the given type.
Generates a root component for a path.
Convert value to a numeric value or raise a ValueError         if that isn't possible.
replace all blocks in extends with current blocks
Set entity data
Parses a datetime string from "YYYY/MM/DD HH:MM:SS +HHMM" format
validates XML text
validates XML name
Get a clean text representation of presumed HTML.
Update acceleration. Accounts for the importance and         priority (order) of multiple behaviors.
Get a Murmur hash and a normalized token.
Collect all of the words to be indexed from a stream item.
Record index records for a single document.
Get strings that correspond to some hash.
Get document frequencies for a list of hashes.
Get stream IDs for a single hash.
Get stream IDs and term frequencies for a single hash.
Given a spinn3r feed, produce a sequence of valid StreamItems.
Given a single spinn3r feed entry, produce a single StreamItem.
Create a ContentItem from a node in the spinn3r data tree.
Read exactly a varint out of the underlying file.
Read some protobuf-encoded object stored in a single block         out of the file.
Parse the :class:`from_kvlayer` input string.
Retrieve a :class:`streamcorpus.StreamItem` from :mod:`kvlayer`.
Construct a tuple(begin, end) of one-tuple kvlayer keys from a     hexdigest doc_id.
Retrieve :class:`streamcorpus.StreamItem`s from :mod:`kvlayer`.
Retrieve stream ids from :mod:`kvlayer`.
Change working directory and restore the previous on exit
Return an Ice application with a default home page.
Run the application using a simple WSGI server.
Stop the simple WSGI server running the appliation.
Decorator to add route for a request with any HTTP method.
Send content of a static file as response.
Send content as attachment (downloadable file).
Return an error page for the current response status.
Check if there is at least one handler for *method*.
Resolve a request to a route handler.
Resolve a request to a wildcard or regex route handler.
Return a normalized form of the pattern.
Return the HTTP response body.
Add an HTTP header to response object.
Add a Set-Cookie header to response object.
Return the HTTP response status line.
Return the value of Content-Type header field.
Return the list of all values for the specified key.
return list of open files for current process
attempt a fetch and iteration over a work_unit.key path in s3
Return a list of non-empty lines from `file_path`.
Return an ordered 2-tuple containing a species and a describer.
Use when application is starting.
Catch a connection asyncrounosly.
Asyncronously wait for a connection from the pool.
Listen for an id from the server.
Respond when the server indicates that the client is out of sync.
Manage the response when the server rejects a message.
Create a new DataItem.
Allow tokens to modify the world for the duration of a with-block.
Morphological analysis for Japanese.
Scoring the similarity of two words.
Convert the Japanese to Hiragana or Katakana.
Extract unique representation from sentence.
Extract "keywords" from an input document.
Extract expression expressing date and time and normalize its value
Create a pipeline stage.
Create a list of indirect stages.
Create stages that are used for the pipeline.
Process a :class:`coordinate.WorkUnit`.
Run the pipeline.
Run all of the writers over some intermediate chunk.
addition of a number of months
ajusts to Business Day Convention "Modified Preceding" (not in 2006 ISDA Definitons).
Replace the top-level pipeline configurable object.
Make a WSGI app that has all the HTTPie pieces baked in.
iterate through tokens looking for near-exact matches to strings     in si.ratings...mentions
run tagger a child process to get XML output
iterate through ner_xml_path to fuse with i_chunk into o_chunk
Returns a Pattern that matches exactly n repetitions of Pattern p.
Replace all angle bracket emails with a unique key.
make a sortedcollection on body.labels
returns number of days for the given year and month
addition of a number of days
addition of a number of years
calculate difference between given dates in days
addition of a number of days
addition of a number of years
calculate difference between given dates in days
Initialize the application.
Close all connections.
Register a model in self.
Manage a database connection.
make a temp file of cleansed text
run child process to get OWPL output
iterate through the i_chunk and tmp_ner_path to generate a new     Chunk with body.ner
setup the config and load external modules
make a temp file of clean_visible text
Add external stages from the Python module in `path`.
Construct and configure a stage from known stages.
iterates through idx_bytes until a byte in stop_bytes or a byte     not in run_bytes.
Make a list of Labels for 'author' and the filtered hrefs &         anchors
yield all file paths under input_dir
Returns the current token if is found in the collection provided.          Fails otherwise.
Like many_until but must consume at least one of these.
fills the internal buffer from the source iterator
Returns the current (token, position) or (EndOfFile, EndOfFile)
generate the data objects for every task
get a random key out of the first max_iter rows
Run a game being developed with the kxg game engine.
Iterate over <FILENAME> XML-like tags and tokenize with nltk
Iterate over <s> XML-like tags and tokenize with nltk
Instantiates a Token from self._input_string[start:end]
parse the sentences and tokens out of the XML
Return database field type.
Parse value from database.
Convert a text stream ID to a kvlayer key.
Convert a kvlayer key to a text stream ID.
Get a kvlayer key from a stream item.
Parse the fsapi endpoint from the device url.
Create a session on the frontier silicon device.
Execute a frontier silicon API call.
Helper method for setting a value by using the fsapi API.
Helper method for fetching a text value.
Helper method for fetching a long value. Result is integer.
Helper method for fetching a list(map) value.
Check if the device is on.
Power on or off the device.
Get the label list of the supported modes.
Get the currently active mode on the device (DAB, FM, Spotify).
Set the currently active mode on the device (DAB, FM, Spotify).
Read the maximum volume level of the device.
Check if the device is muted.
Get the play status of the device.
Get the label list of the supported modes.
Build the parser that will have all available commands and options.
Mutably tag tokens with xpath offsets.
Convert stream item sentences to character ``Offset``s.
Convert character ``Offset``s to character ranges.
Roundtrip all Xpath offsets in the given stream item.
Record that `tag` has been seen at this depth.
Get an XPath fragment for this location.
Returns the one-based index of the current text node.
Call inkscape CLI with arguments and returns its return value.
Transform SVG file to PDF file
Transform SVG file to PNG file
Parse genotype from VCF line data
toIndex - An optional method which will return the value prepped for index.
_getReprProperties - Get the properties of this field to display in repr().
copy - Create a copy of this IRField.
Return a Jinja2 environment for where file_path is.
Fill the content of the document with the information in doc_contents.
Save the content of the .txt file in a text file.
Save the content of the .svg file in the chosen rendered format.
Save the content of the .text file in the PDF.
Convert XML 1.0 to MicroXML
getObj - Fetch (if not fetched) and return the obj associated with this data.
objHasUnsavedChanges - Check if any object has unsaved changes, cascading.
Check that a value has a certain JSON type.
Parse an input source with HTML text into an Amara 3 tree
Parse a fragment if markup in HTML mode, and return a bindery node
Load json or yaml data from file handle.
Load json from file handle.
Update internal dictionary object. This is meant to be an         analog for dict.update().
Return keys for object, if they are available.
Return keys for object, if they are available.
Append to object, if object is list.
Extend list from object, if object is list.
Return JSON representation of object.
Write composite object to file handle in JSON format.
Return JSON representation of object.
Return list of files in filetree.
delete - Delete all objects in this list.
save - Save all objects in this list
XPath-like string value of node
Append a node as the last child
Get google API credentials for user.
Create event start and end datetimes.
Create event in calendar with sms reminder.
Return the extension of fpath.
Add the extension ext to fpath if it doesn't have it.
Remove the files in workdir that have the given extension.
Convert a CSV file in `csv_filepath` into a JSON file in `json_filepath`.
Modify the content of `filepath`, replacing `old` for `new`.
Remove the 'tmp*.aux', 'tmp*.out' and 'tmp*.log' files in `output_dir`.     :param output_dir:
Outputs to a stream (like a file or request)
Outputs to a stream (like a file or request)
Outputs to a stream (like a file or request)
Outputs to a stream (like a file or request)
Run all parsing functions.
If next tag is link with same href, combine them.
Reject attributes not defined in ATTR_WHITELIST.
Remove non-self-closing tags with no children *and* no content.
get unicode string without any other content transformation.         and clean extra spaces
Create list of Alleles from VCF line data
Convert data to json string representation.
_toStorage - Convert the value to a string representation for storage.
_fromStorage - Convert the value from storage (string) to the value type.
FunctionCall : NAME FormalArguments
Handles LiteralObjects as well as computable arguments
Handles LiteralObjects as well as computable arguments
Handles LiteralObjects as well as computable arguments
Yields one boolean, whether the first string starts with the second
Yields one boolean, whether the first string contains the second
Yields the result of applying an expression to each item in the input sequence.
Replace known special characters to SVG code.
Merge `svg_file2` in `svg_file1` in the given positions `x_coord`, `y_coord` and `scale`.
Calls the `rsvg-convert` command, to convert a svg to a PDF (with unicode).
Parse command line argument and     output appropriate file type (csv or JSON)
Merge all the PDF files in `pdf_filepaths` in a new PDF file `out_filepath`.
Return the ElementTree of the SVG content in `filepath`     with the font content embedded.
make some basic checks on the inputs to make sure they are valid
make some basic checks on the function to make sure it is valid
setDefaultRedisConnectionParams - Sets the default parameters used when connecting to Redis.
toDict / asDict - Get a dictionary representation of this model.
pprint - Pretty-print a dict representation of this object.
diff - Compare the field values on two IndexedRedisModels.
hasSameValues - Check if this and another model have the same fields and values.
copyModel - Copy this model, and return that copy.
_rem_id_from_keys - Remove primary key from table    internal
_add_id_to_index - Adds an id to an index    internal
_rem_id_from_index - Removes an id from an index    internal
_peekNextID - Look at, but don't increment the primary key for this model.     Internal.
Internal for handling filters; the guts of .filter and .filterInline
count - gets the number of records matching the filter criteria
exists - Tests whether a record holding the given primary key exists.
allOnlyFields - Get the objects which match the filter criteria, only fetching given fields.
allOnlyIndexedFields - Get the objects which match the filter criteria, only fetching indexed fields.
get - Get a single value with the internal primary key.
getMultiple - Gets multiple objects with a single atomic operation
deleteOne - Delete one object
deleteByPk - Delete object associated with given primary key
deleteMultiple - Delete multiple objects
deleteMultipleByPks - Delete multiple objects given their primary keys
Returns a blox template from an html string
Returns a blox template from a file stream object
Returns a blox template from a valid file path
Cast an arbitrary object or sequence to a string type
Cast an arbitrary object or sequence to a number type
Cast an arbitrary sequence to a boolean type
Modify the encoding entry in the XML file.
Save `text` in a qrcode svg image file.
Save a `qrcode` object into `out_filepath`.     Parameters     ----------     qrcode: qrcode object
Call CLI command with arguments and returns its return value.
toBytes - Convert a value to bytes using the encoding specified on this field
Call PDFLatex to convert TeX files to PDF.
Like functools.partial but instead of using the new kwargs, keeps the old ones.
Called at the start of notebook execution to setup the environment.
Create an OrderedDict
Returns the envelope centroid as a (x, y) tuple.
Returns the intersection of this and another Envelope.
Returns a new envelope rescaled from center by the given factor(s).
Export the contents to a file as comma separated values.
Selects nuclei according to a condition on Z,N or M
Return a selection of the Table at positions given by ``nuclei``
Select nuclei which also belong to ``table``
Select nuclei not in table
Selects odd-odd nuclei from the table:
Selects odd-even nuclei from the table
Selects even-odd nuclei from the table
Selects even-even nuclei from the table
Calculate error difference
Calculates the derivative of the neutron separation energies:
Calculates the derivative of the neutron separation energies:
Chunk a text at the passage level
Create a numpy.ndarray with all observed fields and     computed teff and luminosity values.
Checks the arguments to brutefore and spawns greenlets to perform the bruteforcing.
Use a :class:`~bokeh.plotting.figure.Figure` and x and y collections     to create an H-R diagram.
Create a :class:`~bokeh.plotting.figure.Figure` to create an H-R     diagram using the cluster_name; then show it.
Create a :class:`~bokeh.plotting.figure.Figure` to create an H-R     diagram using the cluster_name; then show it.
Create an :class:`~bokeh.models.widgets.TextInput` using     the cluster.name as the default value and title.
Creates a tempfile and starts the given editor, returns the data afterwards.
Performs a bruteforce for the given users, password, domain on the given host.
Initialize a database.
Search the database for the given query. Will find partial matches.
Get the :class:`Domain <pwm.Domain>` object from a name.
Modify an existing domain.
Create a new domain entry in the database.
Returns a tuple of (xtile, ytile) from a (longitude, latitude) coordinate.
print information of a pathlib / os.DirEntry() instance with all "is_*" functions.
Set the access and modified times of the file specified by path.
Return the path always without the \\?\ prefix.
Print the given line to stdout
Gets the IP from the inet interfaces.
Create a pandas DataFrame from a numpy ndarray.
Extract messages from Handlebars templates.
Remove namespace in the passed document in place.
Retrieve the contents of the resource
Check to see if this URI is retrievable by this Retriever implementation
Retrieve the contents of the resource
Retrieve the contents of the resource
Format a select statement with specific columns
Alias for _assemble_with_columns
Format a select statement with specific columns
Execute a query with provided parameters
Handle provided columns and if necessary, convert columns to a list for          internal strage.
Execute a DML query
Execute a SELECT statement
Execute an INSERT statement using a python dict
Combines the files 1 and 2 into 3.
Runs the checker.py scripts to detect the os.
Exploits a single ip, exploit is based on the given operating system.
Create server instance with an optional WebSocket handler
Start serving HTTP requests
read label files. Format: ent label
write triples into a translation file.
write triples to file.
Prints an overview of the tags of the hosts.
Register nemo and parses annotations
Starts the loop to provide the data from jackal.
Creates a search query based on the section of the config file.
Replace isocode by its language equivalent
Take a string of form %citation_type|passage% and format it for human
Connect to a service to see if it is a http or https server.
Start an nmap process with the given args on the given ips.
Scans the given hosts with nmap.
Rename endpoint function name to avoid conflict when namespacing is set to true
Retrieve the best matching locale using request headers
Request the api endpoint to retrieve information about the inventory
Retrieve and transform a list of references.
Retrieve the passage identified by the parameters
Get siblings of a browsed subreference
Build member list for given collection
Retrieve the top collections of the inventory
Retrieve the text of the passage
Route for specific assets.
Create blueprint and register rules
Retrieve main parent collections of a repository
Render a route template and adds information to this route.
Register the app using Blueprint
Register filters for Jinja to use
Register plugins in Nemo instance
Handle a list of references depending on the text identifier using the chunker dictionary.
Obtains the data from the pipe and appends the given tag.
Returns the EPSG ID as int if it exists.
Write the current config to disk to store them.
Track the specified remote branch if it is not already tracked.
Checkout, update and branch from the specified branch.
Returns the interface name of the first not link_local and not loopback interface.
write_targets will write the contents of ips and ldap_strings to the targets_file.
Function that gets called on each event from pyinotify.
Terminate the processes.
Retrieve annotations from the query provider
Make breadcrumbs for a route
Retrieves the uuid of the given template name.
Removes a tag from this object
Route to retrieve contents of an annotation resource
Route to retrieve contents of an annotation resource
Main entry point for the CLI.
Returns the label for a given Enum key
Returns the verbose name for a given enum value
Update the content of a single file.
Resolves the list of domains and returns the ips.
Creates a connection based upon the given configuration object.
Searches the elasticsearch instance to retrieve the requested documents.
Uses the command line arguments to fill the search function and call it.
Returns the number of results after filtering with the given arguments.
Uses the command line arguments to fill the count function and call it.
Resolves an ip adres to a range object, creating it if it doesn't exists.
Searches elasticsearch for objects with the same address, protocol, port and state.
Retrieves the users from elastic.
Retrieves the domains of the users from elastic.
Searches elasticsearch for objects with the same username, password, optional domain, host_ip and service_id.
Searches elasticsearch for objects with the same username, password, optional domain, host_ip and service_id.
Retrieves the users from elastic.
Returns the gdal.Driver for a path or None based on the file extension.
Convert image pixel/line coordinates to georeferenced x/y, return a         generator of two-tuples.
Returns the underlying ImageDriver instance.
Returns a MaskedArray using nodata values.
Returns a new instance resampled to provided size.
Save this instance to the path and format provided.
Returns a new reprojected instance.
encodes an integer of 8*self.chunklen[0] bits using the specified         alphabet
parses a chunk of bytes to integer using big-endian representation
partition the data into chunks and retrieve the chunk at the given index
Cache result of function call.
Get a list of patterns from a file and make a regular expression.
Parse the entry into a computer object.
Parse the file and extract the computers, import the computers that resolve into jackal.
Parses a single entry from the domaindump
Make an autocomplete API request
Make an API request
Try to convert a string to unicode using different encodings
Handle HTTP GET requests on an authentication endpoint.
Read the contents of the Annotation Resource
recover triples from mapping.
Split the data into train/valid/test sets.
Packs a list of triple indexes into a 2D numpy array.
Remove direct links in the training sets.
Get timezone as set by the system
Create a usable data structure for serializing.
Catch exceptions with a prompt for post-mortem analyzis
Starts an asyncio event loop to connect to the master and run jobs.
Logs a new state of an entity
Logs an update done on an entity
Add message to queue and start processing the queue.
Create the message to turn light on.
Create the message to turn switch on.
Scale brightness from 0..255 to 1..32.
Create the message to turn light or switch off.
If the queue is not empty, process the queue.
Send msg to LightwaveRF hub.
Generates a wrapped adapter for the given object
Provides a transacted cursor which will run in autocommit=false mode
Yields:             existing db connection pool
Yields:             new client-side cursor from existing db connection pool
gives the number of records in the table
Run a raw sql query
Generate hash code for a key from the Minimal Perfect Hash (MPH)
Update values of configuration section with dict.
Restore default values of options in this section.
Use a dictionary to create a :class:`ConfigurationManager`.
Set the list of config files.
Create config file.
Update values of configuration options with dict.
Read a config file and set config values accordingly.
Read config files and set config values accordingly.
List of cli strings for a given option.
List of config sections used by a command.
Add options to a parser.
Build command line argument parser.
Parse arguments and update options accordingly.
Write zsh _arguments compdef for a given command.
Write zsh compdef script.
Build a list of all options for a given command.
Starts a new HighFive master at the given host and port, and returns it.
Called when the connection to the remote worker is broken. Closes the         worker.
Runs a job set which consists of the jobs in an iterable job list.
Adds a new result.
Distributes jobs from the active job set to any waiting get_job         callbacks.
Returns a job to its source job set to be run again later.
Returns __repr__ method which returns ASCII     representaion of the object with given fields.
Remove duplicates in a list.
Use the environment to get the current region
Filters a list of host entries according to the given filters.
Prints the public dns name of `name`, if it exists.
Deserialize a HostEntry from a dictionary.
Sorts a list of entries by the given attribute.
Loads a ``HostEntry`` from a boto instance.
Returns whether the instance matches the given filter text.
Writes an XML representation of this node (including descendants) to the specified file-like object.
Returns the last child of this node.
Yields all parents of this element, back to the root element.
Turn column inputs from user into list of simple numbers.
Return only the part of the row which should be printed.
Configure and return a new logger for hivy modules
Stop and remove a worker
Define a switchable ConfOpt.
Set options from a list of section.option=value string.
Implement the behavior of a subcmd using config_conf_section
Create completion files for bash and zsh.
Writes a single observation to the output file.
Renders a list of columns.
Render the `num`th row of each column in `columns`.
Prepare the rows so they're all strings, and all the same length.
Gets the width of the table that would be printed.     :rtype: ``int``
Returns a function that colors a string with a number from 0 to 255.
Hashes a string and returns a number between ``min`` and ``max``.
Returns a random color between min and max.
`pgrep` returns an error code if no process was found
Take a string and return the corresponding module
Makes the HTTP request using RESTClient.
Configure from cli and run the server
Include a hidden input to stored the serialized upload value.
Queries bash to find the path to a commmand on the system.
Runs the given command over SSH in parallel on all hosts in `entries`.
Parse command-line arguments.
Takes arguments parsed from argparse and returns a profile.
Get URLs for LSST the Docs (LTD) products from the LTD Keeper API.
Get the product resource (JSON document) from the LSST the Docs API.
Extract, transform, and load metadata from Lander-based projects.
Upsert the technote resource into the projectmeta MongoDB collection.
Return a list of parts related to this one via reltype.
Load relationships from source XML.
Add a part to the package.
Load a part into this package based on its relationship type
Get the correct content type for a given name
Converts a Open511 JSON document to XML.
Builds a final copy of the token using the given secret key.
Assigns force field parameters to Atoms in the AMPAL object.
Finds the maximum radius and npnp in the force field.
Makes a dictionary containing PyAtomData for the force field.
Ensures that the provided document is an lxml Element or json dict.
Construct an `LsstLatexDoc` instance by reading and parsing the         LaTeX source.
HTML5-formatted authors (`list` of `str`).
Get the document content in the specified markup format.
Get the document title in the specified markup format.
Get the document short title in the specified markup format.
Get the document abstract in the specified markup format.
Get the document authors in the specified markup format.
Parse documentclass options.
Parse the title from TeX source.
Parse the document handle.
r"""Parse the author from TeX source.
Parse the abstract from the TeX source.
r"""Load the BibTeX bibliography referenced by the document.
Create a JSON-LD representation of this LSST LaTeX document.
Renames an existing database.
Returns a list of existing connections to the named database.
Saves the state of a database to a file.
Loads state of a backup file to a database.
Say something in the morning
Say something in the afternoon
Say something in the evening
Return a zipped package as a readable stream
Open an S3 Bucket resource.
Command line entrypoint to reduce technote metadata.
Ingest any kind of LSST document hosted on LSST the Docs from its     source.
Upload a directory of files to S3.
Upload a file to the S3 bucket.
Upload an arbitrary object to an S3 bucket.
List all file-type object names that exist at the root of this         bucket directory.
List all names of directories that exist at the root of this         bucket directory.
Delete a file from the bucket.
Delete a directory (and contents) from the bucket.
Create a GitHub token for an integration installation.
Create a JSON Web Token to authenticate a GitHub Integration or     installation.
Try to load and return a module
Makes a naive datetime.datetime in a given time zone aware.
Converts a datetime to the timezone of this Schedule.
Asynchronously request a URL and get the encoded text content of the     body.
Asynchronously download a set of lsst-texmf BibTeX bibliographies from     GitHub.
Get content of lsst-texmf bibliographies.
Make a pybtex BibliographyData instance from standard lsst-texmf     bibliography files and user-supplied bibtex content.
Get a usable URL from a pybtex entry.
Get and format author-year text from a pybtex entry to emulate     natbib citations.
Extract, transform, and load Sphinx-based technote metadata.
Reduce a technote project's metadata from multiple sources into a     single JSON-LD resource.
Download the metadata.yaml file from a technote's GitHub repository.
Get the slug, <owner>/<repo_name>, for a GitHub repository from     its URL.
Make a raw content (raw.githubusercontent.com) URL to a file.
Return the timezone. If none is set use system timezone
Add tag(s) to a DayOneEntry
Convert any timestamp into a datetime and save as _time
Return a dict that represents the DayOneEntry
Create and return full file path for DayOne entry
Get project's home URL based on settings.PROJECT_HOME_NAMESPACE.
pmxbot parle français
The entry point for a yaz script
Returns a tree of Task instances
Declare a function or method to be a Yaz task
Returns a list of parameters
Returns an instance of a fully initialized plugin class
Convert an Open511 XML document or document fragment to JSON.
Panflute filter function that converts content wrapped in a Para to     Plain.
Recursively generate of all the subclasses of class cls.
If input object is an ndarray it will be converted into a list
uniform_index(0,3)         uniform_index(-1,3)         uniform_index(-4,3)         uniform_index(-3,3)         uniform_index(5,3)
ol = [1,2,3,4]         htmljoin(ol,"option",outer="select")
arr1 = [1,2,3,4]         arr2 = ['a','b','c','d']         arr3 = ['
ol = [1, 2, 3, 4, 5, 6, 7, 8, 9]         deinterleave(ol,3)
ol = ['a',1,'a',2,'a',3,'a',4,'a']         split(ol,'a')         split(ol,'a',whiches=[0])         split(ol,'a',whiches=[1])         split(ol,'a',whiches=[2])         split(ol,'a',whiches=[0,2])         ol = [1,'a',2,'a',3,'a',4]         split(ol,'a')         split('x=bcdsef=g','=',whiches=[0])
leftSibling         previousSibling         leftSib         prevSib         lsib         psib                  have the same parent,and on the left
rightSibling         nextSibling         rightSib         nextSib         rsib         nsib                  have the same parent,and on the right
leftCousin         previousCousin         leftCin         prevCin         lcin         pcin                  parents are neighbors,and on the left
rightCousin         nextCousin         rightCin         nextCin         rcin         ncin                  parents are neighbors,and on the right
>>> pathlist_to_getStr([1, '1', 2])             "[1]['1'][2]"         >>>
_creat_child_desc             update depth,parent_breadth_path,parent_path,sib_seq,path,lsib_path,rsib_path,lcin_path,rcin_path
_upgrade_breadth_info             update breadth, breadth_path, and add desc to desc_level
Parse command content from the LaTeX source.
Parse a single command.
r"""Attempt to parse a single token on the first line of this source.
Returns a list of TMDDEventConverter elements.
Get a temporary auth token from LTD Keeper.
Send a request to the GitHub v4 (GraphQL) API.
Load a pre-made query.
Upload a new site build to LSST the Docs.
Detect if the upload should be skipped based on the     ``TRAVIS_EVENT_TYPE`` environment variable.
Register a new build for a product on LSST the Docs.
Confirm a build upload is complete.
Returns variables that match specific conditions.
Decorate a function that uses pypandoc to ensure that pandoc is     installed if necessary.
Convert text from one markup format to another using pandoc.
Convert lsstdoc-class LaTeX to another markup format.
ltd is a command-line client for LSST the Docs.
Edit a part from an OOXML Package without unzipping it
List the contents of a subdirectory of a zipfile
Decode a JSON-LD dataset, including decoding datetime     strings into `datetime.datetime` objects.
Encode values as JSON strings.
Encode a datetime in the format '%Y-%m-%dT%H:%M:%SZ'.
Process the astroid node stream.
Generate html from an Altair chart object and optionally write it to a file
Converts a dictionnary to a pandas dataframe
Writes a chart's html to a file
Get the right chart class from a string
Encode the fields in Altair format
Clone a repository to a destination relative to envrionment root
Clone a repository to a destination relative to envrionment root
Install a python package using pip
Update a python package using pip
Link to a GitHub user.
Returns the factor of 'alpha' (2 or 5 normally)
Returns the factor of exceedance
Figure of merit in time
Brings up a Heroku app.
Brings down a Heroku app.
Remove an environment or module
Returns a list of available modules.
:returns: a list of active :class:`Module` s or []
Add a module to CPENV_ACTIVE_MODULES environment variable
Remove a module from CPENV_ACTIVE_MODULES environment variable
Format a list of environments and modules for terminal output
Show context info
Activate an environment
Create a new environment.
Remove an environment
Create a new template module.
Copy a global module to the active environment.
Resolves VirtualEnvironments with a relative or absolute path
Resolves VirtualEnvironments in CPENV_HOME
Resolves VirtualEnvironments in EnvironmentCache
Resolves module in previously resolved environment.
Resolves modules in CPENV_MODULES path and CPENV_HOME/modules
Resolves modules in currently active environment.
returns a random (fixed length) string
returns a random (variable length) string.
Returns a view of the array with axes transposed.
Roll the specified axis backwards, until it lies in a given position.
Insert a new axis, corresponding to a given position in the array shape
Compute the arithmetic mean along the specified axis.
returns a a random string that represent a binary representation
Return a command to launch a subshell
Generate a prompt with a given prefix
Launch a subshell
Append a file to file repository.
Run file modification monitor.
returns a string representing a random ip address
returns a :class:`netaddr.IPAddress` instance with a random value
Initialize a :class:`~flask.Flask` application for use with         this extension.
Adds a job to be included during calls to the `/status` endpoint.
Get a random date between two dates
Calcul du profil journalier
Calcul du profil journalier
Calcul du profil annuel
Sends an API request to Heroku.
Checks the status of an app-setups build.
Add any sub commands to the argument parser.
Attempt to run a global hook by name with args
Encode wrapper for a dataset with maximum value
Get all activity data for the last activity
Construct athlete endpoint from host and athlete name
Do actual GET request to GC REST API         Also validates responses.
Return package version as listed in `__version__` in `init.py`.
if view is string based, must be a full path
urlpattern: urlpattern object
returns a random title
return a random first name     :return:
return a random last name
Calcule de moyennes glissantes
Calculs réglementaires pour les particules PM10
Calculs réglementaires pour l'ozone
Calculs réglementaires pour l'arsenic
Render the axes data into the dict data
Update the chart's dataset, can be two dimensional or contain string data
Define a position for your legend to occupy         APIPARAM: chdlp
Check to see if the type is either in TYPES or fits type name
Returns the rendered URL of the chart
Shows the chart URL in a webbrowser
Download the chart from the URL into a filename as a PNG
Returns a PngImageFile instance of the chart
return a random floating number
Assign an entity name based on the class immediately inhering from Base.
Validate all the entries in the environment cache.
Load the environment cache from disk.
Save the environment cache to disk.
(Executed on remote engine) creates an ObjectEngine instance
Prepare all iPython engines for distributed object processing.
Apply a function in parallel to each element of the input
Returns True if path is a git repository.
Returns True if path is in CPENV_HOME
Returns True if path contains a .cpenv file
Get environment path from redirect file
Walk up a directory tree
Preprocess a dict to be used as environment variables.
Join a bunch of dicts
Convert a python dict to a dict containing valid environment variable     values.
Expand all environment variables in an environment dict
Restore the current environment from an environment stored in a yaml     yaml file.
Restore the current environment from an environment stored in a yaml     yaml file.
Plasma frequency :math:`\\omega_p` for given plasma density
Remove MS paths that are marked to be used for another usage
Guarantee the existence of a basic MANIFEST.in.
Parses command line args using argparse library
Add logging option to an ArgumentParser.
Apply logging options produced by LogLevelAction and LogFileAction.
Format a pathname
Format a UUID string
Creates a map of letter use in a word.
Notify the client of the result of handling a request
Retrieves the setting value whose name is indicated by name_hyphen.
Return a combined dictionary of setting values and attribute values.
Asserts that the class has a docstring, returning it if successful.
Validate the given 1-based page number.
Get absolute path to resource, works for dev and for PyInstaller
Remove logbook menu set.
Verify enetered user name is on accepted MCC logbook list.
Create xml file with fields from logbook form.
Parse xml elements for pretty printing
Convert supplied QPixmap object to image file.
Process user inputs and subit logbook entry when user clicks Submit button
Process log information and push to selected logbooks.
Clear all form fields (except author).
Create graphical objects for menus.
Add or change list of logbooks.
Remove unwanted logbooks from list.
Add menus to parent gui.
Iteratively remove graphical objects from layout.
Adds labels to a plot.
Determine the URL corresponding to Python object
Utility function to run commands against Django's `django-admin.py`/`manage.py`.
Update the database with model schema. Shorthand for `paver manage syncdb`.
Run the dev server.
Run South's schemamigration command.
Yield bundle contents from the given dict.
Return a bundle initialised by the given dict.
Return html tags for urls of asset_type
Return all html tags for all asset_type
Returns all data entries for a particular key. Default is the main key.
Given a URL, check to see if there is an assocaited protocol.
Find the href destinations of all links at  URL
Get modules by project_abspath and packages_scan.
Import customer's service module.
Returns list of strings split by input delimeter
Modify an existing message.
Delete existing messages.
Returns a list of sites.
Add or create the default departments for the given project
Add or create the default assettypes for the given project
Add or create the default sequences for the given project
Add a rnd shot for every user in the project
Create all tasks for the element
Reimplemented from :class:`models.Model`. Check if startframe is before endframe
Sends a packet to a peer.
Creates list of values in a range with output delimiters.
Read customer's config value by section and key.
Return a hash of the file From <http://stackoverflow.com/a/7829658>
Initiate the local catalog by downloading the cloud catalog
Nova annotation for adding function to process nova notification.
Cinder annotation for adding function to process cinder notification.
Neutron annotation for adding function to process neutron notification.
Glance annotation for adding function to process glance notification.
Heat annotation for adding function to process heat notification.
Index of the last occurrence of x in the sequence.
Create and save an admin user.
Returns the names of the fields/columns used by the given admin         model.
Receives some data for the given protocol.
Shorthand for ``callRemote``.
Create a multiplexed stream connection.
Received some data from the local side.
Actually sends data over the wire.
Highest value of input image.
Lowest value of input image.
Setup argparser to process arguments and generate help
Processes command line arguments and file i/o
Takes a string, centres it, and pads it on both sides
Takes a string, and prints it with the time right aligned
Ask a yes/no question via raw_input() and return their answer.
Ask a yes/quit question via raw_input() and return their answer.
Returns axes *x, y* for a given image *img* to be used with :func:`scisalt.matplotlib.NonUniformImage`.
Identify whether the user is requesting unit validation against     astropy.units, pint, or quantities.
Check that a value has physical type consistent with user-specified units
Apply standard padding.
Remove standard padding.
Upload a local file to S3.
Download a remote file from S3.
Creates an ical .ics file for an event using python-card-me.
Displays list of videos for given event.
Adds a memory to an event.
Construct a :py:class:`fedoidcmsg.entity.FederationEntity` instance based     on given configuration.
Sign the extended request.
Find the parent python path that contains the __main__'s file directory
Log at debug level     :param msg: message to log
Argparse logic, command line options.
Main command line entry point.
:returns: a JSON-representation of the object
Defers to `amp.AmpList`, then gets the element from the list.
Wraps the object in a list, and then defers to ``amp.AmpList``.
Reads a file containing a JWKS and populates a     :py:class:`oidcmsg.key_jar.KeyJar` from it.
Verifies that an instance of this class adheres to the given         restrictions.
Parse simple JWKS or signed JWKS from the HTTP response.
Courant-Snyder parameter :math:`\\beta`.
Given a slice object, return appropriate values for use in the range function
Performs a pg_dump backup.
returns a connected cursor to the database-server.
returns a list of all databases on this server
Returns a dictionary of all the files under a path.
Ensure the user has the necessary tokens for the specified services
Displays the login form and handles the login action.
Apply to the 'catalog' the changesets in the metafile list 'changesets
Build CLI dynamically based on the package structure.
Validate that an event with this name on this date does not exist.
Used to plot a set of coordinates.
Replace target with replacement
Call the Sphinx Makefile with the specified targets.
Upload the docs to a remote location via rsync.
Open your web browser and display the generated html documentation.
Descover and load greencard tests.
Command line entry point.
Returns the Scrabble score of a letter.
Checks the Scrabble score of a single word.
Searches a string for blank tile characters ("?" and "_").
Checks if the input word could be played with a full bag of tiles.
docstring for main
docstring for argparse
Return an open file-object to the index file
Create the tasks on the server
Update existing tasks on the server
Reconcile this collection with the server.
Prompts the user for yes or no.
Prompts the user with custom options.
Writing the configure file with the attributes in 'args
Load the representation of a GameObject from a Python <dict> representing         the game object.
Bumps the Version given a target
Returns a copy of this object
Returns a Tag with a given revision
Parses a string into a Tag
When a Comment is added, updates the Update to set "last_updated" time
Gets the command class and matching responder function for the         given command name.
Serializes the response to JSON, and writes it to the transport.
Tells the box receiver to stop receiving boxes.
Create the challenge on the server
Update existing challenge on the server
Check if a challenge exists on the server
Retrieve a challenge from the MapRoulette server         :type server
Convert a JWKS to a KeyJar instance.
Upload a bundle from an unsigned JSON document
Convert a key bundle into a KeyJar instance.                  :return: An :py:class:`oidcmsg.key_jar.KeyJar` instance
Returns a list of positions.
Prints to the elog.          Parameters     ----------
Similar to Python's built-in `open()` function.
Print "Source Lines of Code" and export to file.
Gaussian function of the form :math:`\\frac{1}{\\sqrt{2 \\pi}\\sigma} e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}`.
Handle HTTP exception
Assign values for the main dimension of a ship.
Return resistance of the vehicle.
Total propulsion power of the ship.
Extract json from a response.             Assumes response is valid otherwise.             Internal use only.
Creates an error from the given code, and args and kwargs.
Serve app using wsgiref or provided server.
Clean up extra files littering the source tree.
print paver options.
Print 'msg' to stdout, and option 'log' at info level.
Print 'msg' to stderr, and option 'log' at info level.
Returns a list of the ancestors of this node.
Returns a list of descendents of this node.
Returns True if there is a :class:`State` object that uses this         ``Flow``
Returns a list of locations.
Using the result of the linear least squares, the result of :math:`X_{ij}\\beta_i`
Create the task on the server
Update existing task on the server
Retrieve a task from the server
Formats a string with color
log.debug("------------------------------------------------------")         log.debug(f"** WORD {self.WORD}")         log.debug(f"** words {self.words}")         log.debug(f"** word_before_cursor {word_before_cursor}")
Start ternya work.
Import customer's service modules.
Get music info from baidu music api
process for downing music with multiple threads
Returns a list of users.
Run the given command inside the virtual environment, if available:
Recursively update the destination dict-like object with the source dict-like object.
Send the given arguments to `pip install`.
Implementation of the LOAD_NAME operation
Pop the **n** topmost items from the stack and return them as a ``list``.
Implement the CALL_FUNCTION_ operation.
Delete existing shifts.
Gets count of all images from both event and updates.
Wrapper for matplotlib.pyplot.plot() / errorbar().
Removes any blank ranks in the order.
Returns the field names of a Django model object.
Create a vector of values over an interval with a specified step size.
Configure tmc.py to use your account.
Download the exercises from the server.
Go to the next exercise.
Spawns a process with `command path-of-exercise`
Select a course or an exercise.
Submit the selected exercise to the server.
Sends the selected exercise to the TMC pastebin.
Lists all of the exercises in the current course.
Update the data of courses and or exercises from server.
Determine the type of x
map for a directory
Apply the types on the elements of the line
Write the data to the specified filename          Usage     -----     >>> write_csv(filename, header, data, mode=mode)
Convert a file to a .csv file
Creates a histogram of data *x* with a *bins*, *labels* = :code:`[title, xlabel, ylabel]`.
returns a connected cursor to the database-server.
Render ditaa code into a PNG output file.
Invoked in the 'finally' block of Application.run.
Run Application.main and exits with the return value.
Gets an array from datasets.
Get the current directory state
Add one tick to progress bar
Context manager that changes to directory `path` and return to CWD     when exited.
Push k to the top of the list
Call this method to increment the named counter.  This is atomic on         the database.
Implements the dict.keys() method
Find the time this file was last modified.
Find out if this item has been modified since last
Implements the dict.items() method
Implements the dict.update() method
Return axes :code:`x, y` for *array* to be used with :func:`matplotlib.pyplot.color`.
The wavelength for large (:math:`r_0 < \\sigma_r`) oscillations.
Approximate trajectory function for small (:math:`r_0 < \\sigma_r`) oscillations.
Approximate trajectory function for large (:math:`r_0 > \\sigma_r`) oscillations.
Parse argv for options and arguments, and start schema generation.
print loading message on screen
Rip the events from a given rss feed, normalize the data and store.
Download the image and return the         local path to the image file.
GET:  gets data from the Firebase.         Requires the 'point' parameter as a keyworded argument.
PUT:  puts data into the Firebase.         Requires the 'point' parameter as a keyworded argument.
UPDATE: updates data in the Firebase.         Requires the 'point' parameter as a keyworded argument.
DELETE: delete data in the Firebase.         Requires the 'point' parameter as a keyworded argument.
Returns a template.Node subclass.
get the C_C in which pe_pe is defined
Parse command line options and launch the prebuilder.
Find a symbol in the symbol table by name, kind, or both.
Determine if a PE_PE is contained within a EP_PKG or a C_C.
Check if a PE_PE is globally defined, i.e. not inside a C_C
Get the BridgePoint component (C_C) that defines the packeable element     *pe_pe*.
Get the base data type (S_DT) associated with a BridgePoint attribute.
Convert a BridgePoint data type to a pyxtuml meta model type.
The two lists of attributes which relates two classes in an association.
Create a named tuple from a BridgePoint enumeration.
Create a python function from a BridgePoint bridge.
Create a python function from a BridgePoint function.
Create a python value from a BridgePoint constant.
Create a python function that interprets that action of a BridgePoint class     operation.
Create a python property that interprets that action of a BridgePoint derived     attribute.
Create a pyxtuml class from a BridgePoint class.
Create a pyxtuml association from a simple association in BridgePoint.
Create pyxtuml associations from a linked association in BridgePoint.
Create pyxtuml associations from a sub/super association in BridgePoint.
Create a pyxtuml association from a R_REL in ooaofooa.
Remove global instances, e.g. the core data type integer.
The default malformed message handler for :class:`Worker`.  It warns     as a :exc:`MalformedMessage`.
Allocates a call id and emit.
Dispatches the reply to the proper queue.
Guess the type name of a serialized value.
Deserialize a value of some type
Populate a *metamodel* with classes previously encountered from input.
Populate a *metamodel* with associations previously encountered from         input.
Populate a *metamodel* with a class that matches the given *insert         statement*.
Populate links in a *metamodel* with connections between them.
Populate a *metamodel* with entities previously encountered from input.
Build and return a *xtuml.MetaModel* containing previously loaded input.
create_rop_statement : CREATE ROP REF_ID RELID FROM association_end TO association_end
Read key-value pair files with secrets. For example, .conf and .ini files.         :return:
Search a path for known secrets, outputing text and file when found         :return:
Encode id (bytes) as a Unicode string.
Decode id (Unicode string) as a bytes.
Retrieve a feature collection.
Scan for FCs in the given id ranges.
Scan for ids only in the given id ranges.
Scan for FCs with a given prefix.
Scan for ids with a given prefix.
Fulltext search for identifiers.
Create the index
Create the field type mapping.
Retrieve the field mappings. Useful for debugging.
Retrieve the field types. Useful for debugging.
Take a feature collection in dict form and count its size in bytes.
construct a nice looking string for an FC
Actual (lazy) dlopen() only when an attribute is accessed
Pickle and compress.
Take care of command line options
Gets data from a postcode.     :param request: The aiohttp request.
Escape the error, and wrap it in a span with class ``error-message``
Displays the contact form and sends the email
Create a human-readable representation of a link on the 'TO'-side
Create a human-readable representation a unique identifier.
Check the model for uniqueness constraint violations.
Check the model for integrity violations on an association in a particular direction.
Check the model for integrity violations across a subtype association.
Check the model for integrity violations on association(s).
x.lower().encode('utf-8') where x can be None, str, or unicode
Retrieve a feature collection from the store.  This is the same as         get_many([content_id])
Add feature collections to the store.
Retrieve feature collections in a range of ids.
Retrieve content ids in a range of ids.
Returns ids that match a prefix of an indexed value.
Implementation for index_scan_prefix and         index_scan_prefix_and_return_key, parameterized on return         value function.
Add an index to this store instance.
Add new index values.
Add new raw index values.
Execute shell command and return stdout txt     :param command:     :return:
Start a new piece
Start a new site.
Publish the site
Schedule all the social media posts.
Returns a list of the branches
Create a patch between tags
Create a callable that applies ``func`` to a value in a sequence.
Create a callable that applies ``func`` to every value in a sequence.
Parse a value as text.
Parse a value as an integer.
Parse a value as a boolean.
Parse a value as a delimited list.
Parse a value as a POSIX timestamp in seconds.
Parse query parameters.
Put metrics to cloudwatch. Metric shoult be instance or list of         instances of CloudWatchMetric
Check if a package name exists on pypi.
Render a given resource.
Adapt a result to `IResource`.
Handle the result from `IResource.render`.
Negotiate a handler based on the content types acceptable to the         client.
get the xsd name of a S_DT
Build an xsd simpleType out of a S_CDT.
Build an xsd simpleType out of a S_EDT.
Build an xsd complexType out of a S_SDT.
Build an xsd simpleType out of a S_UDT.
Build an xsd complex element out of a O_OBJ, including its O_ATTR.
Build an xsd schema from a bridgepoint component.
Parse and sort an ``Accept`` header.
Split an HTTP header whose components are separated with commas.
Extract an encoding from a ``Content-Type`` header.
Create a nil-safe callable decorator.
set positional information on a node
Get or set `Settings._wrapped`
bind user variable to `_wrapped`
Get the version from version module without importing more than     necessary.
send a transaction immediately. Failed transactions are picked up by the TxBroadcaster
Create message content and properties to create queue with QMFv2
Create message content and properties to delete queue with QMFv2
Create message content and properties to list all queues with QMFv2
Create message content and properties to list all exchanges with QMFv2
Create message content and properties to purge queue with QMFv2
Raises an exception as a :exc:`RemoteException`.
Returns the text from an image at a given url.
Get sub-command list
Add class options to argparser options.
Parse command line options and launch the interpreter
Parse argv for options and arguments, and start schema generation.
Serialize a value from an xtuml metamodel instance.
Serialize an *instance* from a metamodel.
Serialize all instances in a *metamodel*.
Serialize an xtUML metamodel class.
Serialize all class and association definitions in a *metamodel*.
Serialize all instances, class definitions, association definitions, and     unique identifiers  in a *metamodel*.
Serialize some xtuml *resource*, e.g. an instance or a complete metamodel.
Convert Hump style to underscore
Load variable from Pickle file          Args:         path (str): path of the file to load
Partitions a list into two based on a condition.
Gets the fuel prices for a specific fuel station.
Gets the fuel price trends for the given location and fuel types.
Determine if an attribute of an *instance* with a specific *name*      is null.
Find links that correspond to the given arguments.
Get the metaclass for a *class_or_instance*.
Formalize the association and expose referential attributes         on instances.
Disconnect an *instance* from *another_instance*.
Obtain the type of an attribute.
Add a new link from *self* to *metaclass*.
Delete an attribute with a given *name* from the list of attributes.
Obtain the default value for some *type name*.
Create and return a new instance.
Obtain a sequence of all instances in the metamodel.
Define a new class in the metamodel, and return its metaclass.
Find a metaclass of some *kind* in the metamodel.
Define a unique identifier for some *kind* of class based on its         *named attributes*.
Take a string or list of strings and try to extract all the emails
Marks a method as RPC.
Collects methods which are speced as RPC.
If there is a postcode in the url it validates and normalizes it.
Progress to the next identifier, and return the current one.
Match a route parameter.
Match an integer route parameter.
Match a request path against our path components.
Create a new `Router` instance, with it's own set of routes, for         ``obj``.
Add a route handler and matcher to the collection of possible routes.
Return the average brightness of the image.
Create a NamedTemporaryFile instance to be passed to atomic_writer
Open a NamedTemoraryFile handle in a context manager
Read entry from JSON file
Save entry to JSON file
Update entry by UUID in the JSON file
Write `data` to `filename` (if not a dry run) after announcing it
Indicate whether or not to enter a case suite.
Convenience method for selecting a character.
Updates the document formatting based on the new cursor position.
Run tests in suite inside of suite fixtures.
Create an input hook for running the Qt4 application event loop.
Reimplemented to the store history.
If possible, set the input buffer to a previous history item.
Replace the current history with a sequence of history items.
If there are edits to the current input buffer, store them.
Event handler for the button click.
Copy over all files in srcdir to tgtdir w/ native line endings
Clean up files, remove builds.
Converts a collection back into a pandas DataFrame
Runs the full turntable process on a pandas DataFrame
Update our SUB socket's subscriptions.
Turn 'engine.0.INFO.extra' into (logging.INFO, 'engine.0.extra')
receive and parse a message, then log it.
Perform an N-way merge operation on sorted lists.
Return an iterator on an object living on a remote engine.
Convert a notebook to the v2 format.
Retrieve a PEP 302 "importer" for the given path item
Thunk to load the real StringIO on demand
Convert a version string to a chronologically-sortable key
Add `dist` to working set, associated with `entry`
List all distributions needed to (recursively) meet `requirements`
Find all activatable distributions in `plugin_env`
Add `dist` if we ``can_add()`` it and it isn't already added
Return absolute location in cache for `archive_name` and `names`
Parse a single entry point from string `src`
Ensure distribution is importable on `path` (default=sys.path)
Parse and cache metadata
Register your own mode and handle method here.
Get the number of the shell command.
Return map of named refs (branches or tags) to commit hashes.
Reimplemented to handle keyboard input and to auto-hide when the             text edit loses focus.
Reimplemented to connect signal handlers and event filter.
Perform the completion with the currently selected item.
Returns a cursor with text between the start position and the             current position selected.
Updates the current item based on the current text.
Registers the models of the app with the given "appName" for the admin site
System virtual memory as a namedtuple.
Swap system memory as a (total, used, free, sin, sout) tuple.
Return system CPU times as a named tuple.
Return system per-CPU times as a list of named tuples.
Return currently connected users as a list of namedtuples.
Win32 version of os.system() that works with network shares.
Runs the process, using the provided functions for I/O.
Writes the string to stdout
Writes the string to stdout
Runs the process using the system standard I/O.
update visibility of the tabBar depending of the number of tab
create a new frontend attached to the same kernel as the current tab
Called when you need to try to close a tab.
Return a function `fun` that will execute `magic` on active frontend.
Clean "All Magics..." menu and repopulate it with `listofmagic`
return a submagic menu by name, and create it if needed                 parameters:         -----------
Forward the close event to every tabs contained by the windows
Generate hashed password and salt for use in notebook configuration.
Return HTML code for a nice representation of true/false.
Handle an AJAX toggle_boolean request
Add children recursively to a binary tree.
Make a symmetrical binary tree with
Build a set of color attributes in a class.
Add a new color scheme to the table.
Set the currently active scheme.
Initialize the completion machinery.
Method to capture raw_input
method to wait for a kernel to be ready
Split ``text`` into (tokentype, text) pairs.
Sets the style to the specified Pygments style.
Returns a QTextCharFormat for token or None.
Returns a QTextCharFormat for token by
Returns a QTextCharFormat for token by reading a Pygments style.
Searches the PATH for the given command and returns its path
Convert a path to its canonical, case-normalized, absolute version.
Verify that namespace packages are valid
Verify that extras_require mapping is valid
Verify that entry_points map is parseable
Determine if the input source ends in a blank.
Determine if the input source ends in two blanks.
Handle the `files = !ls` syntax.
Handle the `a = %who` syntax.
Handle inputs that start with '>>> ' syntax.
Translate lines with ?/?? at the end
Reset the input buffer and associated state.
Push one or more lines of input.
Return whether a block of interactive input can accept more input.
Compute the new indentation level for a single line.
Store one or more lines of input.
Reset the input buffer and associated state.
Return input and raw source and perform a full reset.
Process lines when they start with %%, which marks cell magics.
Append new content for a cell magic in line mode.
Process and translate a cell of input.
Push one or more lines of IPython input.
Post notification to all registered observers.
Add a new background job and start it in a separate thread.
Update the status of the job lists.
Report summary for a given job group.
Flush a given job group
Print the status of newly finished jobs.
Print a status of all jobs currently being managed.
Remove a finished (completed or dead) job.
Flush all finished jobs (completed and dead) from lists.
result(N) -> return the result of job N.
Execute a shell command.
Close and exit the connection.
Inserts a value in the ``ListVariable`` at an appropriate index.
Retrieve a copy of the Environment.  Note that this is a shallow         copy.
Change the working directory that processes should be executed in.
Swaps two cities in the route.
Calculates the length of the route.
Poll ``self.stdout`` and return True if it is readable.
create an empty record
Ensure that an incorrect table doesn't exist
Connect to the database and get new session number.
Turn a mongodb-style search dict into an SQL query.
Add a new Task Record, by msg_id.
Get a specific Task Record, by msg_id.
Update the data in an existing record.
Remove a record from the DB.
get all msg_ids, ordered by time submitted.
Output a simple table with several columns.
Output a link tag.
Output a script tag to a js file.
Output a link tag to a css stylesheet.
Subtract the arg from the value.
Multiply the arg with the value.
Divide the arg by the value.
Return the modulo value.
Main method where all logic is defined
Split user input into initial whitespace, escape character, function part     and the rest.
Register command-line options.
Run tests in suite inside of suite fixtures.
Add a builtin and save the original.
Remove an added builtin and re-set the original.
Store ipython references in the __builtin__ namespace.
Strip all color codes from a string.         Returns empty string for "falsey" inputs.
Send a message to one more email address(s).     With html content as primary.
Turn a command-line argument into a list.
The main entry point to Coverage.
Call optparse.parse_args, but return a triple:
Add a specialized option that is the action to execute.
Callback for an option that adds to the `actions` list.
The bulk of the command line interface to Coverage.
Display an error message, or the named topic.
Deal with help requests.
Check for conflicts and problems in the options.
Implementation of 'coverage run'.
Implementation of 'coverage debug'.
Add single file or list of files to bundle
reconstruct an object serialized by serialize_object from data buffers.
boolean check for whether a string is a zmq url
validate a url for zeromq
validate a potentially nested collection of urls.
split a zmq url (tcp://ip:port) into ('tcp','ip','port').
Register your own mode and handle method here.
Get the number of files in the folder.
Register the contents as JSON
Get the data in text form (i.e. human readable)
Translate the data with the translation table
Get the data in JSON form
Get the data as JSON tuples
Turn a function into a remote function.
Turn a function into a parallel remote function.
Get the last n items in readline history.
Set the autoindent flag, checking for readline support.
Save the state of hooks in the sys module.
Restore the state of the sys module.
Register a function for calling after code execution.
Return a new 'main' module object for user code execution.
Cache a main module's namespace.
Call the pydb/pdb debugger.
Clear all internal namespaces, and attempt to release references to         user objects.
Clear selective variables from internal namespaces based on a         specified regular expression.
Inject a group of variables into the IPython user namespace.
Find an object in the available namespaces.
Second part of object finding, to look for property details.
Find an object and return a struct with info about it.
Generic interface to the inspector system.
One more defense for GUI apps that call sys.excepthook.
Display the exception that just occurred.
Actually show a traceback.
Display the syntax error that just occurred.
readline hook to be used at the start of each line.
Initialize the completion machinery.
Return the completed text and a list of completions.
Adds a new custom completer function.
Set the frame of the completer.
Execute the given line magic.
Find and return a magic of the given type by name.
DEPRECATED. Use run_line_magic() instead.
Define a new macro
Call the given cmd in a subprocess using os.system
Get output (possibly including stderr) from a subprocess.
Print to the screen the rewritten form of the user's command.
Get a list of variable names from the user's namespace.
Evaluate a dict of expressions in the user's namespace.
Execute a normal python statement in user namespace.
A safe version of the builtin execfile().
Like safe_execfile, but for .ipy files with IPython syntax.
A safe version of runpy.run_module().
Special method to call a cell magic with the data stored in self.
Run a complete IPython cell.
Run a sequence of AST nodes. The execution mode depends on the         interactivity parameter.
Execute a code object.
Activate pylab support at runtime.
Expand python variables in a string.
Make a new tempfile and return its filename.
Return as a string a set of input history slices.
Get a code string from history, file, url, or a string or macro.
This will be executed at the time of exit.
Returns an absolute filename in the data-directory (standardized by StandardizePath).
Returns a nice side-by-side diff of the given files, as a string.
check the status of the network and the peers
broadcasts a transaction to the peerslist using ark-js library
broadcast a message from one engine to all others.
send a message from one to one-or-more engines.
Make function raise SkipTest exception if a given condition is true.
Make function raise KnownFailureTest exception if given condition is true.
Filter deprecation warnings while running the test suite.
list profiles in a given root directory
list profiles that are bundled with IPython.
Sandbox-bypassing version of ensure_directory()
Find a distribution matching requirement `req`
List all distributions needed to (recursively) meet `requirements`
Exposes a given service to this API.
Register your own mode and handle method here.
:type input_files: list[static_bundle.files.StaticFileResult]         :type bundle: static_bundle.bundles.AbstractBundle         :rtype: list
Finish up all displayhook activities.
Unpack" a directory, using the same interface as for archives
Unpack tar/tar.gz/tar.bz2 `filename` to `extract_dir`
Emit a message to the user.
Get the output of the last command exevuted.
Wrapper for subprocess.check_output.
Fake the interface of subprocess.call().
Print a message only if DEBUG is truthy.
Parse a string as an integer.         Exit with a message on failure.
Find the source for `filename`.
Returns a sorted list of the arcs actually executed in the code.
Returns a sorted list of the arcs in the code not executed.
Returns a list of line numbers that have more than one exit.
Set the number of decimal places used to report percentages.
Returns a single percentage value for coverage.
Run a distutils setup script, sandboxed in its directory
Run 'func' under os sandboxing
Called for low-level os.open()
Remove a single pair of quotes from the endpoints of a string.
Similar to Perl's qw() operator, but with some more options.
Return grep() on dir()+dir(__builtins__).
Indent a string a given number of spaces or tabstops.
Convert (in-place) a file to line-ends native to the current OS.
Return the input string centered in a 'marquee'.
Format a string for screen printing.
Wrap multiple paragraphs to fit a specified width.
Calculate optimal info to columnize a list of string
return list item number, or default if don't exist
Returns a nested list, and info to columnize items
Transform a list of strings into a single string with columns.
Collect whitespace-separated fields from string list
sort by specified fields (see fields())
Disconnect and close *Vim*.
Send a raw key sequence to *Vim*.
Wait for response until timeout.         If timeout is specified to None, ``self.timeout`` is used.
Install *Vim* plugin.
Set *Vim* mode to ``mode``.         Supported modes:
:return: runtime path of *Vim*         :rtype: runtimepath.RuntimePath
build argv to be passed to kernel subprocess
set up ssh tunnels, if needed.
Pretty print the object's representation.
The pprint for the super type.
The pprint function for regular expression patterns.
The pprint for classes and types.
Base pprint for all functions and builtin functions.
Base pprint for all exceptions.
Add a pretty printer for a given type.
like begin_group / end_group but for the with statement.
Add literal text to the output.
End a group. See `begin_group` for more details.
Flush data that is left in the buffer.
Pretty print the given object.
Check if the given class is specified in the deferred type registry.
Return a color table with fields for exception reporting.
Setup before_request, after_request handlers for tracing.
Calculates the request duration, and adds a transaction         ID to the header.
As patterns() in django.
As url() in Django.
Write translations from po files into ods one file.     Assumes a directory structure:     <locale_root>/<lang>/<po_files_path>/<filename>.
Write row with translations to ods file into specified sheet and row_no.
Get the current clipboard's text on Windows.
Get the clipboard's text on OS X.
Get the clipboard's text using Tkinter.
Prepare the buffers to be used for later communications
Prepare the buffers to be used for later communications
update the inner boundary with the same send/recv pattern as the MPIPartitioner
default function for packing datetime objects in JSON.
Verify that self.install_dir is .pth-capable dir, if needed
Write an executable file to the scripts directory
Save the args and kwargs to get/post/put/delete for future use.
convert .pyx extensions to .c
watch iopub channel, and print messages
Close the http/https connect.
Adjust the log level when log_level is set.
Start logging for this application.
Print the alias part of the help.
Print the flag part of the help.
Print the subcommand part of the help.
Print the help for each Configurable class in self.classes.
Print usage and examples.
Fire the traits events when the config is updated.
Initialize a subcommand with argv.
Parse the command line arguments.
Load a .py based config file by filename and path.
generate default config file from Configurables
Format a long string into a block of newline seperated text.             Arguments:                 See iter_format_block().
Choose k random elements of array.
Produce a sequence of formatted lines from info.
Write a line of debug output.
Update all the class traits having ``config=True`` as metadata.
Walk the cls.mro() for parent classes that are also singletons
unset _instance for this class and singleton parents.
Returns a global instance of this class.
Add detail from traceback inspection to error message of a failure.
Check IP trough the httpBL API
Check if IP is a threat
Check if IP is suspicious
Invalidate httpBL cache for IP address
Invalidate httpBL cache
Return a string containing a crash report.
{% setvar <var_name> to <var_value> %}
Reimplemented to emit signals instead of making callbacks.
Reimplemented to emit signals instead of making callbacks.
Reimplemented to ensure that signals are dispatched immediately.
Reimplemented to emit signals instead of making callbacks.
Reimplemented to emit signal.
Read a notebook from a file like object
Write a notebook to a file like object
Return the next batch of items to upload.
Get a single item from the queue.
Return the list of mirrors from the last record found on the DNS     entry::
Read from a pipe ignoring EINTR errors.
Open a command in a shell subprocess and execute a callback.
Return standard output of executing cmd in a shell.
Return (standard output, standard error) of executing cmd in a shell.
Split a command line's arguments in a shell-like manner.
Prints the complete YAML.
Report an error         :param ifn: Input file name         :param e: Exception to report
Compress a directory history into a new one with at most 20 entries.
Class decorator for all subclasses of the main Magics class.
Utility function to store a function as a magic of a specific kind.
Decorator factory for methods in Magics subclasses.
Register one or more instances of Magics.
Expose a standalone function as magic function for IPython.
Format a string for latex inclusion.
Parse options passed to an argument string.
Make an entry in the options_table for fn, with value optstr
Close and exit the connection.
Show a basic reference about the GUI Console.
Get a member from an object by (string) name
Find and return a callable object from a task info dictionary
Calculate next run time of this task
Internal instance method run by worker process to actually run the task callable.
Instance method to run this task immediately.
Class method to run a callable with a specified number of iterations
Class method to run a one-shot task, immediately.
Set the url file.
load config from a JSON connector file,         at a *lower* priority than command-line/config files.
Connect by wmi and run wql.
Check whether pid exists in the current process table.
Execute a test described by a YAML file.
Create an interrupt event handle.
Filter a namespace dictionary by name pattern and item type.
Return dictionary of all objects in a namespace dictionary that match     type_pattern and filter.
Check for presence of mutually exclusive keys in a dict.
map_method(method,object_list,*args,**kw) -> list
Return dct[key] and delete dct[key].
Wrapper for the other log methods, decide which one based on the         URL parameter.
Write to a local log file
Write to a remote host via HTTP POST
Helper method to store username and password
Show all figures as SVG/PNG payloads sent to the IPython clients.
Draw the given figure and send it as a PNG payload.
Load an IPython extension by its module name.
Unload an IPython extension by its module name.
Generate a list of n random ports near the given port.
Set connection parameters. Call set_connection with no arguments to clear.
Set delegate parameters. Call set_delegate with no arguments to clear.
Takes a single address and returns the current balance.
returns a list of named tuples,  x.timestamp, x.amount including block rewards
returns a list of named tuples of all delegates.         {username: {'pubkey':pubkey, 'timestamp':timestamp, 'address':address}}
Return the last depth elements of the current working directory.
Return the last depth elements of the current working directory.
Render but don't justify, or update the width or txtwidth attributes.
Render the ---> rewrite prompt.
Generates a JSON config file, including the selection of random ports.          Parameters     ----------
Fix the version in metadata.txt
return whether an object is mappable or not.
If the value is ``None``, fail validation.
Make sure the value evaluates to boolean True.
Convert an evar value into a Python logging level constant.
Run as a command-line script.
Run the given file interactively.
Run the given source code interactively.
Run as a command-line script.
Generate a Cobertura-compatible XML report for `morfs`.
Add to the XML report for a single file.
Add up a list of freq counts to get the total counts.
Read digits of pi from a file and compute the n digit frequencies.
Yield the digits of pi read from a .txt file.
Extract a set of variables by name from another frame.
Extract a set of variables by name from another frame.
Print the value of an expression from the caller's frame.
Debug a single doctest docstring, in argument `src`
Debug a test script.  `src` is the script, as a string.
Debug a single doctest docstring.
Reimplemented to handle keyboard input and to auto-hide when the             text edit loses focus.
return the bool of whether `record` starts with         any item in `matchers`
Add captured log messages to error output.
Call this to embed IPython at the current point in your program.
Embeds IPython into a running python program.
dir2(obj) -> list of strings
Write header into po file for specific lang.     Metadata are read from settings file.
method to subscribe a user to a service
method to send a message to a user
method to send a message to a user
query method to do HTTP POST/GET
The same as s.rsplit(sep, 1), but works in 2.3
Run a python module, as though with ``python -m name args...``.
Get source from `filename` and make a code object of it.
Get a code object from a .pyc file.
returnr a string for an html table
set current cursor position
Reimplemented to handle keyboard input and to auto-hide when the             text edit loses focus.
Cancel the completion
Change the selection index, and make sure it stays in the right range
move cursor down
update the list of completion and hilight the currently selected completion
Perform the completion with the currently selected item.
Return a dictionary of words and word counts in a string.
Print the n most common words and counts in the freqs dict.
Return the string representation of the job description XML.
Write the XML job description to a file.
Validate the given pin against the schema.
Send a shared pin for the given topics.
Delete a shared pin.
Send a user pin.
Delete a user pin.
Subscribe a user to the given topic.
Get the list of the topics which a user is subscribed to.
Register a new range type as a PostgreSQL range.
Call before starting work on a monitor, specifying name and amount of work
Create a submonitor with the given units
Print a string, piping through a pager.
Acquires the correct error for a given response.
Load the config from a file and return it as a Struct.
Load the config file into self.config, with recursive loading.
update self.config from a flag, which can be a dict or Config
Parse the configuration and generate the Config object.
Parse command line arguments and return as a Config object.
Call this to trigger startup actions.
Call this to trigger process stop actions.
Send INT, wait a delay and then send KILL.
Build self.args using all the fields.
Start n instances of the program using mpiexec.
send a single file
fetch a single file
fetch remote files (called after start)
Start n copies of the process using the Win HPC job scheduler.
load the default context with the default values for the basic keys
Take the output of the submit command and return the job id.
Instantiate and write the batch script to the work_dir.
Start n copies of the process using a batch system.
Return True if 'file' matches ('permission') which should be entered in octal.
Reimplemented to return a custom context menu for images.
Append the Out[] prompt  and make the output nicer
Append raw JPG data to the widget.
Append raw PNG data to the widget.
Append raw SVG data to the widget.
Adds the specified QImage to the document and returns a             QTextImageFormat that references it.
Copies the ImageResource with 'name' to the clipboard.
Returns the QImage stored as the ImageResource with 'name'.
Return (X)HTML mark-up for the image-tag given by match.
insert a raw image, jpg or png
Insert raw SVG data into the widet.
Shows a save dialog for the ImageResource with 'name'.
stop eventloop when exit_now fires
Configure the user's environment.
Called to show the auto-rewritten input for autocall and friends.
Engage the exit actions.
Converts the request parameters to Python.
Extracts ORB context information from the request.
CHECK if process (default=apache2) is not running
Read a filename as UTF-8 configuration data.
Read a list of strings.
Read a list of full-line strings.
Read configuration from the `env_var` environment variable.
Read config values from `kwargs`.
Read configuration from a .rc file.
Set an attribute on self if it exists in the ConfigParser.
Expand '~'-style usernames in strings.
Set the delimiters for line splitting.
Split a line of text with a cursor at the given position.
Compute matches when text is a simple name.
Compute matches when text contains a dot.
update the splitter and readline delims when greedy is changed
Match named parameters (kwargs) of the last open function
Find completions for the given text and line context.
Return the state-th possible completion for 'text'.
Check if a specific record matches tests.
Find all the matches for a check dict.
extract subdict of keys
Add a new Task Record, by msg_id.
Get a specific Task Record, by msg_id.
Remove a record from the DB.
get all msg_ids, ordered by time submitted.
Write the output prompt.
Write the format data dict to the frontend.
Update user_ns with various things like _, __, _1, etc.
Log the output.
Finish up all displayhook activities.
Handles real-time updates to the order book.
Connects and subscribes to the WebSocket Feed.
Load the extension in IPython.
raise `InvalidOperationException` if is freezed.
Convert a MySQL TIMESTAMP to a Timestamp object.
body_elements: <list> of etree.Elements or <None>
schedule call to eventloop from IOLoop
register dispatchers for streams
Publish the code request on the pyin stream.
send status (busy/idle) on IOPub
handle an execute_request
abort a specifig msg by id
Marks a view function as being exempt from the cached httpbl view protection.
Draw a 70-char-wide divider, with label in the middle.
Sort key function factory that puts items that match a     regular expression last.
System virtual memory as a namedtuple.
Swap system memory as a (total, used, free, sin, sout) tuple.
Return system CPU times as a namedtuple.
Return process cmdline as a list of arguments.
Return etwork connections opened by a process as a list of         namedtuples.
Load a class by a fully qualified class_path,     eg. myapp.models.ModelName
Hook point for overriding how the CounterPool creates a new table         in DynamooDB
Calculate percentage usage of 'used' against 'total'.
A decorator which can be used to mark functions as deprecated.
Login into Google Docs with user authentication info.
Parse GDocs key from Spreadsheet url.
Make sure temp directory exists and create one if it does not.
Download csv files from GDocs and convert them into po files structure.
start a new qtconsole connected to our kernel
Check whether the HTML page contains the content or not and return boolean
Visit the URL and return the HTTP response code in 'int'
Compare the content type header of url param with content_type param and returns boolean
Compare the response code of url param with code param and returns boolean
Use an event to build a many-to-one relationship on a class.
Use an event to build a one-to-many relationship on a class.
Publish data and metadata to all frontends.
Validate the display data.
Publish data and metadata to all frontends.
Clear the output of the cell receiving output.
Djeffify data between tags
Create a foreign key reference from the local class to the given remote         table.
Try to run __json__ on the given object.         Raise TypeError is __json__ is missing
Find absolute path to executable cmd in a cross platform manner.
r"""Take the path of a python command and return a list (argv-style).
Return abbreviated version of cwd, e.g. d:mydir
Write helper method
Copy file helper method
Split file name and extension
Construct a list of CodeUnits from polymorphic inputs.
Return an open file for reading the source of the code unit.
timedelta.total_seconds was added in 2.7
Call spin() to sync state prior to calling the method.
Return the result when it arrives.
Wait until the result is available or until `timeout` seconds pass.
Get the results as a dict, keyed by engine_id.
abort my tasks.
republish individual displaypub content dicts
wait for the 'status=idle' message that indicates we have all outputs
wait for result to complete.
Returns the given response or raises an APIError for non-2xx responses.
Checks if a next message is possible.
Registers the given message type in the local database.
Gets all the messages from a specified file.
Prepare the file patterns for use in a `FnmatchMatcher`.
Find the path separator used in this string, or os.sep if none.
Yield all of the importable Python files in `dirname`, recursively.
Return the relative form of `filename`.
Get data from `filename` if it is a zip file path.
Add the `pattern`/`result` pair to the list of aliases.
Map `path` through the aliases.
Start a kernel with PyQt4 event loop integration.
Start a kernel with wx event loop support.
Start a kernel with the Tk event loop.
Start the kernel, coordinating with the GTK event loop
Enable integration with a given GUI
Creates an NxN element of the Gaussian Orthogonal Ensemble
Compute the eigvals of mat and then find the center eigval difference.
Return num eigenvalue diffs for the NxN GOE ensemble.
Parse a YAML file containing test steps.
Parse a step dictionary.
Insert object before index.
Parse runtime path representation to list.
Create a crash handler, typically setting sys.excepthook to it.
Load the config file.
initialize the profile dir
[optionally] copy default config files into profile dir.
auto generate default config file, and stage it into the profile.
Move files / make static build
Read coverage data from the coverage data file (if it exists).
Write the collected coverage data to a file.
Erase the data, both in this object, and from its file storage.
Return the map from filenames to lists of line numbers executed.
Return the map from filenames to lists of line number pairs.
Write the coverage data to `filename`.
Read the coverage data from `filename`.
Return the raw pickled data from `filename`.
Return the stored coverage data from the given file.
Combine a number of data files together.
Contribute `filename`'s data to the Md5Hash `hasher`.
Initialize the zlogger.
Yield pasted lines until the user enters the given sentinel value.
Start the mainloop.
Store multiple lines as a single entry in history
Write a prompt and read a line.
The bottom half of the syntax error handler called in the main loop.
Handle interactive exit.
register `exitable.__exit__()` into `atexit` module.
Configure the coloring of the widget
return the connection info for this object's sockets.
Convert an object in R's namespace to one suitable     for ipython's namespace.
Return the entire source file and starting line number for an object.
Try to fix the filenames in each record from inspect.getinnerframes().
Shorthand access to the color table scheme selector method.
Return a color formatted string with the traceback info.
Format a list of traceback entry tuples for printing.
Format the exception part of a traceback.
Only print the exception type and message, without a traceback.
Return a nice text document describing the traceback.
Switch to the desired mode.
Initialize the model for a Pyramid app.
parent, name = get_parent(globals, level)
mod, name, buf = load_next(mod, altmod, name, buf)
mod.{subname} = submod
Handle 'from module import a, b, c' imports.
Add a line of source to the code.
Add a section, a sub-CodeBuilder.
Compile the code, and return the function `fn_name`.
Generate a Python expression for `expr`.
A shortcut function to render a partial template with context and return      the output.
Return a format data dict for an object.
Activate the default formatters.
Return a format data dict for an object.
Add a format function for a given type.
Check if the given class is specified in the deferred type registry.
float_precision changed, set float_format accordingly.
Return absolute and relative path for file
Return path to any existing user config files
Configure the working directory or directories for the test run.
Get the command line option parser.
Return a pager command.
Return the string for paging files with an offset.
Print a string snipping the midsection to fit in width.
Return True if type o can be printed with LaTeX.
A function to generate the latex representation of sympy     expressions.
Load the extension in IPython.
Usage:     {% with 'this, is a, string'|str2tokens:',' as token_list %}do something{% endwith %}
Usage:     {% str2tokens 'a/b/c/d' '/' as token_list %}
Replicate an existing database to another existing database.
Configure the plugin and system, based on selected options.
Validate that the input is a list of strings.
Validate that the input is a dict with string keys and values.
Run my loop, ignoring EINTR events in the poller
Execute code in the kernel.
Tab complete text in the kernel's namespace.
Get metadata information about an object.
Get entries from the history list.
Send a string of raw input to the kernel.
load connection info from JSON dict in self.connection_file
write connection info to JSON dict in self.connection_file
Restarts a kernel with the arguments that were used to launch it.
Kill the running kernel.
Get the SUB socket channel object.
Get the heartbeat socket channel object to check that the         kernel is alive.
**Metropolis Hastings MCMC**
**Ensemble MCMC**    via `emcee <http://dan.iel.fm/emcee/>`_
Emit a debugging message depending on the debugging level.
Retrieve the extension classes in priority order.
Called after executing a step.
Adds an EnumDescriptor to the pool.
Make a protobuf EnumDescriptor given an EnumDescriptorProto protobuf.
Creates a field descriptor from a FieldDescriptorProto.
Create missing package __init__ files
:return: the files that have been modified and can be added
Create and run the IPython controller
save a connection dict to json file.
load config from existing json connector files.
Get a ``sqlalchemy.orm.Session`` instance backed by a transaction.
configure default targets/blocking for %px magics
implementation used by %px and %%parallel
Enable %autopx mode by saving the original run_cell and installing         pxrun_cell.
Disable %autopx by restoring the original InteractiveShell.run_cell.
drop-in replacement for InteractiveShell.run_cell.
Internal ``RUN_TASK`` consumer to run the task's callable
Patch a method onto an object if it isn't already there.
Accept a pending connection.
Reject a pending connection.
Supply user object as initial data for the specified user_field(s).
Use SaveHookMixin pre_save to set the user.
Replace stuff in the __dict__ of a class, and upgrade     method code objects
Check whether some modules need to be reloaded.
Open the default editor at the given filename and linenumber.
Get text from the clipboard.
Add a func to the cmd chain with given priority
Generate a random string of the specified length.
Import and return bar given the string foo.bar.
Require that the named `field` has the right `data_type`
Push a new `msg` onto the queue, return `(success, msg)`
Forces a flush from the internal queue to the server
Try passwordless login with paramiko.
Connect a socket to an address via an ssh tunnel.
Open a tunneled connection from a 0MQ url.
Call spin() to sync state prior to calling the method.
setup all our socket connections to the cluster. This is called from         __init__.
Register a new engine, and update our connection info.
Save the reply to an execute_request into our results.
target func for use in spin_thread
stop background spin_thread, if any
waits on one or more `jobs`, for up to `timeout` seconds.
Clear the namespace in target(s).
Abort specific jobs from the execution queues of target(s).
construct and send an apply message via a socket.
construct and send an execute request via a socket.
construct a DirectView object.
construct a DirectView object.
Resubmit one or more tasks.
Check on the status of the result(s) of the apply request with `msg_ids`.
Fetch the status of engine queues.
Tell the Hub to forget results.
Get the Hub's history
Query the Hub's TaskRecord database
Return a set of opcodes by the names in `names`.
Create a ByteParser on demand.
Find the lines matching one of a list of regexes.
Parse the source to find the interesting facts about its lines.
Return the first line number of the statement including `line`.
Map the line numbers in `lines` to the correct first line of the         statement.
Get information about the arcs available in the code.
Iterate over all the code objects nested within this one.
Map byte offsets to line numbers in `code`.
Find the statements in `self.code`.
Get a string version of `block_stack`, for debugging.
Split the code object into a list of `Chunk` objects.
Validate the rule that chunks have a single entrance.
Find the executable arcs in the code.
Returns a list of `Chunk` objects for this code and its children.
Get the set of all arcs in this code object and its children.
Use all decompressor possible to make the stream
Add options to command line.
Output code coverage report.
Generate alternative interpretations of a source distro name
Open a urllib2 request, handling HTTP authentication
Obtain a distribution suitable for fulfilling `requirement`
get parent from obj.
Manage a Marv site
Initialize a FakeModule instance __dict__.
Returns a decoder for a MessageSet item.
Configure plugin. Plugin is enabled by default.
Add captured output to error report.
Add a function to the function list, in order.
Return the mapping of a document according to the function list.
Re-reduce a set of values, with a list of rereduction functions.
Validate...this function is undocumented, but still in CouchDB.
The main function called to handle a request.
Log an event on the CouchDB server.
Turn a list to list of list
Convert a notebook to the v3 format.
Convert a hex color to rgb integer tuple.
Construct the keys to be used building the base stylesheet     from a templatee.
Use one of the base templates, and set bg/fg/select colors.
revoke_token removes the access token from the data_store
Return a font of the requested family, using fallback as alternative.
Reimplemented to support prompt requests.
Implemented to handle history tail replies, which are only supported             by the IPython kernel.
Reimplemented for IPython-style "display hook".
The base handler for the ``display_data`` message.
Reimplemented to make a history request and load %guiref.
Reimplemented to use the 'run' magic.
Reimplemented for IPython-style traceback formatting.
Reimplemented for IPython-style prompts.
Reimplemented for IPython-style prompts.
Opens a Python script for editing.
Given a prompt number, returns an HTML In prompt.
Given a plain text version of an In prompt, returns an HTML             continuation prompt.
Set the style sheets of the underlying widgets.
Set the style for the syntax highlighter.
System virtual memory as a namedutple.
return a tuple containing process user/kernel time.
Return the number of threads belonging to the process.
Return files opened by process as a list of namedtuples.
Merge multiple ordered so that within-ordered order is preserved
Return useful information about IPython and the system, as a string.
Return the number of active CPUs on a Darwin system.
Return the effective number of CPUs in the system as an integer.
[1, 2, 3, 4] {'accumulate': <built-in function max>}
Advance to the next result set.
Execute a multi-row query.                  query -- string, query to execute on server
Fetches a single row from the cursor.
Fetchs all available rows from the cursor.
Parse a string into a (nbformat, dict) tuple.
Parse a string into a (nbformat, string) tuple.
Read a JSON notebook from a string and return the NotebookNode object.
Read a .py notebook from a string and return the NotebookNode object.
Read a notebook from a string and return the NotebookNode object.
try load value from dict.         if key is not exists, mark as state unset.
Run the pyglet event loop by processing pending events only.
Register your own mode and handle method here.
Get the number of file in the folder.
Get current datetime for every file.
Get the number of file in the folder.
Return the contents of a named file as a list of lines.
List command to use if we have a newer pydb installed
The printing (as opposed to the parsing part of a 'list'         command.
Check whether specified line seems to be executable.
Converts an amount of money from one currency to another on a specified date.
Compute the return of the currency between two dates
Return the given stream's encoding or a default.
Return IPython's guess for the default encoding for bytes as text.
Gets the username / password from config.
Read version info from a file without importing it
load ip/port/hmac config from JSON connection file
write connection info to JSON file
display connection info, and store ports
create our session object
Redirect input streams and set a display hook.
Create the Kernel object itself
send the registration_request
Make a protobuf Descriptor given a DescriptorProto protobuf.
Searches for the specified method, and returns its descriptor.
Register your own mode and handle method here.
Define the command line options for the plugin.
Configure plugin based on command line options
Check if directory is eligible for test discovery
Parses a JSON representation of a protocol message into a message.
Convert field value pairs into regular message.
Convert a JSON object into a message.
Convert a JSON representation into Value message.
Convert a JSON representation into ListValue message.
Convert a JSON representation into Struct message.
Return true if 'ext' links to a dynamic lib in the same package
insert func with given arguments and keywords.
Update config options with the provided dictionary of options.
initialize the app
Create a .pid file in the pid_dir with my pid.
Remove the pid file.
Get the pid from the pid file.
Construct an argument parser using the function decorations.
Find the real name of the magic.
Add this object's information to the parser.
Add this object's information to the parser.
Highlight a block of text. Reimplemented to highlight selectively.
Reimplemented to highlight selectively.
Copy the currently selected text to the clipboard, removing prompts.
Execute 'source'. If 'hidden', do not show any output.
Called when the tab key is pressed. Returns whether to continue             processing the event.
Reimplemented to add an action for raw copy.
Reimplemented for auto-indentation.
Execute `callback` corresponding to `msg` reply, after ``_silent_exec_callback``
Handle requests for raw_input.
Handle the kernel's death by asking if the user wants to restart.
Handle stdout, stderr, and stdin.
Handle shutdown signal, only if from other console.
Shows a call tip, if appropriate, at the current cursor location.
Process a reply for an execution request that resulted in an error.
Process a reply for a successful execution request.
Call all plugins, yielding each item in each non-None result.
Call all plugins, returning the first non-None result.
Load plugins by iterating the `nose.plugins` entry point.
Load plugins in nose.plugins.builtin
Render a LaTeX string to PNG.
Render LaTeX to HTML with embedded PNG data using data URIs.
Clean up files, remove builds.
Return a float representing the current system-wide CPU     utilization as a percentage.
Return network I/O statistics as a namedtuple including     the following attributes:
Return a float representing the current process CPU         utilization as a percentage.
Resume process execution.
Kill the current process.
Get or set process niceness (priority).         Deprecated, use get_nice() instead.
Converts a string to Duration.
Create the default transformers.
Register a transformer instance.
Unregister a transformer instance.
Create the default checkers.
Register a checker instance.
Unregister a checker instance.
Create the default handlers.
Register a handler instance by name with esc_strings.
Unregister a handler instance by name with esc_strings.
Prefilter a line that has been converted to a LineInfo object.
Find a handler for the line_info by trying checkers.
Prefilter a single input line as text.
Prefilter multiple input lines of text.
Allow ! and !! in multi-line statements if multi_line_specials is on
Check if the initital identifier on the line is an alias.
Check if the initial word/function is callable and autocall is on.
Handle normal input lines. Use as a template for handlers.
Handle alias input lines.
Execute the line in a shell, empty return value
Handle lines which can be auto-executed, quoting if requested.
Try to get some help for the object.
Reimplemented to hide on certain key presses and on text edit focus             changes.
Reimplemented to cancel the hide timer.
Reimplemented to paint the background panel.
Updates the tip based on user cursor movement.
Create a property that proxies attribute ``proxied_attr`` through     the local attribute ``local_attr``.
Give reST format README for pypi.
Build a file path from *paths* and return the contents.
Return list of shell aliases to auto-define.
Define an alias, but don't raise on an AliasError.
Define a new alias after validating it.
Validate an alias and return the its number of arguments.
Call an alias given its name and the rest of the line.
Transform alias to system command string.
Expand an alias in the command line
Expand multiple levels of aliases:
Quote an argument for later parsing by shlex.split()
Reset graphics attributs to their default values.
Set attributes based on CSI (Control Sequence Introducer) code.
Set attributes based on SGR (Select Graphic Rendition) codes.
Returns a QTextCharFormat that encodes the current style attributes.
Generate a one-time jwt with an age in seconds
use a thread lock on current method, if self.lock is defined
Run by housekeeper thread
Write a notebook to a file like object
use `Semaphore` to keep func access thread-safety.
Run the pyglet event loop by processing pending events only.
Get common prefix for completions
Reimplemented to ensure a console-like behavior in the underlying             text widgets.
Returns whether text can be cut to the clipboard.
Clear the console.
The text that the user has entered entered at the current prompt.
Sets the text in the input buffer.
Sets the base font for the ConsoleWidget to the specified QFont.
Paste the contents of the clipboard into the input region.
Print the contents of the ConsoleWidget to the specified QPrinter.
Moves the prompt to the top of the viewport.
Sets the font to the default fixed-width font for this platform.
Change the font size by the specified amount (in points).
A low-level method for appending content to the end of the buffer.
Appends HTML at the end of the console buffer.
Clears the "temporary text" buffer, i.e. all the text following             the prompt region.
Performs completion with 'items' at the specified cursor location.
fill the area below the active editting zone with text
Creates a context menu for the given QPoint (in widget coordinates).
Filter key events for the underlying text widget to create a             console-like interface.
Transform a list of strings into a single string with columns.
Convenience method that returns a cursor for the last character.
Convenience method that returns a cursor for the prompt position.
Cancels the current editing task ala Ctrl-G in Emacs.
Displays text using the pager if it exceeds the height of the         viewport.
Called immediately after a new prompt is displayed.
Reads one line of input from the user.
Scrolls the viewport so that the specified cursor is at the top.
Writes a new prompt at the end of the buffer.
Shows a context menu at the given QPoint (in widget coordinates).
Return True if given Distribution is installed in user site.
Print the informations from installed distributions found.
Copy a default config file into the active profile directory.
Create a profile dir by profile name and path.
Find/create a profile dir and return its ProfileDir.
Convert a cmp= function into a key= function
Read a file and close it.  Returns the file source.
Read a file and close it.  Returns the file source using readlines().
Take multiple lines of input.
Make a temporary python file, return filename and filehandle.
Close the file and restore the channel.
Write data to both channels.
write my output to sys.stdout/err as appropriate
add a new handler for new hearts
Converts a list into a list of lists with equal batch_size.
Register your own mode and handle method here.
Extract configuration data from a bdist_wininst .exe
Create a #! line, getting options (if any) from script_text
Determine if the specified executable is a .sh (contains a #! line)
Quote a command line argument according to Windows parsing rules
Generate a legacy script wrapper and install it
Verify that there are no conflicting "old-style" packages
Create directories under ~.
Return True if `name` is a considered as an archive file.
return a mutable proxy for the `obj`.
return a readonly proxy for the `obj`.
Create a new code cell with input and output
Create a new code cell with input and output
Create a new text cell.
Create a new section cell with a given integer level.
Create a notebook by name, id and a list of worksheets.
Create a new metadata node.
Create a new author.
Whether `path` is a directory, to which the user has write access.
Return a valid python filename in the current directory.
Find a file by looking through a sequence of paths.
Return the 'home' directory, as a unicode string.
Return the XDG_CONFIG_HOME, if it is defined and exists, else None.
Get the IPython directory for this platform and user.
Get the base directory where IPython itself is installed.
Find the path to an IPython module in this version of IPython.
Find the path to the folder associated with a given profile.          I.e. find $IPYTHONDIR/profile_whatever.
Expand $VARS and ~names in a string, like a shell
Determine whether a target is out of date.
Make an MD5 hash of a file, ignoring any differences in line     ending characters.
Check for old config files, and present a warning if they exist.
Updates the suggestions' dictionary for an object upon visiting its page
Gets a list with a certain size of suggestions for an object
Gets a list of all suggestions for an object
Return a list of path objects that match the pattern.
Calculate the md5 hash for this file.
Create profile stats file and load profiler.
Clean up stats file, if configured to do so.
Sends an HTTP request to the REST API and receives the requested data.
Disable event loop integration with wxPython.
Disable event loop integration with PyQt4.
Turn a string of history ranges into 3-tuples of (session, start, stop).
Connect to the database, and create tables if necessary.
Prepares and runs an SQL query for the history database.
get info about a session
Get the last n lines from the history database.
Retrieve input by session.
Get a new session number.
Close the database session, filling in the end time and line count.
Give the current session a name in the history database.
Store source and raw input in history and create input cache         variables _i*.
Write any entries in the cache to the database.
This can be called from the main thread to safely stop this thread.
Return the number of CPUs on the system
Return currently connected users as a list of namedtuples.
Returns a list of PIDs currently running on the system.
Make a nice string representation of a pair of numbers.
Nicely format a list of line numbers.
Return a string summarizing the call stack.
A decorator to cache the result of an expensive operation.
Combine a list of regexes into one that matches any of them.
Remove a file, and don't get annoyed if it doesn't exist.
Add `v` to the hash, recursively if needed.
List all profiles in the ipython_dir and cwd.
Start a cluster for a given profile.
Stop a cluster for a given profile.
Find the full path to a .bat or .exe using the win32api module.
Callback for _system.
Win32 version of os.system() that works with network shares.
Return standard output of executing cmd in a shell.
remove records from collection whose parameters match kwargs
Generates a factory function to instantiate the API with the given     version.
Resolve the URL to this point.
Makes the HTTP request.
Returns a list of (code, translation) tuples for codes
Returns a sorted list of (code, translation) tuples for codes
Returns a list of (code, translation) tuples for priority, codes
Find the code units we'll report on.
Run a reporting function on a number of morfs.
Load all IPython extensions in IPythonApp.extensions.
run the pre-flight code, specified via exec_lines
Run lines of code in IPythonApp.exec_lines in the user's namespace.
Run files from profile startup directory
Run files from IPythonApp.exec_files
Run code or file specified at the command-line
Run module specified at the command-line.
Create a simple generic function
Return the path to a data file of ours.
Return the contents of a data file of ours.
HTML-escape the text in `t`.
Generate an HTML report for `morfs`.
Make local instances of static files for HTML report.
Write `html` to `fname`, properly encoded.
Compute a hash that changes if the file needs to be re-reported.
Generate an HTML file for one source file.
Write the index.html file for this report.
Read the last status in `directory`.
Write the current status to `directory`.
uniq_stable(elems) -> list
Sort and compare two lists.
Takes a list of (key,value) pairs and turns it into a dict.
Get a slice of a sequence with variable step. Specify start,stop,step.
Chop a sequence into chunks of the given size.
Read configuration from setup.cfg.
Read existing configuration from MANIFEST.in.
Compile a glob pattern into a regexp.
List all files versioned by git in the current directory.
Parses an text representation of a protocol message into a message.
Parses an text representation of a protocol message into a message.
Convert protobuf message to text format.
Print a single field value (not including name).
Converts an text representation of a protocol message into a message.
Merges a single scalar field into a message.
Consume one token of a string literal.
Start a new kernel.
Get the single KernelManager object for a kernel by its uuid.
Return a dictionary of ports for a kernel.
Return the notebook_id for a kernel_id or None.
Remove the kernel/notebook mapping for kernel_id.
Start a kernel for a notebok an return its kernel_id.
Interrupt a kernel.
Restart a kernel while keeping clients connected.
Create a new iopub stream.
Create a new shell stream.
Create a new hb stream.
convert ark timestamp to unix timestamp
Reset all OneTimeProperty attributes that may have fired already.
Export the contents of the ConsoleWidget as HTML.
Export the contents of the ConsoleWidget as XHTML with inline SVGs.
Transforms a Qt-generated HTML string into a standards-compliant one.
Returns a unique instance of `klass` or None
Builds a query for included terms in a text search.
Query for if date_field is within number of "days" ago.
Query for if date_field is within number of "days" from now.
Query for null or blank field.
Close the connection.
Register command line options
Configure the plugin and system, based on selected options.
Accept the method if its attributes match.
Extract package __version__
Rotate the kill ring, then yank back the new top.
returns: API version number <str>     raises: <VersionNotFound>
returns: API version number <str>     raises: <VersionNotFound>
Returns an XSD-schema-enabled lxml parser from a WSDL or XSD
Reserialize a reply message using JSON.
Inject the first message, which is the document cookie,         for authentication.
Start the heartbeating and call the callback if the kernel dies.
Stop the heartbeating and cancel all related callbacks.
Load file object.
Reload source from disk and initialize state.
Move the current seek pointer to the given block.
Show a single block on screen
Reload source from disk and initialize state.
Processes a collection in parallel.
wrap `with obj` out of func.
wrap `with getattr(self, name)` out of func.
Get source from  a traceback object.
Create a countdown.
Replace macros with content defined in the config.
Keep our history and outstanding attributes up to date after a method call.
call spin after the method.
Add a new Task Record, by msg_id.
Get a specific Task Record, by msg_id.
Update the data in an existing record.
get all msg_ids, ordered by time submitted.
Sends an HTTP request to the REST API and receives the requested data.
Get all messages that are currently ready.
Gets a message if there is one that is ready.
`prop` is a sugar for `property`.
`get_onlys` is a sugar for multi-`property`.
Return the list containing the names of the modules available in the given     folder.
Easily create a trivial completer for a command.
Returns a list containing the completion possibilities for an import line.
Complete files that end in .py or .ipy for the %run command.
Completer function for cd, which only returns directories.
Set the modified time of a file
Get the modified time for a file as a datetime instance
wrap a function that returns a dir, making sure it exists
Open a connection over the serial line and receive data lines
Escape an XML attribute. Value can be unicode.
Configures the xunit plugin.
Writes an Xunit-formatted XML file
Add error output to Xunit report.
Add failure output to Xunit report.
Add success output to Xunit report.
Pick two at random, use the LRU of the two.
dispatch register/unregister events.
check location dependencies, and run if they are met.
Save a message for later submission when its dependencies are met.
Submit a task to any of a subset of our targets.
handle an unmet dependency
Generate a new log-file with a default header.
Print a status message about the logger.
Write the sources to a log.
Write data to the log file, if active
Fully stop logging and close log file.
Create a worksheet by name with with a list of cells.
Create a notebook by name, id and a list of worksheets.
Get a seq of Commandchain objects that match key
List all notebooks in the notebook dir.
Generate a new notebook_id for a name and store its mappings.
Delete a notebook's id only. This doesn't delete the actual notebook.
Return a full path to a notebook given its notebook_id.
Return a full path to a notebook given its name.
Get the representation of a notebook in format by notebook_id.
Get the NotebookNode representation of a notebook by notebook_id.
Save a new notebook and return its notebook_id.
Save an existing notebook by notebook_id.
Save an existing notebook object by notebook_id.
Create a new notebook and return its notebook_id.
Copy an existing notebook and return its notebook_id.
Generate a series of lines, one for each line in `source`.
Determine the encoding for `source` (a string), according to PEP 263.
Load the default config file from the default ipython_dir.
Return a string containing a crash report.
Do actions after construct, but before starting the app.
initialize the InteractiveShell instance
Replace --pylab='inline' with --pylab='auto
Return a string representation of a value and its type for readable     error messages.
Convert the name argument to a list of names.
Set the default value on a per instance basis.
Setup a handler to be called when a trait changes.
Get a list of all the traits of this class.
Validates that the value is a valid object instance.
Returns a description of the trait.
Instantiate a default value instance.
Returns a description of the trait.
check whether our dependencies have been met.
Represent this dependency as a dict. For json compatibility.
Get the number of credits remaining at AmbientSMS
Send a mesage via the AmbientSMS API server
Called for each file         Must return file content         Can be wrapped
Return True if the class is a date type.
Return a datetime so much time ago. Takes the same arguments as timedelta().
Return the datetime truncated to the precision of the provided unit.
Return the date for the day of this week.
get depth of an element in the tree
print a binary tree
accept either IP address or dns name, and return IP
parallelized version of :func:`opt_grid`
Internal function that determines EOL_STYLE_NATIVE constant with the proper value for the     current platform.
Normalizes a path maintaining the final slashes.
Returns a version of a path that is unique.
Normalizes a standard path (posixpath.normpath) maintaining any slashes at the end of the path.
Copy a file from source to target.
Copy a file locally to a directory.
Copy files from the given source to the target.
Copies files into directories, according to a file mapping
:param unicode path:         Path to a file (local or ftp)
:param unicode directory:         A path
Recursively copy a directory tree.
Appends content to a local file.
Reads a file and returns its contents. Works for both local and remote files.
Lists the files in the given directory
Create a file with the given contents.
Replaces all occurrences of "old" by "new" in the given file.
Create directory including any missing intermediate directory.
:param unicode path:         Path to file or directory
Create a symbolic link at `link_path` pointing to `target_path`.
Read the target of the symbolic link at `path`.
Checks if a given path is local, raise an exception if not.
Replaces eol on each line by the given eol_style.
Call Windows NET command, used to acquire/configure network services settings.
Verifies if a filename match with given patterns.
Searches for files in a given directory that match with the given patterns.
A context manager to replace and restore a value using a getter and setter.
Gets all the messages from a specified file.
turn any valid targets argument into a list of integer ids
Route registration requests and queries from clients.
Save the submission of a task.
save the result of a completed task.
save an iopub message into the db
Register a new engine.
handle shutdown request.
Resubmit one or more tasks.
Get the result of 1 or more messages.
Get a list of all msg_ids in our DB records
Perform a raw query on the task record database.
return a standard message
Execute R script
Calls the frontend handler associated with the message type of the             given message.
Run the report.
Annotate a single file.
returns a list of tuples (package_name, description) for apt-cache search results
Return a CouchDB database instance from a database string.
Make sure a DB specifier exists, creating it if necessary.
coerce unicode back to bytestrings.
Given a message or header, return the header.
check packers for binary data and datetime support.
Return the nested message dict.
Sign a message with HMAC digest. If no auth, return b''.
Serialize the message components to bytes.
Build and send a message via stream or socket.
Send a raw message via ident path.
Receive and unpack a message.
Split the identities from the rest of the message.
Unserialize a msg_list to a nested message dict.
Prompts the user to save an SVG document to disk.
Copy a SVG document to the clipboard.
Convert a SVG document to a QImage.
Make an object info dict with all fields present.
Get the names and default values of a function's arguments.
Extract call tip data from an oinfo dict.
Find the absolute path to the file where an object was defined.
Find the line number in a file where an object was defined.
Return the definition header for any callable object.
Return a header string with proper colors.
Generic message when no information is found.
Print the definition header for any callable object.
Print the docstring for any object.
Print the source code for an object.
Show the whole file where an object was defined.
Formats a list of fields for display.
Show detailed information about an object.
Compute a dict with detailed information about an object.
Search namespaces with wildcards for objects.
Return a function to the `name` method on a singleton `coverage` object.
Exclude NoSet objec
Encodes the stored ``data`` to XML and returns a         ``string``.
Encodes the stored ``data`` to XML and returns         an ``lxml.etree`` value.
Recursively loads all modules from a package object, or set of package objects
Parse and send the colored source.
Get a list of matplotlib figures by figure numbers.
Convert a figure to svg or png for inline display.
Import the standard pylab symbols into user_ns.
Configure an IPython shell object for matplotlib use.
Activate pylab mode in the user's namespace.
Start this Tracer.
Stop this Tracer.
Start a new Tracer object, and store it in self.tracers.
Called on new threads, installs the real tracer.
Resume tracing after a `pause`.
Return the line data collected.
Create a new code cell with input and output
Create a new text cell.
Create a notebook by name, id and a list of worksheets.
Shorthand for 'assert a == b, "%r != %r" % (a, b)
Parse a hub key into a dictionary of component parts
Raise an exception if string doesn't match a part's regex
check a result dict for errors, and raise CompositeError if any exist.     Passthrough otherwise.
render one or all of my tracebacks to a list of lines
Return the canonical directory of the module or file `morf`.
Return the source file for `filename`.
Decide whether to trace execution in `filename`, with a reason.
Decide whether to trace execution in `filename`.
Use `msg` as a warning.
Update the source_match matcher with latest imported packages.
Start measuring code coverage.
Clean up on process shutdown.
Exclude source lines from execution consideration.
Return a compiled regex for the given exclusion list.
Get the collected data and reset the collector.
Analyze a module.
Analyze a single morf or code unit.
Write a summary report to `file`.
Annotate a list of modules.
Generate an HTML report.
Generate an XML report of coverage results.
Return a list of (key, value) pairs showing internal information.
Display a Python object in all frontends.
Display the pretty (default) representation of an object.
Display the HTML representation of an object.
Display the SVG representation of an object.
Display the PNG representation of an object.
Display the JPEG representation of an object.
Display the LaTeX representation of an object.
Display the JSON representation of an object.
Display the Javascript representation of an object.
Reload the raw data from file or URL.
Check for an update for pip.
Find the full path to a command using which.
Run a command and return its stdout/stderr as a string.
Execute a command in a subshell.
Forward read events from an FD over a socket.
Loop through lines in self.fd, and send them over self.sock.
get config for subparser and create commands
custom command line  action to show version
custom command line action to check file exist
Return a launcher for a given clsname and kind.
Start the app for the stop subcommand.
import and instantiate a Launcher based on importstring
Start the app for the engines subcommand.
Start the app for the start subcommand.
Create a new wx app or return an exiting one.
Start the wx event loop in a consistent manner.
Create a new qt4 app or return an existing one.
Start the qt4 event loop in a consistent manner.
Check namespace packages' __init__ for declare_namespace
Return a blank canvas to annotate.
Draw a cross on the canvas.
Draw a line between pos1 and pos2 on the canvas.
Return a canvas from a grayscale image.
Returns a unique ID of a given length.     User `version=2` for cross-systems uniqueness.
Build a unique key from get data
Returns a dictionary from a URL params
Extracts video ID from URL.
str->list Convert XML to URL List. From Biligrab.
From http://cdn37.atwikiimg.com/sitescript/pub/dksitescript/FC2.site.js Also com.hps.util.fc2.FC2EncrptUtil.makeMimiLocal L110
wrapper
Downloads Dailymotion videos by URL.
http://stackoverflow.com/a/30923963/2946714
video page
course page
Downloads a Sina video by its unique vid. http://video.sina.com.cn/
Downloads a Sina video by its unique vkey. http://video.sina.com/
Downloads Sina videos by URL.
wrapper
Get item_id
Source: Android mobile
self, str->None Keyword arguments: self: self vid: The video ID for BokeCC cloud, something like
Extracts video ID from live.qq.com.
Format text with color or other effects into ANSI escaped string.
Print a log message to standard error.
Print an error log message.
What a Terrible Failure!
Detect operating system.
Source: Android mobile
str->None
str/int->None
try: # normal Vimeo video html = get_content('https://vimeo.com/' + id) cfg_patt = r'clip_page_config\s*=\s*(\{.+?\});' cfg =
str->dict Information for CKPlayer API content.
Splicing URLs according to video ID to get video details
Extracts video ID from URL.
str->list of str Give you the real URLs.
Get (branch, commit) from HEAD of a git repo.
Converts a string to a valid filename.
Get (width, height) of the current terminal.
Downloads CBS videos by URL.
Override the original one Ugly ugly dirty hack
str, str, str, bool, bool ->None Download Acfun video by vid. Call Acfun API, decide
Main entry point. you-get-dev
str, str->True WARNING: NOT THE SAME PARMS AS OTHER FUNCTIONS!!!!!! You can basicly download anything
Scans through a string for substrings matched some patterns (first-subgroups only). Args: text: A string
Scans through a string for substrings matched some patterns. Args: text: A string to be
Parses the query string of a URL and returns the value of a parameter. Args:
Decompresses data for Content-Encoding: gzip.
Decompresses data for Content-Encoding: deflate. (the zlib compression is used.)
Gets the content of a URL via sending a HTTP GET request. Args: url: A
Post the content of a URL via sending a HTTP POST request. Args: url: A
Parses host name and port number from a string.
Overload default print function as py (<3.3) does not support 'flush' keyword. Although the function
str->str
Source: Android mobile
JSON, int, int, int->str Get a proper title with courseid+topicID+partID.
int->None Download a WHOLE course. Reuse the API call to save time.
int, int, int->None Download ONE PART of the course.
int, int->list Get the height of the videos. Since brightcove is using 3 kinds of
Checks if a task is either queued or running in this executor :param task_instance: TaskInstance
Returns and flush the event buffer. In case dag_ids is specified it will only return
one method to fetch connection params as a dict used in get_uri() and get_connection()
override DbApiHook get_uri method for get_sqlalchemy_engine()
Returns a snowflake.connection object
returns aws_access_key_id, aws_secret_access_key from extra intended to be used by external import and export statements
Fetches a field from extras, and returns it. This is some Airflow magic. The grpc
Executes SQL using psycopg2 copy_expert method. Necessary to execute COPY command without access to a
Loads a tab-delimited file into a database table
Dumps a database table into a tab-delimited file
Uploads the file to Google cloud storage
Gets the max partition for a table. :param schema: The hive schema the table lives
This function finds the date in a list closest to the target date. An optional
This function finds the date in a list closest to the target date. An optional
Returns a mysql connection object
Loads a tab-delimited file into a database table
Checks whether new objects have been uploaded and the inactivity_period has passed and updates the
Helps debug deadlocks by printing stacktraces when this gets a SIGQUIT e.g. kill -s QUIT
Creates a dag run for the specified dag :param args: :return:
Deletes all DB records related to the specified dag :param args: :return:
Returns the unmet dependencies for a task instance from the perspective of the scheduler (i.e.
Returns the state of a TaskInstance at the command line. >>> airflow task_state tutorial sleep
Returns the state of a DagRun at the command line. >>> airflow dag_state tutorial 2015-01-01T00:00:00.000000
Returns the next execution datetime of a DAG at the command line. >>> airflow next_execution
Runs forever, monitoring the child processes of @gunicorn_master_proc and restarting workers occasionally. Each iteration of
Retrieves connection to Cloud Translate :return: Google Cloud Translate client object. :rtype: Client
Translate a string or list of strings. See https://cloud.google.com/translate/docs/translating-text :type values: str or list :param
Execute the bash command in a temporary directory which will be cleaned afterwards
Retrieves a resource containing information about a Cloud SQL instance. :param instance: Database instance ID.
Creates a new Cloud SQL instance. :param body: Body required by the Cloud SQL insert
Updates settings of a Cloud SQL instance. Caution: This is not a partial update, so
Deletes a Cloud SQL instance. :param project_id: Project ID of the project that contains the
Retrieves a database resource from a Cloud SQL instance. :param instance: Database instance ID. This
Creates a new database inside a Cloud SQL instance. :param instance: Database instance ID. This
Updates a database resource inside a Cloud SQL instance. This method supports patch semantics. See
Deletes a database from a Cloud SQL instance. :param instance: Database instance ID. This does
Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL
Waits for the named operation to complete - checks status of the asynchronous call. :param
Starts Cloud SQL Proxy. You have to remember to stop the proxy if you started
Stops running proxy. You should stop the proxy after you stop using it.
Returns version of the Cloud SQL Proxy.
Create connection in the Connection table, according to whether it uses proxy, TCP, UNIX sockets,
Retrieves the dynamically created connection from the Connection table. :param session: Session of the SQL
Delete the dynamically created connection from the Connection table. :param session: Session of the SQL
Retrieve Cloud SQL Proxy runner. It is used to manage the proxy lifecycle per task.
Retrieve database hook. This is the actual Postgres or MySQL database hook that uses proxy
Clean up database hook after it was used.
Reserve free TCP port to be used by Cloud SQL Proxy
Replaces invalid MLEngine job_id characters with '_'. This also adds a leading 'z' in case
Extract error code from ftp exception
Integrate plugins to the context
Remove any existing DAG runs for the perf test DAGs.
Remove any existing task instances for the perf test DAGs.
Toggle the pause state of the DAGs in the test.
Print operational metrics for the scheduler test.
Override the scheduler heartbeat to determine when the test is complete
Invoke Lambda Function
Return the task object identified by the given dag_id and task_id.
Creates Operators needed for model evaluation and returns. It gets prediction over inputs via Cloud
Creates the directory specified by path, creating intermediate directories as necessary. If directory already exists,
A small helper function to convert a string to a numeric value if appropriate :param
Get the current date and time in UTC :return:
Gets the epoch in the users timezone :return:
Returns the datetime with the default timezone added if timezone information was not associated :param
Make a naive datetime.datetime in a given time zone aware. :param value: datetime :param timezone:
Make an aware datetime.datetime naive in a given time zone. :param value: datetime :param timezone:
Wrapper around datetime.datetime that adds settings.TIMEZONE if tzinfo not specified :return: datetime.datetime
Sets the environment variable `GOOGLE_APPLICATION_CREDENTIALS` with either: - The path to the keyfile from the
Fetches a field from extras, and returns it. This is some Airflow magic. The google_cloud_platform
Establish a connection to druid broker.
Returns http session for use with requests :param headers: additional headers to be passed through
Performs the request :param endpoint: the endpoint to be called i.e. resource/v1/query? :type endpoint: str
Checks the status code and raise an AirflowException exception on non 2XX or 3XX status
Grabs extra options like timeout and actually runs the request, checking for the result :param
Runs Hook.run() with a Tenacity decorator attached to it. This is useful for connectors which
Contextmanager that will create and teardown a session.
Function decorator that provides a session if it isn't provided. If you want to reuse
Clear out the database
Upload a file to Azure Blob Storage.
Returns a connection object
Parses some DatabaseError to provide a better error message
Get a set of records from Presto
Get a pandas dataframe from a sql query.
Execute the statement against Presto. Can be used to create views.
A generic way to insert a set of tuples into a table. :param table: Name
Return a cosmos db client.
Checks if a collection exists in CosmosDB.
Creates a new collection in the CosmosDB database.
Checks if a database exists in CosmosDB.
Creates a new database in CosmosDB.
Deletes an existing database in CosmosDB.
Deletes an existing collection in the CosmosDB database.
Inserts a new document (or updates an existing one) into an existing collection in the
Insert a list of new documents into an existing collection in the CosmosDB database.
Delete an existing document out of a collection in the CosmosDB database.
Get a document from an existing collection in the CosmosDB database.
Get a list of documents from an existing collection in the CosmosDB database via SQL
Return python code of a given dag_id.
Returns the Cloud Function with the given name. :param name: Name of the function. :type
Creates a new function in Cloud Function in the location specified in the body. :param
Updates Cloud Functions according to the specified update mask. :param name: The name of the
Uploads zip file with sources. :param location: The location where the function is created. :type
Deletes the specified Cloud Function. :param name: The name of the function. :type name: str
Waits for the named operation to complete - checks status of the asynchronous call. :param
Publishes messages to a Pub/Sub topic. :param project: the GCP project ID in which to
Creates a Pub/Sub topic, if it does not already exist. :param project: the GCP project
Deletes a Pub/Sub topic if it exists. :param project: the GCP project ID in which
Creates a Pub/Sub subscription, if it does not already exist. :param topic_project: the GCP project
Deletes a Pub/Sub subscription, if it exists. :param project: the GCP project ID where the
Pulls up to ``max_messages`` messages from Pub/Sub subscription. :param project: the GCP project ID where
Pulls up to ``max_messages`` messages from Pub/Sub subscription. :param project: the GCP project name or
Wrapper around the private _get_dep_statuses method that contains some global checks for all dependencies. :param
Returns whether or not this dependency is met for a given task instance. A dependency
Returns an iterable of strings that explain why this dependency wasn't met. :param ti: the
Parses a config file for s3 credentials. Can currently parse boto, s3cmd.conf and AWS SDK
Get the underlying `botocore.Credentials` object. This contains the following authentication attributes: access_key, secret_key and token.
If the IAM role is a role name, get the Amazon Resource Name (ARN) for
Returns verticaql connection object
Walks the tree of loggers and tries to set the context for each handler :param
Do whatever it takes to actually log the specified logging record :param message: message to
Ensure all logging output has been flushed
If the path contains a folder with a .zip suffix, then the folder is treated
Traverse a directory and look for Python files. :param directory: the directory to traverse :type
Construct a TaskInstance from the database based on the primary key :param session: DB session.
:param dag_id: DAG ID :type dag_id: unicode :return: if the given DAG ID exists in
Launch DagFileProcessorManager processor and start DAG parsing loop in manager.
Harvest DAG parsing results from result queue and sync metadata from stat queue. :return: List
Heartbeat DAG file processor and start it if it is not alive. :return:
Sync metadata from stat queue and only keep the latest stat. :return:
Send termination signal to DAG parsing processor manager and expect it to terminate all DAG
Terminate (and then kill) the manager process launched. :return:
Helper method to clean up DAG file processors to avoid leaving orphan processes.
Use multiple processes to parse and generate tasks for the DAGs in parallel. By processing
Parse DAG files repeatedly in a standalone loop.
Parse DAG files in a loop controlled by DagParsingSignal. Actual DAG parsing loop will run
Refresh file paths from dag dir if we haven't done it for too long.
Occasionally print out stats about how fast the files are getting processed
Clears import errors for files that no longer exist. :param session: session for ORM operations
Print out stats about how files are getting processed. :param known_file_paths: a list of file
:param file_path: the path to the file that's being processed :type file_path: unicode :return: the
:param file_path: the path to the file that's being processed :type file_path: unicode :return: the
:param file_path: the path to the file that's being processed :type file_path: unicode :return: the
Update this with a new set of paths to DAG definition files. :param new_file_paths: list
Sleeps until all the processors are done.
This should be periodically called by the manager loop. This method will kick off new
Find zombie task instances, which are tasks haven't heartbeated for too long. :return: Zombie task
:return: whether all file paths have been processed max_runs times
Kill all child processes on exit since we don't want to leave them as orphaned.
Opens a ssh connection to the remote host. :rtype: paramiko.client.SSHClient
Creates a tunnel between two hosts. Like ssh -L <LOCAL_PORT>:host:<REMOTE_PORT>. :param remote_port: The remote port
Creates a transfer job that runs periodically. :param body: (Required) A request body, as described
Gets the latest state of a long-running operation in Google Storage Transfer Service. :param job_name:
Lists long-running operations in Google Storage Transfer Service that match the specified filter. :param filter:
Updates a transfer job that runs periodically. :param job_name: (Required) Name of the job to
Deletes a transfer job. This is a soft delete. After a transfer job is deleted,
Cancels an transfer operation in Google Storage Transfer Service. :param operation_name: Name of the transfer
Gets an transfer operation in Google Storage Transfer Service. :param operation_name: (Required) Name of the
Gets an transfer operation in Google Storage Transfer Service. :param filter: (Required) A request filter,
Pauses an transfer operation in Google Storage Transfer Service. :param operation_name: (Required) Name of the
Resumes an transfer operation in Google Storage Transfer Service. :param operation_name: (Required) Name of the
Waits until the job reaches the expected state. :param job: Transfer job See: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferJobs#TransferJob :type
Checks whether the operation list has an operation with the expected status, then returns true
Returns all task reschedules for the task instance and try number, in ascending order. :param
Kubernetes only supports lowercase alphanumeric characters and "-" and "." in the pod name However,
Kubernetes pod names must be <= 253 chars and must pass the following regex for
Valid label values must be 63 characters or less and must be empty or begin
If the airflow scheduler restarts with pending "Queued" tasks, the tasks may or may not
Returns the number of slots open at the moment
Expands (potentially nested) env vars by repeatedly applying `expandvars` and `expanduser` until interpolation stops having
Runs command and returns stdout
Generates a configuration from the provided template + variables defined in current scope :param template:
Remove an option if it exists in config from a file or default config. If
Returns the section as a dict. Values are converted to int, float, bool as required.
Returns the current configuration as an OrderedDict of OrderedDicts. :param display_source: If False, the option
Allocate IDs for incomplete keys. .. seealso:: https://cloud.google.com/datastore/docs/reference/rest/v1/projects/allocateIds :param partial_keys: a list of partial keys.
Begins a new transaction. .. seealso:: https://cloud.google.com/datastore/docs/reference/rest/v1/projects/beginTransaction :return: a transaction handle. :rtype: str
Commit a transaction, optionally creating, deleting or modifying some entities. .. seealso:: https://cloud.google.com/datastore/docs/reference/rest/v1/projects/commit :param body:
Lookup some entities by key. .. seealso:: https://cloud.google.com/datastore/docs/reference/rest/v1/projects/lookup :param keys: the keys to lookup. :type
Roll back a transaction. .. seealso:: https://cloud.google.com/datastore/docs/reference/rest/v1/projects/rollback :param transaction: the transaction to roll back. :type
Run a query for entities. .. seealso:: https://cloud.google.com/datastore/docs/reference/rest/v1/projects/runQuery :param body: the body of the query
Gets the latest state of a long-running operation. .. seealso:: https://cloud.google.com/datastore/docs/reference/data/rest/v1/projects.operations/get :param name: the name
Deletes the long-running operation. .. seealso:: https://cloud.google.com/datastore/docs/reference/data/rest/v1/projects.operations/delete :param name: the name of the operation resource.
Poll backup operation state until it's completed. :param name: the name of the operation resource
Export entities from Cloud Datastore to Cloud Storage for backup. .. note:: Keep in mind
Import a backup from Cloud Storage to Cloud Datastore. .. note:: Keep in mind that
Publish a message to a topic or an endpoint. :param target_arn: either a TopicArn or
Fetch the hostname using the callable from the config or using `socket.getfqdn` as a fallback.
Retrieves connection to Cloud Natural Language service. :return: Cloud Natural Language service object :rtype: google.cloud.language_v1.LanguageServiceClient
Finds named entities in the text along with entity types, salience, mentions for each entity,
A convenience method that provides all the features that analyzeSentiment, analyzeEntities, and analyzeSyntax provide in
Classifies a document into categories. :param document: Input document. If a dict is provided, it
Return the task object identified by the given dag_id and task_id.
Gets template fields for specific operator class. :param fullname: Full path to operator class. For
A role that allows you to include a list of template fields in the middle
Properly close pooled database connections
Ensures that certain subfolders of AIRFLOW_HOME are on the classpath
Gets the returned Celery result from the Airflow task ID provided to the sensor, and
Return true if the ticket cache contains "conf" information as is found in ticket caches
Transforms a SQLAlchemy model instance into a dictionary
Yield successive chunks of a given size from a list of items
Reduce the given list of items by splitting it into chunks of the given size
Given a number of tasks, builds a dependency chain. chain(task_1, task_2, task_3, task_4) is equivalent
Returns a pretty ascii table from tuples If namedtuple are used, the table will have
Tries really hard to terminate all children (including grandchildren). Will send sig (SIGTERM) to the
Given task instance, try_number, filename_template, return the rendered log filename :param ti: task instance :param
Return the task object identified by the given dag_id and task_id.
Integrate plugins to the context
Returns a Google Cloud Dataproc service object.
Awaits for Google Cloud Dataproc Operation to complete.
Coerces content or all values of content if it is a dict to a string.
Handles the Airflow + Databricks lifecycle logic for a Databricks operator :param operator: Databricks operator
Run an pig script using the pig cli >>> ph = PigCliHook() >>> result =
Fetch and return the state of the given celery task. The scope of this function
How many Celery tasks should each worker process send. :return: Number of tasks that should
How many Celery tasks should be sent to each worker process. :return: Number of tasks
Like a Python builtin dict object, setdefault returns the current value for a key, and
Returns a Google MLEngine service object.
Launches a MLEngine job and wait for it to reach a terminal state. :param project_id:
Gets a MLEngine job based on the job name. :return: MLEngine job object if succeed.
Waits for the Job to reach a terminal state. This method will periodically check the
Creates the Version on Google Cloud ML Engine. Returns the operation if the version was
Sets a version to be the default. Blocks until finished.
Lists all available versions of a model. Blocks until finished.
Deletes the given version of a model. Blocks until finished.
Create a Model. Blocks until finished.
Gets a Model. Blocks until finished.
Executes command received and stores result state in queue. :param key: the key to identify
Write batch items to dynamodb table with provisioned throughout capacity.
Integrate plugins to the context.
Creates a new instance of the configured executor if none exists and returns it
Creates a new instance of the named executor. In case the executor name is not
Handles error callbacks when using Segment with segment_debug_mode set to True
Launches the pod synchronously and waits for completion. Args: pod (Pod): startup_timeout (int): Timeout for
Returns a mssql connection object
Call the SparkSubmitHook to run the provided spark job
Trigger a new dag run for a Dag with an execution date of now unless
Delete all DB records related to the specified Dag.
Returns a list of Dag Runs for a specific DAG ID. :query param state: a
Return python code of a given dag_id.
Returns a JSON with a task's public instance variables.
(Un)pauses a dag
Returns a JSON with a task instance's public instance variables. The format for the exec_date
Returns a JSON with a dag_run's public instance variables. The format for the exec_date is
Get all pools.
Create a pool.
Delete pool.
Create a new container group :param resource_group: the name of the resource group :type resource_group:
Get the state and exitcode of a container group :param resource_group: the name of the
Get the messages of a container group :param resource_group: the name of the resource group
Get the tail from logs of a container group :param resource_group: the name of the
Delete a container group :param resource_group: the name of the resource group :type resource_group: str
Test if a container group exists :param resource_group: the name of the resource group :type
Function decorator that Looks for an argument named "default_args", and fills the unspecified arguments from
Builds an ingest query for an HDFS TSV load. :param static_path: The path on hdfs
This function executes the transfer from the email server (via imap) into s3. :param context:
Check for message on subscribed channels and write to xcom the message with key ``message``
Reloads the current dagrun from the database :param session: database session
Returns a set of dag runs for the given search criteria. :param dag_id: the dag_id
Returns the task instances for this dag run
Returns the task instance specified by task_id for this dag run :param task_id: the task
The previous DagRun, if there is one
The previous, SCHEDULED DagRun, if there is one
Determines the overall state of the DagRun based on the state of its TaskInstances. :return:
Verifies the DagRun by checking for removed tasks or tasks that are not in the
:param dag_id: DAG ID :type dag_id: unicode :param execution_date: execution date :type execution_date: datetime :return:
We need to get the headers in addition to the body answer to get the
This function makes an API call to Jenkins to trigger a build for 'job_name' It
This method poll the jenkins queue until the job is executed. When we trigger a
Given a context, this function provides a dictionary of values that can be used to
Calls callbacks before execution. Note that any exception from callback will be logged but won't
Calls callbacks after execution. As it's being called after execution, it can capture status of
This function decides whether or not to Trigger the remote DAG
Sends a single datapoint metric to DataDog :param metric_name: The name of the metric :type
Queries datadog for a specific metric, potentially with some function applied to it and returns
Posts an event to datadog (processing finished, potentially alerts, other issues) Think about this as
Given either a manually set token or a conn_id, return the webhook_token to use :param
Construct the Slack message. All relevant parameters are combined here to a valid Slack json
Remote Popen (actually execute the slack webhook call)
Gets the DAG out of the dictionary, and refreshes it if expired
Given a path to a python module or zip file, this method imports the module
Fail given zombie tasks, which are tasks that haven't had a heartbeat for too long,
Adds the DAG into the bag, recurses into sub dags. Throws AirflowDagCycleException if a cycle
Given a file path or a folder, this method looks for python modules, imports them
Prints a report around DagBag loading stats
Call the SparkSubmitHook to run the provided spark job
Add or subtract days from a YYYY-MM-DD :param ds: anchor date in ``YYYY-MM-DD`` format to
Takes an input string and outputs another string as specified in the output format :param
Integrate plugins to the context
poke matching files in a directory with self.regex :return: Bool depending on the search criteria
poke for a non empty directory :return: Bool depending on the search criteria
Clears a set of task instances, but makes sure the running ones get killed. :param
Return the try number that this task number will be when it is actually run.
Returns a command that can be executed anywhere where airflow is installed. This command is
Returns a command that can be executed anywhere where airflow is installed. This command is
Generates the shell command required to execute this task instance. :param dag_id: DAG ID :type
Get the very latest state from the database, if a session is passed, we use
Forces the task instance's state to FAILED in the database.
Refreshes the task instance from the database based on the primary key :param lock_for_update: if
Clears all XCom data from the database for the task instance
Returns a tuple that identifies the task instance uniquely
Checks whether the dependents of this task instance have all succeeded. This is meant to
Returns whether or not all the conditions are met for this task instance to be
Get datetime of the next retry if the task instance fails. For exponential backoff, retry_delay
Checks on whether the task instance is in the right state and timeframe to be
Returns a boolean as to whether the slot pool has room for this task to
Returns the DagRun for this TaskInstance :param session: :return: DagRun
Checks dependencies and then sets state to RUNNING if they are met. Returns True if
Immediately runs the task (without checking or changing db state before execution) and then sets
Make an XCom available for tasks to pull. :param key: A key for the XCom
Pull XComs that optionally meet certain criteria. The default value for `key` limits the search
Sets the log context.
Close and upload local log file to remote storage Wasb.
Read logs of given task instance and try_number from Wasb remote storage. If failed, read
Check if remote_log_location exists in remote storage :param remote_log_location: log's location in remote storage :return:
Returns the log found at the remote_log_location. Returns '' if no logs are found or
Writes the log to the remote_log_location. Fails silently if no hook was created. :param log:
Retrieves connection to Google Compute Engine. :return: Google Compute Engine services object :rtype: dict
Starts an existing instance defined by project_id, zone and resource_id. Must be called with keyword
Sets machine type of an instance defined by project_id, zone and resource_id. Must be called
Retrieves instance template by project_id and resource_id. Must be called with keyword arguments rather than
Inserts instance template using body specified Must be called with keyword arguments rather than positional.
Retrieves Instance Group Manager by project_id, zone and resource_id. Must be called with keyword arguments
Patches Instance Group Manager with the specified body. Must be called with keyword arguments rather
Waits for the named operation to complete - checks status of the async call. :param
Check if bucket_name exists. :param bucket_name: the name of the bucket :type bucket_name: str
Creates an Amazon S3 bucket. :param bucket_name: The name of the bucket :type bucket_name: str
Checks that a prefix exists in a bucket :param bucket_name: the name of the bucket
Lists prefixes in a bucket under prefix :param bucket_name: the name of the bucket :type
Lists keys in a bucket under prefix and not containing delimiter :param bucket_name: the name
Checks if a key exists in a bucket :param key: S3 key that will point
Returns a boto3.s3.Object :param key: the path to the key :type key: str :param bucket_name:
Reads a key from S3 :param key: S3 key that will point to the file
Reads a key with S3 Select. :param key: S3 key that will point to the
Checks that a key matching a wildcard expression exists in a bucket :param wildcard_key: the
Returns a boto3.s3.Object object matching the wildcard expression :param wildcard_key: the path to the key
Loads a local file to S3 :param filename: name of the file to load. :type
Loads a string to S3 This is provided as a convenience to drop a string
Loads bytes to S3 This is provided as a convenience to drop a string in
Loads a file object to S3 :param file_obj: The file-like object to set as the
Creates a copy of an object that is already stored in S3. Note: the S3
:param bucket: Name of the bucket in which you are going to delete object(s) :type
Queries cassandra and returns a cursor to the results.
Takes a cursor, and writes results to a local file. :return: A dictionary where keys
Takes a cursor, and writes the BigQuery schema for the results to a local file
Converts a user type to RECORD that contains n fields, where n is the number
Converts a tuple to RECORD that contains n fields, each will be converted to its
Converts a map to a repeated RECORD that contains two fields: 'key' and 'value', each
Send an email with html content using sendgrid. To use this plugin: 0. include sendgrid
Retrieves connection to Cloud Speech. :return: Google Cloud Speech client object. :rtype: google.cloud.speech_v1.SpeechClient
Recognizes audio input :param config: information to the recognizer that specifies how to process the
Call the SparkSqlHook to run the provided sql query
Provide task_instance context to airflow task handler. :param ti: task instance object
Template method that contains custom logic of reading logs given the try_number. :param ti: task
Read logs of given task instance from local machine. :param task_instance: task instance object :param
Create log directory and give it correct permissions. :param ti: task instance object :return: relative
Load AirflowPlugin subclasses from the entrypoints provided. The entry_point group should be 'airflow.plugins'. :param entry_points:
Check whether a potential object is a subclass of the AirflowPlugin class. :param plugin_obj: potential
Sets tasks instances to skipped from the same dag run. :param dag_run: the DagRun for
Return a AzureDLFileSystem object.
Check if a file exists on Azure Data Lake. :param file_path: Path and name of
Upload a file to Azure Data Lake. :param local_path: local path. Can be single file,
Download a file from Azure Blob Storage. :param local_path: local path. If downloading a single
List files in Azure Data Lake Storage :param path: full path/globstring to use to list
Run Presto Query on Athena
Cancel the submitted athena query
Uncompress gz and bz2 files
Queries MSSQL and returns a cursor of results. :return: mssql cursor
Takes a cursor, and writes results to a local file. :return: A dictionary where keys
Upload all of the file splits (and optionally the schema .json file) to Google cloud
Takes a value from MSSQL, and converts it to a value that's safe for JSON/Google
Decorates function to execute function at the same time submitting action_logging but in CLI context.
Builds metrics dict from function args It assumes that function arguments is from airflow.bin.cli module's
Yields a dependency status that indicate whether the given task instance's trigger rule was met.
Create the specified cgroup. :param path: The path of the cgroup to create. E.g. cpu/mygroup/mysubgroup
Delete the specified cgroup. :param path: The path of the cgroup to delete. E.g. cpu/mygroup/mysubgroup
:return: a mapping between the subsystem name to the cgroup name :rtype: dict[str, str]
The purpose of this function is to be robust to improper connections settings provided by
Utility function to perform an API call with retries :param endpoint_info: Tuple of method and
Sign into Salesforce, only if we are not already signed in.
Make a query to Salesforce. :param query: The query to make to Salesforce. :type query:
Get the description of an object from Salesforce. This description is the object's schema and
Get a list of all available fields for an object. :param obj: The name of
Get all instances of the `object` from Salesforce. For each model, only get the fields
Convert a column of a dataframe to UNIX timestamps if applicable :param column: A Series
Write query results to file. Acceptable formats are: - csv: comma-separated-values file. This is the
Read logs of given task instance and try_number from GCS. If failed, read the log
Returns the log found at the remote_log_location. :param remote_log_location: the log's location in remote storage
Writes the log to the remote_log_location. Fails silently if no hook was created. :param log:
Given a Google Cloud Storage URL (gs://<bucket>/<blob>), returns a tuple containing the corresponding bucket and
Fetches PyMongo Client
Fetches a mongo collection object for querying. Uses connection schema as DB unless specified.
Runs an aggregation pipeline and returns the results https://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.aggregate https://api.mongodb.com/python/current/examples/aggregation.html
Runs a mongo find query and returns the results https://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.find
Inserts a single document into a mongo collection https://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.insert_one
Inserts many docs into a mongo collection. https://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.insert_many
Updates a single document in a mongo collection. https://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.update_one :param mongo_collection: The name of the
Replaces a single document in a mongo collection. https://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.replace_one .. note:: If no ``filter_doc`` is
Replaces many documents in a mongo collection. Uses bulk_write with multiple ReplaceOne operations https://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.bulk_write ..
Deletes a single document in a mongo collection. https://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.delete_one :param mongo_collection: The name of the
Deletes one or more documents in a mongo collection. https://api.mongodb.com/python/current/api/pymongo/collection.html#pymongo.collection.Collection.delete_many :param mongo_collection: The name of
Checks the mail folder for mails containing attachments with the given name. :param name: The
Retrieves mail's attachments in the mail folder by its name. :param name: The name of
Downloads mail's attachments in the mail folder by its name to the local directory. :param
Gets all attachments by name for the mail. :param name: The name of the attachment
Gets the file including name and payload. :returns: the part's name and payload. :rtype: tuple
Write batch records to Kinesis Firehose
Determines whether a task is ready to be rescheduled. Only tasks in NONE state with
Send email using backend specified in EMAIL_BACKEND.
Send an email with html content >>> send_email('test@example.com', 'foo', '<b>Foo</b> bar', ['/dev/null'], dryrun=True)
Processes DateTimes from the DB making sure it is always returning UTC. Not using timezone.convert_to_utc
Check if a blob exists on Azure Blob Storage. :param container_name: Name of the container.
Check if a prefix exists on Azure Blob storage. :param container_name: Name of the container.
Upload a file to Azure Blob Storage. :param file_path: Path to the file to load.
Upload a string to Azure Blob Storage. :param string_data: String to load. :type string_data: str
Download a file from Azure Blob Storage. :param file_path: Path to the file to download.
Read a file from Azure Blob Storage and return as a string. :param container_name: Name
Delete a file from Azure Blob Storage. :param container_name: Name of the container. :type container_name:
BACKPORT FROM PYTHON3 FTPLIB. List a directory in a standardized format by using MLSD command
Returns a FTP connection object
Returns a dictionary of {filename: {attributes}} for all files on the remote system (where the
Returns a list of files on the remote system. :param path: full path to the
Transfers the remote file to a local location. If local_full_path_or_buffer is a string path, the
Transfers a local file to the remote location. If local_full_path_or_buffer is a string path, the
Rename a file. :param from_name: rename file from name :param to_name: rename file to name
Returns a datetime object representing the last time the file was modified :param path: remote
Infers from the dates which dag runs need to be created and does so. :param
Set the state of a task instance and if needed its relatives. Can set state
Helper method that set dag run state in the DB. :param dag_id: dag_id of target
Set the dag run for a specific execution date and its task instances to success.
Set the dag run for a specific execution date and its running task instances to
Set the dag run for a specific execution date to running. :param dag: the DAG
Return a version to identify the state of the underlying git repo. The version will
Call the DiscordWebhookHook to post message
Validates if field is OK. :param validation_spec: specification of the field :type validation_spec: dict :param
Validates if the body (dictionary) follows specification that the validator was instantiated with. Raises ValidationSpecificationException
Return the FileService object.
Check if a directory exists on Azure File Share. :param share_name: Name of the share.
Check if a file exists on Azure File Share. :param share_name: Name of the share.
Return the list of directories and files stored on a Azure File Share. :param share_name:
Create a new directory on a Azure File Share. :param share_name: Name of the share.
Download a file from Azure File Share. :param file_path: Where to store the file. :type
Download a file from Azure File Share. :param stream: A filehandle to store the file
Upload a file to Azure File Share. :param file_path: Path to the file to load.
Upload a string to Azure File Share. :param string_data: String to load. :type string_data: str
Upload a stream to Azure File Share. :param stream: Opened file/stream to upload as the
Provide filename context to airflow task handler. :param filename: filename in which the dag is
Create log file and directory if required. :param filename: task instance object :return: relative log
Given a Google Cloud Storage URL (gs://<bucket>/<blob>), returns a tuple containing the corresponding bucket and
Returns a Google Cloud Storage service object.
Copies an object from a bucket to another, with renaming if requested. destination_bucket or destination_object
Has the same functionality as copy, except that will work on files over 5 TB,
Get a file from Google Cloud Storage. :param bucket_name: The bucket to fetch from. :type
Uploads a local file to Google Cloud Storage. :param bucket_name: The bucket to upload to.
Checks for the existence of a file in Google Cloud Storage. :param bucket_name: The Google
Checks if an blob_name is updated in Google Cloud Storage. :param bucket_name: The Google cloud
Deletes an object from the bucket. :param bucket_name: name of the bucket, where the object
List all objects from the bucket with the give string prefix in name :param bucket_name:
Gets the size of a file in Google Cloud Storage. :param bucket_name: The Google cloud
Gets the CRC32c checksum of an object in Google Cloud Storage. :param bucket_name: The Google
Gets the MD5 hash of an object in Google Cloud Storage. :param bucket_name: The Google
Creates a new bucket. Google Cloud Storage uses a flat namespace, so you can't create
Creates a new ACL entry on the specified bucket_name. See: https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/insert :param bucket_name: Name of
Creates a new ACL entry on the specified object. See: https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/insert :param bucket_name: Name of
Composes a list of existing object into a new object in the same storage bucket_name
Return the index, i, in arr that minimizes f(arr[i])
Returns true if training job's secondary status message has changed. :param current_job_description: Current job description,
Returns a string contains start time and the secondary training job status message. :param job_description:
Tar the local file or directory and upload to s3 :param path: local file or
Extract the S3 operations from the configuration and execute them. :param config: config of SageMaker
Check if an S3 URL exists :param s3url: S3 url :type s3url: str :rtype: bool
Establish an AWS connection for retrieving logs during training :rtype: CloudWatchLogs.Client
Create a training job :param config: the config for training :type config: dict :param wait_for_completion:
Create a tuning job :param config: the config for tuning :type config: dict :param wait_for_completion:
Create a transform job :param config: the config for transform job :type config: dict :param
Create an endpoint :param config: the config for endpoint :type config: dict :param wait_for_completion: if
Return the training job info associated with job_name and print CloudWatch logs
Check status of a SageMaker job :param job_name: name of the job to check status
Display the logs for a given training job, optionally tailing them until the job is
Execute the python dataflow job.
Checks whether the file specified by file_name is stored in Google Cloud Storage (GCS), if
Run migrations in 'offline' mode. This configures the context with just a URL and not
Run migrations in 'online' mode. In this scenario we need to create an Engine and
Deletes the specified Cloud Bigtable instance. Raises google.api_core.exceptions.NotFound if the Cloud Bigtable instance does not
Creates new instance. :type instance_id: str :param instance_id: The ID for the new instance. :type
Creates the specified Cloud Bigtable table. Raises ``google.api_core.exceptions.AlreadyExists`` if the table exists. :type instance: Instance
Deletes the specified table in Cloud Bigtable. Raises google.api_core.exceptions.NotFound if the table does not exist.
Updates number of nodes in the specified Cloud Bigtable cluster. Raises google.api_core.exceptions.NotFound if the cluster
This function creates the command list from available information
This function prepares a list of hiveconf params from a dictionary of key value pairs.
Run an hql statement using the hive cli. If hive_conf is specified it should be
Loads a pandas DataFrame into hive. Hive data types will be inferred if not passed
Loads a local file into Hive Note that the table generated in Hive uses ``STORED
Returns a Hive thrift client.
Checks whether a partition exists :param schema: Name of hive schema (database) @table belongs to
Checks whether a partition with a given name exists :param schema: Name of hive schema
Get a metastore table object >>> hh = HiveMetastoreHook() >>> t = hh.get_table(db='airflow', table_name='static_babynames') >>>
Get a metastore table object
Returns a list of all partitions in a table. Works only for tables with less
Helper method to get max partition of partitions with partition_key from part specs. key:value pair
Returns the maximum value for all partitions with given field in a table. If only
Check if table exists >>> hh = HiveMetastoreHook() >>> hh.table_exists(db='airflow', table_name='static_babynames') True >>> hh.table_exists(db='airflow', table_name='does_not_exist')
Returns a Hive connection object.
Get results of the provided hql in target schema. :param hql: hql to be executed.
Execute hql in target schema and write results to a csv file. :param hql: hql
Get a set of records from a Hive query. :param hql: hql to be executed.
Get a pandas dataframe from a Hive query :param hql: hql to be executed. :type
Retrieves connection to Cloud Vision. :return: Google Cloud Vision client object. :rtype: google.cloud.vision_v1.ProductSearchClient
For the documentation see: :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductSetCreateOperator`
For the documentation see: :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductSetGetOperator`
For the documentation see: :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductSetUpdateOperator`
For the documentation see: :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductSetDeleteOperator`
For the documentation see: :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductCreateOperator`
For the documentation see: :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductGetOperator`
For the documentation see: :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductUpdateOperator`
For the documentation see: :class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionProductDeleteOperator`
For the documentation see: :py:class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionReferenceImageCreateOperator`
For the documentation see: :py:class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionReferenceImageCreateOperator`
For the documentation see: :py:class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionAddProductToProductSetOperator`
For the documentation see: :py:class:`~airflow.contrib.operators.gcp_vision_image_annotator_operator.CloudVisionAnnotateImage`
For the documentation see: :py:class:`~airflow.contrib.operators.gcp_vision_operator.CloudVisionDetectImageSafeSearchOperator`
Get Dingding endpoint for sending message.
Build different type of Dingding message As most commonly used type, text message just need
Send Dingding message
Endpoint for streaming log. :param ti: task instance object :param try_number: try_number of the task
Returns the logs matching log_id in Elasticsearch and next offset. Returns '' if no log
Helper method that binds parameters to a SQL query.
Helper method that escapes parameters to a SQL query.
Helper method that casts a BigQuery row to the appropriate data types. This is useful
function to check expected type and raise error if type is not correct
Returns a BigQuery PEP 249 connection object.
Returns a BigQuery service object.
Returns a Pandas DataFrame for the results produced by a BigQuery query. The DbApiHook method
Checks for the existence of a table in Google BigQuery. :param project_id: The Google cloud
Creates a new, empty table in the dataset. To create a view, which is defined
Creates a new external table in the dataset with the data in Google Cloud Storage.
Patch information in an existing table. It only updates fileds that are provided in the
Executes a BigQuery SQL query. Optionally persists results in a BigQuery table. See here: https://cloud.google.com/bigquery/docs/reference/v2/jobs
Executes a BigQuery extract command to copy data from BigQuery to Google Cloud Storage. See
Executes a BigQuery copy command to copy data from one BigQuery table to another. See
Executes a BigQuery load command to load data from Google Cloud Storage to BigQuery. See
Executes a BigQuery SQL query. See here: https://cloud.google.com/bigquery/docs/reference/v2/jobs For more details about the configuration parameter.
Cancel all started queries that have not yet completed
Get the schema for a given datset.table. see https://cloud.google.com/bigquery/docs/reference/v2/tables#resource :param dataset_id: the dataset ID of
Get the data of a given dataset.table and optionally with selected columns. see https://cloud.google.com/bigquery/docs/reference/v2/tabledata/list :param
Delete an existing table from the dataset; If the table does not exist, return an
creates a new, empty table in the dataset; If the table already exists, update the
Grant authorized view access of a dataset to a view table. If this view has
Create a new empty dataset: https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets/insert :param project_id: The name of the project where we
Delete a dataset of Big query in your project. :param project_id: The name of the
Method returns dataset_resource if dataset exist and raised 404 error if dataset does not exist
Method returns full list of BigQuery datasets in the current project .. seealso:: For more
Method to stream data into BigQuery one record at a time without needing to run
Executes a BigQuery query, and returns the job ID. :param operation: The query to execute.
Execute a BigQuery query multiple times with different parameters. :param operation: The query to execute.
Helper method for fetchone, which returns the next row from a buffer. If the buffer
Fetch the next set of rows of a query result, returning a sequence of sequences
Fetch all (remaining) rows of a query result, returning them as a sequence of sequences
Loads the manifest file and register the `url_for_asset_` template tag. :param app: :return:
Queries Postgres and returns a cursor to the results.
Takes a cursor, and writes results to a local file. :return: A dictionary where keys
Takes a cursor, and writes the BigQuery schema for the results to a local file
Takes a value from Postgres, and converts it to a value that's safe for JSON/Google
Create all the intermediate directories in a remote host :param sftp_client: A Paramiko SFTP client.
Create queue using connection object :param queue_name: name of the queue. :type queue_name: str :param
Send message to the queue :param queue_url: queue url :type queue_url: str :param message_body: the
Integrate plugins to the context
Run the task command. :param run_with: list of tokens to run the task command with
A callback that should be called when this is done running.
Parse options and process commands
add serie - Series are list of data that will be plotted y {1, 2,
Build HTML content only, no header or body tags. To be useful this will usually
Build the HTML page Create the htmlheader with css / js Create html page Add
generate HTML header content
generate HTML div
generate javascript code for the chart
Create X-axis
Create Y-axis
Build HTML content only, no header or body tags. To be useful this will usually
Returns a sqlite connection object
Decorator to log user actions
Decorator to make a view compressed
Decorator to check whether the user has read / write permission on the dag.
Returns the last dag run for a dag, None if there was none. Last dag
Creates a dag run from this dag including the tasks associated with this dag. Returns
Publish the message to SQS queue :param context: the context object :type context: dict :return:
Generates the HTML for a paging component using a similar logic to the paging auto-generated
returns a json response from a json serializable python object
Opens the given file. If the path contains a folder with a .zip suffix, then
Used by cache to get a unique key per URL
Returns Gcp Video Intelligence Service client :rtype: google.cloud.videointelligence_v1.VideoIntelligenceServiceClient
Performs video annotation. :param input_uri: Input video location. Currently, only Google Cloud Storage URIs are
Get Opsgenie api_key for creating alert
Overwrite HttpHook get_conn because this hook just needs base_url and headers, and does not need
Execute the Opsgenie Alert call :param payload: Opsgenie API Create Alert payload values See https://docs.opsgenie.com/docs/alert-api#section-create-alert
Execute the bash command in a temporary directory which will be cleaned afterwards
Construct the Opsgenie JSON payload. All relevant parameters are combined here to a valid Opsgenie
Call the OpsgenieAlertHook to post message
check if aws conn exists already or create one and return it :return: boto3 session
Run Presto query on athena with provided config and return submitted query_execution_id :param query: Presto
Fetch the status of submitted athena query. Returns None or one of valid query states.
Fetch submitted athena query results. returns none if query is in intermediate state or failed/cancelled
Poll the status of submitted athena query until query state reaches final state. Returns one
Returns an SFTP connection object
Returns a dictionary of {filename: {attributes}} for all files on the remote system (where the
Returns a list of files on the remote system. :param path: full path to the
Creates a directory on the remote system. :param path: full path to the remote directory
Transfers the remote file to a local location. If local_full_path is a string path, the
Transfers a local file to the remote location. If local_full_path_or_buffer is a string path, the
Sleep for the time specified in the exception. If not specified, wait for 60 seconds.
Call Zendesk API and return results :param path: The Zendesk API to call :param query:
Retrieves the partition values for a table. :param database_name: The name of the catalog database
Checks whether a partition exists :param database_name: Name of hive database (schema) @table belongs to
Get the information of the table :param database_name: Name of hive database (schema) @table belongs
Get the physical location of the table :param database_name: Name of hive database (schema) @table
Return status of a cluster :param cluster_identifier: unique identifier of a cluster :type cluster_identifier: str
Delete a cluster and optionally create a snapshot :param cluster_identifier: unique identifier of a cluster
Gets a list of snapshots for a cluster :param cluster_identifier: unique identifier of a cluster
Restores a cluster from its snapshot :param cluster_identifier: unique identifier of a cluster :type cluster_identifier:
Creates a snapshot of a cluster :param snapshot_identifier: unique identifier for a snapshot of a
SlackAPIOperator calls will not fail even if the call is not unsuccessful. It should not
Args: volume (Volume):
Args: volume_mount (VolumeMount):
Creates a job flow using the config from the EMR connection. Keys of the json
Will test the filepath result and test if its size is at least self.filesize :param
Will filter if instructed to do so the result to remove matching criteria :param result:
Executed by task_instance at runtime
Takes an iterable (pymongo Cursor or Array) containing dictionaries and returns a stringified version using
Get pool by a given name.
Create a pool with a given parameters.
Delete pool by a given name.
Converts a python dictionary to the proto supplied :param py_dict: The dictionary to convert :type
Given an operation, continuously fetches the status from Google Cloud until either completion or an
Fetches the operation from Google Cloud :param operation_name: Name of operation to fetch :type operation_name:
Append labels to provided Cluster Protobuf Labels must fit the regex ``[a-z]([-a-z0-9]*[a-z0-9])?`` (current airflow version
Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that
Creates a cluster, consisting of the specified number and type of Google Compute Engine instances.
Gets details of specified cluster :param name: The name of the cluster to retrieve :type
Given a Discord http_conn_id, return the default webhook endpoint or override if a webhook_endpoint is
Construct the Discord JSON payload. All relevant parameters are combined here to a valid Discord
Execute the Discord webhook call
Encrypts a plaintext message using Google Cloud KMS. :param key_name: The Resource Name for the
Remote Popen :param cmd: command to remotely execute :param kwargs: extra arguments to Popen (see
Imports table from remote location to target dir. Arguments are copies of direct sqoop command
Imports a specific query from the rdbms to hdfs :param query: Free format query to
Exports Hive table to remote location. Arguments are copies of direct sqoop command line Arguments
Retrieves connection to Cloud Text to Speech. :return: Google Cloud Text to Speech client object.
Synthesizes text input :param input_data: text input to be synthesized. See more: https://googleapis.github.io/google-cloud-python/latest/texttospeech/gapic/v1/types.html#google.cloud.texttospeech_v1.types.SynthesisInput :type input_data:
Close and upload local log file to remote storage S3.
Returns the log found at the remote_log_location. Returns '' if no logs are found or
Writes the log to the remote_log_location. Fails silently if no hook was created. :param log:
When using git to retrieve the DAGs, use the GitSync Init Container
Defines any necessary environment variables for the pod executor
Defines any necessary secrets for the pod executor
Defines the security context
Kill (cancel) a Qubole command :param ti: Task Instance of the dag, used to determine
Get results (or just s3 locations) of a command from Qubole and save into a
Get Logs of a command from Qubole :param ti: Task Instance of the dag, used
Get jobs associated with a Qubole commands :param ti: Task Instance of the dag, used
Get link to qubole command result page. :param operator: operator :param dttm: datetime :return: url
Heartbeats update the job's entry in the database with a timestamp for the latest_heartbeat and
This function checks if there are any tasks in the dagrun (or all) that have
Launch a process to process the given file. :param result_queue: the queue to use for
Launch the process and start processing the DAG.
Terminate (and then kill) the process launched to process the file. :param sigkill: whether to
Check if the process launched to process this file is done. :return: whether the process
Helper method to clean up processor_agent to avoid leaving orphan processes.
Finding all tasks that have SLAs defined, and sending alert emails where needed. New SLA
For the DAGs in the given DagBag, record any associated import errors and clears errors
This method checks whether a new DagRun needs to be created for a DAG based
This method schedules the tasks for a single DAG by looking at the active DAG
For all DAG IDs in the SimpleDagBag, look for task instances in the old_states and
Get the concurrency maps. :param states: List of states to query for :type states: list[airflow.utils.state.State]
Finds TIs that are ready for execution with respect to pool limits, dag concurrency, executor
Changes the state of task instances in the list with one of the given states
Takes task_instances, which should have been set to queued, and enqueues them with the executor.
Attempts to execute TaskInstances that should be executed by the scheduler. There are three steps:
If there are tasks left over in the executor, we set them back to SCHEDULED
Iterates over the dags and processes them. Processing includes: 1. Create appropriate DagRun(s) in the
Respond to executor events.
The actual scheduler loop. The main steps in the loop are: #. Harvest DAG parsing
Process a Python file containing Airflow DAGs. This includes: 1. Execute the file and look
Updates the counters per state of the tasks that were running. Can re-add to tasks
Checks if the executor agrees with the state of task instances that are running :param
Returns a dag run for the given run date, which will be matched to an
Returns a map of task instance key to task instance object for the tasks to
Process a set of task instances from a set of dag runs. Special handling is
Computes the dag runs and their respective task instances for the given run dates and
Go through the dag_runs and update the state based on the task_instance state. Then set
Initializes all components required to run a dag for a specified date range and calls
Self destruct task if state has been moved away from running externally
Provides a client for interacting with the Cloud Spanner API. :param project_id: The ID of
Gets information about a particular instance. :param project_id: Optional, The ID of the GCP project
Invokes a method on a given instance by applying a specified Callable. :param project_id: The
Creates a new Cloud Spanner instance. :param instance_id: The ID of the Cloud Spanner instance.
Updates an existing Cloud Spanner instance. :param instance_id: The ID of the Cloud Spanner instance.
Deletes an existing Cloud Spanner instance. :param instance_id: The ID of the Cloud Spanner instance.
Retrieves a database in Cloud Spanner. If the database does not exist in the specified
Creates a new database in Cloud Spanner. :type project_id: str :param instance_id: The ID of
Updates DDL of a database in Cloud Spanner. :type project_id: str :param instance_id: The ID
Drops a database in Cloud Spanner. :type project_id: str :param instance_id: The ID of the
Executes an arbitrary DML query (INSERT, UPDATE, DELETE). :param instance_id: The ID of the Cloud
Pokes for a mail attachment on the mail server. :param context: The context that is
Creates additional_properties parameter based on language_hints, web_detection_params and additional_properties parameters specified by the user
Returns a cassandra Session object
Checks if a table exists in Cassandra :param table: Target Cassandra table. Use dot notation
Checks if a record exists in Cassandra :param table: Target Cassandra table. Use dot notation
Construct the spark-submit command to execute. :param application: command to append to the spark-submit command
Construct the command to poll the driver status. :return: full command to be executed
Remote Popen to execute the spark-submit job :param application: Submitted application, jar or py file
Processes the log files and extracts useful information out of it. If the deploy-mode is
parses the logs of the spark driver status query process :param itr: An iterator which
Polls the driver based on self._driver_id to get the status. Finish successfully when the status
Construct the spark-submit command to kill a driver. :return: full command to kill a driver
Get the task runner that can be used to run the given job. :param local_task_job:
Try to use a waiter from the below pull request * https://github.com/boto/botocore/pull/1307 If the waiter
Queries mysql and returns a cursor to the results.
Takes a cursor, and writes results to a local file. :return: A dictionary where keys
Configure a csv writer with the file_handle and write schema as headers for the new
Takes a cursor, and writes the BigQuery schema in .json format for the results to
Upload all of the file splits (and optionally the schema .json file) to Google cloud
Takes a value from MySQLdb, and converts it to a value that's safe for JSON/Google
Return a dict of column name and column type based on self.schema if not None.
Helper function that maps from MySQL fields to BigQuery fields. Used when a schema_filename is
Authenticate a PasswordUser with the specified username/password. :param session: An active SQLAlchemy session :param username:
Execute sqoop job
Saves the lineage to XCom and if configured to do so sends it to the
Prepares the lineage inlets and outlets. Inlets can be: * "auto" -> picks up any
Returns the extra property by deserializing json.
Get a set of dates as a list based on a start, end and delta,
Returns the datetime of the form start_date + i * delta which is closest to
Determine the most appropriate time unit for an array of time durations specified in seconds.
Convert an array of time durations in seconds to the specified time unit.
Get a datetime object representing `n` days ago. By default the time is set to
Returns a list of Dag Runs for a specific DAG ID. :param dag_id: String identifier
Initialize the role with the permissions and related view-menus. :param role_name: :param role_vms: :param role_perms:
Delete the given Role :param role_name: the name of a role in the ab_role table
Get all the roles associated with the user. :param user: the ab_user in FAB model.
Returns a set of tuples with the perm name and view menu name
Return a set of dags that user has access to(either read or write). :param username:
Verify whether a given user could perform certain permission (e.g can_read, can_write) on the given
Whether the user has this role name
Whether the user has this perm
FAB leaves faulty permissions that need to be cleaned up
Add the new permission , view_menu to ab_permission_view_role if not exists. It will add the
Workflow: 1. Fetch all the existing (permissions, view-menu) from Airflow DB. 2. Fetch all the
Admin should have all the permission-views. Add the missing ones to the table for admin.
1. Init the default role(Admin, Viewer, User, Op, public) with related permissions. 2. Init the
Sync permissions for given dag id. The dag id surely exists in our dag bag
Set the access policy on the given DAG's ViewModel. :param dag_id: the ID of the
Create perm-vm if not exist and insert into FAB security model for all-dags.
Deferred load of Fernet key. This function could fail either because Cryptography is not installed
Checks for existence of the partition in the AWS Glue Catalog table
Gets the AwsGlueCatalogHook
Check for message on subscribed queue and write to xcom the message with key ``messages``
Returns a path for a temporary file including a full copy of the configuration settings.
Returns a snakebite HDFSClient object.
Establishes a connection depending on the security mode set via config or environment variable. :return:
Check for the existence of a path in HDFS by querying FileStatus. :param hdfs_path: The
r""" Uploads a file to HDFS. :param source: Local path to file or folder. If
Establish a connection to pinot broker through pinot dbqpi.
Get the connection uri for pinot broker. e.g: http://localhost:9000/pql
Executes the sql and returns a set of records. :param sql: the sql statement to
Executes the sql and returns the first resulting row. :param sql: the sql statement to
Truncate a string. :param string (str): string for modification :param max_length (int): output string length
Make a slug from the given text. :param text (str): initial text :param entities (bool):
Store an XCom value. TODO: "pickling" has been deprecated and JSON is preferred. "pickling" will
Retrieve an XCom value, optionally meeting certain criteria. TODO: "pickling" has been deprecated and JSON
Retrieve an XCom value, optionally meeting certain criteria TODO: "pickling" has been deprecated and JSON
Convert native python ``datetime.date`` object to a format supported by the API
Convert native python ``datetime.time`` object to a format supported by the API
Returns a Redis connection.
Returns a oracle connection object Optional parameters for using a custom DSN connection (instead of
A generic way to insert a set of tuples into a table, the whole set
A performant bulk insert for cx_Oracle that uses prepared statements via `executemany()`. For best performance,
Returns a connection object
Executes the sql and returns a pandas dataframe :param sql: the sql statement to be
Executes the sql and returns a set of records. :param sql: the sql statement to
Executes the sql and returns the first resulting row. :param sql: the sql statement to
Runs a command or a list of commands. Pass a list of sql statements to
Sets the autocommit flag on the connection
A generic way to insert a set of tuples into a table, a new transaction
Returns the SQL literal of the cell as a string. :param cell: The cell to
An endpoint helping check the health status of the Airflow instance, including metadatabase and scheduler.
A restful endpoint that returns external links for a given Operator It queries the operator
Default filters for model
Default filters for model
Opens a connection to the cloudant service and closes it automatically if used as context
Call the SlackWebhookHook to post the provided Slack message
Returns the Credentials object for Google API
Returns an authorized HTTP object to be used to build a Google cloud service hook
Fetches a field from extras, and returns it. This is some Airflow magic. The google_cloud_platform
Function decorator that intercepts HTTP Errors and raises AirflowException with more informative message.
Decorator that provides fallback for Google Cloud Platform project id. If the project is None
A list of states indicating that a task either has not completed a run or
:param dag_id: the dag_id of the DAG to delete :type dag_id: str :param keep_records_in_log: whether
Construct the spark-sql command to execute. Verbose output is enabled as default. :param cmd: command
Remote Popen (actually execute the Spark-sql query) :param cmd: command to remotely execute :param kwargs:
VGG 11-layer model (configuration "A") with batch normalization Args: pretrained (bool): If True, returns a
VGG 13-layer model (configuration "B") Args: pretrained (bool): If True, returns a model pre-trained on
r"""AlexNet model architecture from the `"One weird trick..." <https://arxiv.org/abs/1404.5997>`_ paper. Args: pretrained (bool): If True,
r"""Densenet-121 model from `"Densely Connected Convolutional Networks" <https://arxiv.org/pdf/1608.06993.pdf>`_ Args: pretrained (bool): If True, returns a
Convert a ``PIL Image`` or ``numpy.ndarray`` to tensor. See ``ToTensor`` for more details. Args: pic
Convert a tensor or an ndarray to PIL Image. See :class:`~torchvision.transforms.ToPILImage` for more details. Args:
Normalize a tensor image with mean and standard deviation. .. note:: This transform acts out
r"""Resize the input PIL Image to the given size. Args: img (PIL Image): Image to
r"""Pad the given PIL Image on all sides with specified padding mode and fill value.
Crop the given PIL Image. Args: img (PIL Image): Image to be cropped. i (int):
Crop the given PIL Image and resize it to desired size. Notably used in :class:`~torchvision.transforms.RandomResizedCrop`.
Horizontally flip the given PIL Image. Args: img (PIL Image): Image to be flipped. Returns:
Helper function to get the coefficients (a, b, c, d, e, f, g, h) for
Perform perspective transform of the given PIL Image. Args: img (PIL Image): Image to be
Vertically flip the given PIL Image. Args: img (PIL Image): Image to be flipped. Returns:
Crop the given PIL Image into four corners and the central crop. .. Note:: This
r"""Crop the given PIL Image into four corners and the central crop plus the flipped
Adjust brightness of an Image. Args: img (PIL Image): PIL Image to be adjusted. brightness_factor
Adjust contrast of an Image. Args: img (PIL Image): PIL Image to be adjusted. contrast_factor
Adjust color saturation of an image. Args: img (PIL Image): PIL Image to be adjusted.
Adjust hue of an image. The image hue is adjusted by converting the image to
r"""Perform gamma correction on an image. Also known as Power Law Transform. Intensities in RGB
Rotate the image by angle. Args: img (PIL Image): PIL Image to be rotated. angle
Apply affine transformation on the image keeping image center invariant Args: img (PIL Image): PIL
Convert image to grayscale version of image. Args: img (PIL Image): Image to be converted
Make a grid of images. Args: tensor (Tensor or list): 4D mini-batch Tensor of shape
Save a given Tensor into an image file. Args: tensor (Tensor or list): Image to
Finds the class folders in a dataset. Args: dir (string): Root directory path. Returns: tuple:
Return a Tensor containing the patches
Return a Tensor containing the list of labels Read the file and keep only the
Return a Tensor containing the ground truth matches Read the file and keep only 3D
1x1 convolution
Computes the accuracy over the k top predictions for the specified values of k
This function disables printing when not in master process
Warning: does not synchronize the deque!
r"""SqueezeNet 1.1 model from the `official SqueezeNet repo <https://github.com/DeepScale/SqueezeNet/tree/master/SqueezeNet_v1.1>`_. SqueezeNet 1.1 has 2.4x less computation
Python2 support for os.makedirs(.., exist_ok=True)
Download a file from a url and place it in root. Args: url (str): URL
List all directories at a given root Args: root (str): Path to directory whose folders
List all files ending with a suffix at a given root Args: root (str): Path
Download a Google Drive file from and place it in root. Args: file_id (str): id
Get parameters for ``crop`` for a random crop. Args: img (PIL Image): Image to be
Get parameters for ``perspective`` for a random perspective transform. Args: width : width of the
Get parameters for ``crop`` for a random sized crop. Args: img (PIL Image): Image to
Get a randomized transform to be applied on image. Arguments are same as that of
Get parameters for affine transformation Returns: sequence: params to be passed to the affine transformation
r"""Inception v3 model architecture from `"Rethinking the Inception Architecture for Computer Vision" <http://arxiv.org/abs/1512.00567>`_. .. note::
Download and extract the tarball, and download each individual photo.
r"""GoogLeNet (Inception v1) model architecture from `"Going Deeper with Convolutions" <http://arxiv.org/abs/1409.4842>`_. Args: pretrained (bool): If
Download the MNIST data if it doesn't exist in processed_folder already.
Download the EMNIST data if it doesn't exist in processed_folder already.
same as requests/requests/api.py request(...)
Returns theme name. Checks in this order: 1. override 2. cookies 3. settings
Render index page. Supported outputs: html, json, csv, rss.
Return autocompleter results
Render preferences page && save user preferences
pre-request callback params<dict>: method : POST/GET headers : {} data : {} # if method
post-response callback resp: requests response object
Returns available themes list.
check if the searchQuery contain a bang, and create fitting autocompleter results
remove first and last lines to get only json
Embeds a custom gradient into a `Tensor`. This function works by clever application of `stop_gradient`.
Computes `f(*xs)` and its gradients wrt to `*xs`. Args: f: Python `callable` to be differentiated.
Convenience function to efficiently construct a MultivariateNormalDiag.
Eight-schools joint log-prob.
Runs HMC on the eight-schools unnormalized posterior.
Decorator to programmatically expand the docstring. Args: **kwargs: Keyword arguments to set. For each key-value
Infer the original name passed into a distribution constructor. Distributions typically follow the pattern of
RandomVariable constructor with a dummy name argument.
Wrap an existing distribution as a traceable random variable. This enables the use of custom
Factory function to make random variable given distribution class.
Shape for the mode/mean Tensors.
Compute one-step-ahead predictive distributions for all timesteps. Given samples from the posterior over parameters, return
Construct predictive distribution over future observations. Given samples from the posterior over parameters, return the
Returns `max` or `mask` if `max` is not finite.
Computes `log(sum(exp(input_tensor))) along the specified axis.
Assert all elements of `x` are finite. Args: x: Numeric `Tensor`. data: The tensors to
Assert `x` has rank equal to `rank` or smaller. Example of adding a dependency to
Computes the number of elements in a tensor with shape `event_shape`. Args: event_shape: A tensor
OneHotCategorical helper computing probs, cdf, etc over its support.
Creates a callable computing `KL[a,b]` from `a`, a `tfd.Distribution`.
Return a convert-to-tensor func, given a name, config, callable, etc.
Returns the config of this layer. This Layer's `make_distribution_fn` is serialized via a library built
Create the distribution instance from a `params` vector.
The number of `params` needed to create a single distribution.
Create the distribution instance from a `params` vector.
Create the distribution instance from a `params` vector.
The number of `params` needed to create a single distribution.
Create the distribution instance from a `params` vector.
Returns the config of this layer. NOTE: At the moment, this configuration can only be
Create the distribution instance from a `params` vector.
The number of `params` needed to create a single distribution.
Create the distribution instance from a `params` vector.
Create the distribution instance from a `params` vector.
Number of `params` needed to create a `MixtureSameFamily` distribution. Arguments: num_components: Number of component distributions
The number of `params` needed to create a single distribution.
Create the distribution instance from a `params` vector.
The number of `params` needed to create a single distribution.
Yields the top-most interceptor on the thread-local interceptor stack. Operations may be intercepted by multiple
Decorator that wraps `func` so that its execution is intercepted. The wrapper passes `func` to
Context manager for recording interceptable executions onto a tape. Similar to `tf.GradientTape`, operations are recorded
Generates synthetic data for binary classification. Args: num_examples: The number of samples to generate (scalar
Utility method to visualize decision boundaries in R^2. Args: features: Input points, as a Numpy
Build a Dataset iterator for supervised classification. Args: x: Numpy `array` of features, indexed by
Validate `map_values` if `validate_args`==True.
`TransitionOperator` that runs `fn` repeatedly and traces its outputs. Args: state: A nest of `Tensor`s
Calls a transition operator with args, unpacking args if its a sequence. Args: fn: A
Calls `fn` and returns the gradients with respect to `fn`'s first output. Args: fn: A
Maybe broadcasts `from_structure` to `to_structure`. If `from_structure` is a singleton, it is tiled to match
Transforms a log-prob function using a bijector. This takes a log-prob function and creates a
Leapfrog `TransitionOperator`. Args: leapfrog_step_state: LeapFrogStepState. step_size: Step size, structure broadcastable to the `target_log_prob_fn` state. target_log_prob_fn:
Metropolis-Hastings step. This probabilistically chooses between `current_state` and `proposed_state` based on the `energy_change` so as
Hamiltonian Monte Carlo `TransitionOperator`. #### Example ```python step_size = 0.2 num_steps = 2000 num_leapfrog_steps =
A function to do simple sign-based control of a variable. ``` control = control *
Computes the output shape of the layer. Args: input_shape: Shape tuple (tuple of integers) or
Returns the config of the layer. A layer config is a Python dictionary (serializable) containing
Creates a layer from its config. This method is the reverse of `get_config`, capable of
Returns the config of the layer. A layer config is a Python dictionary (serializable) containing
Convenience to convert to `Tensor` or leave as `None`.
Construct `scale` from various components. Args: identity_multiplier: floating point rank 0 `Tensor` representing a scaling
Returns a callable that adds a random normal perturbation to the input. This function returns
Returns a callable that adds a random uniform perturbation to the input. For more details
Batched KL divergence `KL(a || b)` for Independent distributions. We can leverage the fact that
Computes the default value for reinterpreted_batch_ndim __init__ arg.
Expand the rank of x up to static_event_rank times for broadcasting. The static event rank
r"""A lower bound on the entropy of this mixture model. The bound below is not
Get a list of num_components batchwise probabilities.
Validate `outcomes`, `logits` and `probs`'s shapes.
Attempt to import tensorflow, and ensure its version is sufficient. Raises: ImportError: if either tensorflow
Bayesian logistic regression, which returns labels given features.
Builds the Covertype data set.
Batchwise KL divergence KL(d1 || d2) with d1 and d2 Dirichlet. Args: d1: instance of
Checks the validity of the concentration parameter.
Checks the validity of a sample.
Auto correlation along one axis. Given a `1-D` wide sense stationary (WSS) sequence `X`, the
Cholesky factor of the covariance matrix of vector-variate random samples. This function can be use
Sample covariance between observations indexed by `event_axis`. Given `N` samples of scalar random variables `X`
Sample correlation (Pearson) between observations indexed by `event_axis`. Given `N` samples of scalar random variables
Estimate standard deviation using samples. Given `N` samples of scalar valued random variable `X`, standard
Estimate variance using samples. Given `N` samples of scalar valued random variable `X`, variance may
Return a list (preferred) or 1d Tensor from values, if values.ndims < 2.
Rectify possibly negatively axis. Prefer return Python list.
A version of squeeze that works with dynamic axis.
Calculate the batched KL divergence KL(n_a || n_b) with n_a and n_b Normal. Args: n_a:
Standardize input `x` to a unit normal.
Reconstruct input `x` from a its normalized version.
Build the transition matrix for a semi-local linear trend model.
Build the transition noise model for a semi-local linear trend model.
r"""Returns a sample from the `dim` dimensional Halton sequence. Warning: The sequence elements take values
Applies the Owen (2017) randomization to the coefficients.
Uniform iid sample from the space of permutations. Draws a sample of size `num_results` from
Generates starting points for the Halton sequence procedure. The k'th element of the sequence is
Computes the number of terms in the place value expansion. Let num = a0 +
Returns sorted array of primes such that `2 <= prime < n`.
Returns the machine epsilon for the supplied dtype.
The Hager Zhang line search algorithm. Performs an inexact line search based on the algorithm
Shrinks the input step size until the value and grad become finite.
Brackets the minimum and performs a line search. Args: value_and_gradients_function: A Python callable that accepts
The main loop of line search after the minimum has been bracketed. Args: value_and_gradients_function: A
Performs bisection and updates the interval.
Prepares the arguments for the line search initialization. Args: value_and_gradients_function: A Python callable that accepts
Converts a bool tensor to a string with True/False values.
Wrapper for tf.Print which supports lists and namedtuples for printing.
Batched KL divergence `KL(a || b)` for multivariate Normals. With `X`, `Y` both multivariate Normals
Use Gauss-Hermite quadrature to form quadrature on `K - 1` simplex. A `SoftmaxNormal` random variable
Use SoftmaxNormal quantiles to form quadrature on `K - 1` simplex. A `SoftmaxNormal` random variable
Helper which checks validity of `loc` and `scale` init args.
Helper to infer batch_shape and event_shape.
Helper which interpolates between two locs.
Helper which interpolates between two scales.
Creates weighted `LinOp` from existing `LinOp`.
Concatenates input vectors, statically if possible.
Equivalent to tf.nn.softmax but works around b/70297725.
Ensures `self.distribution.mean()` has `[batch, event]` shape.
Multiply tensor of vectors by matrices assuming values stored are logs.
Multiply tensor of matrices by vectors assuming values stored are logs.
Multiply tensor of vectors by matrices.
Tabulate log probabilities from a batch of distributions.
Compute marginal pdf for each individual observable.
Compute marginal posterior distribution for each state. This function computes, for each time step, the
Compute maximum likelihood sequence of hidden states. When this function is provided with a sequence
Chooses a random direction in the event space.
Applies a single iteration of slice sampling update. Applies hit and run style slice sampling.
Helper which computes `fn_result` if needed.
Pads the shape of x to the right to be of rank final_rank. Expands the
Processes input args to meet list-like assumptions.
Runs one iteration of Slice Sampler. Args: current_state: `Tensor` or Python `list` of `Tensor`s representing
Initialize from a uniform [-2, 2] distribution in unconstrained space. Args: parameter: `sts.Parameter` named tuple
Built a transformed-normal variational dist over a parameter's support.
Build a loss function for variational inference in STS models. Variational inference searches for the
Run an optimizer within the graph to minimize a loss function.
Draw posterior samples using Hamiltonian Monte Carlo (HMC). Markov chain Monte Carlo (MCMC) methods are
Compute mean and variance, accounting for a mask. Args: time_series_tensor: float `Tensor` time series of
Get the first unmasked entry of each time series in the batch. Args: time_series_tensor: float
Get broadcast batch shape from distributions, statically if possible.
Expand the observed time series with extra batch dimension(s).
Combine MultivariateNormals into a factored joint distribution. Given a list of multivariate normal distributions `dist[i]
Attempt to sum MultivariateNormal distributions. The sum of (multivariate) normal random variables is itself (multivariate)
Compute statistics of a provided time series, as heuristic initialization. Args: observed_time_series: `Tensor` representing a
Ensures `observed_time_series_tensor` has a trailing dimension of size 1. The `tfd.LinearGaussianStateSpaceModel` Distribution has event shape
Extract a Tensor with canonical shape and optional mask. Args: maybe_masked_observed_time_series: a `Tensor`-like object with
Construct a predictive normal distribution that mixes over posterior draws. Args: means: float `Tensor` of
Calculate the batched KL divergence KL(a || b) with a and b Uniform. Note that
`high - low`.
Factory for making summary statistics, eg, mean, mode, stddev.
Creates `dist_fn_wrapped` which calls `dist_fn` with all prev nodes. Args: i: Python `int` corresponding to
Uses arg names to resolve distribution names.
Returns the distribution's required args.
Calculate the KL divergence between two `JointDistributionSequential`s. Args: d0: instance of a `JointDistributionSequential` object. d1:
Creates `dist_fn`, `dist_fn_wrapped`, `dist_fn_args`.
Creates a `tuple` of `tuple`s of dependencies. This function is **experimental**. That said, we encourage
Shannon entropy in nats.
Decorator function for argument bounds checking. This decorator is meant to be used with methods
Returns `f(x)` if x is in the support, and `default_value` otherwise. Given `f` which is
Processes input args to meet list-like assumptions.
Runs one iteration of the Elliptical Slice Sampler. Args: current_state: `Tensor` or Python `list` of
Visualizes sequences as TensorBoard summaries. Args: seqs: A tensor of shape [n, t, h, w,
Visualizes the reconstruction of inputs in TensorBoard. Args: inputs: A tensor of the original inputs,
Visualizes a qualitative analysis of a given model. Args: inputs: A tensor of the original
Summarize the parameters of a distribution. Args: dist: A Distribution object with mean and standard
Summarize the mean of a tensor in nats and bits per unit. Args: inputs: A
Runs the model to generate multivariate normal distribution. Args: inputs: Unused. Returns: A MultivariateNormalDiag distribution
Returns an initial state for the LSTM cell. Args: sample_batch_shape: A 0D or 1D tensor
Runs the model to generate a distribution for a single timestep. This generates a batched
Runs the model to generate a distribution p(x_t | z_t, f). Args: inputs: A tuple
Runs the model to generate an intermediate representation of x_t. Args: inputs: A batch of
Runs the model to generate a distribution `q(f | x_{1:T})`. This generates a list of
Runs the model to generate a distribution `q(z_{1:T} | x_{1:T})`. Args: inputs: A batch of
Runs the model to generate a distribution `q(z_{1:T} | x_{1:T}, f)`. This generates a list
Generate new sequences. Args: batch_size: Number of sequences to generate. length: Number of timesteps to
Reconstruct the given input sequences. Args: inputs: A batch of image sequences `x_{1:T}` of shape
Sample the static latent prior. Args: samples: Number of samples to draw from the latent
Sample the static latent posterior. Args: inputs: A batch of intermediate representations of image frames
Sample the dynamic latent prior. Args: samples: Number of samples to draw from the latent
Sample the static latent posterior. Args: inputs: A batch of intermediate representations of image frames
Static batch shape of models represented by this component. Returns: batch_shape: A `tf.TensorShape` giving the
Runtime batch shape of models represented by this component. Returns: batch_shape: `int` `Tensor` giving the
If given an ordered list of parameter values, build a name:value map. This is a
Instantiate this model as a Distribution over specified `num_timesteps`. Args: num_timesteps: Python `int` number of
Sample from the joint prior over model parameters and trajectories. Args: num_timesteps: Scalar `int` `Tensor`
Build the joint density `log p(params) + log p(y|params)` as a callable. Args: observed_time_series: Observed
Computes the min_event_ndims associated with the give list of bijectors. Given a list `bijector_list` of
Convert a vector size to a matrix size.
Numpy implementation of `tf.argsort`.
Numpy implementation of `tf.sort`.
Calculate the batched KL divergence KL(a || b) with a and b Gumbel. Args: a:
Normal distribution function. Returns the area under the Gaussian probability density function, integrated from minus
Implements ndtr core logic.
The inverse of the CDF of the Normal distribution function. Returns x such that the
Implements ndtri core logic.
Log Normal distribution function. For details of the Normal distribution function see `ndtr`. This function
Asymptotic expansion version of `Log[cdf(x)]`, appropriate for `x<<-1`.
Calculates the asymptotic series used in log_ndtr.
The inverse function for erf, the error function. Args: x: `Tensor` of type `float32`, `float64`.
Log Laplace distribution function. This function calculates `Log[L(x)]`, where `L(x)` is the cumulative distribution function
Joint log probability function.
Runs HMC on the text-messages unnormalized posterior.
True if the given index_points would yield a univariate marginal. Args: index_points: the set of
Compute the marginal of this GP over function values at `index_points`. Args: index_points: `float` `Tensor`
Return `index_points` if not None, else `self._index_points`. Args: index_points: if given, this is what is
Stable evaluation of `Log[exp{big} - exp{small}]`. To work correctly, we should have the pointwise relation:
Compute log_prob(y) using log survival_function and cdf together.
Creates an stacked IAF bijector. This bijector operates on vector-valued events. Args: total_event_size: Number of
Runs one iteration of NeuTra. Args: current_state: `Tensor` or Python `list` of `Tensor`s representing the
Trains the bijector and creates initial `previous_kernel_results`. The supplied `state` is only used to determine
Computes E[log(det(X))] under this Wishart distribution.
Computes the log normalizing constant, log(Z).
Creates sequence used in multivariate (di)gamma; shape = shape(a)+[p].
Computes the log multivariate gamma function; log(Gamma_p(a)).
Computes the multivariate digamma function; Psi_p(a).
Convenience function analogous to tf.squared_difference.
Enables uniform interface to value and batch jacobian calculation. Works in both eager and graph
Disables computation of the second derivatives for a tensor. NB: you need to apply a
Adds reparameterization (pathwise) gradients to samples of the mixture. Implicit reparameterization gradients are dx/dphi =
Performs distributional transform of the mixture samples. Distributional transform removes the parameters from samples of
Split a covariance matrix into block-diagonal marginals of given sizes.
Utility method to decompose a joint posterior into components. Args: model: `tfp.sts.Sum` instance defining an
Decompose an observed time series into contributions from each component. This method decomposes a time
Decompose a forecast distribution into contributions from each component. Args: model: An instance of `tfp.sts.Sum`
Converts dense `Tensor` to `SparseTensor`, dropping `ignore_value` cells. Args: x: A `Tensor`. ignore_value: Entries in
Defers an operator overload to `attr`. Args: attr: Operator attribute to use. Returns: Function calling
Human-readable representation of a tensor's numpy value.
Sample shape of random variable as a `TensorShape`.
Sample shape of random variable as a 1-D `Tensor`. Args: name: name to give to
Get tensor that the random variable corresponds to.
In a session, computes and returns the value of this random variable. This is not
Value as NumPy array, only available for TF Eager.
Posterior Normal distribution with conjugate prior on the mean. This model assumes that `n` observations
Build a scale-and-shift function using a multi-layer neural network. This will be wrapped in a
Returns a batch of points chosen uniformly from the unit hypersphere.
Replicate the input tensor n times along a new (major) dimension.
Returns a Tensor of samples from an LKJ distribution. Args: num_samples: Python `int`. The number
Returns the unnormalized log density of an LKJ distribution. Args: x: `float` or `double` `Tensor`
Returns the log normalization of an LKJ distribution. Args: name: Python `str` name prefixed to
Returns explict dtype from `args_list` if exists, else preferred_dtype.
Factory for implementing summary statistics, eg, mean, stddev, mode.
Batched KL divergence `KL(a || b)` for Sample distributions. We can leverage the fact that:
Helper to broadcast a tensor using a list of target tensors.
Pdf evaluated at the peak.
Estimate a lower bound on effective sample size for each independent chain. Roughly speaking, "effective
ESS computation for one single Tensor argument.
Gelman and Rubin (1992)'s potential scale reduction for chain convergence. Given `N > 1` states
potential_scale_reduction for one single state `Tensor`.
Get number of elements of `x` in `axis`, as type `x.dtype`.
Broadcast a listable secondary_arg to that of states.
Use Gauss-Hermite quadrature to form quadrature on positive-reals. Note: for a given `quadrature_size`, this method
Use LogNormal quantiles to form quadrature on positive-reals. Args: loc: `float`-like (batch of) scalar `Tensor`;
Returns new _Mapping with args merged with self. Args: x: `Tensor` or None. Input to
To support weak referencing, removes cache key from the cache value.
Helper to merge which handles merging one value.
Converts nested `tuple`, `list`, or `dict` to nested `tuple`.
Computes the doubling increments for the left end point. The doubling procedure expands an initial
Finds the index of the optimal set of bounds for each chain. For each chain,
Returns the bounds of the slice at each stage of doubling procedure. Precomputes the x
Samples from the slice by applying shrinkage for rejected points. Implements the one dimensional slice
For a given x position in each Markov chain, returns the next x. Applies the
Runs annealed importance sampling (AIS) to estimate normalizing constants. This function uses an MCMC transition
Creates a value-setting interceptor. This function creates an interceptor that sets values of Edward2 random
Takes Edward probabilistic program and returns its log joint function. Args: model: Python callable which
Filters inputs to be compatible with function `f`'s signature. Args: f: Function according to whose
Network block for VGG.
Computes the output shape of the layer. Args: input_shape: Shape tuple (tuple of integers) or
Returns the config of the layer. A layer config is a Python dictionary (serializable) containing
Simulates a No-U-Turn Sampler (NUTS) trajectory. Args: target_log_prob_fn: Python callable which takes an argument like
Builds a tree at a given tree depth and at a given state. The `current`
Wraps value and gradients function to assist with None gradients.
If two given states and momentum do not exhibit a U-turn pattern.
Runs one step of leapfrog integration.
Log-joint probability given a state's log-probability and momentum.
Returns samples from a Bernoulli distribution.
Makes closure which creates `loc`, `scale` params from `tf.get_variable`. This function produces a closure which
Creates a function to build Normal distributions with trainable params. This function produces a closure
Creates multivariate standard `Normal` distribution. Args: dtype: Type of parameter's event. shape: Python `list`-like representing
Deserializes the Keras-serialized function. (De)serializing Python functions from/to bytecode is unsafe. Therefore we also use
Serializes function for Keras. (De)serializing Python functions from/to bytecode is unsafe. Therefore we return the
Broadcasts `from_structure` to `to_structure`. This is useful for downstream usage of `zip` or `tf.nest.map_structure`. If
Returns `True` if `args` should be expanded as `*args`.
Eagerly converts struct to Tensor, recursing upon failure.
Converts `args` to `Tensor`s. Use this when it is necessary to convert user-provided arguments that
Calls `fn` with `args`, possibly expanding `args`. Use this function when calling a user-provided callable
Replaces member function's first arg, `self`, to `self._value()`. This function is used by `_get_tensor_like_attributes` to
Returns `Tensor` attributes related to shape and Python builtins.
Get the value returned by `tf.convert_to_tensor(distribution)`. Note: this function may mutate the distribution instance state
Creates the encoder function. Args: activation: Activation function in hidden layers. latent_size: The dimensionality of
Creates the decoder function. Args: activation: Activation function in hidden layers. latent_size: Dimensionality of the
Creates the mixture of Gaussians prior distribution. Args: latent_size: The dimensionality of the latent representation.
Helper utility to make a field of images.
Builds the model function for use in an estimator. Arguments: features: The input features for
Downloads a file.
Builds fake MNIST-style data for unit testing.
Builds an Iterator switching between train and heldout data.
Helper to validate block sizes.
Verifies that `parts` don't broadcast.
Converts (batch of) scalars to (batch of) positive valued scalars. Args: x: (Batch of) `float`-like
Converts (batch of) vectors to (batch of) lower-triangular scale matrices. Args: x: (Batch of) `float`-like
Constructs a trainable `tfd.MultivariateNormalTriL` distribution. This function creates a MultivariateNormal (MVN) with lower-triangular scale matrix.
Constructs a trainable `tfd.Bernoulli` distribution. This function creates a Bernoulli distribution parameterized by logits. Using
Constructs a trainable `tfd.Normal` distribution. This function creates a Normal distribution parameterized by loc and
Constructs a trainable `tfd.Poisson` distribution. This function creates a Poisson distribution parameterized by log rate.
r"""Finds root(s) of a function of single variable using the secant method. The [secant method](https://en.wikipedia.org/wiki/Secant_method)
Applies one step of Euler-Maruyama method. Generates proposal of the form: ```python tfd.Normal(loc=state_parts + _get_drift(state_parts,
Compute diffusion drift at the current location `current_state`. The drift of the diffusion at is
r"""Helper to `kernel` which computes the log acceptance-correction. Computes `log_acceptance_correction` as described in `MetropolisHastings` class.
Helper which computes `volatility_fn` results and grads, if needed.
Helper to broadcast `volatility_parts` to the shape of `state_parts`.
Helper which processes input args to meet list-like assumptions.
Build transition matrix for an autoregressive StateSpaceModel. When applied to a vector of previous values,
Computes diagonal of the Jacobian matrix of `ys=fn(xs)` wrt `xs`. If `ys` is a tensor
Calculates the reshaped dimensions (replacing up to one -1 in reshape).
Helper to __init__ which makes or raises assertions.
Computes graph and static `sample_shape`.
Calls `fn`, appropriately reshaping its input `x` and output.
Calls `fn` and appropriately reshapes its output.
Helper which validates sample arg, e.g., input to `log_prob`.
The binomial cumulative distribution function. Args: k: floating point `Tensor`. n: floating point `Tensor`. p:
Check counts for proper shape, values, then return tensor version.
Executes `model`, creating both samples and distributions.
Calculate the batched KL divergence KL(a || b) with a and b Pareto. Args: a:
Returns `f(x)` if x is in the support, and `alt` otherwise. Given `f` which is
Latent Dirichlet Allocation in terms of its generative process. The model posits a distribution over
Creates the variational distribution for LDA. Args: activation: Activation function to use. num_topics: The number
Builds the model function for use in an Estimator. Arguments: features: The input features for
Returns the summary of the learned topics. Arguments: topics_words: KxV tensor with topics as rows
20 newsgroups as a tf.data.Dataset.
Builds fake data for unit testing.
Builds iterators for train and evaluation data. Each object is represented as a bag-of-words vector.
Calculate the batched KL divergence KL(a || b) with a and b Chi. Args: a:
Returns a (dense) column of a Tensor or SparseTensor. Args: sparse_or_dense_matrix: matrix-shaped, `float` `Tensor` or
One step of (the outer loop of) the minimization algorithm. This function returns a new
Minimize using Hessian-informed proximal gradient descent. This function solves the regularized minimization problem ```none argmin{
Creates the encoder function. Args: base_depth: Layer base depth in encoder net. activation: Activation function
Creates the decoder function. Args: base_depth: Layer base depth in decoder net. activation: Activation function
Add control dependencies to the commmitment loss to update the codebook. Args: vector_quantizer: An instance
Helper method to save a grid of images to a PNG file. Args: x: A
Helper method to save images visualizing model reconstructions. Args: images_val: Numpy array containing a batch
Returns Hugo Larochelle's binary static MNIST tf.data.Dataset.
Builds an Iterator switching between train and heldout data.
Returns a `np.dtype` based on this `dtype`.
Returns a non-reference `dtype` based on this `dtype`.
Returns whether this is a boolean data type.
Returns whether this is a complex floating point type.
Returns whether this is a (non-quantized, real) floating point type.
Returns whether this is a (non-quantized) integer type.
Returns the maximum representable value in this data type.
Returns the string name for this `dtype`.
Returns the number of bytes to represent this `dtype`.
r"""Asserts all items are of the same base type. Args: items: List of graph items
Validate and return float type based on `tensors` and `dtype`. For ops such as matrix
Calculate the batched KL divergence KL(a || b) with a, b OneHotCategorical. Args: a: instance
Minimum of the objective function using the Nelder Mead simplex algorithm. Performs an unconstrained minimization
A single iteration of the Nelder Mead algorithm.
Creates the condition function pair for a reflection to be accepted.
Creates the condition function pair for an expansion.
Creates the condition function pair for an outside contraction.
Shrinks the simplex around the best vertex.
Replaces an element at supplied index.
Returns True if the simplex has converged. If the simplex size is smaller than the
Computes the initial simplex and the objective values at the simplex. Args: objective_function: A Python
Chooses default step sizes according to [Gao and Han(2010)][3].
Evaluates the objective function at the specified initial simplex.
Constructs a standard axes aligned simplex.
Applies the [Gao and Han][3] presciption to the unspecified parameters.
Evaluates the objective function on a batch of points. If `batch_evaluate_objective` is True, returns `objective
Save a PNG plot with histograms of weight means and stddevs. Args: names: A Python
Save a PNG plot visualizing posterior uncertainty on heldout data. Args: input_vals: A `float`-like Numpy
Build an Iterator switching between train and heldout data.
Build fake MNIST-style data for unit testing.
Calculate the batched KL divergence KL(a || b) with a and b Bernoulli. Args: a:
Returns initializer configuration as a JSON-serializable dict.
Instantiates an initializer from a configuration dictionary.
Numpy matmul wrapper.
Helper to compute stddev, covariance and variance.
Compute exponentially weighted moving {mean,variance} of a streaming value. The `value` updated exponentially weighted moving
Compute the log of the exponentially weighted moving mean of the exp. If `log_value` is
Compute exponentially weighted moving {mean,variance} of a streaming value. The exponentially-weighting moving `mean_var` and `variance_var`
Ensures non-scalar input has at least one column. Example: If `x = [1, 2, 3]`
Calculate the batched KL divergence KL(a || b) with a and b Laplace. Args: a:
Generates `Tensor` consisting of `-1` or `+1`, chosen uniformly at random. For more details, see
Generates `Tensor` of positive reals drawn from a Rayleigh distributions. The probability density function of
Convenience function which chooses the condition based on the predicate.
Finish computation of log_prob on one element of the inverse image.
Finish computation of prob on one element of the inverse image.
Helper to __init__ which ensures override batch/event_shape are valid.
Helper which rolls left event_dims left or right event_dims right.
r"""Inverse of tf.nn.batch_normalization. Args: x: Input `Tensor` of arbitrary dimensionality. mean: A mean `Tensor`. variance:
Check for valid BatchNormalization layer. Args: layer: Instance of `tf.layers.BatchNormalization`. Raises: ValueError: If batchnorm_layer argument
Slices a single parameter of a distribution. Args: param: A `Tensor`, the original parameter to
Computes the override dictionary of sliced parameters. Args: dist: The tfd.Distribution being batch-sliced. params_event_ndims: Per-event
Applies a single slicing step to `dist`, returning a new instance.
Applies a sequence of slice or copy-with-overrides operations to `dist`.
Slices `dist` along its batch dimensions. Helper for tfd.Distribution. Args: dist: A `tfd.Distribution` instance. params_event_ndims:
Runs multiple Fisher scoring steps. Args: model_matrix: (Batch of) `float`-like, matrix-shaped `Tensor` where each row
Runs one step of Fisher scoring. Args: model_matrix: (Batch of) `float`-like, matrix-shaped `Tensor` where each
Returns Python `callable` which indicates fitting procedure has converged. Writing old, new `model_coefficients` as `w0`,
Helper to `fit` which sanitizes input args. Args: model_matrix: (Batch of) `float`-like, matrix-shaped `Tensor` where
Computes `model_matrix @ model_coefficients + offset`.
Returns number of cols in a given `Tensor`.
Wraps original_fn, preferring to call static_fn when inputs are static.
Wraps new_fn with the doc of original_fn.
Helper function for statically evaluating predicates in `cond`.
Computes `rank` given a `Tensor`'s `shape`.
Return either `true_fn()` if predicate `pred` is true else `false_fn()`. If `pred` is a bool
Like tf.case, except attempts to statically evaluate predicates. If any predicate in `pred_fn_pairs` is a
Computes `D(param=mean(r)).log_prob(response)` for linear response, `r`. Args: response: `float`-like `Tensor` representing observed ("actual") responses. predicted_linear_response:
Helper function to standardize op scope.
Computes the standard deviation of a mixture distribution. This function works regardless of the component
Creates a LinearOperator representing a lower triangular matrix. Args: loc: Floating-point `Tensor`. This is used
Creates a LinearOperator representing a diagonal matrix. Args: loc: Floating-point `Tensor`. This is used for
Infer distribution batch and event shapes from a location and scale. Location and scale family
Get broadcast shape as a Python list of integers (preferred) or `Tensor`. Args: *tensors: One
Returns `True` if `scale` is a `LinearOperator` that is known to be diag. Args: scale:
Helper which checks validity of a scalar `distribution` init arg. Valid here means: * `distribution`
Pad dimensions of event tensors for mixture distributions. See `Mixture._sample_n` and `MixtureSameFamily._sample_n` for usage examples.
Convenience function that chooses one of two values based on the predicate. This utility is
Make (possibly negatively indexed) `axis` argument non-negative.
Move a single tensor dimension within its shape. This is a special case of `tf.transpose()`,
Assert that x has integer components (or floats equal to integers). Args: x: Floating-point `Tensor`
Assert x is a non-negative tensor, and optionally of integers.
Returns whether a and b have the same dynamic shape. Args: a: `Tensor` b: `Tensor`
Helper which tries to return a static value. Given `x`, extract it's value statically, optionally
Converts logit to probabilities (or vice-versa), and returns both. Args: logits: Floating-point `Tensor` representing log-odds.
Helper returning True if dtype is known to be unsigned.
Helper returning True if dtype is known to be signed.
Helper returning the largest integer exactly representable by dtype.
Helper returning the smallest integer exactly representable by dtype.
Helper returning True if dtype.is_integer or is `bool`.
Embeds checks that categorical distributions don't have too many classes. A categorical-type distribution is one
Ensures integers remain unaffected despite casting to/from int/float types. Example integer-types: `uint8`, `int32`, `bool`. Example
Multinomial coefficient. Given `n` and `counts`, where `counts` has last dimension `k`, we compute the
Transform diagonal of [batch-]matrix, leave rest of matrix unchanged. Create a trainable covariance defined by
Circularly moves dims left or right. Effectively identical to: ```python numpy.transpose(x, numpy.roll(numpy.arange(len(x.shape)), shift)) ``` When
Picks possibly different length row `Tensor`s based on condition. Value `Tensor`s should have exactly one
Convenience function which statically broadcasts shape when possible. Args: shape1: `1-D` integer `Tensor`. Already converted
Generate a new seed, from the given seed and salt.
r"""Creates a (batch of) triangular matrix from a vector of inputs. Created matrix can be
Creates a vector from a (batch of) triangular matrix. The vector is created from the
Creates a matrix with values set above, below, and on the diagonal. Example: ```python tridiag(below=[1.,
Computes `log(abs(sum(weight * exp(elements across tensor dimensions))))`. If all weights `w` are known to be
Computes the inverse softplus, i.e., x = softplus_inverse(softplus(x)). Mathematically this op is equivalent to: ```none
Returns the size of a specific dimension.
Validates quadrature grid, probs or computes them as necessary. Args: quadrature_grid_and_probs: Python pair of `float`-like
Pads `value` to the front and/or back of a `Tensor` dim, `count` times. Args: x:
Returns parent frame arguments. When called inside a function, returns a dictionary with the caller's
Transform a 0-D or 1-D `Tensor` to be 1-D. For user convenience, many parts of
Produces the content of `output_tensor` only after `dependencies`. In some cases, a user may want
Checks that `rightmost_transposed_ndims` is valid.
Checks that `perm` is valid.
Helper for _forward and _inverse_event_shape.
Returns the concatenation of the dimension in `x` and `other`. *Note:* If either `x` or
A version of `constant_value()` that returns a `TensorShape`. This version should be used when a
Returns a list of dimension sizes, or `None` if `rank` is unknown. For more details,
Returns a shape combining the information in `x` and `other`. The dimensions in `x` and
Returns a shape based on `x` with at least the given `rank`. For more details,
Check that source and target shape match, statically if possible.
Augment a sample shape to broadcast batch dimensions. Computes an augmented sample shape, so that
Build a callable that perform one step for backward smoothing. Args: get_transition_matrix_for_timestep: callable taking a
Backward update for a Kalman smoother. Give the `filtered_mean` mu(t | t), `filtered_cov` sigma(t |
Build a callable that performs one step of Kalman filtering. Args: get_transition_matrix_for_timestep: callable taking a
Conjugate update for a linear Gaussian model. Given a normal prior on a latent variable
Propagate a filtered distribution through a transition model.
Build a callable that performs one step of Kalman mean recursion. Args: get_transition_matrix_for_timestep: callable taking
Build a callable for one step of Kalman covariance recursion. Args: get_transition_matrix_for_timestep: callable taking a
Build a callable for one step of Kalman sampling recursion. Args: get_transition_matrix_for_timestep: callable taking a
Build a callable to push latent means/covs to observed means/covs. Args: get_observation_matrix_for_timestep: callable taking a
Propagate a mean through linear Gaussian transformation.
Propagate covariance through linear Gaussian transformation.
Run the backward pass in Kalman smoother. The backward smoothing is using Rauch, Tung and
Draw a joint sample from the prior over latents and observations.
Run a Kalman filter over a provided sequence of outputs. Note that the returned values
Run a Kalman smoother to return posterior mean and cov. Note that the returned values
Compute prior means for all variables via dynamic programming. Returns: latent_means: Prior means of latent
Compute prior covariances for all variables via dynamic programming. Returns: latent_covs: Prior covariance matrices of
Push latent means and covariances forward through the observation model. Args: latent_means: float `Tensor` of
Computes I_v(z)*exp(-abs(z)) using a recurrence relation, where z > 0.
Computes the log-normalizer of the distribution.
Check counts for proper shape, values, then return tensor version.
The mode of the von Mises-Fisher distribution is the mean direction.
Applies a Householder rotation to `samples`.
Specialized inversion sampler for 3D.
Create a deep copy of fn. Args: fn: a callable Returns: A `FunctionType`: a deep
Update old_str by inserting append_str just before the "Args:" section.
Converts the given `value` to a (structure of) `Tensor`. This function converts Python objects of
Removes `dict` keys which have have `self` as value.
Recursively replace `dict`s with `_PrettyDict`.
Computes the Monte-Carlo approximation of `E_p[f(X)]`. This function computes the Monte-Carlo approximation of an expectation,
Check args and return samples.
Helper which returns `True` if input is `collections.namedtuple`-like.
Helper which makes a `str` name; useful for tf.compat.v1.name_scope.
Helper to `choose` which expand_dims `is_accepted` and applies tf.where.
Helper which expand_dims `is_accepted` then applies tf.where.
Elementwise adds list members, replacing non-finite results with alt_value. Typically the `alt_value` is chosen so
Helper to `maybe_call_fn_and_grads`.
Calls `fn` and computes the gradient of the result wrt `args_list`.
Construct a for loop, preferring a python loop if `n` is staticaly known. Given `loop_num_iter`
A simplified version of `tf.scan` that has configurable tracing. This function repeatedly calls `loop_fn(state, elem)`,
Wraps a setter so it applies to the inner-most results in `kernel_results`. The wrapped setter
Wraps a getter so it applies to the inner-most results in `kernel_results`. The wrapped getter
Enables the `store_parameters_in_results` parameter in a chain of kernels. This is a temporary utility for
Replaces the rightmost dims in a `Tensor` representing a shape. Args: input_shape: a rank-1 `Tensor`
Replaces the event shape dims of a `TensorShape`. Args: input_tensorshape: a `TensorShape` instance in which
Check that a shape Tensor is int-type and otherwise sane.
Calculate the batchwise KL divergence KL(d1 || d2) with d1 and d2 Beta. Args: d1:
Checks the validity of a sample.
Condition to stop when any batch member converges, or all have failed.
Returns a dictionary to populate the initial state of the search procedure. Performs an initial
Performs the line search step of the BFGS search procedure. Uses hager_zhang line search procedure
Restricts a function in n-dimensions to a given direction. Suppose f: R^n -> R. Then
Updates the state advancing its position by a given position_delta.
Compute the norm of the given (possibly batched) value. Args: value: A `Tensor` of real
Checks if the algorithm satisfies the convergence criteria.
Broadcast a value to match the batching dimensions of a target. If necessary the value
Compute the harmonic number from its analytic continuation. Derivation from [here]( https://en.wikipedia.org/wiki/Digamma_function#Relation_to_harmonic_numbers) and [Euler's constant](
Compute the n'th (uncentered) moment.
Validates that target_accept_prob is in (0, 1).
Default exchange proposal function, for replica exchange MC. With probability `prob_exchange` propose combinations of replica
field_name from kernel_results or kernel_results.accepted_results.
Takes one step of the TransitionKernel. Args: current_state: `Tensor` or Python `list` of `Tensor`s representing
Get list of TensorArrays holding exchanged states, and zeros.
Returns an object with the same type as returned by `one_step`. Args: init_state: `Tensor` or
Helper to `_covariance` and `_variance` which computes a shared scale.
Checks the validity of the concentration parameter.
Check counts for proper shape, values, then return tensor version.
Makes a function which applies a list of Bijectors' `log_det_jacobian`s.
Makes a function which applies a list of Bijectors' `forward`s.
Makes a function which applies a list of Bijectors' `inverse`s.
Runs one iteration of the Transformed Kernel. Args: current_state: `Tensor` or Python `list` of `Tensor`s
Returns an object with the same type as returned by `one_step`. Unlike other `TransitionKernel`s, `TransformedTransitionKernel.bootstrap_results`
Like tf.where but works on namedtuples.
Performs the secant square procedure of Hager Zhang. Given an interval that brackets a root,
Helper function for secant square.
Helper function for secant-square step.
Squeezes a bracketing interval containing the minimum. Given an interval which brackets a minimum and
Brackets the minimum given an initial starting point. Applies the Hager Zhang bracketing algorithm to
Bisects an interval and updates to satisfy opposite slope conditions. Corresponds to the step U3
Actual implementation of bisect given initial_args in a _BracketResult.
Checks if the supplied values are finite. Args: val_1: A namedtuple instance with the function
Checks whether the Wolfe or approx Wolfe conditions are satisfied. The Wolfe conditions are a
Returns the secant interpolation for the minimum. The secant method is a technique for finding
Create a function implementing a step-size update policy. The simple policy increases or decreases the
Applies `num_leapfrog_steps` of the leapfrog integrator. Assumes a simple quadratic kinetic energy function: `0.5 ||momentum||**2`.
Helper to `kernel` which computes the log acceptance-correction. A sufficient but not necessary condition for
Helper which processes input args to meet list-like assumptions.
Computes log(sum(x**2)).
Runs one iteration of Hamiltonian Monte Carlo. Args: current_state: `Tensor` or Python `list` of `Tensor`s
Creates initial `previous_kernel_results` using a supplied `state`.
Constructs a ResNet18 model. Args: input_shape: A `tuple` indicating the Tensor shape. num_classes: `int` representing
Network block for ResNet.
Create the encoder function. Args: activation: Activation function to use. num_topics: The number of topics.
Create the decoder function. Args: num_topics: The number of topics. num_words: The number of words.
Create the prior distribution. Args: num_topics: Number of topics. initial_value: The starting value for the
Build the model function for use in an estimator. Arguments: features: The input features for
Implements Markov chain Monte Carlo via repeated `TransitionKernel` steps. This function samples from an Markov
A multi-layered topic model over a documents-by-terms matrix.
Learnable Deterministic distribution over positive reals.
Learnable Gamma via concentration and scale parameterization.
Posterior approx. for deep exponential family p(w{0,1,2}, z{1,2,3} | x).
Loads NIPS 2011 conference papers. The NIPS 1987-2015 data set is in the form of
Shared init logic for `amplitude` and `length_scale` params. Args: amplitude: `Tensor` (or convertible) or `None`
Get the KL function registered for classes a and b.
Get the KL-divergence KL(distribution_a || distribution_b). If there is no KL method registered specifically for
Computes the (Shannon) cross entropy. Denote two distributions by `P` (`ref`) and `Q` (`other`). Assuming
Returns an image tensor.
Downloads the sprites data and returns the saved filepath.
Creates a character sprite from a set of attribute sprites.
Creates a sequence. Args: character: A character sprite tensor. action_metadata: An action metadata tuple. direction:
Creates a random sequence.
Creates a tf.data pipeline for the sprites dataset. Args: characters: A list of (skin, hair,
Checks that `distributions` satisfies all assumptions.
Calculate the batched KL divergence KL(b0 || b1) with b0 and b1 Blockwise distributions. Args:
Calculate the batched KL divergence KL(a || b) with a and b `HalfNormal`. Args: a:
Flatten a list of kernels which may contain _SumKernel instances. Args: kernels: Python list of
Flatten a list of kernels which may contain _ProductKernel instances. Args: kernels: Python list of
Build an Iterator switching between train and heldout data.
Build fake CIFAR10-style data for unit testing.
Counts the number of occurrences of each value in an integer array `arr`. Works like
Bin values into discrete intervals. Given `edges = [c0, ..., cK]`, defining intervals `I0 =
Count how often `x` falls in intervals defined by `edges`. Given `edges = [c0, ...,
Compute the `q`-th percentile(s) of `x`. Given a vector `x`, the `q`-th percentile of `x`
Compute quantiles of `x` along `axis`. The quantiles of a distribution are cut points dividing
Get static number of dimensions and assert that some expectations are met. This function returns
Get static ndims if possible. Fallback on `tf.rank(x)`.
Insert the dims in `axis` back as singletons after being removed. Args: x: `Tensor`. axis:
Convert possibly negatively indexed axis to non-negative list of ints. Args: axis: Integer Tensor. ndims:
Move dims corresponding to `axis` in `x` to the end, then flatten. Args: x: `Tensor`
Use `top_k` to sort a `Tensor` along the last dimension.
Build an ordered list of Distribution instances for component models. Args: num_timesteps: Python `int` number
The Amari-alpha Csiszar-function in log-space. A Csiszar-function is a member of, ```none F = {
The reverse Kullback-Leibler Csiszar-function in log-space. A Csiszar-function is a member of, ```none F =
The Jensen-Shannon Csiszar-function in log-space. A Csiszar-function is a member of, ```none F = {
The Pearson Csiszar-function in log-space. A Csiszar-function is a member of, ```none F = {
The Squared-Hellinger Csiszar-function in log-space. A Csiszar-function is a member of, ```none F = {
The Triangular Csiszar-function in log-space. A Csiszar-function is a member of, ```none F = {
The T-Power Csiszar-function in log-space. A Csiszar-function is a member of, ```none F = {
The log1p-abs Csiszar-function in log-space. A Csiszar-function is a member of, ```none F = {
The Jeffreys Csiszar-function in log-space. A Csiszar-function is a member of, ```none F = {
The Modified-GAN Csiszar-function in log-space. A Csiszar-function is a member of, ```none F = {
Calculates the dual Csiszar-function in log-space. A Csiszar-function is a member of, ```none F =
Symmetrizes a Csiszar-function in log-space. A Csiszar-function is a member of, ```none F = {
Monte-Carlo approximation of the Csiszar f-Divergence. A Csiszar-function is a member of, ```none F =
Use VIMCO to lower the variance of gradient[csiszar_function(Avg(logu))]. This function generalizes VIMCO [(Mnih and Rezende,
Helper to `csiszar_vimco`; computes `log_avg_u`, `log_sooavg_u`. `axis = 0` of `logu` is presumed to correspond
1-D interpolation that works with/without batching.
Linear `1-D` interpolation on a regular (constant spacing) grid. Given reference values, this function computes
Linear `1-D` interpolation on a regular (constant spacing) grid. Given [batch of] reference values, this
Multi-linear interpolation on a regular (constant spacing) grid. Given [a batch of] reference values, this
N-D interpolation that works with leading batch dims.
Assert that Tensor x has expected number of dimensions.
Make func to expand left/right (of axis) dims of tensors shaped like x.
Make func to expand left/right (of axis) dims of tensors shaped like x.
Like batch_gather, but broadcasts to the left of axis.
Broadcasts the event or distribution parameters.
r"""Monte Carlo estimate of \\(E_p[f(Z)] = E_q[f(Z) p(Z) / q(Z)]\\). With \\(p(z) := exp^{log_p(z)}\\), this
r"""Importance sampling with a positive function, in log-space. With \\(p(z) := exp^{log_p(z)}\\), and \\(f(z) =
Evaluate `Log[E[values]]` in a stable manner. Args: log_values: `Tensor` holding `Log[values]`. Returns: `Tensor` of same
Broadcasts the event or samples.
Takes one step of the TransitionKernel. Args: current_state: `Tensor` or Python `list` of `Tensor`s representing
Returns an object with the same type as returned by `one_step`. Args: init_state: `Tensor` or
Applies the BFGS algorithm to minimize a differentiable function. Performs unconstrained minimization of a differentiable
Computes control inputs to validate a provided inverse Hessian. These ensure that the provided inverse
Update the BGFS state by computing the next inverse hessian estimate.
Applies the BFGS update to the inverse Hessian estimate. The BFGS update rule is (note
Computes the product of a matrix with a vector on the right. Note this supports
Computes the outer product of two possibly batched vectors. Args: t1: A `tf.Tensor` of shape
Transpose a possibly batched matrix. Args: mat: A `tf.Tensor` of shape `[..., n, m]`. Returns:
Maybe add `ndims` ones to `x.shape` on the right. If `ndims` is zero, this is
Return `Tensor` with right-most ndims summed. Args: x: the `Tensor` whose right-most `ndims` dimensions to
A sqrt function whose gradient at zero is very large but finite. Args: x: a
Return common dtype of arg_list, or None. Args: arg_list: an iterable of items which are
Applies the L-BFGS algorithm to minimize a differentiable function. Performs unconstrained minimization of a differentiable
Create LBfgsOptimizerResults with initial state of search procedure.
Computes the search direction to follow at the current state. On the `k`-th iteration of
Creates a `tf.Tensor` suitable to hold `k` element-shaped tensors. For example: ```python element = tf.constant([[0.,
Conditionally push new vectors into a batch of first-in-first-out queues. The `queue` of shape `[k,
Computes whether each square matrix in the input is positive semi-definite. Args: x: A floating-point
Returns whether the input matches the given determinant limit. Args: x: A floating-point `Tensor` of
Returns a uniformly random `Tensor` of "correlation-like" matrices. A "correlation-like" matrix is a symmetric square
Returns rejection samples from trying to get good correlation matrices. The proposal being rejected from
Computes a confidence interval for the mean of the given 1-D distribution. Assumes (and checks)
Returns confidence intervals for the desired correlation matrix volumes. The confidence intervals are computed by
Batchwise KL divergence KL(d1 || d2) with d1 and d2 von Mises. Args: d1: instance
Computes the cumulative density function (CDF) of von Mises distribution. Denote the density of vonMises(loc=0,
Computes the von Mises CDF and its derivative via series expansion.
Computes the von Mises CDF and its derivative via Normal approximation.
Samples from the standardized von Mises distribution. The distribution is vonMises(loc=0, concentration=concentration), so the mean
Performs one step of the differential evolution algorithm. Args: objective_function: A Python callable that accepts
Applies the Differential evolution algorithm to minimize a function. Differential Evolution is an evolutionary optimization
Processes initial args.
Checks if all the population values are NaN/infinite.
Finds the population member with the lowest value.
Checks whether the convergence criteria have been met.
Constructs the initial population. If an initial population is not already provided, this function constructs
Performs recombination by binary crossover for the current population. Let v_i denote the i'th component
Computes the mutatated vectors for each population member. Args: population: Python `list` of `Tensor`s representing
Generates an array of indices suitable for mutation operation. The mutation operation in differential evolution
Converts the input arg to a list if it is not a list already. Args:
Gets a Tensor of type `dtype`, 0 if `tol` is None, validation optional.
Calculate the batched KL divergence `KL(a || b)` with `a` Deterministic. Args: a: instance of
Implementation of `sqrt(1 + x**2)` which is stable despite large `x`.
Numerically stable calculation of `log(1 + x**2)` for small or large `|x|`. For sufficiently large
Soft Thresholding operator. This operator is defined by the equations ```none { x[i] - gamma,
Clips values to a specified min and max while leaving gradient unaltered. Like `tf.clip_by_value`, this
Build an iterator over training batches.
Save a synthetic image as a PNG file. Args: images: samples of synthetic images generated
Converts a sequence of productions into a string of terminal symbols. Args: productions: Tensor of
Produces a masking tensor for (in)valid production rules. Args: symbol: str, a symbol in the
Runs the model forward to generate a sequence of productions. Args: inputs: Unused. Returns: productions:
Runs the model forward to return a stochastic encoding. Args: inputs: Tensor of shape [1,
Integral of the `hat` function, used for sampling. We choose a `hat` function, h(x) =
Inverse function of _hat_integral.
Compute the matrix rank; the number of non-zero SVD singular values. Arguments: a: (Batch of)
Concatenates `chol @ chol.T` with additional rows and columns. This operation is conceptually identical to:
Swaps `m` and `i` on axis -1. (Helper for pivoted_cholesky.) Given a batch of int64
Computes the (partial) pivoted cholesky decomposition of `matrix`. The pivoted Cholesky is a low rank
Compute the Moore-Penrose pseudo-inverse of a matrix. Calculate the [generalized inverse of a matrix]( https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse)
Solves systems of linear eqns `A X = RHS`, given LU factorizations. Note: this function
Computes a matrix inverse given the matrix's LU decomposition. This op is conceptually identical to,
The inverse LU decomposition, `X == lu_reconstruct(*tf.linalg.lu(X))`. Args: lower_upper: `lu` as returned by `tf.linalg.lu`, i.e.,
Returns list of assertions related to `lu_reconstruct` assumptions.
Returns list of assertions related to `lu_solve` assumptions.
Returns (batched) matmul of a SparseTensor (or Tensor) with a Tensor. Args: sparse_or_dense_a: `SparseTensor` or
Returns (batched) matmul of a (sparse) matrix with a column vector. Args: sparse_or_dense_matrix: `SparseTensor` or
Returns (batched) matmul of a SparseTensor with a Tensor. Args: sp_a: `SparseTensor` representing a (batch
Returns a block diagonal rank 2 SparseTensor from a batch of SparseTensors. Args: sp_a: A
Checks that input is a `float` matrix.
Computes the neg-log-likelihood gradient and Fisher information for a GLM. Note that Fisher information is
One step of (the outer loop of) the GLM fitting algorithm. This function returns a
r"""Fits a GLM using coordinate-wise FIM-informed proximal gradient descent. This function uses a L1- and
Generate the slices for building an autoregressive mask.
Generate the mask for building an autoregressive dense layer.
A autoregressively masked dense layer. Analogous to `tf.layers.dense`. See [Germain et al. (2015)][1] for detailed
Build the Masked Autoregressive Density Estimator (Germain et al., 2015). This will be wrapped in
Returns a degree vectors for the input.
Returns a list of degree vectors, one for each input and hidden layer. A unit
Returns a list of binary mask matrices enforcing autoregressivity.
Returns a masked version of the given initializer.
See tfkl.Layer.build.
See tfkl.Layer.call.
Sample a multinomial. The batch shape is given by broadcasting num_trials with remove_last_dimension(logits). Args: num_samples:
Build a zero-dimensional MVNDiag object.
Build an observation_noise_fn that observes a Tensor timeseries.
Build regression weights from model parameters.
Computes the number of edges on longest path from node to root.
Creates tuple of str tuple-str pairs representing resolved & sorted DAG.
Creates lists of callables suitable for JDSeq.
Creates `dist_fn`, `dist_fn_wrapped`, `dist_fn_args`, `dist_fn_name`.
Variational loss for the VGP. Given `observations` and `observation_index_points`, compute the negative variational lower bound
Model selection for optimal variational hyperparameters. Given the full training set (parameterized by `observations` and
Build utility method to compute whether the season is changing.
Build change-of-basis matrices for constrained seasonal effects. This method builds the matrix that transforms seasonal
Build a function computing transitions for a seasonal effect model.
Build the transition noise model for a SeasonalStateSpaceModel.
Build transition noise distribution for a ConstrainedSeasonalSSM.
Returns `True` if given observation data is empty. Emptiness means either 1. Both `observation_index_points` and
Ensure that observation data and locations have consistent shapes. This basically means that the batch
Calculate the batched KL divergence KL(g0 || g1) with g0 and g1 Gamma. Args: g0:
Add a learning rate scheduler to the contained `schedules` :param scheduler: learning rate scheduler to
save OptimMethod :param path path :param overWrite whether to overwrite
Configure checkpoint settings. :param checkpoint_trigger: the interval to write snapshots :param checkpoint_path: the path to
Configure constant clipping settings. :param min_value: the minimum value to clip by :param max_value: the
Do an optimization.
Set train summary. A TrainSummary object contains information necessary for the optimizer to know how
Set validation summary. A ValidationSummary object contains information necessary for the optimizer to know how
Create an optimizer. Depend on the input type, the returning optimizer can be a local
Configure validation settings. :param batch_size: validation batch size :param val_rdd: validation dataset :param trigger: validation
Set new training dataset, for optimizer reuse :param training_rdd: the training dataset :param batch_size: training
Configure validation settings. :param batch_size: validation batch size :param X_val: features of validation dataset :param
Set the interval of recording for each indicator. :param tag: tag name. Supported tag names
Parse or download mnist data if train_dir is empty. :param: train_dir: The directory storing the
Parse or download news20 if source_dir is empty. :param source_dir: The directory storing news data.
Parse or download the pre-trained glove word2vec if source_dir is empty. :param source_dir: The directory
Configures the learning process. Must be called before fit or evaluate. # Arguments optimizer: Optimization
Train a model for a fixed number of epochs on a dataset. # Arguments x:
Evaluate a model on a given dataset in distributed mode. # Arguments x: Input data.
Use a model to do prediction. # Arguments x: Input data. A Numpy array or
Create a Python Model base on the given java value :param jvalue: Java object create
Create a Python Model base on the given java value :param jvalue: Java object create
Get mnist dataset and parallelize into RDDs. Data would be downloaded automatically if it doesn't
Preprocess mnist dataset. Normalize and transform into Sample of RDDs.
When to end the optimization based on input option.
Set validation and checkpoint for distributed optimizer.
Sets the value of :py:attr:`batchSize`.
Return the broadcasted value
Conver x and y into RDD[Sample] :param x: ndarray and the first dimension should be
Get the current active spark context and create one if no active instance :param conf:
Call API in PythonBigDL
Call Java Function
Return a JavaRDD of Object by unpickling It will convert each Python object into Java
Convert Python object into Java
Convert to a bigdl activation layer given the name of the activation as a string
Convert a ndarray to a DenseTensor which would be used in Java side. >>> import
Convert a three ndarray to SparseTensor which would be used in Java side. For example:
Transfer JTensor to ndarray. As SparseTensor may generate an very big ndarray, so we don't
Convert a ndarray of features and labels to Sample, which would be used in Java
transform ImageFeature
get label as ndarray from ImageFeature
Read images as Image Frame if sc is defined, Read image as DistributedImageFrame from local
Read parquet file as DistributedImageFrame
write ImageFrame as parquet file
transformImageFrame
get image from ImageFrame
Random split imageframes according to weights :param weights: weights for each ImageFrame :return:
get image list from ImageFrame
get label rdd from ImageFrame
get prediction rdd from ImageFrame
Extract hadoop sequence files from an HDFS path as ImageFrame :param url: sequence files folder
Evaluate a model by the given metrics. :param x: ndarray or list of ndarray for
Generates output predictions for the input samples, processing the samples in a batched way. #
Optimize the model by the given options :param x: ndarray or list of ndarray for
Apply the transformer to the images in "inputCol" and store the transformed result into "outputCols"
Save a Keras model definition to JSON with given path
Download or load MNIST dataset to/from the specified path. Normalize and transform input data into
Define a convnet model in Keras 1.2.2
Load a pre-trained Bigdl model. :param path: The path containing the pre-trained model. :return: A
Create a Python Layer base on the given java value and the real type. :param
Set the running mean of the layer. Only use this method for a BatchNormalization layer.
Set the running variance of the layer. Only use this method for a BatchNormalization layer.
Create a Python Model base on the given java value :param jvalue: Java object create
:param input: ndarray or list of ndarray or JTensor or list of JTensor. :return: (list
NB: It's for debug only, please use optimizer.optimize() in production. Takes an input object, and
NB: It's for debug only, please use optimizer.optimize() in production. Performs a back-propagation step through
Get the model parameters which containing: weight, bias, gradBias, gradWeight :return: dict(layername -> dict(parametername ->
No argument passed in: Evaluate the model to set train = false, useful when doing
:param X: X can be a ndarray or list of ndarray if the model has
Model inference base on the given data. :param features: it can be a ndarray or
Model inference base on the given data which returning label :param features: it can be
Model inference base on the given data. You need to invoke collect() to trigger those
module predict, return the predict label :param data_rdd: the data to be predict. :return: An
model predict images, return imageFrame with predicted tensor :param image_frame imageFrame that contains images :param
Set weights for this layer :param weights: a list of numpy arrays which represent weight
Get weights for this layer :return: list of numpy arrays which represent weight and bias
Save a model to protobuf files so that it can be used in tensorflow inference.
freeze module, if names is not None, set an array of layers that match given
unfreeze module, if names is not None, unfreeze layers that match given names :param names:
Set this layer in the training mode or in predition mode if is_training=False
Clone self and quantize it, at last return a new quantized model. :return: A new
Load a pre-trained Bigdl model. :param path: The path containing the pre-trained model. :return: A
Load a pre-trained Torch model. :param path: The path containing the pre-trained model. :return: A
Load a pre-trained Keras model. :param json_path: The json path containing the keras model definition.
Load a pre-trained Caffe model. :param model: A bigdl model definition \which equivalent to the
Load a pre-trained Caffe model. :param defPath: The path containing the caffe model definition. :param
Load a pre-trained Tensorflow model. :param path: The path containing the pre-trained model. :param inputs:
stop the input gradient of layers that match the given ```names``` their input gradient are
Return the corresponding node has the given name. If the given name doesn't match any
save current model graph to a folder, which can be display in tensorboard by running
NB: It's for debug only, please use optimizer.optimize() in production. Takes an input object, and
Create a python Criterion by a java criterion object :param jcriterion: A java criterion object
Read the directory of images into DataFrame from the local or remote source. :param path
The file path can be stored in a local file system, HDFS, S3, or any
Loads all layer weights from a HDF5 save file. filepath can be stored in a
Convert kmodel's weights to bigdl format. We are supposing the order is the same as
The result would contain all of the layers including nested layers. :param kmodel: a keras
:param hdf5_path: hdf5 path which can be stored in a local file system, HDFS, S3,
:param json_path: definition path which can be stored in a local file system, HDFS, S3,
Load IMDB dataset Transform input data into an RDD of Sample
Define a recurrent convolutional model in Keras 1.2.2
Functional merge. Only use this method if you are defining a graph model. Used to
Return a list of shape tuples if there are multiple inputs. Return one shape tuple
Return a list of shape tuples if there are multiple outputs. Return one shape tuple
Get mnist dataset with features and label as ndarray. Data would be downloaded automatically if
Parse or download movielens 1m data if train_dir is empty. :param data_dir: The directory storing
Get and return the jar path for bigdl if exists.
Check if spark version is below 2.2
Compare version strings. :param version1; :param version2; :return: 1 if version1 is after version2; -1
Convert tensorflow model to bigdl model :param input_ops: operation list used for input, should be
Export variable tensors from the checkpoint files. :param checkpoint_path: tensorflow checkpoint path :return: dictionary of
Save a variable dictionary to a Java object file, so it can be read by
Dump a tensorflow model to files. The graph will be dumped to path/model.pb, and the
Get the variable values from the checkpoint file, and merge them to the GraphDef file
Processes batch of utterances and returns corresponding responses batch. Each call of Agent passes incoming
Expand and tile tensor along given axis Args: units: tf tensor with dimensions [batch_size, time_steps,
Compute additive self attention for time series of vectors (with batch dimension) the formula: score(h_i,
Compute multiplicative self attention for time series of vectors (with batch dimension) the formula: score(h_i,
Collecting possible continuations of length <= n for every node
Сохраняет дерево для дальнейшего использования
Включает кэширование запросов к descend
Добавление строки s в префиксный бор
Возвращает итератор по словам, содержащимся в боре
Находит все разбиения s = s_1 ... s_m на словарные слова s_1, ..., s_m для
Добавление ребёнка к вершине parent по символу с кодом code
Спуск из вершины curr по строке s
Спуск из вершины curr по строке s с кэшированием
Извлекает все метки выходных рёбер вершины с номером index
Извлекает всех потомков вершины с номером index
Обратная топологическая сортировка
Change save and load paths for obtained population, save config.json with model config, run population
Computes attention vector for each item in inputs: attention vector is a weighted sum of
Simple attention without any conditions. Computes weighted sum of memory elements.
Computes weighted sum of inputs conditioned on state
Computes BLEU score of translated segments against one or more references. Args: reference_corpus: list of
Returns opened file object for writing dialog logs. Returns: log_file: opened Python file object.
Logs single dialog utterance to current dialog log file. Args: utterance: Dialog utterance. direction: 'in'
Wraps _log method for all input utterances. Args: utterance: Dialog utterance. dialog_id: Dialog ID.
get summary ops for the magnitude of gradient updates
Sums `values` associated with any non-unique `indices`. Args: values: A `Tensor` with rank >= 1.
Dump the trained weights from a model to a HDF5 file.
Read data by dataset_reader from specified config.
Create iterator (from config) for specified data.
Make training and evaluation of the model described in corresponding configuration file.
Exchange messages between basic pipelines and the Yandex.Dialogs service. If the pipeline returns multiple values,
Convert labels to one-hot vectors for multi-class multi-label classification Args: labels: list of samples where
Convert vectors of probabilities to labels using confident threshold (if probability to belong with the
Convert vectors of probabilities to one-hot representations using confident threshold Args: proba: samples where each
Configure session for particular device Returns: tensorflow.Session
Process event after epoch Args: event_name: whether event is send after epoch or batch. Set
Checks existence of the model file, loads the model if the file exists
Saves model to the save_path, provided in config. The directory is already created by super().__init__,
Trains the model on a single batch. Args: *args: the list of network inputs. Last
Extract values of momentum variables from optimizer Returns: optimizer's `rho` or `beta_1`
Update graph variables setting giving `learning_rate` and `momentum` Args: learning_rate: learning rate value to be
Process event after epoch Args: event_name: whether event is send after epoch or batch. Set
Calculates F1 (binary) measure. Args: y_true: list of true values y_predicted: list of predicted values
Calculates F1 macro measure. Args: y_true: list of true values y_predicted: list of predicted values
Converts word to a tuple of symbols, optionally converts it to lowercase and adds capitalization
Number of convolutional layers stacked on top of each other Args: units: a tensorflow tensor
Densely connected convolutional layers. Based on the paper: [Gao 17] https://arxiv.org/abs/1608.06993 Args: units: a tensorflow
Bi directional recurrent neural network. GRU or LSTM Args: units: a tensorflow tensor with dimensionality
Stackted recurrent neural networks GRU or LSTM Args: units: a tensorflow tensor with dimensionality [None,
Network architecture inspired by One Hundred layer Tiramisu. https://arxiv.org/abs/1611.09326. U-Net like. Args: units: a tensorflow
Highway convolutional network. Skip connection with gating mechanism. Args: units: a tensorflow tensor with dimensionality
Token embedding layer. Create matrix of for token embeddings. Can be initialized with given matrix
Characters to vector. Every sequence of characters (token) is embedded to vector space with dimensionality
Expand and tile tensor along given axis Args: units: tf tensor with dimensions [batch_size, time_steps,
Computes additive self attention for time series of vectors (with batch dimension) the formula: score(h_i,
Computes multiplicative self attention for time series of vectors (with batch dimension) the formula: score(h_i,
Fast CuDNN GRU implementation Args: units: tf.Tensor with dimensions [B x T x F], where
CuDNN Compatible GRU implementation. It should be used to load models saved with CudnnGRUCell to
Fast CuDNN LSTM implementation Args: units: tf.Tensor with dimensions [B x T x F], where
CuDNN Compatible LSTM implementation. It should be used to load models saved with CudnnLSTMCell to
Fast CuDNN Bi-GRU implementation Args: units: tf.Tensor with dimensions [B x T x F], where
Fast CuDNN Bi-LSTM implementation Args: units: tf.Tensor with dimensions [B x T x F], where
Fast CuDNN Stacked Bi-GRU implementation Args: units: tf.Tensor with dimensions [B x T x F],
Dropout with the same drop mask for all fixed_mask_dims Args: units: a tensor, usually with
Builds the network using Keras.
Builds word-level network
Creates the basic network architecture, transforming word embeddings to intermediate outputs
Trains model on a single batch Args: data: a batch of word sequences labels: a
Makes predictions on a single batch Args: data: a batch of word sequences together with
Transforms a sentence to Numpy array, which will be the network input. Args: sent: input
Transforms a sentence of tags to Numpy array, which will be the network target. Args:
Calculate BLEU score Parameters: y_true: list of reference tokens y_predicted: list of query tokens weights:
Verify signature certificate URL against Amazon Alexa requirements. Each call of Agent passes incoming utterances
Extracts pycrypto X509 objects from SSL certificates chain string. Args: certs_txt: SSL certificates chain string.
Verifies Subject Alternative Names (SANs) for Amazon certificate. Args: amazon_cert: Pycrypto X509 Amazon certificate. Returns:
Verifies if Amazon and additional certificates creates chain of trust to a root CA. Args:
Verifies Alexa request signature. Args: amazon_cert: Pycrypto X509 Amazon certificate. signature: Base64 decoded Alexa request
Conducts series of Alexa SSL certificate verifications against Amazon Alexa requirements. Args: signature_chain_url: Signature certificate
Returns list of json compatible states of the RichMessage instance nested controls. Returns: json_controls: Json
Returns list of MS Bot Framework compatible states of the RichMessage instance nested controls. Returns:
Returns list of Telegram compatible states of the RichMessage instance nested controls. Returns: telegram_controls: Telegram
Returns list of Amazon Alexa compatible states of the RichMessage instance nested controls. Returns: alexa_controls:
DeepPavlov console configuration utility.
Constructs function encapsulated in the graph.
Constructs function encapsulated in the graph and the session.
Compute Area Under the Curve (AUC) from prediction scores. Args: y_true: true binary labels y_pred:
Convert a token to a hash of given size. Args: token: a word hash_size: hash
Calculate accuracy in terms of absolute coincidence Args: y_true: array of true values y_predicted: array
Rounds predictions and calculates accuracy in terms of absolute coincidence. Args: y_true: list of true
We'll stub out all the initializers in the pretrained LM with a function that loads
Weight the layers of a biLM with trainable scalar weights to compute ELMo representations. For
options contains key 'char_cnn': { 'n_characters': 262, # includes the start / end characters 'max_characters_per_token':
Reads a file from a path and returns data as a list of tuples of
Builds agent based on PatternMatchingSkill and HighestConfidenceSelector. This is agent building tutorial. You can use
Takes an array of integers and transforms it to an array of one-hot encoded vectors
Prettifies the dictionary of metrics.
Populate settings directory with default settings files Args: force: if ``True``, replace existing settings files
Updates dialogue state with new ``slots``, calculates features. Returns: Tracker: .
Returns predictions of morphotagging model given in config :config_path:. Args: config_path: a path to config
Initiates Flask web service with Alexa skill. Args: agent_generator: Callback Alexa agents factory. multi_instance: Multi
Load model parameters from self.load_path
Save model parameters to self.save_path
Get train operation for given loss Args: loss: loss, tf tensor or scalar learning_rate: scalar
Print number of *trainable* parameters in the network
Вычисляет минимальную стоимость появления нового символа в узлах словаря в соответствии со штрафами из costs
Finds all dictionary words in d-window from word
Находит все слова в префиксном боре, расстояние до которых в соответствии с заданным преобразователем не
Предвычисляет будущие символы и стоимости операций с ними для h-эвристики
Вычисление h-эвристики из работы Hulden,2009 для текущей вершины словаря Аргументы: ---------- suffix : string непрочитанный
Возвращает стоимость элементарной трансдукции up->low или np.inf, если такой элементарной трансдукции нет Аргументы: ---------- up,
Строит пробразователь, задающий обратное конечное преобразование
Вычисляет трансдукцию минимальной стоимости, отображающую first в second Аргументы: ----------- first : string second :
Возвращает все трансдукции, переводящие first в second, чья стоимость не превышает threshold Возвращает: ---------- result
Возвращает все трансдукции с верхним элементом word, чья стоимость не превышает max_cost ` Возвращает: ----------
Функция, динамически заполняющая таблицу costs стоимости трансдукций, costs[i][j] --- минимальная стоимость трансдукции, переводящей first[:i] в
Заполняет массив _reversed_operation_costs на основе имеющегося массива operation_costs
Вычисляет максимальную длину элемента low в элементарной трансдукции (up, low) для каждого up и максимальную
Восстанавливает трансдукции по таблице обратных ссылок Аргументы: ---------- first, second : string верхние и нижние
возвращает все трансдукции стоимости <= max_cost, которые можно получить из элементов initial Аргументы: ---------- initial
sets 1.0 cost for every replacement, insertion, deletion and transposition
Initiates self-destruct timer.
Routes Alexa requests to appropriate handlers. Args: request: Alexa request. Returns: response: Response conforming Alexa
Infers DeepPavlov agent with raw user input extracted from Alexa request. Args: utterance: Raw user
Populates generated response with additional data conforming Alexa response specification. Args: response: Raw user input
Handles IntentRequest Alexa request. Args: request: Alexa request. Returns: response: "response" part of response dict
Handles LaunchRequest Alexa request. Args: request: Alexa request. Returns: response: "response" part of response dict
Handles all unsupported types of Alexa requests. Returns standard message. Args: request: Alexa request. Returns:
method that defines ``Struct``'s pretty printing rules for iPython Args: p (IPython.lib.pretty.RepresentationPrinter): pretty printer object
Calculates perplexity by loss Args: losses: list of numpy arrays of model losses Returns: perplexity
Create: self.total_loss: total loss op for training self.softmax_W, softmax_b: the softmax variables self.next_token_id / _reverse:
Build and return the model described in corresponding configuration file.
Start interaction with the model described in corresponding configuration file.
Make a prediction with the component described in corresponding configuration file.
Reads input file in CONLL-U format Args: infile: a path to a file word_column: column
Processes all words in data using :func:`~deeppavlov.dataset_iterators.morphotagger_iterator.process_word`. Args: data: a list of pairs (words, tags),
Returns a function object with the name given in string.
Decorator for metric registration.
Returns a metric callable with a corresponding name.
Convert given string label of decay type to special index Args: label: name of decay
Find the best learning rate schedule, and set obtained values of learning rate and momentum
Find the best value according to given losses Args: values: list of considered values losses:
Update learning rate and momentum variables after event (given by `event_name`) Args: event_name: name of
Embed one text sample Args: tokens: tokenized text sample mean: whether to return mean embedding
parses requirements from requirements.txt
Detokenizing a text undoes the tokenizing operation, restores punctuation and spaces to the places that
Make ngrams from a list of tokens/lemmas :param items: list of tokens, lemmas or other
Calculates log loss. Args: y_true: list or array of true values y_predicted: list or array
Makes a module spec. Args: options: LM hyperparameters. weight_file: location of the hdf5 file with
Exports a TF-Hub module
Format catalog item output Parameters: item_data: item's attributes values Returns: [rich_message]: list of formatted rich
Make an agent Returns: agent: created Ecommerce agent
Parse parameters and run ms bot framework
Processes batch of utterances and returns corresponding responses batch. Args: utterances_batch: Batch of incoming utterances.
Drops with :dropout probability temporal steps of input 3D tensor
A layer filling i-th column of a 2D tensor with 1+ln(1+i) when it contains a
Download a file from URL to one or several target locations Args: dest_file_path: path or
Simple tar archive extractor Args: file_path: path to the tar file to be extracted extract_folder:
Simple .gz archive extractor Args: file_path: path to the gzip file to be extracted extract_path:
Download and extract .tar.gz or .gz file to one or several target locations. The archive
Updates dict recursively You need to use this function to update dictionary if depth of
Given a file URL, return a md5 query of the file Args: url: a given
Given a URL, set or replace a query parameter and return the modified URL. Args:
Returns Amazon Alexa compatible state of the PlainText instance. Creating Amazon Alexa response blank with
Returns json compatible state of the Button instance. Returns: control_json: Json representation of Button state.
Returns MS Bot Framework compatible state of the Button instance. Creates MS Bot Framework CardAction
Returns json compatible state of the ButtonsFrame instance. Returns json compatible state of the ButtonsFrame
Returns MS Bot Framework compatible state of the ButtonsFrame instance. Creating MS Bot Framework activity
Calculates Exact Match score between y_true and y_predicted EM score uses the best matching y_true
Calculates Exact Match score between y_true and y_predicted EM score uses the best matching y_true
Calculates F-1 score between y_true and y_predicted F-1 score uses the best matching y_true answer
Calculates recall at k ranking metric. Args: y_true: Labels. Not used in the calculation of
r"""Return True if at least one GPU is available
Recursively apply config's variables values to its property
Read config's variables and apply their values to all its properties
Convert relative paths to absolute with resolving user directory.
Builds and returns the Component from corresponding dictionary of parameters.
Thread run method implementation.
Deletes Conversation instance. Args: conversation_key: Conversation key.
Conducts cleanup of periodical certificates with expired validation.
Conducts series of Alexa request verifications against Amazon Alexa requirements. Args: signature_chain_url: Signature certificate URL
Processes Alexa requests from skill server and returns responses to Alexa. Args: request: Dict with
It is a implementation of the constrained softmax (csoftmax) for slice. Based on the paper:
It is a implementation of the constrained softmax (csoftmax). Based on the paper: https://andre-martins.github.io/docs/emnlp2017_final.pdf "Learning
It is a implementation one step of block of the Luong et al. attention mechanism
It is a implementation of the Luong et al. attention mechanism with general score and
Returns a class object with the name given as a string.
Register classes that could be initialized from JSON configuration file. If name is not passed,
Returns a registered class object with the name given in the string.
It is a implementation of the Luong et al. attention mechanism with general score. Based
It is a implementation of the Luong et al. attention mechanism with general score. Based
It is a implementation of the Bahdanau et al. attention mechanism. Based on the paper:
It is a implementation of the Bahdanau et al. attention mechanism. Based on the papers:
Creates new Generic model by loading existing embedded model into library, e.g. from H2O MOJO.
Extract full regularization path explored during lambda search from glm model. :param model: source lambda
Create a custom GLM model using the given coefficients. Needs to be passed source model
Create H2OCluster object from a list of key-value pairs. TODO: This method should be moved
Shut down the server. This method checks if the H2O cluster is still running, and
Determine if the H2O cluster is running or not. :returns: True if the cluster is
Print current cluster status information. :param detailed: if True, then also print detailed information about
List all jobs performed by the cluster.
Return the list of all known timezones.
Update information in this object from another H2OCluster instance. :param H2OCluster other: source of the
Parameters for metalearner algorithm Type: ``dict`` (default: ``None``). Example: metalearner_gbm_params = {'max_depth': 2, 'col_sample_rate': 0.3}
Represent instance of a class as JSON. Arguments: obj -- any object Return: String that
Repeatedly test a function waiting for it to return True. Arguments: test_func -- A function
Implements transformation of CALL_FUNCTION bc inst to Rapids expression. The implementation follows definition of behavior
Fetch all the jobs or a single job from the /Jobs endpoint.
Poll a single job from the /Jobs endpoint until it is "status": "DONE" or "CANCELLED"
Import a file or files into h2o. The 'file' parameter accepts a directory or a
Parse an imported raw file or files into a Frame.
Return a single Frame or all of the Frames in the h2o cluster. The frames
Return the summary for a single column for a single Frame in the h2o cluster.
Delete a frame on the h2o cluster, given its key.
Return a model builder or all of the model builders known to the h2o cluster.
Check a dictionary of model builder parameters on the h2o cluster using the given algorithm
Build a model on the h2o cluster using the given algorithm, training Frame and model
Score a model on the h2o cluster on the given Frame and return only the
ModelMetrics list.
Return all of the models in the h2o cluster, or a single model given its
Delete a model on the h2o cluster, given its key.
Pretty tabulated string of all the cached data, and column names
Create a new reservation for count instances
terminate all the instances given by its ids
stop all the instances given by its ids
Start all the instances given by its ids
Reboot all the instances given by its ids
Wait for ssh service to appear on given hosts
This is an advanced exception-handling hook function, that is designed to supercede the standard Python's
Return fully qualified function name. This method will attempt to find "full name" of the
Given a frame and a compiled function code, find the corresponding function object within the
Return function's declared arguments as a string. For example for this function it returns "func,
Return piece of text, wrapped around if needed. :param text: text that may be too
input: jenkins environment variable EXECUTOR_NUMBER output: creates ./BASE_PORT.sh, that you should 'source ./PORT.sh' (can't see
Train the model asynchronously (to block for results call :meth:`join`). :param x: A list of
Wait until job's completion.
Train the H2O model. :param x: A list of column names or indices indicating the
Fit an H2O model as part of a scikit-learn pipeline or grid search. A warning
Obtain parameters for this estimator. Used primarily for sklearn Pipelines and sklearn grid search. :param
In order to use convert_H2OXGBoostParams_2_XGBoostParams and convert_H2OFrame_2_DMatrix, you must import the following toolboxes: xgboost, pandas,
If a parameter is not stored in parms dict save it there (even though the
Return True if file_name matches a regexp for an R demo. False otherwise. :param file_name:
Return True if file_name matches a regexp for an ipython notebook. False otherwise. :param file_name:
scan through the java output text and extract the java messages related to running test
Helper function to handle caught signals.
Print USAGE help.
Parse the arguments into globals (ain't this an ugly duckling?). TODO: replace this machinery with
Clear the output directory.
This function is written to remove sandbox directories if they exist under the parent_dir. :param
Main program. :param argv Command-line arguments :return none
Start one node of H2O. (Stash away the self.child and self.pid internally here.) :return none
Look at the stdout log and figure out which port the JVM chose. If successful,
Look at the stdout log and wait until the cluster of proper size is formed.
Normal node shutdown. Ignore failures for now. :return none
Start H2O cluster. The cluster is not up until wait_for_cloud_to_be_up() is called and returns. :return
Normal cluster shutdown. :return none
Terminate a running cluster. (Due to a signal.) :return none
Return an ip to use to talk to this cluster.
Return a port to use to talk to this cluster.
This function will grab one log file from Jenkins and save it to local user
Main program. @return: none
Plot training set (and validation set if available) scoring history for an H2OBinomialModel. The timestep
Return the coordinates of the ROC curve for a given set of data. The coordinates
Retrieve the index in this metric's threshold list at which the given threshold is located.
Creates new H2OWord2vecEstimator based on an external model. :param external: H2OFrame with an external model
Determines vec_size for a pre-trained model after basic model verification.
Mean absolute error regression loss. :param y_actual: H2OFrame of actual response. :param y_predicted: H2OFrame of
Mean squared error regression loss :param y_actual: H2OFrame of actual response. :param y_predicted: H2OFrame of
Median absolute error regression loss :param y_actual: H2OFrame of actual response. :param y_predicted: H2OFrame of
Explained variance regression score function. :param y_actual: H2OFrame of actual response. :param y_predicted: H2OFrame of
R-squared (coefficient of determination) regression score function :param y_actual: H2OFrame of actual response. :param y_predicted:
Plots training set (and validation set if available) scoring history for an H2ORegressionModel. The timestep
Assert that the argument has the specified type. This function is used to check that
Assert that string variable matches the provided regular expression. :param v: variable to check. :param
Assert that variable satisfies the provided condition. :param v: variable to check. Its value is
Magic variable name retrieval. This function is designed as a helper for assert_is_type() function. Typically
Return True if the variable is of the specified type, and False otherwise. :param var:
Return the name of the provided type. _get_type_name(int) == "integer" _get_type_name(str) == "string" _get_type_name(tuple) ==
Attempt to find the source code of the ``lambda_fn`` within the string ``src``.
Return string representing the name of this type.
Return True if the variable matches this type, and False otherwise.
Return string representing the name of this type.
Return True if the variable does not match any of the types, and False otherwise.
Return string representing the name of this type.
Return True if the variable matches this type, and False otherwise.
Return True if the variable matches this type, and False otherwise.
Return string representing the name of this type.
Return True if the variable matches the specified type.
Return string representing the name of this type.
Return True if the variable matches the specified type.
Return True if the variable matches this type, and False otherwise.
Check whether the provided value is a valid enum constant.
Retrieve the config as a dictionary of key-value pairs.
Find and parse config file, storing all variables in ``self._config``.
Return possible locations for the .h2oconfig file, one at a time.
Start the progress bar, and return only when the progress reaches 100%. :param progress_fn: the
Save the current model progress into ``self._progress_data``, and update ``self._next_poll_time``. :param res: tuple (progress level,
Compute t0, x0, v0, ve.
Estimate the moment when the underlying process is expected to reach completion. This function should
Determine when to query the progress status next. This function is used if the external
Calculate the modelled progress state for the given time moment. :returns: tuple (x, v) of
Return the projected time when progress level `x_target` will be reached. Since the underlying progress
Print the rendered string to the stdout.
Render the widget.
Initial rendering stage, done in order to compute widths of all widgets.
Find current STDOUT's width, in characters.
Render the widget.
Inform the widget about the encoding of the underlying character stream.
Render the widget.
This function will generate an H2OFrame of two columns. One column will be float and
Returns encoding map as an object that maps 'column_name' -> 'frame_with_encoding_map_for_this_column_name' :param frame frame: An
Apply transformation to `te_columns` based on the encoding maps generated during `TargetEncoder.fit()` call. You must
For an H2O Enum column, we perform one-hot-encoding here and add one more column, "missing(NA)"
Retrieve an existing H2OFrame from the H2O cluster using the frame's id. :param str frame_id:
Reload frame information from the backend H2O server.
The list of column names (List[str]).
Number of rows in the dataframe (int).
Number of columns in the dataframe (int).
The dictionary of column name/type pairs.
The type for the given column. :param col: either a name, or an index of
Extract columns of the specified type from the frame. :param str coltype: A character string
Used by the H2OFrame.__repr__ method to print or display a snippet of the data frame.
Display summary information about the frame. Summary includes min/mean/max/sigma and other rollup data. :param bool
Generate an in-depth description of this H2OFrame. This will print to the console the dimensions
Return the first ``rows`` and ``cols`` of the frame as a new H2OFrame. :param int
Multiply this frame, viewed as a matrix, by another matrix. :param matrix: another frame that
Create a time column from individual components. Each parameter should be either an integer, or
Get the factor levels. :returns: A list of lists, one list per column, of levels.
Get the number of factor levels for each categorical column. :returns: A list of the
A method to set all column values to one of the levels. :param str level:
Replace the levels of a categorical column. New levels must be aligned with the old
Change names of columns in the frame. Dict key is an index or name of
Change names of all columns in the frame. :param List[str] names: The list of new
Set a new name for a column. :param col: index or name of the column
Compute cumulative sum over rows / columns of the frame. :param int axis: 0 for
Test whether elements of an H2OFrame are contained in the ``item``. :param items: An item
Build a fold assignments column for cross-validation. Rows are assigned a fold according to the
Build a fold assignment column with the constraint that each fold has the same class
Compactly display the internal structure of an H2OFrame.
Obtain the dataset as a python-local object. :param bool use_pandas: If True (default) then return
Drop a single column or row or a set of columns or rows from a
Pop a column from the H2OFrame at index i. :param i: The index (int) or
Compute quantiles. :param List[float] prob: list of probabilities for which quantiles should be computed. :param
Append multiple H2OFrames to this frame, column-wise or row-wise. :param List[H2OFrame] frames: list of frames
Append data to this frame column-wise. :param H2OFrame data: append columns of frame ``data`` to
Append data to this frame row-wise. :param data: an H2OFrame or a list of H2OFrame's
Split a frame into distinct subsets of size determined by the given ratios. The number
Return a new ``GroupBy`` object using this frame and the desired grouping columns. The returned
Return a new Frame that is sorted by column(s) in ascending order. A fully distributed
Return a new Frame that fills NA along a given axis and along a given
Impute missing values into the frame, modifying it in-place. :param int column: Index of the
Merge two datasets based on common column names. We do not support all_x=True and all_y=True.
Reorder levels of an H2O factor for one single column of a H2O frame The
Insert missing values into the current frame, modifying it in-place. Randomly replaces a user-specified fraction
Compute the frame's sum by-column (or by-row). :param bool skipna: If True (default), then NAs
Compute the variance-covariance matrix of one or two H2OFrames. :param H2OFrame y: If this parameter
Compute the correlation matrix of one or two H2OFrames. :param H2OFrame y: If this parameter
Compute a pairwise distance measure between all rows of two numeric H2OFrames. :param H2OFrame y:
Compute element-wise string distances between two H2OFrames. Both frames need to have the same shape
Convert columns in the current frame to categoricals. :returns: new H2OFrame with columns of the
Return the list of levels for an enum (categorical) column. This function can only be
Split the strings in the target column on the given regular expression pattern. :param str
Tokenize String tokenize() is similar to strsplit(), the difference between them is that tokenize() will
For each string in the frame, count the occurrences of the provided pattern. If countmathces
For each string, return a new string that is a substring of the original string.
Return a copy of the column with leading characters removed. The set argument is a
For each string compute its Shannon entropy, if the string is empty the entropy is
For each string, find the count of all possible substrings with 2 characters or more
Compute the counts of values appearing in a column, or co-occurence counts between two columns.
Compute a histogram over a numeric column. :param breaks: Can be one of ``"sturges"``, ``"rice"``,
Compute the iSAX index for DataFrame which is assumed to be numeric time series data.
This method requires that you import the following toolboxes: xgboost, pandas, numpy and scipy.sparse. This
Pivot the frame designated by the three columns: index, column, and value. Index and column
This function will add a new column rank where the ranking is produced as follows:
Given a column name or one column index, a percent N, this function will return
Substitute the first occurrence of pattern in a string with replacement. :param str pattern: A
Categorical Interaction Feature Creation in H2O. Creates a frame in H2O with n-th order interaction
Translate characters from lower to upper case for a particular column. :returns: new H2OFrame with
Searches for matches to argument `pattern` within each element of a string column. Default behavior
Center and/or scale the columns of the current frame. :param center: If True, then demean
Round doubles/floats to the given number of significant digits. :param int digits: Number of significant
Remove rows with NAs from the H2OFrame. :returns: new H2OFrame with all rows from the
Conduct a diff-1 transform on a numeric frame column. :returns: an H2OFrame where each element
For each element in an H2OFrame, determine if it is NA or not. :returns: an
Extract the "minute" part from a date column. :returns: a single-column H2OFrame containing the "minute"
Generate a column of random numbers drawn from a uniform distribution [0,1) and having the
Construct a column that can be used to perform a random stratified split. :param float
Make a vector of the positions of (first) matches of its first argument in its
Cut a numeric vector into categorical "buckets". This method is only applicable to a single-column
Get the index of the max value in a column or row :param bool skipna:
Equivalent to ``[y if t else n for t,y,n in zip(self,yes,no)]``. Based on the booleans
Apply a lambda expression to an H2OFrame. :param fun: a lambda expression to be applied
Deprecated, use :func:`moment` instead. This function was left for backward-compatibility purposes only. It is not
[DEPRECATED] Use constructor ``H2OFrame()`` instead.
Parse code from a string of text.
Parse the provided file, and return Code object.
Parse any object accessible through a readline interface into a list of :class:`Token`s. This function
Move the token by `drow` rows and `dcol` columns.
Convert the parsed representation back into the source code.
First stage of parsing the code (stored as a raw stream of tokens). This method
Second stage of parsing: convert ``fragments`` into the list of code objects. This method in
Get the sizes of each cluster. If all are False (default), then return the training
The centers for the KMeans model.
The standardized centers for the kmeans model.
Connect to an existing H2O server, remote or local. There are two ways to connect
Perform a REST API request to a previously connected server. This function is mostly for
Used to verify that h2o-python module and the H2O server are compatible with each other.
Attempt to connect to a local server, or if not successful start a new server
Import a single file or collection of files. :param path: A path to a data
Upload a dataset from the provided local path to the H2O cluster. Does a single-threaded
Import a dataset that is already on the cluster. The path to the data must
Import Hive table to H2OFrame in memory. Make sure to start H2O with Hive on
Import SQL table to H2OFrame in memory. Assumes that the SQL table is not being
Import the SQL table that is the result of the specified SQL query to H2OFrame
Retrieve H2O's best guess as to what the structure of the data file is. During
Parse dataset using the parse setup structure. :param setup: Result of ``h2o.parse_setup()`` :param id: an
(internal) Assign new id to the frame. :param data: an H2OFrame whose id should be
Create a deep clone of the frame ``data``. :param data: an H2OFrame to be cloned
Load a model from the server. :param model_id: The model identification in H2O :returns: Model
Return the specified grid. :param grid_id: The grid identification in h2o :returns: an :class:`H2OGridSearch` instance.
Obtain a handle to the frame in H2O with the frame_id key. :param str frame_id:
Remove object(s) from H2O. :param x: H2OFrame, H2OEstimator, or string, or a list of those
Download the POJO for this model to the directory specified by path; if path is
Download an H2O data set to a CSV file on the local disk. Warning: Files
Download H2O log files to disk. :param dirname: a character string indicating the directory that
Save an H2O Model object to disk. (Note that ensemble binary models can now be
Load a saved H2O model from disk. (Note that ensemble binary models can now be
Export a given H2OFrame to a path on the machine this python session is currently
Create a new frame with random data. Creates a data frame in H2O with real-valued,
Categorical Interaction Feature Creation in H2O. Creates a frame in H2O with n-th order interaction
Convert an H2O data object into a python-specific object. WARNING! This will pull all data
H2O built-in demo facility. :param funcname: A string that identifies the h2o python function to
Imports a data file within the 'h2o_data' folder.
Create Model Metrics from predicted and actual values in H2O. :param H2OFrame predicted: an H2OFrame
Upload given file into DKV and save it under give key as raw object. :param
Upload given metrics function into H2O cluster. The metrics can have different representation: - class:
Main program. @return: none
Main program. @return: none
Check that the provided frame id is valid in Rapids language.
Search for a relative path and turn it into an absolute path. This is handy
Convert given number of bytes into a human readable representation, i.e. add prefix such as
Convert given duration in milliseconds into a human-readable representation, i.e. hours, minutes, seconds, etc. More
This function exists here ONLY because Sphinx.ext.autodoc gets into a bad state when seeing the
Return a "canonical" version of slice ``s``. :param slice s: the original slice expression :param
Return True if slice ``s`` in "normalized" form.
MOJO scoring function to take a Pandas frame and use MOJO model as zip file
MOJO scoring function to take a CSV file and use MOJO model as zip file
The decorator to mark deprecated functions.
Wait until grid finishes computing.
Train the model synchronously (i.e. do not return until the model finishes training). To train
(internal)
Predict on a dataset. :param H2OFrame test_data: Data to be predicted on. :returns: H2OFrame filled
Return a Model object. :param str key: If None, return all cross-validated models; otherwise return
Obtain a hidden layer's details on a dataset. :param test_data: Data to create a feature
Return the frame for the respective weight matrix. :param: matrix_id: an integer, ranging from 0
Return the frame for the respective bias vector. :param: vector_id: an integer, ranging from 0
Generate model metrics for this model on test_data. :param test_data: Data set for which model
Print a detailed summary of the explored models.
Print models sorted by metric.
Pretty print the variable importances, or return them in a list/pandas DataFrame. :param bool use_pandas:
Pretty print the coefficents table (includes normalized coefficients).
Get the hyperparameters of a model explored by grid search. :param str id: The model
Derived and returned the model parameters used to train the particular grid search model. :param
Retrieve an H2OGridSearch instance. Optionally specify a metric by which to sort models and a
Deprecated since 2016-12-12, use grid.get_grid() instead.
Obtain the reconstruction error for the input test_data. :param H2OFrame test_data: The dataset upon which
Get the F1 values for a set of thresholds for the models explored. If all
Get the confusion matrix for the specified metrics/thresholds. If all are False (default), then return
Retrieve the index in this metric's threshold list at which the given threshold is located.
Returns a confusion matrix based of H2O's default prediction threshold for a dataset. :param data:
Return the Importance of components associcated with a pca model. use_pandas: ``bool`` (default: ``False``).
The archetypes (Y) of the GLRM model.
Convert archetypes of the model into original feature space. :param H2OFrame test_data: The dataset upon
Produce the scree plot. Library ``matplotlib`` is required for this function. :param str type: either
Convert names with underscores into camelcase. For example: "num_rows" => "numRows" "very_long_json_name" => "veryLongJsonName" "build_GBM_model"
Dedent text to the specific indentation level. :param ind: common indentation level for the resulting
Generate schema Java class. :param class_name: name of the class :param schema: information about the
Generate a Retrofit Proxy class. Retrofit interfaces look like this: public interface GitHubService { @GET("/users/{user}/repos")
Main program. @return: none
Parse file specified by constructor.
Parse file specified by constructor.
Obtain the reconstruction error for the input test_data. :param H2OFrame test_data: The dataset upon which
This function will extract the various operation time for GLRM model building iterations. :param javaLogText:
Main program. Take user input, parse it and call other functions to execute the commands
func_name : Descriptive text continued text another_func_name : Descriptive text func_name1, func_name2, :meth:`func_name`, func_name3
.. index: default :refguide: something, else, and more
Fill this instance from given dictionary. The method only uses keys which corresponds to properties
r""" Establish connection to an existing H2O server. The connection is not kept alive, so
Perform a REST API request to the backend H2O server. :param endpoint: (str) The endpoint's
Close an existing connection; once closed it cannot be used again. Strictly speaking it is
Return the session id of the current connection. The session id is issued (through an
Start logging all API requests to the provided destination. :param dest: Where to write the
Make a copy of the `data` object, preparing it to be sent to the server.
Prepare `filename` to be sent to the server. The "preparation" consists of creating a data
Log the beginning of an API request.
Log response from an API request.
Log the message `msg` to the destination `self._logging_dest`. If this destination is a file name,
Given a response object, prepare it to be handed over to the external caller. Preparation
Helper function to print connection status messages when in verbose mode.
approxEqual(float1, float2[, tol=1e-18, rel=1e-7]) -> True|False approxEqual(obj1, obj2[, *args, **kwargs]) -> True|False Return True if
Represent instance of a class as JSON. Arguments: obj -- any object Return: String that
Retrieve information about an AutoML instance. :param str project_name: A string indicating the project_name of
Begins an AutoML task, a background task that automatically builds a number of models with
Predict on a dataset. :param H2OFrame test_data: Data on which to make predictions. :returns: A
Download the POJO for the leader model in AutoML to the directory specified by path.
Download the leader model in AutoML in MOJO format. :param path: the path where MOJO
Fit this object by computing the means and standard deviations used by the transform method.
Scale an H2OFrame with the fitted means and standard deviations. :param X: An H2OFrame; may
Undo the scale transformation. :param X: An H2OFrame; may contain NAs and/or categoricals. :param y:
Main program. @return: none
remove extra characters before the actual string we are looking for. The Jenkins console output
calculate the approximate date/time from the timestamp about when the job was built. This information
Find the slave machine where a Jenkins job was executed on. It will save this
Find the git hash and branch info that a Jenkins job was taken from. It
Find if a Jenkins job has taken too long to finish and was killed. It
Find if a Jenkins job has failed to build. It will save this information in
Find if all the java_*_0.out.txt files that were mentioned in the console output. It will
Find the build id of a jenkins job. It will save this information in g_failed_test_info_dict.
From user input, grab the jenkins job name and saved it in g_failed_test_info_dict. In addition,
scan through the java output text and extract the bad java messages that may or
Insert Java messages into java_messages and java_message_types if they are associated with a unit test
loop through java_*_0.out.txt and extract potentially dangerous WARN/ERRR/FATAL messages associated with a test. The test
Save the log scraping results into logs denoted by g_output_filename_failed_tests and g_output_filename_passed_tests. :return: none
Write key/value into log file when the value is a string and not a list.
Concatecate all log file into a summary text file to be sent to users at
Write one log file into the summary text file. Parameters ---------- fhandle : Python file
Loop through all java messages that are not associated with a unit test and write
Load in pickle file that contains dict structure with bad java messages to ignore per
Main program. @return: none
Return enum constant `s` converted to a canonical snake-case.
Find synonyms using a word2vec model. :param str word: A single word to find synonyms
Transform words (or sequences of words) to vectors using a word2vec model. :param str words:
Wait until the job finishes. This method will continuously query the server about the status
Convert the munging operations performed on H2OFrame into a POJO. :param pojo_name: (str) Name of
To perform the munging operations on a frame specified in steps on the frame fr.
Find the percentile of a list of values. @parameter N - is a list of
Get the parameters and the actual/default values only. :returns: A dictionary of parameters used to
Dictionary of the default parameters of the model.
Dictionary of actual parameters of the model.
Predict on a dataset and return the leaf node assignment (only for tree-based models). :param
Predict class probabilities at each stage of an H2O Model (only GBM models). The output
Predict on a dataset. :param H2OFrame test_data: Data on which to make predictions. :param custom_metric:
Return a Model object. :param key: If None, return all cross-validated models; otherwise return the
Return hidden layer details. :param test_data: Data to create a feature space on :param layer:
Return the frame for the respective weight matrix. :param: matrix_id: an integer, ranging from 0
Return the frame for the respective bias vector. :param: vector_id: an integer, ranging from 0
Generate model metrics for this model on test_data. :param H2OFrame test_data: Data set for which
Retrieve Model Score History. :returns: The score history as an H2OTwoDimTable or a Pandas DataFrame.
Print innards of model, without regards to type.
Pretty print the variable importances, or return them in a list. :param use_pandas: If True,
Retreive the residual degress of freedom if this model has the attribute, or None otherwise.
Return the coefficients which can be applied to the non-standardized data. Note: standardize = True
Return coefficients fitted on the standardized data (requires standardize = True, which is on by
Download the POJO for this model to the directory specified by path. If path is
Download the model in MOJO format. :param path: the path where MOJO file should be
Save an H2O Model as MOJO (Model Object, Optimized) to disk. :param model: The model
Save Model Details of an H2O Model in JSON Format to disk. :param model: The
Create partial dependence plot which gives a graphical depiction of the marginal effect of a
Plot the variable importance for a trained model. :param num_of_features: the number of features shown
Plot a GLM model"s standardized coefficient magnitudes. :param num_of_features: the number of features shown in
Check that y_actual and y_predicted have the same length. :param H2OFrame y_actual: :param H2OFrame y_predicted:
Obtain a list of cross-validation models. :returns: list of H2OModel objects.
Obtain the (out-of-sample) holdout predictions of all cross-validation models on their holdout data. Note that
GBM model demo.
Deep Learning model demo.
GLM model demo.
Execute the demo, echoing commands and pausing for user input. :param body_fn: function that contains
Wait for a key press on the console and return it. Borrowed from http://stackoverflow.com/questions/983354/how-do-i-make-python-to-wait-for-a-pressed-key
Create new H2OTwoDimTable object from list of (key,value) tuples which are a pre-cursor to JSON
Convert to a python 'data frame'.
Print the contents of this table.
r"""CSV reader yielding lists of ``unicode`` strings (PY3: ``str``). Args: stream: Iterable of text (``unicode``,
Start new H2O server on the local machine. :param jar_path: Path to the h2o.jar executable.
Shut down the server by trying to terminate/kill its process. First we attempt to terminate
Return the location of an h2o.jar executable. :param path0: Explicitly given h2o.jar path. If provided,
Produce potential paths for an h2o.jar executable.
Actually start the h2o.jar executable (helper method for `.start()`).
Find location of the java executable (helper for `._launch_server()`). This method is not particularly robust,
Generate names for temporary files (helper method for `._launch_server()`). :param kind: one of "stdout", "stderr"
Check server's output log, and determine its scheme / IP / port (helper method for
Returns a confusion matrix based of H2O's default prediction threshold for a dataset. :param H2OFrame
Retrieve the Hit Ratios. If all are False (default), then return the training metric value.
Equivalent of csv.DictWriter, but allows `delimiter` to be a unicode string on Py2.
Given a string, return an iterator over this string's bytes (as ints).
Analogous to repr(), but will suppress 'u' prefix when repr-ing a unicode string.
Get second token in line >>> docwriter = ApiDocWriter('sphinx') >>> docwriter._get_object_name(" def func(): ") 'func'
Convert uri to absolute filepath Parameters ---------- uri : string URI of python module to
Convert directory path to uri
Parse module defined in *uri*
Parse lines of text for functions and classes
Make autodoc documentation template string for a module Parameters ---------- uri : string python location
Returns True if *matchstr* does not match patterns ``self.package_name`` removed from front of string if
Return module sequence discovered from ``self.package_name`` Parameters ---------- None Returns ------- mods : sequence Sequence
Generate API reST files. Parameters ---------- outdir : string Directory name in which to store
Make a reST API index file from written files Parameters ---------- path : string Filename
Main program. @return: none
Convert this confusion matrix into a 2x2 plain list of values.
Read confusion matrices from the list of sources (?).
Load java messages that can be ignored pickle file into a dict structure g_ok_java_messages. :return:
Add new java messages to ignore from user text file. It first reads in the
Remove java messages from ignored list if users desired it. It first reads in the
Update the g_ok_java_messages dict structure by 1. add the new java ignored messages stored in
Read in a text file that java messages to be ignored and generate a dictionary
Add new key, val (ignored java message) to dict message_dict. Parameters ---------- val : Str
Save the ignored java message dict stored in g_ok_java_messages into a pickle file for future
Write the java ignored messages in g_ok_java_messages into a text file for humans to read.
Parse user inputs and set the corresponing global variables to perform the necessary tasks. Parameters
Illustrate what the various input flags are and the options should be. :return: none
Main program. @return: none
Find all python files in the given directory and all subfolders.
Search the file for any magic incantations. :param filename: file to search :returns: a tuple
Parse file into chunks / objects.
Executed when script is run as-is.
Returns H2OPCA object which implements fit and transform method to be used in sklearn.Pipeline properly.
Transform H2OFrame using a MOJO Pipeline. :param data: Frame to be transformed. :param allow_timestamps: Allows
This function will look at the local directory and pick out files that have the
This function will print out the intermittents onto the screen for casual viewing. It will
Main program. Expect script name plus inputs in the following order: - This script name
Display a short summary of the metrics.
:param thresholds: thresholds parameter must be a list (i.e. [0.01, 0.5, 0.99]). If None, then
:param str metric: The desired metric. :param thresholds: thresholds parameter must be a list (i.e.
Produce the desired metric plot. :param type: the type of metric plot (currently, only ROC
Get the confusion matrix for the specified metric :param metrics: A string (or list of
:param metrics: A string among the metrics listed in :const:`max_metrics`. :returns: the threshold at which
Retrieve the index in this metric's threshold list at which the given threshold is located.
Generate C# declaration file for a schema.
Returns True if a deep water model can be built, or False otherwise.
Grab the console output from Jenkins and save the content into a temp file (g_temp_filename).
This method will remove data from the summary text file and the dictionary file for
Main program. Expect script name plus 7 inputs in the following order: - This script
Entry point for the bindings module. It parses the command line arguments and verifies their
Print the provided string {msg}, but only when the --verbose option is on. :param msg
Helper function that wraps msg to 120-chars page width. All lines (except maybe 1st) will
Return the list of REST API endpoints. The data is enriched with the following fields:
Return endpoints, grouped by the class which handles them.
Return the list of H₂O schemas. :param raw: if True, then the complete response to
Returns a dictionary of H₂O schemas, indexed by their name.
Return the dictionary of H₂O enums, retrieved from data in schemas(). For each entry in
Writes content to the given file. The file's directory will be created if needed. :param
Internal function: retrieve and return json data from the provided endpoint, or die with an
Creates a new Amazon S3 client internally with specified credentials. There are no validations done
Return the resulting H2OFrame containing the result(s) of aggregation(s) of the group by. The number
This is a helper function to order all schemas according to their usage. For example,
Set site domain and name.
Example: opting out for 50 symbol-long, [a-z][A-Z][0-9] string would yield log_2((26+26+50)^50) ~= 334 bit strength.
:param self: bot :param text: text of message :param user_ids: list of user_ids for creating
:param media_id: :param self: bot :param text: text of message :param user_ids: list of user_ids
:param hashtag: hashtag :param self: bot :param text: text of message :param user_ids: list of
:param profile_user_id: profile_id :param self: bot :param text: text of message :param user_ids: list of
Adds the default_data to data and dumps it to a json.
Input: user_ids - a list of user_id Output: dictionary: user_id - stories data. Basically, for
Input - the list of reels jsons They can be aquired by using get_users_reel() or
Comments last user_id's medias
Sleep only if elapsed time since `self.last[key]` < `self.delay[key]`.
Returns login and password stored in `secret.txt`.
Likes last user_id's medias
Likes last medias from hashtag
Filter bot from real users.
Reads list from file. One line - one item. Returns the list if file items.
Gets tweets for a given user, via the Twitter frontend API.
Add a specific enqueue time to the message. :param schedule_time: The scheduled time to enqueue
Complete the message. This removes the message from the queue. :raises: ~azure.servicebus.common.errors.MessageAlreadySettled if the message
Move the message to the Dead Letter queue. The Dead Letter queue is a sub-queue
Abandon the message. This message will be returned to the queue to be reprocessed. :raises:
Defer the message. This message will remain in the queue but must be received specifically
Move the message to the Dead Letter queue. The Dead Letter queue is a sub-queue
Abandon the message. This message will be returned to the queue to be reprocessed. :raises:
Gives the sas-url to download the configurations for vpn-sites in a resource group. :param resource_group_name:
Module depends on the API version: * 2015-06-15: :mod:`v2015_06_15.models<azure.mgmt.compute.v2015_06_15.models>` * 2016-03-30: :mod:`v2016_03_30.models<azure.mgmt.compute.v2016_03_30.models>` * 2016-04-30-preview: :mod:`v2016_04_30_preview.models<azure.mgmt.compute.v2016_04_30_preview.models>`
Instance depends on the API version: * 2016-04-30-preview: :class:`DisksOperations<azure.mgmt.compute.v2016_04_30_preview.operations.DisksOperations>` * 2017-03-30: :class:`DisksOperations<azure.mgmt.compute.v2017_03_30.operations.DisksOperations>` * 2018-04-01: :class:`DisksOperations<azure.mgmt.compute.v2018_04_01.operations.DisksOperations>`
Instance depends on the API version: * 2018-06-01: :class:`GalleriesOperations<azure.mgmt.compute.v2018_06_01.operations.GalleriesOperations>` * 2019-03-01: :class:`GalleriesOperations<azure.mgmt.compute.v2019_03_01.operations.GalleriesOperations>`
Instance depends on the API version: * 2018-06-01: :class:`GalleryImageVersionsOperations<azure.mgmt.compute.v2018_06_01.operations.GalleryImageVersionsOperations>` * 2019-03-01: :class:`GalleryImageVersionsOperations<azure.mgmt.compute.v2019_03_01.operations.GalleryImageVersionsOperations>`
Instance depends on the API version: * 2018-06-01: :class:`GalleryImagesOperations<azure.mgmt.compute.v2018_06_01.operations.GalleryImagesOperations>` * 2019-03-01: :class:`GalleryImagesOperations<azure.mgmt.compute.v2019_03_01.operations.GalleryImagesOperations>`
Instance depends on the API version: * 2016-04-30-preview: :class:`ImagesOperations<azure.mgmt.compute.v2016_04_30_preview.operations.ImagesOperations>` * 2017-03-30: :class:`ImagesOperations<azure.mgmt.compute.v2017_03_30.operations.ImagesOperations>` * 2017-12-01: :class:`ImagesOperations<azure.mgmt.compute.v2017_12_01.operations.ImagesOperations>`
Instance depends on the API version: * 2017-12-01: :class:`LogAnalyticsOperations<azure.mgmt.compute.v2017_12_01.operations.LogAnalyticsOperations>` * 2018-04-01: :class:`LogAnalyticsOperations<azure.mgmt.compute.v2018_04_01.operations.LogAnalyticsOperations>` * 2018-06-01: :class:`LogAnalyticsOperations<azure.mgmt.compute.v2018_06_01.operations.LogAnalyticsOperations>`
Instance depends on the API version: * 2017-03-30: :class:`ResourceSkusOperations<azure.mgmt.compute.v2017_03_30.operations.ResourceSkusOperations>` * 2017-09-01: :class:`ResourceSkusOperations<azure.mgmt.compute.v2017_09_01.operations.ResourceSkusOperations>` * 2019-04-01: :class:`ResourceSkusOperations<azure.mgmt.compute.v2019_04_01.operations.ResourceSkusOperations>`
Instance depends on the API version: * 2015-06-15: :class:`UsageOperations<azure.mgmt.compute.v2015_06_15.operations.UsageOperations>` * 2016-03-30: :class:`UsageOperations<azure.mgmt.compute.v2016_03_30.operations.UsageOperations>` * 2016-04-30-preview: :class:`UsageOperations<azure.mgmt.compute.v2016_04_30_preview.operations.UsageOperations>`
Guess Python Autorest options based on the spec path. Expected path: specification/compute/resource-manager/readme.md
Open handler connection and authenticate session. If the handler is already open, this operation will
Updates a running PowerShell command with more data. :param resource_group_name: The resource group name uniquely
Deletes the managed application definition. :param application_definition_id: The fully qualified ID of the managed application
Creates a new managed application definition. :param application_definition_id: The fully qualified ID of the managed
Module depends on the API version: * 2016-04-01: :mod:`v2016_04_01.models<azure.mgmt.dns.v2016_04_01.models>` * 2018-03-01-preview: :mod:`v2018_03_01_preview.models<azure.mgmt.dns.v2018_03_01_preview.models>` * 2018-05-01: :mod:`v2018_05_01.models<azure.mgmt.dns.v2018_05_01.models>`
Instance depends on the API version: * 2018-05-01: :class:`DnsResourceReferenceOperations<azure.mgmt.dns.v2018_05_01.operations.DnsResourceReferenceOperations>`
Instance depends on the API version: * 2016-04-01: :class:`RecordSetsOperations<azure.mgmt.dns.v2016_04_01.operations.RecordSetsOperations>` * 2018-03-01-preview: :class:`RecordSetsOperations<azure.mgmt.dns.v2018_03_01_preview.operations.RecordSetsOperations>` * 2018-05-01: :class:`RecordSetsOperations<azure.mgmt.dns.v2018_05_01.operations.RecordSetsOperations>`
Instance depends on the API version: * 2016-04-01: :class:`ZonesOperations<azure.mgmt.dns.v2016_04_01.operations.ZonesOperations>` * 2018-03-01-preview: :class:`ZonesOperations<azure.mgmt.dns.v2018_03_01_preview.operations.ZonesOperations>` * 2018-05-01: :class:`ZonesOperations<azure.mgmt.dns.v2018_05_01.operations.ZonesOperations>`
Module depends on the API version: * 2016-10-01: :mod:`v2016_10_01.models<azure.mgmt.keyvault.v2016_10_01.models>` * 2018-02-14: :mod:`v2018_02_14.models<azure.mgmt.keyvault.v2018_02_14.models>`
The Bing Spell Check API lets you perform contextual grammar and spell checking. Bing has
Sets the proxy server host and port for the HTTP CONNECT Tunnelling. host: Address of
Return the target uri for the request.
Create connection for the request.
Sends request to cloud service server and return the response.
Executes script actions on the specified HDInsight cluster. :param resource_group_name: The name of the resource
Module depends on the API version: * 2015-08-01: :mod:`v2015_08_01.models<azure.mgmt.eventhub.v2015_08_01.models>` * 2017-04-01: :mod:`v2017_04_01.models<azure.mgmt.eventhub.v2017_04_01.models>` * 2018-01-01-preview: :mod:`v2018_01_01_preview.models<azure.mgmt.eventhub.v2018_01_01_preview.models>`
Instance depends on the API version: * 2018-01-01-preview: :class:`ClustersOperations<azure.mgmt.eventhub.v2018_01_01_preview.operations.ClustersOperations>`
Instance depends on the API version: * 2018-01-01-preview: :class:`ConfigurationOperations<azure.mgmt.eventhub.v2018_01_01_preview.operations.ConfigurationOperations>`
Instance depends on the API version: * 2015-08-01: :class:`ConsumerGroupsOperations<azure.mgmt.eventhub.v2015_08_01.operations.ConsumerGroupsOperations>` * 2017-04-01: :class:`ConsumerGroupsOperations<azure.mgmt.eventhub.v2017_04_01.operations.ConsumerGroupsOperations>`
Instance depends on the API version: * 2017-04-01: :class:`DisasterRecoveryConfigsOperations<azure.mgmt.eventhub.v2017_04_01.operations.DisasterRecoveryConfigsOperations>`
Instance depends on the API version: * 2015-08-01: :class:`EventHubsOperations<azure.mgmt.eventhub.v2015_08_01.operations.EventHubsOperations>` * 2017-04-01: :class:`EventHubsOperations<azure.mgmt.eventhub.v2017_04_01.operations.EventHubsOperations>`
Instance depends on the API version: * 2015-08-01: :class:`NamespacesOperations<azure.mgmt.eventhub.v2015_08_01.operations.NamespacesOperations>` * 2017-04-01: :class:`NamespacesOperations<azure.mgmt.eventhub.v2017_04_01.operations.NamespacesOperations>` * 2018-01-01-preview: :class:`NamespacesOperations<azure.mgmt.eventhub.v2018_01_01_preview.operations.NamespacesOperations>`
Instance depends on the API version: * 2017-04-01: :class:`RegionsOperations<azure.mgmt.eventhub.v2017_04_01.operations.RegionsOperations>`
Check the availability of a Front Door resource name. :param name: The resource name to
Permanently deletes the specified vault. aka Purges the deleted Azure key vault. :param vault_name: The
Returns the URI for the authorization server if present, otherwise empty string.
Extracts the host authority from the given URI.
Return a CLI profile class. .. versionadded:: 1.1.6 :return: A CLI Profile :rtype: azure.cli.core._profile.Profile :raises:
Return Credentials and default SubscriptionID of current loaded profile of the CLI. Credentials will be
List all the existing alerts, where the results can be selective by passing multiple filter
Summary of alerts with the count each severity. :param groupby: This parameter allows the result
Submit an operation to take a snapshot of face list, large face list, person group
Submit an operation to apply a snapshot to current subscription. For each snapshot, only subscriptions
Gets predictions for a given utterance, in the form of intents and entities. The current
Check Name Availability for global uniqueness. :param location: The location in which uniqueness will be
The Image Detail Search API lets you search on Bing and get back insights about
The Image Trending Search API lets you search on Bing and get back a list
Opens the request. method: the request VERB 'GET', 'POST', etc. url: the url to connect
Sets up the timeout for the request.
Sets the request header.
Gets back all response headers.
Sends the request body.
Gets status of response.
Gets status text of response.
Gets response body as a SAFEARRAY and converts the SAFEARRAY to str.
Sets client certificate for the request.
Sets up the host and the port for the HTTP CONNECT Tunnelling.
Sets up the host and the port for the HTTP CONNECT Tunnelling.
Connects to host and sends the request.
Sends the headers of request.
Sends request body.
Gets the response and generates the _Response object
simplified an id to be more friendly for us people
Adds common part of entry to a given entry body and return the whole xml.
converts a Python name into a serializable name
Serialize bytes into base-64 string. :param str: Object to be serialized. :rtype: str
Deserialize base64 encoded string into string. :param str b64str: response string to be deserialized. :rtype:
Given query face's faceId, to search the similar-looking faces from a faceId array, a face
Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and
Verify whether two faces belong to a same person. Compares a face Id with a
Gets the challenge for the cached URL. :param url: the URL the challenge is cached
Removes the cached challenge for the specified URL. :param url: the URL for which to
Caches the challenge for the specified URL. :param url: the URL for which to cache
Gets information about the specified job. :param job_id: The ID of the job. :type job_id:
Updates the properties of the specified job. This replaces only the job properties specified in
Adds a job to the specified account. The Batch service supports two ways to control
Lists all of the jobs in the specified account. :param job_list_options: Additional parameters for the
Module depends on the API version: * 2015-06-01: :mod:`v2015_06_01.models<azure.mgmt.authorization.v2015_06_01.models>` * 2015-07-01: :mod:`v2015_07_01.models<azure.mgmt.authorization.v2015_07_01.models>` * 2018-01-01-preview: :mod:`v2018_01_01_preview.models<azure.mgmt.authorization.v2018_01_01_preview.models>`
Instance depends on the API version: * 2015-06-01: :class:`ClassicAdministratorsOperations<azure.mgmt.authorization.v2015_06_01.operations.ClassicAdministratorsOperations>`
Instance depends on the API version: * 2018-07-01-preview: :class:`DenyAssignmentsOperations<azure.mgmt.authorization.v2018_07_01_preview.operations.DenyAssignmentsOperations>`
Instance depends on the API version: * 2015-07-01: :class:`PermissionsOperations<azure.mgmt.authorization.v2015_07_01.operations.PermissionsOperations>` * 2018-01-01-preview: :class:`PermissionsOperations<azure.mgmt.authorization.v2018_01_01_preview.operations.PermissionsOperations>`
Instance depends on the API version: * 2015-07-01: :class:`ProviderOperationsMetadataOperations<azure.mgmt.authorization.v2015_07_01.operations.ProviderOperationsMetadataOperations>` * 2018-01-01-preview: :class:`ProviderOperationsMetadataOperations<azure.mgmt.authorization.v2018_01_01_preview.operations.ProviderOperationsMetadataOperations>`
Instance depends on the API version: * 2015-07-01: :class:`RoleAssignmentsOperations<azure.mgmt.authorization.v2015_07_01.operations.RoleAssignmentsOperations>` * 2018-01-01-preview: :class:`RoleAssignmentsOperations<azure.mgmt.authorization.v2018_01_01_preview.operations.RoleAssignmentsOperations>` * 2018-09-01-preview: :class:`RoleAssignmentsOperations<azure.mgmt.authorization.v2018_09_01_preview.operations.RoleAssignmentsOperations>`
Instance depends on the API version: * 2015-07-01: :class:`RoleDefinitionsOperations<azure.mgmt.authorization.v2015_07_01.operations.RoleDefinitionsOperations>` * 2018-01-01-preview: :class:`RoleDefinitionsOperations<azure.mgmt.authorization.v2018_01_01_preview.operations.RoleDefinitionsOperations>`
Creates an xml fragment from the specified data. data: Array of tuples, where first: xml
Parse the HTTPResponse's body and fill all the data into a class of return_type.
Parse the HTTPResponse's body and fill all the data into a class of return_type.
get properties from entry xml
descends through a hierarchy of nodes returning the list of children at the inner most
parse the xml and fill all the data into a class of return_type
Converts an xml fragment into a list of scalar types. The parent xml element contains
Converts an xml fragment into a dictionary. The parent xml element contains a list of
Converts a child of the current dom element to the specified type.
Recursively searches from the parent to the child, gathering all the applicable namespaces along the
Wraps the specified xml in an xml root element with default azure namespaces
Wraps the specified xml in an xml root element with default azure namespaces
Converts xml response to service bus namespace The xml format for namespace:<entry><id>uuid:00000000-0000-0000-0000-000000000000;id=0000000</id><title type="text">myunittests</title><updated>2012-08-22T16:48:10Z</updated><content type="application/xml"> <NamespaceDescription
Converts xml response to service bus region The xml format for region:<entry><id>uuid:157c311f-081f-4b4a-a0ba-a8f990ffd2a3;id=1756759</id><title type="text"></title><updated>2013-04-10T18:25:29Z</updated><content type="application/xml"> <RegionCodeDescription
Converts xml response to service bus namespace availability The xml format:<?xml version="1.0" encoding="utf-8"?><entry xmlns="http://www.w3.org/2005/Atom"> <id>uuid:9fc7c652-1856-47ab-8d74-cd31502ea8e6;id=3683292</id>
Convert odata type http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem To be completed
Converts xml response to service bus metrics objects The xml format for MetricProperties<entry> <id>https://sbgm.windows.net/Metrics(\'listeners.active\')</id> <title/>
<CloudService xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.microsoft.com/windowsazure"> <Label>MyApp3</Label> <Description>My Cloud Service for app3</Description> <GeoRegion>South Central US</GeoRegion> </CloudService>
<Resource xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.microsoft.com/windowsazure"> <IntrinsicSettings> <Plan>Standard</Plan> <Quota> <MaxJobCount>10</MaxJobCount> <MaxRecurrence> <Frequency>Second</Frequency> <Interval>1</Interval> </MaxRecurrence> </Quota> </IntrinsicSettings> </Resource>
Instance depends on the API version: * 2015-01-01: :class:`ManagementLocksOperations<azure.mgmt.resource.locks.v2015_01_01.operations.ManagementLocksOperations>` * 2016-09-01: :class:`ManagementLocksOperations<azure.mgmt.resource.locks.v2016_09_01.operations.ManagementLocksOperations>`
Replaces the runbook draft content. :param resource_group_name: Name of an Azure Resource group. :type resource_group_name:
Get domain name recommendations based on keywords. Get domain name recommendations based on keywords. :param
Asynchronous operation to modify a knowledgebase. :param kb_id: Knowledgebase id. :type kb_id: str :param update_kb:
Retrieve metric data. Gets metric values for a single metric. :param app_id: ID of the
Retrieve metric data. Gets metric values for multiple metrics. :param app_id: ID of the application.
Register a renewable entity for automatic lock renewal. :param renewable: A locked entity that needs
Gets a collection that contains the object IDs of the groups of which the user
Will clone the given PR branch and vuild the package with the given name.
Import data into Redis cache. :param resource_group_name: The name of the resource group. :type resource_group_name:
:param collection: The resource collection type. :type collection: str :param vault: The vault URI. :type
:param collection: The resource collection type. :type collection: str :param id: The resource uri. :type
:param vault: The vault uri. :type vault: str :param name: The key name. :type name:
:param vault: The vault uri. :type vault: str :param name: The secret name. :type name:
:param vault: The vault uri. :type vault: str :param name: The certificate name. :type name:
Formats the KeyVaultIdentifier into a identifier uri based of the specified format string :param fmt:
Parses the specified uri, using _id_format as a format string, and sets the parsed format
Publish runbook draft. :param resource_group_name: Name of an Azure Resource group. :type resource_group_name: str :param
Renew the message lock. This will maintain the lock on the message to ensure it
Move the message to the Dead Letter queue. The Dead Letter queue is a sub-queue
Abandon the message. This message will be returned to the queue to be reprocessed. :raises:
Complete the message. This removes the message from the queue. :raises: ~azure.servicebus.common.errors.MessageAlreadySettled if the message
From a syntax like package_name#submodule, build a package name and complete module name.
Will extract from __code__ the API version. Should be use if you use this is
Replace alterations data. :param word_alterations: Collection of word alterations. :type word_alterations: list[~azure.cognitiveservices.knowledge.qnamaker.models.AlterationsDTO] :param dict custom_headers:
Adds the specified value as a new version of the specified secret resource. Creates a
Returns system properties for the specified storage account. service_name: Name of the storage service account.
Returns the primary and secondary access keys for the specified storage account. service_name: Name of
Regenerates the primary or secondary access key for the specified storage account. service_name: Name of
Creates a new storage account in Windows Azure. service_name: A name for the storage account
Updates the label, the description, and enables or disables the geo-replication status for a storage
Deletes the specified storage account from Windows Azure. service_name: Name of the storage service account.
Checks to see if the specified storage account name is available, or if it has
Retrieves system properties for the specified hosted service. These properties include the service name and
Creates a new hosted service in Windows Azure. service_name: A name for the hosted service
Updates the label and/or the description for a hosted service in Windows Azure. service_name: Name
Deletes the specified hosted service from Windows Azure. service_name: Name of the hosted service. complete:
Returns configuration information, status, and system properties for a deployment. service_name: Name of the hosted
Returns configuration information, status, and system properties for a deployment. service_name: Name of the hosted
Uploads a new service package and creates a new deployment on staging or production. service_name:
Deletes the specified deployment. service_name: Name of the hosted service. deployment_name: The name of the
Initiates a virtual IP swap between the staging and production deployment environments for a service.
Initiates a change to the deployment configuration. service_name: Name of the hosted service. deployment_name: The
Initiates a change in deployment status. service_name: Name of the hosted service. deployment_name: The name
Initiates an upgrade. service_name: Name of the hosted service. deployment_name: The name of the deployment.
Specifies the next upgrade domain to be walked during manual in-place upgrade or configuration change.
Cancels an in progress configuration change (update) or upgrade and returns the deployment to its
Requests a reboot of a role instance that is running in a deployment. service_name: Name
Reinstalls the operating system on instances of web roles or worker roles and initializes the
Checks to see if the specified hosted service name is available, or if it has
Lists all of the service certificates associated with the specified hosted service. service_name: Name of
Returns the public data for the specified X.509 certificate associated with a hosted service. service_name:
Adds a certificate to a hosted service. service_name: Name of the hosted service. data: The
Deletes a service certificate from the certificate store of a hosted service. service_name: Name of
The Get Management Certificate operation retrieves information about the management certificate with the specified thumbprint.
The Add Management Certificate operation adds a certificate to the list of management certificates. Management
The Delete Management Certificate operation deletes a certificate from the list of management certificates. Management
Returns the system properties associated with the specified affinity group. affinity_group_name: The name of the
Creates a new affinity group for the specified subscription. name: A name for the affinity
Updates the label and/or the description for an affinity group for the specified subscription. affinity_group_name:
Deletes an affinity group in the specified subscription. affinity_group_name: The name of the affinity group.
List subscription operations. start_time: Required. An ISO8601 date. end_time: Required. An ISO8601 date. object_id_filter: Optional.
Reserves an IPv4 address for the specified subscription. name: Required. Specifies the name for the
Deletes a reserved IP address from the specified subscription. name: Required. Name of the reserved
Associate an existing reservedIP to a deployment. name: Required. Name of the reserved IP address.
Disassociate an existing reservedIP from the given deployment. name: Required. Name of the reserved IP
Retrieves information about the specified reserved IP address. name: Required. Name of the reserved IP
Retrieves the specified virtual machine. service_name: The name of the service. deployment_name: The name of
Provisions a virtual machine based on the supplied configuration. service_name: Name of the hosted service.
Adds a virtual machine to an existing deployment. service_name: The name of the service. deployment_name:
Updates the specified virtual machine. service_name: The name of the service. deployment_name: The name of
Deletes the specified virtual machine. service_name: The name of the service. deployment_name: The name of
The Capture Role operation captures a virtual machine image to your image gallery. From the
Starts the specified virtual machine. service_name: The name of the service. deployment_name: The name of
Starts the specified virtual machines. service_name: The name of the service. deployment_name: The name of
Restarts the specified virtual machine. service_name: The name of the service. deployment_name: The name of
Shuts down the specified virtual machine. service_name: The name of the service. deployment_name: The name
Shuts down the specified virtual machines. service_name: The name of the service. deployment_name: The name
Adds a DNS server definition to an existing deployment. service_name: The name of the service.
Updates the ip address of a DNS server. service_name: The name of the service. deployment_name:
Deletes a DNS server from a deployment. service_name: The name of the service. deployment_name: The
Lists the versions of a resource extension that are available to add to a Virtual
Replicate a VM image to multiple target locations. This operation is only for publishers. You
Unreplicate a VM image from all regions This operation is only for publishers. You have
Share an already replicated OS image. This operation is only for publishers. You have to
Creates a copy of the operating system virtual hard disk (VHD) and all of the
Creates a VM Image in the image repository that is associated with the specified subscription
Deletes the specified VM Image from the image repository that is associated with the specified
Retrieves a list of the VM Images from the image repository that is associated with
Updates a VM Image in the image repository that is associated with the specified subscription.
Adds an OS image that is currently stored in a storage account in your subscription
Updates an OS image that in your image repository. image_name: The name of the image
Updates metadata elements from a given OS image reference. image_name: The name of the image
Deletes the specified OS image from your image repository. image_name: The name of the image.
Retrieves the specified data disk from a virtual machine. service_name: The name of the service.
Adds a data disk to a virtual machine. service_name: The name of the service. deployment_name:
Updates the specified data disk attached to the specified virtual machine. service_name: The name of
Removes the specified data disk from a virtual machine. service_name: The name of the service.
Adds a disk to the user image repository. The disk can be an OS disk
Updates an existing disk in your image repository. disk_name: The name of the disk to
Deletes the specified data or operating system disk from your image repository. disk_name: The name
Get all smartGroups within the subscription. List all the smartGroups within the specified subscription. .
Summarizes policy states for the resources under the management group. :param management_group_name: Management group name.
This is a temporary patch pending a fix in uAMQP.
Open receiver connection and authenticate session. If the receiver is already open, this operation will
Receive a batch of messages at once. This approach it optimal if you wish to
Renew the session lock. This operation must be performed periodically in order to retain a
Browse messages currently pending in the queue. Peeked messages are not removed from queue, nor
List session IDs. List the Session IDs with pending messages in the queue where the
Create or update a VM scale set. :param resource_group_name: The name of the resource group.
Converts SinglePlacementGroup property to false for a existing virtual machine scale set. :param resource_group_name: The
Find all Autorest generated code in that module prefix. This actually looks for a "models"
Assuming package is azure-mgmt-compute and module name is azure.mgmt.compute.v2018-08-01 will return v2018-08-01
Module depends on the API version: * 2016-02-01: :mod:`v2016_02_01.models<azure.mgmt.resource.resources.v2016_02_01.models>` * 2016-09-01: :mod:`v2016_09_01.models<azure.mgmt.resource.resources.v2016_09_01.models>` * 2017-05-10: :mod:`v2017_05_10.models<azure.mgmt.resource.resources.v2017_05_10.models>`
Instance depends on the API version: * 2016-02-01: :class:`ResourceGroupsOperations<azure.mgmt.resource.resources.v2016_02_01.operations.ResourceGroupsOperations>` * 2016-09-01: :class:`ResourceGroupsOperations<azure.mgmt.resource.resources.v2016_09_01.operations.ResourceGroupsOperations>` * 2017-05-10: :class:`ResourceGroupsOperations<azure.mgmt.resource.resources.v2017_05_10.operations.ResourceGroupsOperations>`
Module depends on the API version: * 2015-10-01-preview: :mod:`v2015_10_01_preview.models<azure.mgmt.resource.policy.v2015_10_01_preview.models>` * 2016-04-01: :mod:`v2016_04_01.models<azure.mgmt.resource.policy.v2016_04_01.models>` * 2016-12-01: :mod:`v2016_12_01.models<azure.mgmt.resource.policy.v2016_12_01.models>`
Instance depends on the API version: * 2015-10-01-preview: :class:`PolicyAssignmentsOperations<azure.mgmt.resource.policy.v2015_10_01_preview.operations.PolicyAssignmentsOperations>` * 2016-04-01: :class:`PolicyAssignmentsOperations<azure.mgmt.resource.policy.v2016_04_01.operations.PolicyAssignmentsOperations>` * 2016-12-01: :class:`PolicyAssignmentsOperations<azure.mgmt.resource.policy.v2016_12_01.operations.PolicyAssignmentsOperations>`
Instance depends on the API version: * 2017-06-01-preview: :class:`PolicySetDefinitionsOperations<azure.mgmt.resource.policy.v2017_06_01_preview.operations.PolicySetDefinitionsOperations>` * 2018-03-01: :class:`PolicySetDefinitionsOperations<azure.mgmt.resource.policy.v2018_03_01.operations.PolicySetDefinitionsOperations>` * 2018-05-01: :class:`PolicySetDefinitionsOperations<azure.mgmt.resource.policy.v2018_05_01.operations.PolicySetDefinitionsOperations>`
Detect profanity and match against custom and shared blacklists. Detects profanity in more than 100
Creates a new key, stores it, then returns key parameters and attributes to the client.
Imports an externally created key, stores it, and returns key parameters and attributes to the
The update key operation changes specified attributes of a stored key and can be applied
Sets a secret in a specified key vault. The SET operation adds a secret to
Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer.
Creates or updates a new storage account. This operation requires the storage/set permission. :param vault_base_url:
Module depends on the API version: * 2015-06-15: :mod:`v2015_06_15.models<azure.mgmt.storage.v2015_06_15.models>` * 2016-01-01: :mod:`v2016_01_01.models<azure.mgmt.storage.v2016_01_01.models>` * 2016-12-01: :mod:`v2016_12_01.models<azure.mgmt.storage.v2016_12_01.models>`
Instance depends on the API version: * 2018-02-01: :class:`BlobContainersOperations<azure.mgmt.storage.v2018_02_01.operations.BlobContainersOperations>` * 2018-03-01-preview: :class:`BlobContainersOperations<azure.mgmt.storage.v2018_03_01_preview.operations.BlobContainersOperations>` * 2018-07-01: :class:`BlobContainersOperations<azure.mgmt.storage.v2018_07_01.operations.BlobContainersOperations>`
Instance depends on the API version: * 2018-07-01: :class:`BlobServicesOperations<azure.mgmt.storage.v2018_07_01.operations.BlobServicesOperations>`
Instance depends on the API version: * 2018-07-01: :class:`ManagementPoliciesOperations<azure.mgmt.storage.v2018_07_01.operations.ManagementPoliciesOperations>`
Instance depends on the API version: * 2017-06-01: :class:`SkusOperations<azure.mgmt.storage.v2017_06_01.operations.SkusOperations>` * 2017-10-01: :class:`SkusOperations<azure.mgmt.storage.v2017_10_01.operations.SkusOperations>` * 2018-02-01: :class:`SkusOperations<azure.mgmt.storage.v2018_02_01.operations.SkusOperations>`
Instance depends on the API version: * 2015-06-15: :class:`StorageAccountsOperations<azure.mgmt.storage.v2015_06_15.operations.StorageAccountsOperations>` * 2016-01-01: :class:`StorageAccountsOperations<azure.mgmt.storage.v2016_01_01.operations.StorageAccountsOperations>` * 2016-12-01: :class:`StorageAccountsOperations<azure.mgmt.storage.v2016_12_01.operations.StorageAccountsOperations>`
Instance depends on the API version: * 2015-06-15: :class:`UsageOperations<azure.mgmt.storage.v2015_06_15.operations.UsageOperations>` * 2016-01-01: :class:`UsageOperations<azure.mgmt.storage.v2016_01_01.operations.UsageOperations>` * 2016-12-01: :class:`UsageOperations<azure.mgmt.storage.v2016_12_01.operations.UsageOperations>`
Instance depends on the API version: * 2018-03-01-preview: :class:`UsagesOperations<azure.mgmt.storage.v2018_03_01_preview.operations.UsagesOperations>` * 2018-07-01: :class:`UsagesOperations<azure.mgmt.storage.v2018_07_01.operations.UsagesOperations>`
Module depends on the API version: * 2016-06-01: :mod:`v2016_06_01.models<azure.mgmt.resource.subscriptions.v2016_06_01.models>`
Create a Service Bus client from a connection string. :param conn_str: The connection string. :type
Get an async client for a subscription entity. :param topic_name: The name of the topic.
Get an async client for all subscription entities in the topic. :param topic_name: The topic
Send one or more messages to the current entity. This operation will open a single-use
Get a Sender for the Service Bus endpoint. A Sender represents a single open connection
Get a Receiver for the Service Bus endpoint. A Receiver represents a single open connection
Get a Receiver for the deadletter endpoint of the entity. A Receiver represents a single
Extracts request id from response header.
Returns a new service which will process requests with the specified filter. Filtering operations can
Sets the proxy server host and port for the HTTP CONNECT Tunnelling. host: Address of
Performs a GET request and returns the response. path: Path to the resource. Ex: '/<subscription-id>/services/hostedservices/<service-name>'
Performs a PUT request and returns the response. path: Path to the resource. Ex: '/<subscription-id>/services/hostedservices/<service-name>'
Waits for an asynchronous operation to complete. This calls get_operation_status in a loop and returns
Returns the status of the specified operation. After calling an asynchronous operation, you can call
Add additional headers for management.
Assumed called on Travis, to prepare a package to be deployed This method prints on
List certificates in a specified key vault. The GetCertificates operation returns the set of certificates
Get list of available service bus regions.
List the service bus namespaces defined on the account.
Get details about a specific namespace. name: Name of the service bus namespace.
Create a new service bus namespace. name: Name of the service bus namespace to create.
Delete a service bus namespace. name: Name of the service bus namespace to delete.
Checks to see if the specified service bus namespace is available, or if it has
Enumerates the queues in the service namespace. name: Name of the service bus namespace.
Retrieves the topics in the service namespace. name: Name of the service bus namespace.
Retrieves the notification hubs in the service namespace. name: Name of the service bus namespace.
Retrieves the relays in the service namespace. name: Name of the service bus namespace.
Retrieves the list of supported metrics for this namespace and queue name: Name of the
Retrieves the list of supported metrics for this namespace and topic name: Name of the
Retrieves the list of supported metrics for this namespace and topic name: Name of the
Retrieves the list of supported metrics for this namespace and relay name: Name of the
Retrieves the list of supported metrics for this namespace and queue name: Name of the
Retrieves the list of supported metrics for this namespace and topic name: Name of the
Retrieves the list of supported metrics for this namespace and topic name: Name of the
Retrieves the list of supported metrics for this namespace and relay name: Name of the
This operation gets rollup data for Service Bus metrics queue. Rollup data includes the time
This operation gets rollup data for Service Bus metrics topic. Rollup data includes the time
This operation gets rollup data for Service Bus metrics notification hub. Rollup data includes the
This operation gets rollup data for Service Bus metrics relay. Rollup data includes the time
Create a virtual environment in a directory.
Create a venv with these packages in a temp dir and yielf the env. packages
This operation generates a thumbnail image with the user-specified width and height. By default, the
Create a new Azure SQL Database server. admin_login: The administrator login name for the new
Reset the administrator password for a server. server_name: Name of the server to change the
Deletes an Azure SQL Database server (including all its databases). server_name: Name of the server
Gets quotas for an Azure SQL Database Server. server_name: Name of the server.
Gets the event logs for an Azure SQL Database Server. server_name: Name of the server
Creates an Azure SQL Database server firewall rule. server_name: Name of the server to set
Update a firewall rule for an Azure SQL Database server. server_name: Name of the server
Deletes an Azure SQL Database server firewall rule. server_name: Name of the server with the
Retrieves the set of firewall rules for an Azure SQL Database Server. server_name: Name of
Gets the service level objectives for an Azure SQL Database server. server_name: Name of the
Creates a new Azure SQL Database. server_name: Name of the server to contain the new
Updates existing database details. server_name: Name of the server to contain the new database. name:
Deletes an Azure SQL Database. server_name: Name of the server where the database is located.
List the SQL databases defined on the specified server name
Visual Search API lets you discover insights about an image such as visually similar images,
Gets all legal agreements that user needs to accept before purchasing a domain. Gets all
Open handler connection and authenticate session. If the handler is already open, this operation will
Close down the handler connection. If the handler has already closed, this operation will do
Open receiver connection and authenticate session. If the receiver is already open, this operation will
Close down the receiver connection. If the receiver has already closed, this operation will do
Get the session state. Returns None if no state has been set. :rtype: str Example:
Set the session state. :param state: The state value. :type state: str or bytes or
Receive messages that have previously been deferred. This operation can only receive deferred messages from
Merges two `Reservation`s. Merge the specified `Reservation`s into a new `Reservation`. The two `Reservation`s being
Verifies that the challenge is a Bearer challenge and returns the key=value pairs.
Purges data in an Log Analytics workspace by a set of user-defined filters. :param resource_group_name:
Handle connection and service errors. Called internally when an event has failed to send so
Returns a new service which will process requests with the specified filter. Filtering operations can
Creates a new queue. Once created, this queue's resource manifest is immutable. queue_name: Name of
Deletes an existing queue. This operation will also remove all associated state including messages in
Retrieves an existing queue. queue_name: Name of the queue.
Enumerates the queues in the service namespace.
Creates a new topic. Once created, this topic resource manifest is immutable. topic_name: Name of
Retrieves the description for the specified topic. topic_name: Name of the topic.
Creates a new rule. Once created, this rule's resource manifest is immutable. topic_name: Name of
Retrieves the description for the specified rule. topic_name: Name of the topic. subscription_name: Name of
Retrieves the rules that exist under the specified subscription. topic_name: Name of the topic. subscription_name:
Creates a new subscription. Once created, this subscription resource manifest is immutable. topic_name: Name of
Gets an existing subscription. topic_name: Name of the topic. subscription_name: Name of the subscription.
Retrieves the subscriptions in the specified topic. topic_name: Name of the topic.
Enqueues a message into the specified topic. The limit to the number of messages which
This operation is used to atomically retrieve and lock a message for processing. The message
Unlock a message for processing by other receivers on a given subscription. This operation deletes
Sends a batch of messages into the specified queue. The limit to the number of
Automically retrieves and locks a message from a queue for processing. The message is guaranteed
Unlocks a message for processing by other receivers on a given queue. This operation deletes
Receive a message from a queue for processing. queue_name: Name of the queue. peek_lock: Optional.
Receive a message from a subscription for processing. topic_name: Name of the topic. subscription_name: Name
Creates a new Event Hub. hub_name: Name of event hub. hub: Optional. Event hub properties.
Updates an Event Hub. hub_name: Name of event hub. hub: Optional. Event hub properties. Instance
Retrieves an existing event hub. hub_name: Name of the event hub.
Sends a new message event to an Event Hub.
Add additional headers for Service Bus.
return the signed string with token.
Check if token expires or not.
Returns token for the request. host: the Service Bus service request. path: the Service Bus
pulls the query string out of the URI and moves it into the query portion
Reset Service Principal Profile of a managed cluster. Update the service principal Profile for a
Deletes itself if find queue name or topic name and subscription name.
Unlocks itself if find queue name or topic name and subscription name.
Renew lock on itself if find queue name or topic name and subscription name.
add addtional headers to request for message request.
return the current message as expected by batch body format
Gets the health of a Service Fabric cluster. Use EventsHealthStateFilter to filter the collection of
Gets the health of a Service Fabric cluster using the specified policy. Use EventsHealthStateFilter to
Removes or unregisters a Service Fabric application type from the cluster. This operation can only
Gets a list of repair tasks matching the given filters. This API supports the Service
Submits a property batch. Submits a batch of property operations. Either all or none of
Module depends on the API version: * 2015-12-01: :mod:`v2015_12_01.models<azure.mgmt.resource.features.v2015_12_01.models>`
Instance depends on the API version: * 2015-12-01: :class:`FeaturesOperations<azure.mgmt.resource.features.v2015_12_01.operations.FeaturesOperations>`
Simple error handler for azure.
Start capturing network packets for the site. Start capturing network packets for the site. :param
Get the difference in configuration settings between two web app slots. Get the difference in
Swaps two deployment slots of an app. Swaps two deployment slots of an app. :param
Execute OData query. Executes an OData query for events. :param app_id: ID of the application.
Add a face to a large face list. The input face is specified as an
Reset auth_attempted on redirects.
Takes the response authenticates and resends if neccissary :return: The final response to the authenticated
Creates Migration configuration and starts migration of entities from Standard to Premium namespace. :param resource_group_name:
Publishes a batch of events to an Azure Event Grid topic. :param topic_hostname: The host
Moves resources from one resource group to another resource group. The resources to move must
Module depends on the API version: * 2017-07-01: :mod:`v2017_07_01.models<azure.mgmt.containerservice.v2017_07_01.models>` * 2018-03-31: :mod:`v2018_03_31.models<azure.mgmt.containerservice.v2018_03_31.models>` * 2018-08-01-preview: :mod:`v2018_08_01_preview.models<azure.mgmt.containerservice.v2018_08_01_preview.models>`
Instance depends on the API version: * 2019-02-01: :class:`AgentPoolsOperations<azure.mgmt.containerservice.v2019_02_01.operations.AgentPoolsOperations>`
Instance depends on the API version: * 2017-07-01: :class:`ContainerServicesOperations<azure.mgmt.containerservice.v2017_07_01.operations.ContainerServicesOperations>`
Instance depends on the API version: * 2018-09-30-preview: :class:`OpenShiftManagedClustersOperations<azure.mgmt.containerservice.v2018_09_30_preview.operations.OpenShiftManagedClustersOperations>`
Instance depends on the API version: * 2018-03-31: :class:`Operations<azure.mgmt.containerservice.v2018_03_31.operations.Operations>` * 2018-08-01-preview: :class:`Operations<azure.mgmt.containerservice.v2018_08_01_preview.operations.Operations>` * 2019-02-01: :class:`Operations<azure.mgmt.containerservice.v2019_02_01.operations.Operations>`
Define a new default profile.
Queries policy tracked resources under the management group. :param management_group_name: Management group name. :type management_group_name:
Send a message and blocks until acknowledgement is received or the operation fails. :param message:
Queue a message to be sent later. This operation should be followed up with send_pending_messages.
Send one or more messages to be enqueued at a specific time. Returns a list
Create a queue entity. :param queue_name: The name of the new queue. :type queue_name: str
Delete a queue entity. :param queue_name: The name of the queue to delete. :type queue_name:
Create a topic entity. :param topic_name: The name of the new topic. :type topic_name: str
Delete a topic entity. :param topic_name: The name of the topic to delete. :type topic_name:
Create a subscription entity. :param topic_name: The name of the topic under which to create
Create a Client from a Service Bus connection string. :param conn_str: The connection string. :type
Perform an operation to update the properties of the entity. :returns: The properties of the
Whether the receivers lock on a particular session has expired. :rtype: bool
Queue a message to be sent later. This operation should be followed up with send_pending_messages.
Register a renewable entity for automatic lock renewal. :param renewable: A locked entity that needs
Creates a session for a node. :param resource_group_name: The resource group name uniquely identifies the
Creates an Azure subscription. :param billing_account_name: The name of the commerce root billing account. :type
Return a tuple: (latest release, latest stable) If there are different, it means the latest
Export logs that show Api requests made by this subscription in the given time window
Scan output for exceptions If there is an output from an add task collection call
Adds a chunk of tasks to the job Retry chunk if body exceeds the maximum
Main method for worker to run Pops a chunk of tasks off the collection of
Will build the actual config for Jinja2, based on SDK config.
Module depends on the API version: * 2016-09-01: :mod:`v2016_09_01.models<azure.mgmt.resource.links.v2016_09_01.models>`
Resets the user password on an environment This operation can take a while to complete.
Starts an environment by starting all resources inside the environment. This operation can take a
Module depends on the API version: * 2017-03-01: :mod:`v2017_03_01.models<azure.mgmt.containerregistry.v2017_03_01.models>` * 2017-10-01: :mod:`v2017_10_01.models<azure.mgmt.containerregistry.v2017_10_01.models>` * 2018-02-01-preview: :mod:`v2018_02_01_preview.models<azure.mgmt.containerregistry.v2018_02_01_preview.models>`
Instance depends on the API version: * 2018-02-01-preview: :class:`BuildStepsOperations<azure.mgmt.containerregistry.v2018_02_01_preview.operations.BuildStepsOperations>`
Instance depends on the API version: * 2018-02-01-preview: :class:`BuildTasksOperations<azure.mgmt.containerregistry.v2018_02_01_preview.operations.BuildTasksOperations>`
Instance depends on the API version: * 2018-02-01-preview: :class:`BuildsOperations<azure.mgmt.containerregistry.v2018_02_01_preview.operations.BuildsOperations>`
Instance depends on the API version: * 2017-03-01: :class:`Operations<azure.mgmt.containerregistry.v2017_03_01.operations.Operations>` * 2017-10-01: :class:`Operations<azure.mgmt.containerregistry.v2017_10_01.operations.Operations>` * 2018-02-01-preview: :class:`Operations<azure.mgmt.containerregistry.v2018_02_01_preview.operations.Operations>`
Instance depends on the API version: * 2017-10-01: :class:`ReplicationsOperations<azure.mgmt.containerregistry.v2017_10_01.operations.ReplicationsOperations>` * 2018-02-01-preview: :class:`ReplicationsOperations<azure.mgmt.containerregistry.v2018_02_01_preview.operations.ReplicationsOperations>` * 2018-09-01: :class:`ReplicationsOperations<azure.mgmt.containerregistry.v2018_09_01.operations.ReplicationsOperations>`
Instance depends on the API version: * 2018-09-01: :class:`RunsOperations<azure.mgmt.containerregistry.v2018_09_01.operations.RunsOperations>`
Instance depends on the API version: * 2018-09-01: :class:`TasksOperations<azure.mgmt.containerregistry.v2018_09_01.operations.TasksOperations>`
Instance depends on the API version: * 2017-10-01: :class:`WebhooksOperations<azure.mgmt.containerregistry.v2017_10_01.operations.WebhooksOperations>` * 2018-02-01-preview: :class:`WebhooksOperations<azure.mgmt.containerregistry.v2018_02_01_preview.operations.WebhooksOperations>` * 2018-09-01: :class:`WebhooksOperations<azure.mgmt.containerregistry.v2018_09_01.operations.WebhooksOperations>`
Create message from response. response: response from Service Bus cloud server. service_instance: the Service Bus
Converts entry element to rule object. The format of xml for rule:<entry xmlns='http://www.w3.org/2005/Atom'><content type='application/xml'><RuleDescription xmlns:i="http://www.w3.org/2001/XMLSchema-instance"
Converts entry element to queue object. The format of xml response for queue:<QueueDescription xmlns=\"http://schemas.microsoft.com/netservices/2010/10/servicebus/connect\"> <MaxSizeInBytes>10000</MaxSizeInBytes>
Converts entry element to topic The xml format for topic:<entry xmlns='http://www.w3.org/2005/Atom'> <content type='application/xml'> <TopicDescription xmlns:i="http://www.w3.org/2001/XMLSchema-instance"
Converts entry element to subscription The xml format for subscription:<entry xmlns='http://www.w3.org/2005/Atom'> <content type='application/xml'> <SubscriptionDescription xmlns:i="http://www.w3.org/2001/XMLSchema-instance"
Creates a new certificate inside the specified account. :param resource_group_name: The name of the resource
Deletes the specified certificate. :param resource_group_name: The name of the resource group that contains the
Main method
Instantiate a client from kwargs, removing the subscription_id/tenant_id argument if unsupported.
Return a tuple of the resource (used to get the right access token), and the
Return a SDK client initialized with current CLI credentials, CLI default subscription and CLI default
Return a SDK client initialized with a JSON auth dict. The easiest way to obtain
Return a SDK client initialized with auth file. The easiest way to obtain this file
Parse the HTTPResponse's body and fill all the data into a class of return_type.
resp_body is the XML we received resp_type is a string, such as Containers, return_type is
get properties from element tree element
parse the xml and fill all the data into a class of return_type
Converts a child of the current dom element to the specified type.
Checks whether a domain name in the cloudapp.azure.com zone is available for use. :param location:
Instance depends on the API version: * 2018-11-01: :class:`DdosCustomPoliciesOperations<azure.mgmt.network.v2018_11_01.operations.DdosCustomPoliciesOperations>` * 2018-12-01: :class:`DdosCustomPoliciesOperations<azure.mgmt.network.v2018_12_01.operations.DdosCustomPoliciesOperations>` * 2019-02-01: :class:`DdosCustomPoliciesOperations<azure.mgmt.network.v2019_02_01.operations.DdosCustomPoliciesOperations>`
Instance depends on the API version: * 2018-08-01: :class:`ExpressRouteConnectionsOperations<azure.mgmt.network.v2018_08_01.operations.ExpressRouteConnectionsOperations>` * 2018-10-01: :class:`ExpressRouteConnectionsOperations<azure.mgmt.network.v2018_10_01.operations.ExpressRouteConnectionsOperations>` * 2018-11-01: :class:`ExpressRouteConnectionsOperations<azure.mgmt.network.v2018_11_01.operations.ExpressRouteConnectionsOperations>`
Instance depends on the API version: * 2018-02-01: :class:`ExpressRouteCrossConnectionPeeringsOperations<azure.mgmt.network.v2018_02_01.operations.ExpressRouteCrossConnectionPeeringsOperations>` * 2018-04-01: :class:`ExpressRouteCrossConnectionPeeringsOperations<azure.mgmt.network.v2018_04_01.operations.ExpressRouteCrossConnectionPeeringsOperations>` * 2018-06-01: :class:`ExpressRouteCrossConnectionPeeringsOperations<azure.mgmt.network.v2018_06_01.operations.ExpressRouteCrossConnectionPeeringsOperations>`
Instance depends on the API version: * 2018-04-01: :class:`HubVirtualNetworkConnectionsOperations<azure.mgmt.network.v2018_04_01.operations.HubVirtualNetworkConnectionsOperations>` * 2018-06-01: :class:`HubVirtualNetworkConnectionsOperations<azure.mgmt.network.v2018_06_01.operations.HubVirtualNetworkConnectionsOperations>` * 2018-07-01: :class:`HubVirtualNetworkConnectionsOperations<azure.mgmt.network.v2018_07_01.operations.HubVirtualNetworkConnectionsOperations>`
Instance depends on the API version: * 2019-02-01: :class:`NatGatewaysOperations<azure.mgmt.network.v2019_02_01.operations.NatGatewaysOperations>`
Instance depends on the API version: * 2016-09-01: :class:`NetworkWatchersOperations<azure.mgmt.network.v2016_09_01.operations.NetworkWatchersOperations>` * 2016-12-01: :class:`NetworkWatchersOperations<azure.mgmt.network.v2016_12_01.operations.NetworkWatchersOperations>` * 2017-03-01: :class:`NetworkWatchersOperations<azure.mgmt.network.v2017_03_01.operations.NetworkWatchersOperations>`
Instance depends on the API version: * 2018-12-01: :class:`PeerExpressRouteCircuitConnectionsOperations<azure.mgmt.network.v2018_12_01.operations.PeerExpressRouteCircuitConnectionsOperations>` * 2019-02-01: :class:`PeerExpressRouteCircuitConnectionsOperations<azure.mgmt.network.v2019_02_01.operations.PeerExpressRouteCircuitConnectionsOperations>`
Instance depends on the API version: * 2018-07-01: :class:`ServiceEndpointPoliciesOperations<azure.mgmt.network.v2018_07_01.operations.ServiceEndpointPoliciesOperations>` * 2018-08-01: :class:`ServiceEndpointPoliciesOperations<azure.mgmt.network.v2018_08_01.operations.ServiceEndpointPoliciesOperations>` * 2018-10-01: :class:`ServiceEndpointPoliciesOperations<azure.mgmt.network.v2018_10_01.operations.ServiceEndpointPoliciesOperations>`
Instance depends on the API version: * 2018-12-01: :class:`WebApplicationFirewallPoliciesOperations<azure.mgmt.network.v2018_12_01.operations.WebApplicationFirewallPoliciesOperations>` * 2019-02-01: :class:`WebApplicationFirewallPoliciesOperations<azure.mgmt.network.v2019_02_01.operations.WebApplicationFirewallPoliciesOperations>`
Delete the Provisioning Service Certificate. Deletes the specified certificate assosciated with the Provisioning Service. :param
List all entities (Management Groups, Subscriptions, etc.) for the authenticated user. :param skiptoken: Page continuation
A job Id will be returned for the content posted on this endpoint. Once the
Get a client for a queue entity. :param queue_name: The name of the queue. :type
Get clients for all queue entities in the namespace. :rtype: list[~azure.servicebus.servicebus_client.QueueClient] :raises: ~azure.servicebus.common.errors.ServiceBusConnectionError if the
Get a client for a topic entity. :param topic_name: The name of the topic. :type
Get a client for all topic entities in the namespace. :rtype: list[~azure.servicebus.servicebus_client.TopicClient] :raises: ~azure.servicebus.common.errors.ServiceBusConnectionError if
Browse messages currently pending in the queue. Peeked messages are not removed from queue, nor
List session IDs. List the Session IDs with pending messages in the queue where the
Receive messages by sequence number that have been previously deferred. When receiving deferred messages from
Settle messages that have been previously deferred. :param settlement: How the messages are to be
List the web sites defined on this webspace. webspace_name: The name of the webspace. website_name:
Create a website. webspace_name: The name of the webspace. website_name: The name of the website.
Delete a website. webspace_name: The name of the webspace. website_name: The name of the website.
Update a web site. webspace_name: The name of the webspace. website_name: The name of the
Restart a web site. webspace_name: The name of the webspace. website_name: The name of the
Get historical usage metrics. webspace_name: The name of the webspace. website_name: The name of the
Get metric definitions of metrics available of this web site. webspace_name: The name of the
Get a site's publish profile as a string webspace_name: The name of the webspace. website_name:
Get a site's publish profile as an object webspace_name: The name of the webspace. website_name:
Adds authorization header, and encrypts and signs the request if supported on the specific request.
Removes protection from the specified response :param request: response from the key vault service :return:
Determines if the the current HttpMessageSecurity object supports the message protection protocol. :return: True if
Updates the policies for the specified container registry. :param resource_group_name: The name of the resource
The Create Cloud Service request creates a new cloud service. When job collections are created,
The Get Cloud Service operation gets all the resources (job collections) in the cloud service.
The Get Cloud Service operation gets all the resources (job collections) in the cloud service.
The Check Name Availability operation checks if a new job collection with the given name
The Create Job Collection request is specified as follows. Replace <subscription-id> with your subscription ID,
The Delete Job Collection request is specified as follows. Replace <subscription-id> with your subscription ID,
The Get Job Collection operation gets the details of a job collection cloud_service_id: The cloud
The Create Job request creates a new job. cloud_service_id: The cloud service id job_collection_id: Name
The Delete Job request creates a new job. cloud_service_id: The cloud service id job_collection_id: Name
The Get Job operation gets the details (including the current job status) of the specified
Completes the restore operation on a managed database. :param location_name: The name of the region
Module depends on the API version: * 2016-10-01: :mod:`v2016_10_01.models<azure.keyvault.v2016_10_01.models>` * 7.0: :mod:`v7_0.models<azure.keyvault.v7_0.models>`
Get the versioned client implementation corresponding to the current profile. :return: The versioned client implementation.
Creates the client implementation corresponding to the specifeid api_version. :param api_version: :return:
Send one or more messages to be enqueued at a specific time. Returns a list
Cancel one or more messages that have previsouly been scheduled and are still pending. :param
Wait until all pending messages have been sent. :returns: A list of the send results
Reconnect the handler. If the handler was disconnected from the service with a retryable error
Send a message and blocks until acknowledgement is received or the operation fails. If neither
Writes a certificate file to the specified location. This can then be used to instantiate
The Web Search API lets you send a search query to Bing and get back
The Custom Image Search API lets you send an image search query to Bing and
Attempts to extract available streams. Returns a :class:`dict` containing the streams, where the key is
Store the cookies from ``http`` in the plugin cache until they expire. The cookies can
Load any stored cookies for the plugin that have not expired. :return: list of the
Removes all of the saved cookies for this Plugin. To filter the cookies that are
Return a shell-escaped version of the string *s*. Backported from Python 3.3 standard library module
Returns the width of the string it would be when displayed.
Drops Characters by unicode not by bytes.
Clears out the previous line and prints a new one.
Formats the file size into a human readable format.
Formats elapsed seconds into a human readable format.
Creates a status line with appropriate size.
Progress an iterator and updates a pretty status line to the terminal. The status line
yield the segment number and when it will be available There are two cases for
Segments are yielded when they are available Segments appear on a time line, for dynamic
od.clear() -> None. Remove all items from od.
od.pop(k[,d]) -> v, remove specified key and return the corresponding value. If key is not
OD.fromkeys(S[, v]) -> New ordered dictionary with keys from S and values equal to v
Locates unique identifier ("room_id") for the room. Returns the room_id as a string, or None
Shuts down the thread.
Pauses the thread for a specified time. Returns False if interrupted by another thread and
Shuts down the thread.
Adds a segment to the download pool and write queue.
Puts a value into a queue but aborts if this thread is closed.
Parses a HDS manifest and returns its substreams. :param url: The URL to the manifest.
Returns any parameters needed for Akamai HD player verification. Algorithm originally documented by KSV, source:
Given an HTTP response from the sessino endpoint, extract the nonce, so we can "sign"
Find the Video Packet ID in the HTML for the provided URL :param url: URL
Create session using BBC ID. See https://www.bbc.co.uk/usingthebbc/account/ :param ptrt_url: The snapback URL to redirect to
Remove the PKCS#7 padding
Attempts to parse a variant playlist and return its streams. :param url: The URL of
Changes google.com to www.google.com
Wrapper around json.loads. Wraps errors in custom exception with a snippet of the data in
Wrapper around ElementTree.fromstring with some extras. Provides these extra features: - Handles incorrectly encoded XML
Parses a query string into a dict. Unlike parse_qs and parse_qsl, duplicate keys are not
Search for a key in a nested dict, or list of nested dicts, and return
Get the live stream in a particular language :param lang: :param path: :return:
Find the streams for OlympicChannel :return:
Returns LOW priority if the URL is not prefixed with hls:// but ends with .m3u8
Spawn the process defined in `cmd` parameters is converted to options the short and long
Brute force regex based HTML tag parser. This is a rough-and-ready searcher to find HTML
Attempt to parse a DASH manifest file and return its streams :param session: Streamlink session
Determine which Unicode encoding the JSON text sample is encoded with RFC4627 (http://www.ietf.org/rfc/rfc4627.txt) suggests that
Parses JSON from a response.
Parses XML from a response.
Parses a semi-colon delimited list of cookies. Example: foo=bar;baz=qux
Parses a semi-colon delimited list of headers. Example: foo=bar;baz=qux
Parses a semi-colon delimited list of query parameters. Example: foo=bar;baz=qux
Finds the streams from tvcatchup.com.
Randomly generated deviceId. :return:
Return the message for this LogRecord. Return the message for this LogRecord after merging any
A factory method which can be overridden in subclasses to create specialized LogRecords.
Wraps a file, described in request, in a Response object. :param request: The PreparedRequest` being
Get the info about the content, based on the ID :param content_id: :return:
Find the streams for vk.com :return:
Find the streams for web.tv :return:
Attempt a login to LiveEdu.tv
Get the config object from the page source and call the API to get the
Loads a plugin from the same directory as the calling plugin. The path used is
Take the scheme from the current URL and applies it to the target URL if
Compare two URLs and return True if they are equal, some parts of the URLs
Join extra paths to a URL, does not join absolute paths :param base: the base
Update or remove keys from a query string in a URL :param url: URL to
Find all the streams for the ITV url :return: Mapping of quality to stream
Reads FLV tags from fd or buf and returns them with adjusted timestamps.
Find all the arguments required by name :param name: name of the argument the find
Checks if file already exists and ask the user if it should be overwritten if
Decides where to write the stream. Depending on arguments it can be one of these:
Creates a HTTP server listening on a given host and port. If host is empty,
Repeatedly accept HTTP connections on a server. Forever if the serving externally, or while a
Continuously output the stream over HTTP.
Prepares a filename to be passed to the player.
Opens a stream and reads 8192 bytes from it. This is useful to check if
Open stream, create output and finally write the stream to output.
Reads data from stream and then writes it to the output.
Decides what to do with the selected stream. Depending on arguments it can be one
Fetches streams using correct parameters.
Attempts to fetch streams repeatedly until some are returned or limit hit.
Returns the real stream name of a synonym.
Formats a dict of streams. Filters out synonyms and displays them next to the stream
The URL handler. Attempts to resolve the URL to a plugin and then attempts to
Outputs a list of all plugins Streamlink has loaded.
Opens a web browser to allow the user to grant Streamlink access to their Twitch
Attempts to load plugins from a list of directories.
Parses arguments.
Console setup.
Sets the global HTTP settings, such as proxy and headers.
Loads any additional plugins.
Sets Streamlink options.
Sets Streamlink plugin options.
Sets Streamlink plugin options.
Show current installed versions
Try to find a stream_id
Fallback if no stream_id was found before
Sets general options used by plugins and streams originating from this session object. :param key:
Returns current value of specified option. :param key: key of the option
Sets plugin specific options used by plugins originating from this session object. :param plugin: name
Returns current value of plugin specific option. :param plugin: name of the plugin :param key:
Attempts to find a plugin that can use this URL. The default protocol (http) will
Attempts to find a plugin and extract streams from the *url*. *params* are passed to
Attempt to load plugins from the path specified. :param path: full path to a directory
Get the VOD data path and the default VOD ID :return:
converts a timestamp to seconds - hours:minutes:seconds to seconds - minutes:seconds to seconds - 11h22m33s
Checks value for minimum length using len().
Checks if the string value starts with another string.
Checks if the string value ends with another string.
Checks if the string value contains another string.
Get item from value (value[item]). If the item is not found, return the default. Handles
Get a named attribute from an object. When a default argument is given, it is
Filters out unwanted items using the specified function. Supports both dicts and sequences, key/value pairs
Apply function to each value inside the sequence or dict. Supports both dicts and sequences,
Parses an URL and validates its attributes.
Find a XML element via xpath.
Find a list of XML elements via xpath.
Finds playlist info (type, id) in HTTP response. :param response: Response object. :returns: Dictionary with
Finds embedded player url in HTTP response. :param response: Response object. :returns: Player url (str).
Find the VOD video url :return: video url
Get the live stream in a particular language :param match: :return:
Find the streams for euronews :return:
Attempts to parse a M3U8 playlist from a string of data. If specified, *base_uri* is
Check if the current player supports adding a title :param cmd: command to test :return:
Login to the schoolism account and return the users account :param email: (str) email for
Get the livestream videoid from a username. https://developer.dailymotion.com/tools/apiexplorer#/user/videos/list
Search for the episode with the requested experience Id :return:
Get the sources for a given experience_id, which is tied to a specific language :param
Get the RSA key for the user and encrypt the users password :param email: steam
Logs in to Steam
Returns the stream_id contained in the HTML.
Returns a nested list of different stream options. Each entry in the list will contain
login and update cached cookies
Creates a key-function mapping. The return value from the function should be either - A
Takes ISO 8601 format(string) and converts into a utc datetime(naive)
Makes a call against the api. :param entrypoint: API method to call. :param params: parameters
Starts a session against Crunchyroll's server. Is recommended that you call this method before making
Authenticates the session to be able to access restricted data from the server (e.g. premium
Returns the data for a certain media item. :param media_id: id that identifies the media
Creates a new CrunchyrollAPI object, initiates it's session and tries to authenticate it either by
Compress a byte string. Args: string (bytes): The input data. mode (int, optional): The compression
Return the specified standard input, output or errors stream as a 'raw' buffer object suitable
Show character in readable format
Show string or char.
Read n bits from the stream and return as an integer. Produces zero bits beyond
Peek an n bit integer from the stream without updating the pointer. It is not
Read n bytes from the stream on a byte boundary.
The value used for processing. Can be a tuple. with optional extra bits
Long explanation of the value from the numeric value with optional extra bits Used by
Find which symbol index matches the given data (from peek, as a number) and return
Find which symbol index matches the given data (from peek, as a number) and return
Store decodeTable, and compute lengthTable, minLength, maxLength from encodings.
Given the bit pattern lengths for symbols given in lengthTable, set decodeTable, minLength, maxLength
Long explanation of the value from the numeric value This is a default routine. You
Show all words of the code in a nice format.
Read symbol from stream. Returns symbol, length.
Read symbol and extrabits from stream. Returns symbol length, symbol, extraBits, extra >>> olleke.pos =
Expanded version of Code.explanation supporting extra bits. If you don't supply extra, it is not
Override if you don't define value0 and extraTable
Give the range of possible values in a tuple Useful for mnemonic and explanation
Returns ('Simple', #codewords) or ('Complex', HSKIP)
Give count and value.
Give relevant values for computations: (insertSymbol, copySymbol, dist0flag)
Make a nice mnemonic
Indicate how many extra bits are needed to interpret symbol >>> d = DistanceAlphabet('D', NPOSTFIX=2,
Decode value of symbol together with the extra bits. >>> d = DistanceAlphabet('D', NPOSTFIX=2, NDIRECT=10)
Give mnemonic representation of meaning. verbose compresses strings of x's
>>> d = DistanceAlphabet('D', NPOSTFIX=2, NDIRECT=10) >>> d[55].explanation(13) '11[1101]01-5: [0]+240'
Get word
Build the action table from the text above
Perform the proper action
Produce hex dump of all data containing the bits from pos to stream.pos
Show formatted bit data: Bytes are separated by commas whole bytes are displayed in hex
give alphabet the prefix code that is read from the stream Called for the following
Read complex code
Process a brotli stream.
Read symbol and extra from stream and explain what happens. Returns the value of the
Read MNIBBLES and meta block length; if empty block, skip block and return true.
If true, handle uncompressed data
Read block type switch descriptor for given kind of blockType.
Read literal context modes. LSB6: lower 6 bits of last char MSB6: upper 6 bits
Read context maps Returns the number of differnt values on the context map (In other
In place inverse move to front transform.
Read prefix code array
Process the data. Relevant variables of self: numberOfBlockTypes[kind]: number of block types currentBlockTypes[kind]: current block
Return BROTLI_VERSION string as defined in 'common/version.h' file.
Turns a intensity array to a monochrome 'image' by replacing each intensity by a scaled
Similar to monochrome, but now do it for multiple colors Example >>> I = np.arange(32.).reshape(4,4,2)
Function decorater that executes the function in parallel Usage:: @parallelize(cores=10, info=True) def f(x): return x**2
:param DatasetLocal dataset: dataset to export :param str path: path for file :param lis[str] column_names:
Implementation of Dataset.to_arrow_table
Adds method f to the Dataset class
Add ecliptic coordates (long_out, lat_out) from equatorial coordinates. :param long_in: Name/expression for right ascension :param
Convert parallax to distance (i.e. 1/parallax) :param parallax: expression for the parallax, e.g. "parallax" :param
Concert velocities from a cartesian system to proper motions and radial velocities TODO: errors :param
Transform/rotate proper motions from equatorial to galactic coordinates Taken from http://arxiv.org/abs/1306.2945 :param long_in: Name/expression for
Transform/rotate proper motions from galactic to equatorial coordinates. Inverse of :py:`add_virtual_columns_proper_motion_eq2gal`
Convert radial velocity and galactic proper motions (and positions) to cartesian velocities wrt the center_v
From http://arxiv.org/pdf/1306.2945v2.pdf
Convert proper motion to perpendicular velocities. :param distance: :param pm_long: :param pm_lat: :param vl: :param
Calculate the angular momentum components provided Cartesian positions and velocities. Be mindful of the point
NOTE: This cannot be called until after this has been added to an Axes, otherwise
Return a graph containing the dependencies of this expression Structure is: [<string expression>, <function name
Return a graphviz.Digraph object with a graph of the expression
Shortcut for ds.min(expression, ...), see `Dataset.min`
Computes counts of unique values. WARNING: * If the expression/column is not categorical, it will
Map values of an expression or in memory column accoring to an input dictionary or
Create a vaex app, the QApplication mainloop must be started. In ipython notebook/jupyter do the
Convert a filename (or list of) to a filename with .hdf5 and optionally a -shuffle
Open a DataFrame from file given by path. Example: >>> ds = vaex.open('sometable.hdf5') >>> ds
Open a list of filenames, and return a DataFrame with all DataFrames cocatenated. :param list[str]
Connect to a SAMP Hub and wait for a single table load event, disconnect, download
Create a vaex DataFrame from an Astropy Table.
Create an in memory DataFrame from numpy arrays, in contrast to from_arrays this keeps the
Create an in memory DataFrame from numpy arrays. Example >>> import vaex, numpy as np
Similar to from_arrays, but convenient for a DataFrame of length 1. Example: >>> import vaex
Create an in memory DataFrame from a pandas DataFrame. :param: pandas.DataFrame df: Pandas DataFrame :param:
Create an in memory DataFrame from an ascii file (whitespace seperated by default). >>> ds
Shortcut to read a csv file using pandas and convert to a DataFrame directly. :rtype:
Convert a path (or glob pattern) to a single hdf5 file, will open the hdf5
Connect to hostname supporting the vaex web api. :param str hostname: hostname or ip address
Returns an example DataFrame which comes with vaex for testing/learning purposes. :rtype: DataFrame
Creates a zeldovich DataFrame.
Concatenate a list of DataFrames. :rtype: DataFrame
Creates a virtual column which is the equivalent of numpy.arange, but uses 0 memory
if 1: # app = guisupport.get_app_qt4() print_process_id() # Create an in-process kernel # >>> print_process_id(
Add a dataset and add it to the UI
basic support for evaluate at server, at least to run some unittest, do not expect
Decorator to transparantly accept delayed computation. Example: >>> delayed_sum = ds.sum(ds.E, binby=ds.x, limits=limits, >>> shape=4,
Find all columns that this selection depends on for df ds
TODO: doc + server side implementation
Plot the subspace using sane defaults to get a quick look at the data. :param
Plot the subspace using sane defaults to get a quick look at the data. :param
Returns a bounded subspace (SubspaceBounded) with limits given by Subspace.limits_sigma() :rtype: SubspaceBounded
Helper function for returning tasks results, result when immediate is True, otherwise the task itself,
Sort table by given column number.
:param DatasetLocal dataset: dataset to export :param str path: path for file :param lis[str] column_names:
Read header data from Gadget data file 'filename' with Gadget file type 'gtype'. Returns offsets
:param DatasetLocal dataset: dataset to export :param str path: path for file :param lis[str] column_names:
:param DatasetLocal dataset: dataset to export :param str path: path for file :param lis[str] column_names:
clear the cursor
Used for unittesting to make sure the plots are all done
Each layer has it's own ranges_grid computed now, unless something went wrong But all layers
Generates a list with start end stop indices of length parts, [(0, length/parts), ..., (..,
Open document by the default handler of the OS, could be a url opened by
Flexible writing, where f can be a filename or f object, if filename, closed after
Combines all masks from a list of arrays, and logically ors them into a single
Plot conting contours on 2D grid. :param x: {expression} :param y: {expression} :param what: What
:param DatasetLocal dataset: dataset to export :param str path: path for file :param lis[str] column_names:
Evaluates expression, and drop the result, usefull for benchmarking, since vaex is usually lazy
Estimate the mutual information between and x and y on a grid with shape mi_shape
Count the number of non-NaN values (or all, if expression is None or "*"). Example:
Return the first element of a binned `expression`, where the values each bin are sorted
Calculate the mean for expression, possibly on a grid defined by binby. Example: >>> df.mean("x")
Calculate the sum for the given expression, possible on a grid defined by binby Example:
Calculate the standard deviation for the given expression, possible on a grid defined by binby
Calculate the covariance cov[x,y] between and x and y, possibly on a grid defined by
Calculate the correlation coefficient cov[x,y]/(std[x]*std[y]) between and x and y, possibly on a grid defined
Calculate the covariance matrix for x and y or more expressions, possibly on a grid
Calculate the minimum and maximum for expressions, possibly on a grid defined by binby. Example:
Calculate the minimum for given expressions, possibly on a grid defined by binby. Example: >>>
Calculate the median , possibly on a grid defined by binby. NOTE: this value is
Calculate the percentile given by percentage, possibly on a grid defined by binby. NOTE: this
Calculate the [min, max] range for expression, containing approximately a percentage of the data as
Calculate the [min, max] range for expression, as described by value, which is '99.7%' by
Calculate/estimate the mode.
Viz 1d, 2d or 3d in a Jupyter notebook .. note:: This API is not
Count non missing value for expression on an array which represents healpix data. :param expression:
Viz data in 2d using a healpix column. :param healpix_expression: {healpix_max_level} :param healpix_max_level: {healpix_max_level} :param
Use at own risk, requires ipyvolume
Gives direct access to the columns only (useful for tab completion). Convenient when working with
Return the size in bytes the whole DataFrame requires (or the selection), respecting the active_fraction.
Return the numpy dtype for the given expression, if not a column, the first row
Gives a Pandas series object containing all numpy dtypes of all columns (except hidden).
Return if a column is a masked (numpy.ma) column.
Returns the unit (an astropy.unit.Units object) for the expression. Example >>> import vaex >>> ds
Find a set of columns (names) which have the ucd, or part of the ucd.
Each DataFrame has a directory where files are stored for metadata etc. Example >>> import
Return the internal state of the DataFrame in a dictionary Example: >>> import vaex >>>
Sets the internal state of the df Example: >>> import vaex >>> df = vaex.from_scalars(x=1,
Load a state previously stored by :meth:`DataFrame.state_store`, see also :meth:`DataFrame.state_set`.
Removes the file with the virtual column etc, it does not change the current virtual
Writes virtual columns, variables and their ucd,description and units. The default implementation is to write
Will read back the virtual column etc, written by :func:`DataFrame.write_virtual_meta`. This will be done when
Writes all meta data, ucd,description and units The default implementation is to write this to
Generate a Subspaces object, based on a custom list of expressions or all possible combinations
Set the variable to an expression or value defined by expression_or_value. Example >>> df.set_variable("a", 2.)
Evaluates the variable given by name.
Internal use, ignores the filter
Return a list of [(column_name, ndarray), ...)] pairs where the ndarray corresponds to the evaluated
Return a dict containing the ndarray corresponding to the evaluated data :param column_names: list of
Return a copy of the DataFrame, if selection is None, it does not copy the
Return a pandas DataFrame containing the ndarray corresponding to the evaluated data If index is
Returns an arrow Table object containing the arrays corresponding to the evaluated data :param column_names:
Returns a astropy table object containing the ndarrays corresponding to the evaluated data :param column_names:
Validate an expression (may throw Exceptions)
Add an in memory array as a column.
Renames a column, not this is only the in memory name, this will not be
Add a healpix (in memory) column based on a longitude and latitude :param name: Name
Propagates uncertainties (full covariance matrix) for a set of virtual columns. Covariance matrix of the
Convert cartesian to polar coordinates :param x: expression for x :param y: expression for y
Concert velocities from a cartesian to a spherical coordinate system TODO: errors :param x: name
Convert cartesian to polar velocities. :param x: :param y: :param vx: :param radius_polar: Optional expression
Convert cylindrical polar velocities to Cartesian. :param x: :param y: :param azimuth: Optional expression for
Rotation in 2d. :param str x: Name/expression of x column :param str y: idem for
Convert spherical to cartesian coordinates. :param alpha: :param delta: polar angle, ranging from the -90
Convert cartesian to spherical coordinates. :param x: :param y: :param z: :param alpha: :param delta:
Add aitoff (https://en.wikipedia.org/wiki/Aitoff_projection) projection :param alpha: azimuth angle :param delta: polar angle :param x: output
Add a virtual column to the DataFrame. Example: >>> df.add_virtual_column("r", "sqrt(x**2 + y**2 + z**2)")
Deletes a virtual column from a DataFrame.
Add a variable to to a DataFrame. A variable may refer to other variables, and
Deletes a variable from a DataFrame.
Return a shallow copy a DataFrame with the last n rows.
Display the first and last n elements of a DataFrame.
Give a description of the DataFrame. >>> import vaex >>> df = vaex.example()[['x', 'y', 'z']]
Display the DataFrame from row i1 till i2 For format, see https://pypi.org/project/tabulate/ :param int i1:
Set the current row, and emit the signal signal_pick.
Return a list of column names Example: >>> import vaex >>> df = vaex.from_scalars(x=1, x2=2,
Sets the active_fraction, set picked row to None, and remove selection. TODO: we may be
Sets the active_fraction, set picked row to None, and remove selection. TODO: we may be
Return a DataFrame, where all columns are 'trimmed' by the active range. For the returned
Returns a DataFrame containing only rows indexed by indices {note_copy} Example: >>> import vaex, numpy
Return a DataFrame containing only the filtered rows. {note_copy} The resulting DataFrame may be more
Returns a DataFrame with a random set of rows {note_copy} Provide either n or frac.
Returns a list containing random portions of the DataFrame. {note_copy} Example: >>> import vaex, import
Returns a list containing ordered subsets of the DataFrame. {note_copy} Example: >>> import vaex >>>
Return a sorted DataFrame, sorted by the expression 'by' {note_copy} {note_filter} Example: >>> import vaex,
Return a DataFrame, where missing values/NaN are filled with 'value'. The original columns will be
Returns a new DataFrame where the virtual column is turned into an in memory numpy
Get the current selection object (mostly for internal use atm).
Undo selection, for the name.
Redo selection, for the name.
Can selection name be redone?
Perform a selection, defined by the boolean expression, and combined with the previous selection using
Create a selection that selects rows having non missing values for all columns in column_names.
Create a shallow copy of a DataFrame, with filtering set using select_non_missing. :param drop_nan: drop
Select a 2d rectangular box in the space given by x and y, bounds by
Select a n-dimensional rectangular box bounded by limits. The following examples are equivalent: >>> df.select_box(['x',
Select a circular region centred on xc, yc, with a radius of r. Example: >>>
Select an elliptical region centred on xc, yc, with a certain width, height and angle.
For performance reasons, a lasso selection is handled differently. :param str expression_x: Name/expression for the
Invert the selection, i.e. what is selected will not be, and vice versa :param str
Sets the selection object :param selection: Selection object :param name: selection 'slot' :param executor: :return:
select_lasso and select almost share the same code
Drop columns (or a single column). :param columns: List of columns or a single column
Hides a column by prefixing the name with \'__\
Finds a non-colliding name by optional postfixing
Find all depending column for a set of column (default all), minus the excluded ones
Returns a list of string which are the virtual columns that are not used in
Return a graphviz.Digraph object with a graph of all virtual columns
Mark column as categorical, with given labels, assuming zero indexing
Encode column as ordinal values and mark it as categorical. The existing column is renamed
Gives direct access to the data as numpy arrays. Convenient when working with IPython in
Creates a (shallow) copy of the DataFrame. It will link to the same data, but
Get the length of the DataFrames, for the selection of the whole DataFrame. If selection
Join the columns of the other DataFrame to this one, assuming the ordering is the
Concatenates two DataFrames, adding the rows of one the other DataFrame to the current, returned
The local implementation of :func:`DataFrame.evaluate`
Compare two DataFrames and report their difference, use with care for large DataFrames
Return a DataFrame joined with other DataFrames, matched by columns/expression on/left_on/right_on If neither on/left_on/right_on is
Exports the DataFrame to a file written with arrow :param DataFrameLocal df: DataFrame to export
Exports the DataFrame to a file written with arrow :param DataFrameLocal df: DataFrame to export
Exports the DataFrame to a vaex hdf5 file :param DataFrameLocal df: DataFrame to export :param
Return a :class:`GroupBy` or :class:`DataFrame` object when agg is not None Examples: >>> import vaex
Return a :class:`BinBy` or :class:`DataArray` object when agg is not None The binby operations does
Add a column to the DataFrame :param str name: name of column :param data: numpy
This method takes two optional arguments. The first argument is used if the "self promise"
Adds method f to the DataFrame class
Viz data in 1d (histograms, running means etc) Example >>> df.plot1d(df.x) >>> df.plot1d(df.x, limits=[0, 100],
Viz (small amounts) of data in 2d using a scatter plot Convenience wrapper around pylab.scatter
Viz data in a 2d histogram/heatmap. Declarative plotting of statistical plots using matplotlib, supports subplots,
Decorator to register a new function with vaex. Example: >>> import vaex >>> df =
Returns an array where missing values are replaced by value. If the dtype is object,
Obtain the day of the week with Monday=0 and Sunday=6 :returns: an expression containing the
The ordinal day of the year. :returns: an expression containing the ordinal day of the
Check whether a year is a leap year. :returns: an expression which evaluates to True
Extracts the year out of a datetime sample. :returns: an expression containing the year extracted
Extracts the month out of a datetime sample. :returns: an expression containing the month extracted
Returns the month names of a datetime sample in English. :returns: an expression containing the
Extracts the day from a datetime sample. :returns: an expression containing the day extracted from
Returns the day names of a datetime sample in English. :returns: an expression containing the
Returns the week ordinal of the year. :returns: an expression containing the week ordinal of
Extracts the hour out of a datetime samples. :returns: an expression containing the hour extracted
Extracts the minute out of a datetime samples. :returns: an expression containing the minute extracted
Extracts the second out of a datetime samples. :returns: an expression containing the second extracted
Capitalize the first letter of a string sample. :returns: an expression containing the capitalized strings.
Concatenate two string columns on a row-by-row basis. :param expression other: The expression of the
Check if a string pattern or regex is contained within a sample of a string
Count the occurences of a pattern in sample of a string column. :param str pat:
Returns the lowest indices in each string in a column, where the provided substring is
Extract a character from each sample at the specified position from a string column. Note
Returns the lowest indices in each string in a column, where the provided substring is
Same as find (difference with pandas is that it does not raise a ValueError)
Converts string samples to lower case. :returns: an expression containing the converted strings. Example: >>>
Remove leading characters from a string sample. :param str to_strip: The string to be removed
Pad strings in a given column. :param int width: The total width of the string
Duplicate each string in a column. :param int repeats: number of times each string sample
Replace occurences of a pattern/regex in a column with some other string. :param str pattern:
Returns the highest indices in each string in a column, where the provided substring is
Returns the highest indices in each string in a column, where the provided substring is
Fills the left side of string samples with a specified character such that the strings
Remove trailing characters from a string sample. :param str to_strip: The string to be removed
Slice substrings from each string element in a column. :param int start: The start position
Removes leading and trailing characters. Strips whitespaces (including new lines), or a set of specified
Converts all string samples to titlecase. :returns: an expression containing the converted strings. Example: >>>
Converts all strings in a column to uppercase. :returns: an expression containing the converted strings.
Uses http://www.cplusplus.com/reference/string/to_string/ for formatting
ucds, descriptions and units are written as attributes in the hdf5 file, instead of a
Create a new (empty) hdf5 file with columns given by column names, of length N
The default return is a two dimensional float array. If you want a list of
Attempts to return a numpy array converted to the most sensible dtype Value errors will
Fixed-format reader Pass in a single line string (s) and a format list, which needs
Convert into numpy recordarray
Writes properties to the file in Java properties format. :param fh: a writable file-like object
Writes a comment to the file in Java properties format. Newlines in the comment text
Write a single property to the file in Java properties format. :param fh: a writable
Incrementally read properties from a Java .properties file. Yields tuples of key/value pairs. If ``comments``
Wrap a file to convert newlines regardless of whether the file was opened with the
Return the version information for all librosa dependencies.
Handle renamed arguments. Parameters ---------- old_name : str old_value The name and value of the
Set the FFT library used by librosa. Parameters ---------- lib : None or module Must
Beat tracking function :parameters: - input_file : str Path to input audio file (wav, mp3,
Load audio, estimate tuning, apply pitch correction, and save.
Converts frame indices to audio sample indices. Parameters ---------- frames : number or np.ndarray [shape=(n,)]
Converts sample indices into STFT frames. Examples -------- >>> # Get the frame numbers for
Converts frame counts to time (seconds). Parameters ---------- frames : np.ndarray [shape=(n,)] frame index or
Converts time stamps into STFT frames. Parameters ---------- times : np.ndarray [shape=(n,)] time (in seconds)
Convert one or more spelled notes to MIDI number(s). Notes may be spelled out with
Convert one or more MIDI numbers to note strings. MIDI numbers will be rounded to
Convert Hz to Mels Examples -------- >>> librosa.hz_to_mel(60) 0.9 >>> librosa.hz_to_mel([110, 220, 440]) array([ 1.65,
Convert mel bin numbers to frequencies Examples -------- >>> librosa.mel_to_hz(3) 200. >>> librosa.mel_to_hz([1,2,3,4,5]) array([ 66.667,
Convert frequencies (Hz) to (fractional) octave numbers. Examples -------- >>> librosa.hz_to_octs(440.0) 4. >>> librosa.hz_to_octs([32, 64,
Alternative implementation of `np.fft.fftfreq` Parameters ---------- sr : number > 0 [scalar] Audio sampling rate
Compute the center frequencies of Constant-Q bins. Examples -------- >>> # Get the CQT frequencies
Compute an array of acoustic frequencies tuned to the mel scale. The mel scale is
Compute the frequencies (in beats-per-minute) corresponding to an onset auto-correlation or tempogram matrix. Parameters ----------
Compute the A-weighting of a set of frequencies. Parameters ---------- frequencies : scalar or np.ndarray
Return an array of time values to match the time axis from a feature matrix.
Return an array of sample indices to match the time axis from a feature matrix.
Compute the constant-Q transform of an audio signal. This implementation is based on the recursive
Compute the hybrid constant-Q transform of an audio signal. Here, the hybrid CQT uses the
Compute the pseudo constant-Q transform of an audio signal. This uses a single fft size
Compute the inverse constant-Q transform. Given a constant-Q transform representation `C` of an audio signal
Generate the frequency domain constant-Q filter basis.
Helper function to trim and stack a collection of CQT responses
Compute the filter response with a target STFT hop.
Compute the number of early downsampling operations
Perform early downsampling on an audio signal, if it applies.
r'''Compute delta features: local estimate of the derivative of the input data along the selected
Short-term history embedding: vertically concatenate a data vector or matrix with delayed copies of itself.
Dynamic time warping (DTW). This function performs a DTW and path backtracking on two sequences.
Calculate the accumulated cost matrix D. Use dynamic programming to calculate the accumulated costs. Parameters
Backtrack optimal warping path. Uses the saved step sizes from the cost accumulation step to
Core Viterbi algorithm. This is intended for internal use only. Parameters ---------- log_prob : np.ndarray
Viterbi decoding from discriminative state predictions. Given a sequence of conditional state predictions `prob[s, t]`,
Viterbi decoding from binary (multi-label), discriminative state predictions. Given a sequence of conditional state predictions
Construct a uniform transition matrix over `n_states`. Parameters ---------- n_states : int > 0 The
Construct a self-loop transition matrix over `n_states`. The transition matrix will have the following properties:
Construct a cyclic transition matrix over `n_states`. The transition matrix will have the following properties:
Construct a localized transition matrix. The transition matrix will have the following properties: - `transition[i,
Basic onset detector. Locate note onset events by picking peaks in an onset strength envelope.
Compute a spectral flux onset strength envelope. Onset strength at time `t` is determined by:
Backtrack detected onset events to the nearest preceding local minimum of an energy function. This
Compute a spectral flux onset strength envelope across multiple channels. Onset strength for channel `i`
r'''Save annotations in a 3-column format:: intervals[0, 0],intervals[0, 1],annotations[0]\n intervals[1, 0],intervals[1, 1],annotations[1]\n intervals[2, 0],intervals[2, 1],annotations[2]\n
r"""Save time steps as in CSV format. This can be used to store the output
Output a time series as a .wav file Note: only mono or stereo, floating-point data
Get a default colormap from the given data. If the data is boolean, use a
Compute the max-envelope of x at a stride/frame length of h
Plot the amplitude envelope of a waveform. If `y` is monophonic, a filled curve is
Display a spectrogram/chromagram/cqt/etc. Parameters ---------- data : np.ndarray [shape=(d, n)] Matrix to display (e.g., spectrogram)
Helper to set the current image in pyplot mode. If the provided `ax` is not
Compute axis coordinates
Check if "axes" is an instance of an axis object. If not, use `gca`.
Set the axis scaling
Configure axis tickers, locators, and labels
Get the frequencies for FFT bins
Get the frequencies for Mel bins
Get CQT bin frequencies
Get chroma bin numbers
Tempo coordinates
Get time coordinates from frames
Estimate the tuning of an audio time series or spectrogram input. Parameters ---------- y: np.ndarray
Given a collection of pitches, estimate its tuning offset (in fractions of a bin) relative
Pitch tracking on thresholded parabolically-interpolated STFT. This implementation uses the parabolic interpolation method described by
Decompose an audio time series into harmonic and percussive components. This function automates the STFT->HPSS->ISTFT
Extract harmonic elements from an audio time-series. Parameters ---------- y : np.ndarray [shape=(n,)] audio time
Extract percussive elements from an audio time-series. Parameters ---------- y : np.ndarray [shape=(n,)] audio time
Time-stretch an audio series by a fixed rate. Parameters ---------- y : np.ndarray [shape=(n,)] audio
Pitch-shift the waveform by `n_steps` half-steps. Parameters ---------- y : np.ndarray [shape=(n,)] audio time-series sr
Remix an audio signal by re-ordering time intervals. Parameters ---------- y : np.ndarray [shape=(t,) or
Frame-wise non-silent indicator for audio input. This is a helper function for `trim` and `split`.
Trim leading and trailing silence from an audio signal. Parameters ---------- y : np.ndarray, shape=(n,)
Split an audio signal into non-silent intervals. Parameters ---------- y : np.ndarray, shape=(n,) or (2,
Short-time Fourier transform (STFT) Returns a complex-valued matrix D such that `np.abs(D[f, t])` is the
Inverse short-time Fourier transform (ISTFT). Converts a complex-valued spectrogram `stft_matrix` to time-series `y` by minimizing
Compute the instantaneous frequency (as a proportion of the sampling rate) obtained as the time-derivative
Separate a complex-valued spectrogram D into its magnitude (S) and phase (P) components, so that
Phase vocoder. Given an STFT matrix D, speed up by a factor of `rate` Based
r'''Time-frequency representation using IIR filters [1]_. This function will return a time-frequency representation using a
Convert a power spectrogram (amplitude squared) to decibel (dB) units This computes the scaling ``10
Convert an amplitude spectrogram to dB-scaled spectrogram. This is equivalent to ``power_to_db(S**2)``, but is provided
Perceptual weighting of a power spectrogram: `S_p[f] = A_weighting(f) + 10*log(S[f] / ref)` Parameters ----------
The fast Mellin transform (FMT) [1]_ of a uniformly sampled signal y. When the Mellin
Per-channel energy normalization (PCEN) [1]_ This function normalizes a time-frequency representation `S` by performing automatic
Helper function to retrieve a magnitude spectrogram. This is primarily used in feature extraction functions
HPSS beat tracking :parameters: - input_file : str Path to input audio file (wav, mp3,
Decompose a feature matrix. Given a spectrogram `S`, produce a decomposition into `components` and `activations`
Median-filtering harmonic percussive source separation (HPSS). If `margin = 1.0`, decomposes an input spectrogram `S
Filtering by nearest-neighbors. Each data point (e.g, spectrogram column) is replaced by aggregating its nearest
Nearest-neighbor filter helper function. This is an internal function, not for use outside of the
Create a Filterbank matrix to combine FFT bins into Mel-frequency bins Parameters ---------- sr :
Create a Filterbank matrix to convert STFT to chroma Parameters ---------- sr : number >
Decorator function for windows with fractional input. This function guarantees that for fractional `x`, the
r'''Construct a constant-Q basis. This uses the filter bank described by [1]_. .. [1] McVicar,
r'''Return length of each filter in a constant-Q basis. Parameters ---------- sr : number >
Convert a Constant-Q basis to Chroma. Parameters ---------- n_input : int > 0 [scalar] Number
Get the equivalent noise bandwidth of a window function. Parameters ---------- window : callable or
Compute a window function. This is a wrapper for `scipy.signal.get_window` that additionally supports callable or
r'''Helper function to construct a multirate filterbank. A filter bank consists of multiple band-pass filters
r'''Helper function for generating center frequency and sample rate pairs. This function will return center
r'''Constructs a multirate filterbank of infinite-impulse response (IIR) band-pass filters at user-defined center frequencies and
Helper function for window sum-square calculation.
Compute the sum-square envelope of a window function at a given hop length. This is
Build a two-dimensional diagonal filter. This is primarily used for smoothing recurrence or self-similarity matrices.
Compute the spectral centroid. Each frame of a magnitude spectrogram is normalized and treated as
Compute p'th-order spectral bandwidth: (sum_k S[k] * (freq[k] - centroid)**p)**(1/p) Parameters ---------- y : np.ndarray
Compute spectral contrast [1]_ .. [1] Jiang, Dan-Ning, Lie Lu, Hong-Jiang Zhang, Jian-Hua Tao, and
Compute roll-off frequency. The roll-off frequency is defined for each frame as the center frequency
Compute spectral flatness Spectral flatness (or tonality coefficient) is a measure to quantify how much
Compute root-mean-square (RMS) value for each frame, either from the audio samples `y` or from
Get coefficients of fitting an nth-order polynomial to the columns of a spectrogram. Parameters ----------
Compute the zero-crossing rate of an audio time series. Parameters ---------- y : np.ndarray [shape=(n,)]
Compute a chromagram from a waveform or power spectrogram. This implementation is derived from `chromagram_E`
r'''Constant-Q chromagram Parameters ---------- y : np.ndarray [shape=(n,)] audio time series sr : number >
r'''Computes the chroma variant "Chroma Energy Normalized" (CENS), following [1]_. To compute CENS features, following
Computes the tonal centroid features (tonnetz), following the method of [1]_. .. [1] Harte, C.,
Mel-frequency cepstral coefficients (MFCCs) Parameters ---------- y : np.ndarray [shape=(n,)] or None audio time series
Compute a mel-scaled spectrogram. If a spectrogram input `S` is provided, then it is mapped
Load an audio file and estimate tuning (in cents)
Jaccard similarity between two intervals Parameters ---------- int_a, int_b : np.ndarrays, shape=(2,) Returns ------- Jaccard
Find the best Jaccard match from query to candidates
Numba-accelerated interval matching algorithm.
Match one set of time intervals to another. This can be useful for tasks such
Match one set of events to another. This is useful for tasks such as matching
Harmonic salience function. Parameters ---------- S : np.ndarray [shape=(d, n)] input time frequency magnitude representation
Compute the energy at harmonics of time-frequency representation. Given a frequency-based energy representation such as
Populate a harmonic tensor from a time-frequency representation. Parameters ---------- harmonic_out : np.ndarray, shape=(len(h_range), X.shape)
Populate a harmonic tensor from a time-frequency representation with time-varying frequencies. Parameters ---------- harmonic_out :
Load an audio file as a floating point time series. Audio will be automatically resampled
Load an audio buffer using audioread. This loads one block at a time, and then
Force an audio signal down to mono. Parameters ---------- y : np.ndarray [shape=(2,n) or shape=(n,)]
Resample a time series from orig_sr to target_sr Parameters ---------- y : np.ndarray [shape=(n,) or
Compute the duration (in seconds) of an audio time series, feature matrix, or filename. Examples
Bounded auto-correlation Parameters ---------- y : np.ndarray array to autocorrelate max_size : int > 0
Linear Prediction Coefficients via Burg's method This function applies Burg's method to estimate coefficients of
Find the zero-crossings of a signal `y`: indices `i` such that `sign(y[i]) != sign(y[j])`. If
Returns a signal with the signal `click` placed at each specified time Parameters ---------- times
Returns a pure tone signal. The signal generated is a cosine wave. Parameters ---------- frequency
Returns a chirp signal that goes from frequency `fmin` to frequency `fmax` Parameters ---------- fmin
Compute the tempogram: local autocorrelation of the onset strength envelope. [1]_ .. [1] Grosche, Peter,
Get a sorted list of (audio) files in a directory or directory sub-tree. Examples --------
Helper function to get files in a single directory
Phase-vocoder time stretch demo function. :parameters: - input_file : str path to input audio -
Argparse function to get the program parameters
HPSS demo function. :parameters: - input_file : str path to input audio - output_harmonic :
r'''Dynamic programming beat tracker. Beats are detected in three stages, following the method of [1]_:
Estimate the tempo (beats per minute) Parameters ---------- y : np.ndarray [shape=(n,)] or None audio
Internal function that tracks beats in an onset strength envelope. Parameters ---------- onset_envelope : np.ndarray
Maps onset strength function into the range [0, 1]
Construct the local score for an onset envlope and given period
Core dynamic program for beat tracking
Get the last beat from the cumulative score array
Final post-processing: throw out spurious leading/trailing beats
Compute a recurrence matrix from a data matrix. `rec[i, j]` is non-zero if (`data[:, i]`,
Convert a recurrence matrix into a lag matrix. `lag[i, j] == rec[i+j, j]` Parameters ----------
Convert a lag matrix into a recurrence matrix. Parameters ---------- lag : np.ndarray or scipy.sparse.spmatrix
Filtering in the time-lag domain. This is primarily useful for adapting image filters to operate
Sub-divide a segmentation by feature clustering. Given a set of frame boundaries (`frames`), and a
Bottom-up temporal segmentation. Use a temporally-constrained agglomerative clustering routine to partition `data` into `k` contiguous
Multi-angle path enhancement for self- and cross-similarity matrices. This function convolves multiple diagonal smoothing filters
Onset detection function :parameters: - input_file : str Path to input audio file (wav, mp3,
Slice a time series into overlapping frames. This implementation uses low-level stride manipulation to avoid
Validate whether a variable contains valid, mono audio data. Parameters ---------- y : np.ndarray The
Ensure that an input value is integer-typed. This is primarily useful for ensuring integrable-valued array
Ensure that an array is a valid representation of time intervals: - intervals.ndim == 2
Wrapper for np.pad to automatically center an array prior to padding. This is analogous to
Fix the length an array `data` to exactly `size`. If `data.shape[axis] < n`, pad according
Fix a list of frames to lie within [x_min, x_max] Examples -------- >>> # Generate
Sort an array along its rows or columns. Examples -------- Visualize NMF output for a
Normalize an array along a chosen axis. Given a norm (described below) and a target
Find local maxima in an array `x`. An element `x[i]` is considered a local maximum
Uses a flexible heuristic to pick peaks in a signal. A sample n is selected
Return a row-sparse matrix approximating the input `x`. Parameters ---------- x : np.ndarray [ndim <=
Sparse matrix roll This operation is equivalent to ``numpy.roll``, but operates on sparse matrices. Parameters
Convert an integer buffer to floating point values. This is primarily useful when loading integer-valued
Generate a slice array from an index array. Parameters ---------- idx : list-like Array of
Synchronous aggregation of a multi-dimensional array between boundaries .. note:: In order to ensure total
Robustly compute a softmask operation. `M = X**power / (X**power + X_ref**power)` Parameters ---------- X
Compute the tiny-value corresponding to an input's data type. This is the smallest "usable" number
Sets all cells of a matrix to a given ``value`` if they lie outside a
Read the frame images from a directory and join them as a video Args: frame_dir
Read the next frame. If the next frame have been decoded before and in the
Get frame by index. Args: frame_id (int): Index of the expected frame, 0-based. Returns: ndarray
Convert a video to frame images Args: frame_dir (str): Output directory to store all the
Track the progress of tasks execution with a progress bar. Tasks are done with a
Track the progress of parallel task execution with a progress bar. The built-in :mod:`multiprocessing` module
Flip an image horizontally or vertically. Args: img (ndarray): Image to be flipped. direction (str):
Rotate an image. Args: img (ndarray): Image to be rotated. angle (float): Rotation angle in
Clip bboxes to fit the image shape. Args: bboxes (ndarray): Shape (..., 4*k) img_shape (tuple):
Scaling bboxes w.r.t the box center. Args: bboxes (ndarray): Shape(..., 4). scale (float): Scaling factor.
Crop image patches. 3 steps: scale the bboxes -> clip bboxes -> crop and pad.
Pad an image to a certain shape. Args: img (ndarray): Image to be padded. shape
Pad an image to ensure each edge to be multiple to some number. Args: img
Rescale a size by a ratio. Args: size (tuple): w, h. scale (float): Scaling factor.
Resize image to a given size. Args: img (ndarray): The input image. size (tuple): Target
Resize image to the same size of a given image. Args: img (ndarray): The input
Resize image while keeping the aspect ratio. Args: img (ndarray): The input image. scale (float
Load data from json/yaml/pickle files. This method provides a unified api for loading data from
Dump data to json/yaml/pickle strings or files. This method provides a unified api for dumping
Register a handler for some file extensions. Args: handler (:obj:`BaseFileHandler`): Handler to be registered. file_formats
Get priority value. Args: priority (int or str or :obj:`Priority`): Priority. Returns: int: The priority
Quantize an array of (-inf, inf) to [0, levels-1]. Args: arr (ndarray): Input array. min_val
Dequantize an array. Args: arr (ndarray): Input array. min_val (scalar): Minimum value to be clipped.
Generate argparser from config file automatically (experimental)
Puts each data field into a tensor/DataContainer with outer dimension batch size. Extend default_collate to
Show an image. Args: img (str or ndarray): The image to be displayed. win_name (str):
Draw bboxes on an image. Args: img (str or ndarray): The image to be displayed.
Draw bboxes and class labels (with scores) on an image. Args: img (str or ndarray):
Read an optical flow map. Args: flow_or_path (ndarray or str): A flow map or filepath.
Write optical flow to file. If the flow is not quantized, it will be saved
Quantize flow to [0, 255]. After this step, the size of flow will be much
Recover from quantized flow. Args: dx (ndarray): Quantized dx. dy (ndarray): Quantized dy. max_val (float):
Load state_dict to a module. This method is modified from :meth:`torch.nn.Module.load_state_dict`. Default value for ``strict``
Load checkpoint from a file or URI. Args: model (Module): Module to load checkpoint. filename
Copy a model state_dict to cpu. Args: state_dict (OrderedDict): Model weights on GPU. Returns: OrderedDict:
Save checkpoint to file. The checkpoint will have 3 fields: ``meta``, ``state_dict`` and ``optimizer``. By
Init the optimizer. Args: optimizer (dict or :obj:`~torch.optim.Optimizer`): Either an optimizer object or a dict
Init the logger. Args: log_dir(str, optional): Log file directory. If not specified, no log file
Get current learning rates. Returns: list: Current learning rate of all param groups.
Register a hook into the hook list. Args: hook (:obj:`Hook`): The hook to be registered.
Start running. Args: data_loaders (list[:obj:`DataLoader`]): Dataloaders for training and validation. workflow (list[tuple]): A list of
Register default hooks for training. Default hooks include: - LrUpdaterHook - OptimizerStepperHook - CheckpointSaverHook -
Convert a video with ffmpeg. This provides a general api to ffmpeg, the executed command
Resize a video. Args: in_file (str): Input video filename. out_file (str): Output video filename. size
Cut a clip from a video. Args: in_file (str): Input video filename. out_file (str): Output
Concatenate multiple videos into a single one. Args: video_list (list): A list of video filenames
Load a text file and parse the content as a list of strings. Args: filename
Load a text file and parse the content as a dict. Each line of the
3x3 convolution with padding
Initialize an object from dict. The dict must contain the key "type", which indicates the
Read an image. Args: img_or_path (ndarray or str): Either a numpy array or image path.
Read an image from bytes. Args: content (bytes): Image bytes got from files or other
Write image to file Args: img (ndarray): Image array to be written. file_path (str): Image
Convert a BGR image to grayscale image. Args: img (ndarray): The input image. keepdim (bool):
Convert a grayscale image to BGR image. Args: img (ndarray or str): The input image.
Cast elements of an iterable object into some type. Args: inputs (Iterable): The input object.
Check whether it is a sequence of some type. Args: seq (Sequence): The sequence to
Slice a list into several sub lists by a list of given length. Args: in_list
A decorator factory to check if prerequisites are satisfied. Args: prerequisites (str of list[str]): Prerequisites
Average latest n values or all values
Scatters tensor across multiple GPUs.
Convert various input to color tuples. Args: color (:obj:`Color`/str/tuple/int/ndarray): Color inputs Returns: tuple[int]: A tuple
Add check points in a single line. This method is suitable for running a task
Start the timer.
Total time since the timer is started. Returns (float): Time in seconds.
Time since the last checking. Either :func:`since_start` or :func:`since_last_check` is a checking operation. Returns (float):
Show optical flow. Args: flow (ndarray or str): The optical flow to be displayed. win_name
Convert flow map to RGB image. Args: flow (ndarray): Array of optical flow. color_wheel (ndarray
Build a color wheel. Args: bins(list or tuple, optional): Specify the number of bins for
Computes the precision@k for the specified values of k
Scatter inputs to target gpus. The only difference from original :func:`scatter` is to add support
Scatter with support for kwargs dictionary
Fetch all the information by using aiohttp
Define a Decorate to be called before a request. eg: @middleware.request
Define a Decorate to be called after a response. eg: @middleware.response
Read and decodes JSON response.
Read response payload and decode.
Run hook before/after spider start crawling :param hook_func: aws function :return:
Corresponding processing for the invalid callback result :param item: :return:
Start an async spider :param middleware: customize middleware or a list of middleware :param loop:
Start a spider :param after_start: hook :param before_stop: hook :param middleware: customize middleware or a
Process coroutine callback function
Wrap request with middleware. :param request: :return:
For crawling multiple urls
Init a Request class for crawling html
Actually start crawling.
Finish all running tasks, cancel remaining tasks, then stop loop. :param _signal: :return:
If there is a group dict, return the dict; even if there's only one value
Get a db instance :param db: database name :return: the motor db instance
Ensures tasks have an action key and strings are converted to python objects
Parses yaml as ansible.utils.parse_yaml but with linenumbers. The line numbers are stored in each node's
Uses ruamel.yaml to parse comments then adds a skipped_rules list to the task (or meta
Helper method that compares two StoreItems and their e_tags and returns True if the new_value
Called by the parent class to run the adapters middleware set and calls the passed
Registers middleware plugin(s) with the bot or set. :param middleware : :return:
Send information about the page viewed in the application (a web page for instance). :param
Send information about a single exception that occurred in the application. :param type_exception: the type
Send information about a single event that has occurred in the context of the application.
Send information about a single metric data point that was captured for the application. :param
Sends a single trace statement. :param name: the trace statement.\n :param properties: the set of
Sends a single request that was captured for the application. :param name: The name for
Sends a single dependency telemetry that was captured for the application. :param name: the name
Create a property definition and register it with this BotState. :param name: The name of
Reads in the current state object and caches it in the context object for this
If it has changed, writes to storage the state object that is cached in the
Clears any state currently stored in this state scope. NOTE: that save_changes must be called
Delete any state currently stored in this state scope. :param turn_context: The context object for
Deletes a property from the state cache in the turn context. :param turn_context: The context
Continues a conversation with a user. This is often referred to as the bots "Proactive
Starts a new conversation with a user. This is typically used to Direct Message (DM)
Processes an activity received by the bots web server. This includes any messages sent from
Allows for the overriding of authentication in unit tests. :param request: :param auth_header: :return:
Parses and validates request :param req: :return:
Replaces an activity that was previously sent to a channel. It should be noted that
Deletes an activity that was previously sent to a channel. It should be noted that
Deletes a member from the current conversation. :param context: :param member_id: :return:
Lists the members of a given activity. :param context: :param activity_id: :return:
Lists the members of a current conversation. :param context: :return:
Lists the Conversations in which this bot has participated for a given channel server. The
Allows for mocking of the connector client in unit tests. :param service_url: :return:
Adds a dialog to the component dialog. Adding a new dialog will inherit the BotTelemetryClient
Authenticates the request and sets the service url in the set of trusted urls. :param
Return distribution full name with - replaced with _
Return archive name without extension
Generate requirements from setup.cfg as ('Requires-Dist', 'requirement; qualifier') tuples. From a metadata section in setup.cfg:
Add additional requirements from setup.cfg to file metadata_path
Convert an .egg-info directory into a .dist-info directory
GetConversations. List the Conversations in which this bot has participated. GET from this method with
CreateConversation. Create a new Conversation. POST to this method with a * Bot being the
GetConversationPagedMembers. Enumerate the members of a conversation one page at a time. This REST API
Send information about the page viewed in the application (a web page for instance). :param
Send information about a single exception that occurred in the application. :param type: the type
Send information about a single metric data point that was captured for the application. :param
Sends a single request that was captured for the application. :param name: The name for
Sends a single dependency telemetry that was captured for the application. :param name: the name
Returns a simple text message. :Example: message = MessageFactory.text('Greetings from example message') await context.send_activity(message) :param
Returns a message that includes a set of suggested actions and optional text. :Example: message
Returns a single message activity containing an attachment. :Example: message = MessageFactory.attachment(CardFactory.hero_card(HeroCard(title='White T-Shirt', images=[CardImage(url='https://example.com/whiteShirt.jpg')], buttons=[CardAction(title='buy')])))
Returns a message that will display a set of attachments in list form. :Example: message
Returns a message that will display a single image or video to a user. :Example:
Validate the incoming Auth Header Validate the incoming Auth Header as a token sent from
Validate the incoming Auth Header Validate the incoming Auth Header as a token sent from
Creates a trace activity based on this activity. :param turn_activity: :type turn_activity: Activity :param name:
Adds a new dialog to the set and returns the added dialog. :param dialog: The
Finds a dialog that was previously added to the set using add(dialog) :param dialog_id: ID
Returns the storage key for the current user state. :param context: :return:
Return the top scoring intent and its score. :return: Intent and score. :rtype: TopIntent
Sets the telemetry client for logging events.
Method called when an instance of the dialog is being returned to from another dialog
Initializes a new instance of the <see cref="LuisApplication"/> class. :param application_endpoint: LUIS application endpoint. :type
Returns the name of the top scoring intent from a set of LUIS results. :param
Return results of the analysis (Suggested actions and intents). :param turn_context: Context object containing information
Invoked prior to a LuisResult being logged. :param recognizer_result: The Luis Results for the call.
Fills the event properties for LuisResult event for telemetry. These properties are logged when the
Send data as a multipart form-data request. We only deal with file-like objects or strings
Prepare and send request object according to configuration. :param ClientRequest request: The request object to
Async Generator for streaming request body data. :param response: The initial response :param user_callback: Custom
Read storeitems from storage. :param keys: :return dict:
Save storeitems to storage. :param changes: :return:
Remove storeitems from storage. :param keys: :return:
Create a StoreItem from a result out of CosmosDB. :param result: :return StoreItem:
Return the dict of a StoreItem. This eliminates non_magic attributes and the e_tag. :param si:
Return the sanitized key. Replace characters that are not allowed in keys in Cosmos. :param
Call the get or create methods.
Return the database link. Check if the database exists or create the db. :param doc_client:
Return the container link. Check if the container exists or create the container. :param doc_client:
Fills the event properties and metrics for the QnaMessage event for telemetry. :return: A tuple
Generates answers from the knowledge base. :return: A list of answers for the user's query,
Combines QnAMakerOptions passed into the QnAMaker constructor with the options passed as arguments into get_answers().
Called when this TurnContext instance is passed into the constructor of a new TurnContext instance.
Used to set TurnContext._activity when a context object is created. Only takes instances of Activities.
Returns True is set() has been called for a key. The cached value may be
Caches a value for the lifetime of the current turn. :param key: :param value: :return:
Sends a single activity or message to the user. :param activity_or_text: :return:
Replaces an existing activity. :param activity: :return:
Deletes an existing activity. :param id_or_reference: :return:
Returns the conversation reference for an activity. This can be saved as a plain old
Updates an activity with the delivery information from a conversation reference. Calling this after get_conversation_reference
Adds a new step to the waterfall. :param step: Step to add :return: Waterfall dialog
Give the waterfall step a unique name
Send information about a single event that has occurred in the context of the application.
Utility function to calculate a change hash for a `StoreItem`. :param item: :return:
Pushes a new dialog onto the dialog stack. :param dialog_id: ID of the dialog to
Helper function to simplify formatting the options for calling a prompt dialog. This helper will
Continues execution of the active dialog, if there is one, by passing the context object
Ends a dialog by popping it off the stack and returns an optional result to
Deletes any existing dialog stack thus cancelling all dialogs on the stack. :param result: (Optional)
If the dialog cannot be found within the current `DialogSet`, the parent `DialogContext` will be
Ends the active dialog and starts a new dialog in its place. This is particularly
Calls reprompt on the currently active dialog, if there is one. Used with Prompts that
Determine if a number of Suggested Actions are supported by a Channel. Args: channel_id (str):
Determine if a number of Card Actions are supported by a Channel. Args: channel_id (str):
Get the Channel Id from the current Activity on the Turn Context. Args: turn_context (TurnContext):
Begins listening to console input. :param logic: :return:
Logs a series of activities to the console. :param context: :param activities: :return:
Determines if a given Auth header is from the Bot Framework Emulator :param auth_header: Bearer
Validate the incoming Auth Header Validate the incoming Auth Header as a token sent from
Returns an attachment for an adaptive card. The attachment will contain the card and the
Returns an attachment for an animation card. Will raise a TypeError if the 'card' argument
Returns an attachment for an audio card. Will raise a TypeError if 'card' argument is
Returns an attachment for a hero card. Will raise a TypeError if 'card' argument is
Returns an attachment for an OAuth card used by the Bot Frameworks Single Sign On
Returns an attachment for a receipt card. Will raise a TypeError if 'card' argument is
Returns an attachment for a signin card. For channels that don't natively support signin cards
Returns an attachment for a thumbnail card. Thumbnail cards are similar to but instead of
Returns an attachment for a video card. Will raise a TypeError if 'card' argument is
return instruction params
Assemble a QasmQobjInstruction
For a composite instruction, reverse the order of sub-gates. This is done by recursively mirroring
Invert this instruction. If the instruction is composite (i.e. has a definition), then its definition
Add classical control on register classical and value val.
shallow copy of the instruction. Args: name (str): name to be given to the copied
Print an if statement if needed.
Return a default OpenQASM string for the instruction. Derived instructions may override this to print
Set the options of each passset, based on precedence rules: passset options (set via ``PassManager.append()``)
Args: passes (list[BasePass] or BasePass): pass(es) to be added to schedule ignore_preserves (bool): ignore the
Run all the passes on a QuantumCircuit Args: circuit (QuantumCircuit): circuit to transform via all
Do a pass and its "requires". Args: pass_ (BasePass): Pass to do. dag (DAGCircuit): The
Returns a list structure of the appended passes and its options. Returns (list): The appended
Fetches the passes added to this flow controller. Returns (dict): {'options': self.options, 'passes': [passes], 'type':
Removes a flow controller. Args: name (string): Name of the controller to remove. Raises: KeyError:
Constructs a flow controller based on the partially evaluated controller arguments. Args: passes (list[BasePass]): passes
Apply U to q.
Return a Numpy.array for the U3 gate.
Apply a single qubit gate to the qubit. Args: gate(str): the single qubit gate name
Get the matrix for a single qubit. Args: gate(str): the single qubit gate name params(list):
Return the index string for Numpy.eignsum matrix-matrix multiplication. The returned indices are to perform a
Return the index string for Numpy.eignsum matrix-vector multiplication. The returned indices are to perform a
Return the index string for Numpy.eignsum matrix multiplication. The returned indices are to perform a
Build a ``DAGCircuit`` object from a ``QuantumCircuit``. Args: circuit (QuantumCircuit): the input circuit. Return: DAGCircuit:
Function used to fit the exponential decay.
Function used to fit the decay cosine.
Plot coherence data. Args: xdata ydata std_error fit fit_function xunit exp_str qubit_label Raises: ImportError: If
Take the raw rb data and convert it into averages and std dev Args: raw_rb
Take the rb fit data and convert it into EPC (error per Clifford) Args: fit
Plot randomized benchmarking data. Args: xdata (list): list of subsequence lengths ydatas (list): list of
Finds runs containing parameterized gates and splits them into sequential runs excluding the parameterized gates.
Return a new circuit that has been optimized.
Return a triple theta, phi, lambda for the product. u3(theta, phi, lambda) = u3(theta1, phi1,
Express a Y.Z.Y single qubit gate as a Z.Y.Z gate. Solve the equation .. math::
Extend the layout with new (physical qubit, virtual qubit) pairs. The dag signals which virtual
Validates the input to state visualization functions. Args: quantum_state (ndarray): Input state / density matrix.
Trim a PIL image and remove white space.
Given a circuit, return a tuple (qregs, cregs, ops) where qregs and cregs are the
Get the list of qubits drawing this gate would cover
Build an ``Instruction`` object from a ``QuantumCircuit``. The instruction is anonymous (not tied to a
Pick a convenient layout depending on the best matching qubit connectivity, and set the property
Computes the qubit mapping with the best connectivity. Args: n_qubits (int): Number of subset qubits
Return True if completely-positive trace-preserving.
Return the conjugate of the QuantumChannel.
Return the transpose of the QuantumChannel.
Return the composition channel self∘other. Args: other (QuantumChannel): a quantum channel subclass. qargs (list): a
The matrix power of the channel. Args: n (int): compute the matrix power of the
Return the QuantumChannel self + other. Args: other (complex): a complex number. Returns: Kraus: the
Evolve a quantum state by the QuantumChannel. Args: state (QuantumState): The input statevector or density
Return the tensor product channel. Args: other (QuantumChannel): a quantum channel subclass. reverse (bool): If
A decorator for generating SamplePulse from python callable. Args: func (callable): A function describing pulse
Return the correspond floating point number.
Return the correspond symbolic number.
Apply barrier to circuit. If qargs is None, applies to all the qbits. Args is
Compute the mean value of an diagonal observable. Takes in a diagonal observable in dictionary,
Process an Id or IndexedId node as a bit or register type. Return a list
Process a custom unitary node.
Process a gate node. If opaque is True, process the node as an opaque gate
Process a CNOT gate node.
Process a measurement node.
Process an if node.
Carry out the action associated with a node.
Create a DAG node out of a parsed AST op node. Args: name (str): operation
Return the corresponding OPENQASM string.
Return duration of supplied channels. Args: *channels: Supplied channels
Return minimum start time for supplied channels. Args: *channels: Supplied channels
Return maximum start time for supplied channels. Args: *channels: Supplied channels
Iterable for flattening Schedule tree. Args: time: Shifted time due to parent Yields: Tuple[int, ScheduleComponent]:
Print with indent.
Validates a value against the correct type of the field. It calls ``_expected_types`` to get
Include unknown fields after dumping. Unknown fields are added with no processing at all. Args:
Include unknown fields after load. Unknown fields are added with no processing at all. Args:
Create a patched Schema for validating models. Model validation is not part of Marshmallow. Schemas
Validate the internal representation of the instance.
Add validation after instantiation.
Serialize the model into a Python dict of simple types. Note that this method requires
Deserialize a dict of simple types into an instance of this class. Note that this
n-qubit QFT on q in circ.
Partial trace over subsystems of multi-partite matrix. Note that subsystems are ordered as rho012 =
Partial trace over subsystems of multi-partite vector. Args: vec (vector_like): complex vector N trace_systems (list(int)):
Partial trace over subsystems of multi-partite matrix. Note that subsystems are ordered as rho012 =
Flatten an operator to a vector in a specified basis. Args: density_matrix (ndarray): a density
Devectorize a vectorized square matrix. Args: vectorized_mat (ndarray): a vectorized density matrix. method (str): the
Convert a Choi-matrix to a Pauli-basis superoperator. Note that this function assumes that the Choi-matrix
Truncate small values of a complex array. Args: array (array_like): array to truncte small values.
Construct the outer product of two vectors. The second vector argument is optional, if absent
Deprecated in 0.8+
Deprecated in 0.8+
Calculate the concurrence. Args: state (np.array): a quantum state (1x4 array) or a density matrix
Compute the Shannon entropy of a probability vector. The shannon entropy of a probability vector
Compute the von-Neumann entropy of a quantum state. Args: state (array_like): a density matrix or
Compute the mutual information of a bipartite state. Args: state (array_like): a bipartite state-vector or
Compute the entanglement of formation of quantum state. The input quantum state must be either
Compute the Entanglement of Formation of a 2-qubit density matrix. Args: rho ((array_like): (4,4) array_like,
Create a union (and also shift if desired) of all input `Schedule`s. Args: *schedules: Schedules
Create a flattened schedule. Args: schedule: Schedules to flatten name: Name of the new schedule.
Return schedule shifted by `time`. Args: schedule: The schedule to shift time: The time to
Return a new schedule with the `child` schedule inserted into the `parent` at `start_time`. Args:
r"""Return a new schedule with by appending `child` to `parent` at the last time of
Apply u3 to q.
Return backend status. Returns: BackendStatus: the status of the backend.
Start the progress bar. Parameters: iterations (int): Number of iterations.
Estimate the remaining time left. Parameters: completed_iter (int): Number of iterations completed. Returns: est_time: Estimated
Run the CommutativeCancellation pass on a dag Args: dag (DAGCircuit): the DAG to be optimized.
Return a list of QuantumCircuit object(s) from a qobj Args: qobj (Qobj): The Qobj object
Dissasemble a qobj and return the circuits, run_config, and user header Args: qobj (Qobj): The
Calculate the Hamming distance between two bit strings Args: str1 (str): First string. str2 (str):
Plot a histogram of data. Args: data (list or dict): This is either a list
Return quaternion for rotation about given axis. Args: angle (float): Angle in radians. axis (str):
Generate a quaternion from a set of Euler angles. Args: angles (array_like): Array of Euler
Normalizes a Quaternion to unit length so that it represents a valid rotation. Args: inplace
Converts a unit-length quaternion to a rotation matrix. Returns: ndarray: Rotation matrix.
Converts a unit-length quaternion to a sequence of ZYZ Euler angles. Returns: ndarray: Array of
Prepare received data for representation. Args: data (dict): values to represent (ex. {'001' : 130})
Create a histogram representation. Graphical representation of the input array using a vertical bars style
Customize check_type for handling containers.
Check that j is a valid index into self.
Print with indent.
Assemble a QasmQobjInstruction
Test if an array is a square matrix.
Test if an array is a diagonal matrix
Test if an array is a symmetrix matrix
Test if an array is a Hermitian matrix
Test if a matrix is positive semidefinite
Test if an array is an identity matrix.
Test if an array is a unitary matrix.
Return a new circuit that has been optimized.
Left sample a continuous function. Args: continuous_pulse: Continuous pulse function to sample. duration: Duration to
Transform a QuantumChannel to the Choi representation.
Transform a QuantumChannel to the SuperOp representation.
Transform a QuantumChannel to the Kraus representation.
Transform a QuantumChannel to the Chi representation.
Transform a QuantumChannel to the PTM representation.
Transform a QuantumChannel to the Stinespring representation.
Transform a QuantumChannel to the Operator representation.
Transform Operator representation to other representation.
Transform Stinespring representation to Operator representation.
Transform SuperOp representation to Choi representation.
Transform Choi to SuperOp representation.
Transform Kraus representation to Choi representation.
Transform Choi representation to Kraus representation.
Transform Stinespring representation to Kraus representation.
Transform Stinespring representation to Choi representation.
Transform Kraus representation to Stinespring representation.
Transform Kraus representation to SuperOp representation.
Transform Chi representation to a Choi representation.
Transform Choi representation to the Chi representation.
Tensor product (A ⊗ B) to bipartite matrices and reravel indicies. This is used for
Reravel two bipartite matrices.
Change of basis of bipartite matrix represenation.
Reshuffle the indicies of a bipartite matrix A[ij,kl] -> A[lj,ki].
Return true if dims correspond to an n-qubit channel.
Set visible property of ticklines and ticklabels of an axis to False
Set x, y and z labels according to one of conventions. Args: convention (str): One
Resets Bloch sphere data sets to empty.
Add a list of data points to bloch sphere. Args: points (array_like): Collection of data
Add a list of vectors to Bloch sphere. Args: vectors (array_like): Array with vectors of
Add a text or LaTeX annotation to Bloch sphere, parametrized by a qubit state or
Render the Bloch sphere and its data sets in on given figure and axes.
front half of sphere
axes
axes labels
Plot vector
Plot points
Plot annotations
Display Bloch sphere and corresponding data sets.
Saves Bloch sphere to file of type ``format`` in directory ``dirc``. Args: name (str): Name
Deprecated after 0.8
Constructs the top line of the element
Constructs the middle line of the element
Constructs the bottom line of the element
Returns the length of the element, including the box around.
Connects boxes and elements using wire_char and setting proper connectors. Args: wire_char (char): For example
In multi-bit elements, the label is centered vertically. Args: input_length (int): Rhe amount of wires
Given a layer, replace the Nones in it with EmptyWire elements. Args: layer (list): The
Creates a layer with BreakWire elements. Args: layer_length (int): The length of the layer to
Creates a layer with InputWire elements. Args: names (list): List of names for the wires.
Dumps the ascii art in the file. Args: filename (str): File to dump the ascii
Generates a list with lines. These lines form the text drawing. Args: line_length (int): Optional.
Returns a list of names for each wire. Args: with_initial_value (bool): Optional (Default: True). If
Given a list of wires, creates a list of lines with the text drawing. Args:
Get the params and format them to add them to a label. None if there
Creates the label for a box.
Merges two lines (top and bot) in the way that the overlapping make senses. Args:
When the elements of the layer have different widths, sets the width to the max
Convert an instruction into its corresponding Gate object, and establish any connections it introduces between
Constructs layers. Returns: list: List of DrawElements. Raises: VisualizationError: When the drawing is, for some
Sets the qubit to the element Args: qubit (qbit): Element of self.qregs. element (DrawElement): Element
Sets the clbit to the element Args: clbit (cbit): Element of self.cregs. element (DrawElement): Element
Sets the multi clbit box. Args: creg (string): The affected classical register. label (string): The
Connects the elements in the layer using wire_char. Args: wire_char (char): For example '║' or
Return the correspond math mode latex string.
Return the correspond symbolic number.
Return the correspond floating point number.
Compile a list of circuits into a qobj. Args: circuits (QuantumCircuit or list[QuantumCircuit]): circuits to
Apply filters to deprecation warnings. Force the `DeprecationWarning` warnings to be displayed for the qiskit
Basic hardware information about the local machine. Gives actual number of CPU's in the machine,
Checks if internet connection exists to host via specified port. If any exception is raised
Return the composition channel self∘other. Args: other (QuantumChannel): a quantum channel. qargs (list): a list
The matrix power of the channel. Args: n (int): compute the matrix power of the
Internal function that updates the status of a HTML job monitor. Args: job_var (BaseJob): The
Continuous constant pulse. Args: times: Times to output pulse for. amp: Complex pulse amplitude.
Continuous square wave. Args: times: Times to output wave for. amp: Pulse amplitude. Wave range
Continuous triangle wave. Args: times: Times to output wave for. amp: Pulse amplitude. Wave range
Continuous cosine wave. Args: times: Times to output wave for. amp: Pulse amplitude. freq: Pulse
r"""Enforce that the supplied gaussian pulse is zeroed at a specific width. This is acheived
r"""Continuous unnormalized gaussian pulse. Integrated area under curve is $\Omega_g(amp, sigma) = amp \times np.sqrt(2\pi
Continuous unnormalized gaussian derivative pulse. Args: times: Times to output pulse for. amp: Pulse amplitude
r"""Continuous gaussian square pulse. Args: times: Times to output pulse for. amp: Pulse amplitude. center:
r"""Continuous Y-only correction DRAG pulse for standard nonlinear oscillator (SNO) [1]. [1] Gambetta, J. M.,
The default pass manager that maps to the coupling map. Args: basis_gates (list[str]): list of
The default pass manager without a coupling map. Args: basis_gates (list[str]): list of basis gate
Test if this circuit has the register r. Args: register (Register): a quantum or classical
Mirror the circuit by reversing the instructions. This is done by recursively mirroring all instructions.
Invert this circuit. This is done by recursively inverting all gates. Returns: QuantumCircuit: the inverted
Append rhs to self if self contains compatible registers. Two circuits are compatible if they
Append rhs to self if self contains compatible registers. Two circuits are compatible if they
Append an instruction to the end of the circuit, modifying the circuit in place. Args:
DEPRECATED after 0.8
Add registers.
Raise exception if list of qubits contains duplicates.
Raise exception if a qarg is not in this circuit or bad format.
Raise exception if clbit is not in this circuit or bad format.
Call a decomposition pass on this circuit, to decompose one level (shallow decompose). Returns: QuantumCircuit:
Raise exception if the circuits are defined on incompatible registers
Return OpenQASM string.
Draw the quantum circuit Using the output parameter you can specify the format. The choices
Returns total number of gate operations in circuit. Returns: int: Total number of gate operations.
Return circuit depth (i.e. length of critical path). This does not include compiler or simulator
Return number of qubits plus clbits in circuit. Returns: int: Width of circuit.
Count each operation kind in the circuit. Returns: dict: a breakdown of how many operations
How many non-entangled subcircuits can the circuit be factored to. Args: unitary_only (bool): Compute only
Assign parameters to values yielding a new circuit. Args: value_dict (dict): {parameter: value, ...} Raises:
Assigns a parameter value to matching instructions in-place.
Plot the interpolated envelope of pulse Args: samples (ndarray): Data points of complex pulse envelope.
Search for SWAPs which allow for application of largest number of gates. Arguments: layout (Layout):
Map all gates that can be executed with the current layout. Args: layout (Layout): Map
Return the sum of the distances of two-qubit pairs in each CNOT in gates according
Count the mapped two-qubit gates, less the number of added SWAPs.
Return a copy of source_dag with metadata but empty. Generate only a single qreg in
Return op implementing a virtual gate on given layout.
Generate list of ops to implement a SWAP gate along a coupling edge.
Run one pass of the lookahead mapper on the provided DAG. Args: dag (DAGCircuit): the
Add a physical qubit to the coupling graph as a node. physical_qubit (int): An integer
Add directed edge to coupling graph. src (int): source physical qubit dst (int): destination physical
Return a CouplingMap object for a subgraph of self. nodelist (list): list of integer node
Returns a sorted list of physical_qubits
Test if the graph is connected. Return True if connected, False otherwise
Compute the full distance matrix on pairs of nodes. The distance map self._dist_matrix is computed
Returns the undirected distance between physical_qubit1 and physical_qubit2. Args: physical_qubit1 (int): A physical qubit physical_qubit2
transpile one or more circuits. Args: circuits (QuantumCircuit or list[QuantumCircuit]): circuits to compile backend (BaseBackend):
Deprecated - Use qiskit.compiler.transpile for transpiling from circuits to circuits. Transform a dag circuit into
Apply cu1 from ctl to tgt with angle theta.
Add an instruction and its context (where it's attached).
Invert all instructions.
Add controls to all instructions.
Add classical control register to all instructions.
Subscribes to an event, so when it's emitted all the callbacks subscribed, will be executed.
Emits an event if there are any subscribers. Args event (String): The event to be
Unsubscribe the specific callback to the event. Args event (String): The event to unsubscribe callback
Triggers an event, and associates some data to it, so if there are any subscribers,
Apply initialize to circuit.
Calculate a subcircuit that implements this initialization Implements a recursive initialization algorithm, including optimizations, from
Call to create a circuit with gates that take the desired vector to zero. Returns:
Static internal method to work out Ry and Rz rotation angles used to disentangle the
Static internal method to work out rotation to create the passed in qubit from the
Return a recursive implementation of a multiplexor circuit, where each instruction itself has a decomposition
Populates a Layout from a dictionary. The dictionary must be a bijective mapping between virtual
decides which one is physical/virtual based on the type. Returns (virtual, physical)
Checks if value has the format of a virtual qubit
Returns a copy of a Layout instance.
Adds a map element between `bit` and `physical_bit`. If `physical_bit` is not defined, `bit` will
Swaps the map between left and right. Args: left (tuple or int): Item to swap
Combines self and another_layout into an "edge map". For example:: self another_layout resulting edge map
Creates a trivial ("one-to-one") Layout with the registers in `regs`. Args: *regs (Registers): registers to
Converts a list of integers to a Layout mapping virtual qubits (index of the list)
Populates a Layout from a list containing virtual qubits---(QuantumRegister, int) tuples---, or None. Args: tuple_list
Apply Toffoli to from ctl1 and ctl2 to tgt.
gate ccx a,b,c { h c; cx b,c; tdg c; cx a,c; t c; cx
collect blocks of adjacent gates acting on a pair of "cx" qubits. The blocks contain
Apply u2 to q.
Return a Numpy.array for the U3 gate.
Return a new schedule with `schedule` inserted within `self` at `start_time`. Args: start_time: time to
Checks if the attribute name is in the list of attributes to protect. If so,
Return True if completely-positive trace-preserving.
Return the conjugate of the QuantumChannel.
Return the transpose of the QuantumChannel.
Return the composition channel self∘other. Args: other (QuantumChannel): a quantum channel subclass. qargs (list): a
The matrix power of the channel. Args: n (int): compute the matrix power of the
Return the QuantumChannel self + other. Args: other (complex): a complex number. Returns: Stinespring: the
Evolve a quantum state by the QuantumChannel. Args: state (QuantumState): The input statevector or density
Return the tensor product channel. Args: other (QuantumChannel): a quantum channel subclass. reverse (bool): If
Runs the BasicSwap pass on `dag`. Args: dag (DAGCircuit): DAG to map. Returns: DAGCircuit: A
Find a swap circuit that implements a permutation for this layer. Args: layer_partition (list): The
Takes (QuantumRegister, int) tuples and converts them into an integer array. Args: items (list): List
Converts gate tuples into a nested list of integers. Args: gates (list): List of (QuantumRegister,
Run the StochasticSwap pass on `dag`. Args: dag (DAGCircuit): DAG to map. Returns: DAGCircuit: A
Find a swap circuit that implements a permutation for this layer. The goal is to
Provide a DAGCircuit for a new mapped layer. i (int) = layer number first_layer (bool)
Map a DAGCircuit onto a CouplingMap using swap gates. Use self.initial_layout for the initial layout.
Return the Pauli group with 4^n elements. The phases have been removed. case 'weight' is
r"""Take pauli string to construct pauli. The qubit index of pauli label is q_{n-1} ...
Construct pauli from boolean array. Args: z (numpy.ndarray): boolean, z vector x (numpy.ndarray): boolean, x
r""" Multiply two Paulis and track the phase. $P_3 = P_1 \otimes P_2$: X*Y Args:
r""" Convert Pauli to a sparse matrix representation (CSR format). Order is q_{n-1} .... q_0,
Convert to Operator object.
Convert to Pauli circuit instruction.
Update partial or entire z. Args: z (numpy.ndarray or list): to-be-updated z indices (numpy.ndarray or
Update partial or entire x. Args: x (numpy.ndarray or list): to-be-updated x indices (numpy.ndarray or
Insert or append pauli to the targeted indices. If indices is None, it means append
Append pauli at the end. Args: paulis (Pauli): the to-be-inserted or appended pauli pauli_labels (list[str]):
Delete pauli at the indices. Args: indices(list[int]): the indices of to-be-deleted paulis Returns: Pauli: self
Return a random Pauli on number of qubits. Args: num_qubits (int): the number of qubits
Generate single qubit pauli at index with pauli_label with length num_qubits. Args: num_qubits (int): the
Apply an arbitrary 1-qubit unitary matrix. Args: gate (matrix_like): a single qubit gate matrix qubit
Apply a two-qubit unitary matrix. Args: gate (matrix_like): a the two-qubit gate matrix qubit0 (int):
Simulate the outcome of measurement of a qubit. Args: qubit (int): the qubit to measure
Generate memory samples from current statevector. Args: measure_params (list): List of (qubit, cmembit) values for
Apply a measure instruction to a qubit. Args: qubit (int): qubit is the qubit measured.
Apply a reset instruction to a qubit. Args: qubit (int): the qubit being rest This
Validate an initial statevector
Set the backend options for all experiments in a qobj
Set the initial statevector for simulation
Return the current statevector in JSON Result spec format
Determine if measure sampling is allowed for an experiment Args: experiment (QobjExperiment): a qobj experiment.
Run qobj asynchronously. Args: qobj (Qobj): payload of the experiment backend_options (dict): backend options Returns:
Run experiments in qobj Args: job_id (str): unique id for the job. qobj (Qobj): job
Run an experiment (circuit) and return a single experiment result. Args: experiment (QobjExperiment): experiment from
Semantic validations of the qobj which cannot be done via schemas.
Apply an arbitrary 1-qubit unitary matrix. Args: gate (matrix_like): a single qubit gate matrix qubit
Apply a two-qubit unitary matrix. Args: gate (matrix_like): a the two-qubit gate matrix qubit0 (int):
Validate an initial unitary matrix
Set the backend options for all experiments in a qobj
Set the initial unitary for simulation
Return the current unitary in JSON Result spec format
Run experiments in qobj. Args: job_id (str): unique id for the job. qobj (Qobj): job
Run an experiment (circuit) and return a single experiment result. Args: experiment (QobjExperiment): experiment from
Semantic validations of the qobj which cannot be done via schemas. Some of these may
Determine if obj is a bit
Recursively converts the integers, tuples and ranges in a_list for a qu/clbit from the bits.
Convert gate arguments to [qu|cl]bits from integers, slices, ranges, etc. For example circuit.h(0) -> circuit.h(QuantumRegister(2)[0])
Decorator for expanding an operation across a whole register or register subset. Args: n_bits (int):
Return a Numpy.array for the U3 gate.
Pick a layout by assigning n circuit qubits to device qubits 0, .., n-1. Args:
Check if self has overlap with `interval`. Args: interval: interval to be examined Returns: bool:
Return a new interval shifted by `time` from self Args: time: time to be shifted
Return a new Timeslot shifted by `time`. Args: time: time to be shifted
Return earliest start time in this collection. Args: *channels: Channels over which to obtain start_time.
Return maximum time of timeslots over all channels. Args: *channels: Channels over which to obtain
Return if self is mergeable with `timeslots`. Args: timeslots: TimeslotCollection to be checked
Return a new TimeslotCollection merged with a specified `timeslots` Args: timeslots: TimeslotCollection to be merged
Return a new TimeslotCollection shifted by `time`. Args: time: time to be shifted by
Return the correspond floating point number.
Report on GitHub that the specified branch is failing to build at the specified commit.
Sort rho data
Create a paulivec representation. Graphical representation of the input array. Args: rho (array): State vector
Plot the quantum state. Args: quantum_state (ndarray): statevector or density matrix representation of a quantum
Apply RZZ to circuit.
Apply Fredkin to circuit.
gate cswap a,b,c { cx c,b; ccx a,b,c; cx c,b; }
Extract readout and CNOT errors and compute swap costs.
Program graph has virtual qubits as nodes. Two nodes have an edge if the corresponding
If there is an edge with one endpoint mapped, return it. Else return in the
Select best remaining CNOT in the hardware for the next program edge.
Select the best remaining hardware qubit for the next program qubit.
Main run method for the noise adaptive layout.
Return a list of instructions for this CompositeGate. If the CompositeGate itself contains composites, call
Invert this gate.
Add controls to this gate.
Add classical control register.
Return True if operator is a unitary matrix.
Return the conjugate of the operator.
Return the transpose of the operator.
Return the matrix power of the operator. Args: n (int): the power to raise the
Return the operator self + other. Args: other (Operator): an operator object. Returns: Operator: the
Return the operator self + other. Args: other (complex): a complex number. Returns: Operator: the
Return the tensor shape of the matrix operator
Evolve a quantum state by the operator. Args: state (QuantumState): The input statevector or density
Evolve a quantum state by the operator. Args: state (QuantumState): The input statevector or density
Format input state so it is statevector or density matrix
Convert a QuantumCircuit or Instruction to an Operator.
Update the current Operator by apply an instruction.
Map a DAGCircuit onto a CouplingGraph using swap gates. Args: dag (DAGCircuit): input DAG circuit
Find a swap circuit that implements a permutation for this layer. The goal is to
Update the QASM string for an iteration of swap_mapper. i = layer number first_layer =
Return the correspond floating point number.
Return the correspond symbolic number.
Separate a bitstring according to the registers defined in the result header.
Format a single bitstring (memory) from a single shot experiment. - The hexadecimals are expanded
Convert nested list of shape (..., 2) to complex numpy array with shape (...) Args:
Format an experiment result memory object for measurement level 0. Args: memory (list): Memory from
Format an experiment result memory object for measurement level 1. Args: memory (list): Memory from
Format an experiment result memory object for measurement level 2. Args: memory (list): Memory from
Format a single experiment result coming from backend to present to the Qiskit user. Args:
Format statevector coming from the backend to present to the Qiskit user. Args: vec (list):
Format unitary coming from the backend to present to the Qiskit user. Args: mat (list[list]):
Decorator to ensure that a submit has been performed before calling the method. Args: func
Submit the job to the backend for execution. Raises: QobjValidationError: if the JSON serialization of
Gets the status of the job by querying the Python's future Returns: qiskit.providers.JobStatus: The current
Whether `lo_freq` is within the `LoRange`. Args: lo_freq: LO frequency to be checked Returns: bool:
Create a bloch sphere representation. Graphical representation of the input array, using as much bloch
Parallel execution of a mapping of `values` to the function `task`. This is functionally equivalent
Embed default qubit LO frequencies from backend and format them to list object. If configured
Embed default meas LO frequencies from backend and format them to list object. If configured
Expand all op nodes to the given basis. Args: dag(DAGCircuit): input dag Raises: QiskitError: if
Create a Q sphere representation. Graphical representation of the input array, using a Q sphere
Return the number of combinations for n choose k. Args: n (int): the total number
Return the index of a string of 0s and 1s.
Return the lex index of a combination.. Args: n (int): the total number of options
Plot a hinton diagram for the quanum state. Args: rho (ndarray): Numpy array for state
Plot the Bloch sphere. Plot a sphere, axes, the Bloch vector, and its projections onto
Plot the Bloch sphere. Plot a sphere, axes, the Bloch vector, and its projections onto
Plot the cityscape of quantum state. Plot two 3d bar graphs (two dimensional) of the
Plot the paulivec representation of a quantum state. Plot a bargraph of the mixed state
Return the index of a string of 0s and 1s.
Map a phase of a complexnumber to a color in (r,g,b). complex_number is phase is
Plot the qsphere representation of a quantum state. Args: rho (ndarray): State vector or density
Plot the quantum state. Args: quantum_state (ndarray): statevector or density matrix representation of a quantum
Generates shaded facecolors for shaded bars. This is here to work around a Matplotlib bug
Takes a list of polygons and return an array of their normals. Normals point towards
Shade *color* using normal vectors given by *normals*. *color* can also be an array of
Gets the unique backends that are available. Returns: list: Unique available backends. Raises: QiskitError: No
Monitor a single IBMQ backend. Args: backend (IBMQBackend): Backend to monitor. Raises: QiskitError: Input is
Gives overview information on all the IBMQ backends that are available.
Returns the Instruction object corresponding to the op for the node else None
Returns (Register, int) tuple where the int is the index of the wire else None
Check if DAG nodes are considered equivalent, e.g. as a node_match for nx.is_isomorphic. Args: node1
Generates constant-sampled `SamplePulse`. Applies `left` sampling strategy to generate discrete pulse from continuous function. Args:
Generates zero-sampled `SamplePulse`. Args: duration: Duration of pulse. Must be greater than zero. name: Name
Generates square wave `SamplePulse`. Applies `left` sampling strategy to generate discrete pulse from continuous function.
Generates sawtooth wave `SamplePulse`. Args: duration: Duration of pulse. Must be greater than zero. amp:
Generates triangle wave `SamplePulse`. Applies `left` sampling strategy to generate discrete pulse from continuous function.
Generates cosine wave `SamplePulse`. Applies `left` sampling strategy to generate discrete pulse from continuous function.
Generates sine wave `SamplePulse`. Args: duration: Duration of pulse. Must be greater than zero. amp:
r"""Generates unnormalized gaussian `SamplePulse`. Centered at `duration/2` and zeroed at `t=-1` to prevent large initial
r"""Generates unnormalized gaussian derivative `SamplePulse`. Applies `left` sampling strategy to generate discrete pulse from continuous
Generates gaussian square `SamplePulse`. Centered at `duration/2` and zeroed at `t=-1` and `t=duration+1` to prevent
r"""Generates Y-only correction DRAG `SamplePulse` for standard nonlinear oscillator (SNO) [1]. Centered at `duration/2` and
Return a new circuit that has been optimized.
Plots the gate map of a device. Args: backend (BaseBackend): A backend instance, figsize (tuple):
Compute distance.
Distance abs
Print the node data, with indent.
Return the Basic Aer backends in `BACKENDS` that are effectively available (as some of them
Return an instance of a backend from its class. Args: backend_cls (class): Backend class. Returns:
Return a list of qubits as (QuantumRegister, index) pairs.
Return a list of bits as (ClassicalRegister, index) pairs.
Rename a classical or quantum register throughout the circuit. regname = existing register name string
Remove all operation nodes with the given name.
Add all wires in a quantum register.
Add all wires in a classical register.
Add a qubit or bit to the circuit. Args: wire (tuple): (Register,int) containing a register
Verify that the condition is valid. Args: name (string): used for error reporting condition (tuple
Check the values of a list of (qu)bit arguments. For each element of args, check
Return a list of bits in the given condition. Args: cond (tuple or None): optional
Add a new operation node to the graph and assign properties. Args: op (Instruction): the
Apply an operation to the output of the circuit. Args: op (Instruction): the operation associated
Check that wiremap neither fragments nor leaves duplicate registers. 1. There are no fragmented registers.
Check that the wiremap is consistent. Check that the wiremap refers to valid wires and
Use the wire_map dict to change the condition tuple's creg name. Args: wire_map (dict): a
Add `dag` at the end of `self`, using `edge_map`.
Apply the input circuit to the output of this circuit. The two bases must be
Return the circuit depth. Returns: int: the circuit depth Raises: DAGCircuitError: if not a directed
Check that a list of wires is compatible with a node to be replaced. -
Return predecessor and successor dictionaries. Args: node (DAGNode): reference to multi_graph node Returns: tuple(dict): tuple(predecessor_map,
Map all wires of the input circuit. Map all wires of the input circuit to
Yield nodes in topological order. Returns: generator(DAGNode): node in topological order
Replace one node with dag. Args: node (DAGNode): node to substitute input_dag (DAGCircuit): circuit that
Iterator for node values. Yield: node: the node.
Deprecated. Use op_nodes().
Get the list of "op" nodes in the dag. Args: op (Type): Instruction subclass op
Deprecated. Use gate_nodes().
Get the list of gate nodes in the dag. Returns: list: the list of node
Deprecated. Use named_nodes().
Get the set of "op" nodes with the given name.
Deprecated. Use twoQ_gates().
Get list of 2-qubit gates. Ignore snapshot, barriers, and the like.
Deprecated. Use threeQ_or_more_gates().
Get list of 3-or-more-qubit gates: (id, data).
Returns list of the predecessors of a node as DAGNodes.
Returns list of the predecessors of a node that are connected by a quantum edge
Returns set of the ancestors of a node as DAGNodes.
Returns list of the successors of a node that are connected by a quantum edge
Remove an operation node n. Add edges from predecessors to successors.
Remove all of the ancestor operation nodes of node.
Remove all of the descendant operation nodes of node.
Remove all of the non-ancestors operation nodes of node.
Remove all of the non-descendants operation nodes of node.
Yield a shallow view on a layer of this DAGCircuit for all d layers of
Yield a layer for all gates of this circuit. A serial layer is a circuit
Yield layers of the multigraph.
Return a set of non-conditional runs of "op" nodes with the given names. For example,
Iterator for nodes that affect a given wire Args: wire (tuple(Register, index)): the wire to
Count the occurrences of operation names. Returns a dictionary of counts keyed on the operation
Return a dictionary of circuit properties.
Generate a TomographyBasis object. See TomographyBasis for further details.abs Args: prep_fun (callable) optional: the function
Add state preparation gates to a circuit.
Add state measurement gates to a circuit.
Add state preparation gates to a circuit.
Generate a dictionary of tomography experiment configurations. This returns a data structure that is used
Generate a dictionary of process tomography experiment configurations. This returns a data structure that is
Add tomography measurement circuits to a QuantumProgram. The quantum program must contain a circuit 'name',
Return a results dict for a state or process tomography experiment. Args: results (Result): Results
Compute the marginal counts for a subset of measured qubits. Args: counts (dict): the counts
Reconstruct a density matrix or process-matrix from tomography data. If the input data is state_tomography_data
Reconstruct a state from unconstrained least-squares fitting. Args: tomo_data (list[dict]): state or process tomography data.
Returns a projectors.
Reconstruct a matrix through linear inversion. Args: freqs (list[float]): list of observed frequences. ops (list[np.array]):
Returns the nearest positive semidefinite operator to an operator. This method is based on reference
Create the circuits to rotate to points in phase space Args: circuit (QuantumCircuit): The circuit
Get the value of the Wigner function from measurement results. Args: q_result (Result): Results from
Add state preparation gates to a circuit. Args: circuit (QuantumCircuit): circuit to add a preparation
Add measurement gates to a circuit. Args: circuit (QuantumCircuit): circuit to add measurement to. qreg
A text-based job status checker Args: job (BaseJob): The job to check. interval (int): The
Monitor the status of a IBMQJob instance. Args: job (BaseJob): Job to monitor. interval (int):
Compute Euler angles for a single-qubit gate. Find angles (theta, phi, lambda) such that unitary_matrix
Return the gate u1, u2, or u3 implementing U with the fewest pulses. The returned
Decompose a two-qubit gate over SU(2)+CNOT using the KAK decomposition. Args: unitary (Operator): a 4x4
Extends dag with virtual qubits that are in layout but not in the circuit yet.
gate ch a,b { h b; sdg b; cx a,b; h b; t b; cx
The backend configuration widget. Args: backend (IBMQbackend): The backend. Returns: grid: A GridBox widget.
The qubits properties widget Args: backend (IBMQbackend): The backend. Returns: VBox: A VBox widget.
The multiple qubit gate error widget. Args: backend (IBMQbackend): The backend. Returns: VBox: A VBox
Widget for displaying detailed noise map. Args: backend (IBMQbackend): The backend. Returns: GridBox: Widget holding
Widget for displaying job history Args: backend (IBMQbackend): The backend. Returns: Tab: A tab widget
Plots the job history of the user from the given list of jobs. Args: jobs
Return a new circuit that has been optimized.
Plot the interpolated envelope of pulse. Keyword Args: dt (float): Time interval of samples. interp_method
Apply cu3 from ctl to tgt with angle theta, phi, lam.
gate cu3(theta,phi,lambda) c, t { u1((lambda-phi)/2) t; cx c,t; u3(-theta/2,0,-(phi+lambda)/2) t; cx c,t; u3(theta/2,phi,0) t;
Returns a circuit putting 2 qubits in the Bell state.
transpile one or more circuits, according to some desired transpilation targets. All arguments may be
Select a PassManager and run a single circuit through it. Args: circuit_config_tuple (tuple): circuit (QuantumCircuit):
Resolve the various types of args allowed to the transpile() function through duck typing, overriding
Execute a list of circuits or pulse schedules on a backend. The execution is asynchronous,
Return the primary drive channel of this qubit.
Return the primary control channel of this qubit.
Return the primary measure channel of this qubit.
Return the primary acquire channel of this qubit.
n-qubit input state for QFT that produces output 1.
Assembles a list of circuits into a qobj which can be run on the backend.
Assembles a list of schedules into a qobj which can be run on the backend.
Assemble a list of circuits or pulse schedules into a Qobj. This function serializes the
Resolve the various types of args allowed to the assemble() function through duck typing, overriding
Verifies that there is a single common set of parameters shared between all circuits and
Remove the handlers for the 'qiskit' logger.
Create a hinton representation. Graphical representation of the input array using a 2D city style
Return the process fidelity between two quantum channels. This is given by F_p(E1, E2) =
Set the input text data.
Pop a PLY lexer off the stack.
Push a PLY lexer on the stack to parse filename.
include
r'[a-z][a-zA-Z0-9_]*
r'\n+
Create device specification with values in backend configuration. Args: backend(Backend): backend configuration Returns: DeviceSpecification: created
iterate over each block and replace it with an equivalent Unitary on the same wires.
Map each qubit in block_qargs to its wire position among the block's wires. Args: block_qargs
Get conversion method for instruction.
Return converted `AcquireInstruction`. Args: shift(int): Offset time. instruction (AcquireInstruction): acquire instruction. Returns: dict: Dictionary of
Return converted `FrameChangeInstruction`. Args: shift(int): Offset time. instruction (FrameChangeInstruction): frame change instruction. Returns: dict: Dictionary
Return converted `PersistentValueInstruction`. Args: shift(int): Offset time. instruction (PersistentValueInstruction): persistent value instruction. Returns: dict: Dictionary
Return converted `PulseInstruction`. Args: shift(int): Offset time. instruction (PulseInstruction): drive instruction. Returns: dict: Dictionary of
Return converted `Snapshot`. Args: shift(int): Offset time. instruction (Snapshot): snapshot instruction. Returns: dict: Dictionary of
Update annotations of discretized continuous pulse function with duration. Args: discretized_pulse: Discretized decorated continuous pulse.
Update annotations of discretized continuous pulse function. Args: discretized_pulse: Discretized decorated continuous pulse. sampler_inst: Applied
Sampler decorator base method. Samplers are used for converting an continuous function to a discretized
Return the backends matching the specified filtering. Filter the `backends` list by their `configuration` or
Resolve backend name from a deprecated name or an alias. A group will be resolved
Build a ``QuantumCircuit`` object from a ``DAGCircuit``. Args: dag (DAGCircuit): the input dag. Return: QuantumCircuit:
Convert an observable in matrix form to dictionary form. Takes in a diagonal observable as
Update a node in the symbol table. Everything in the symtab must be a node
Verify a qubit id against the gate prototype.
Verify each expression in a list.
Verify a user defined gate call.
Verify a register.
Verify a list of registers.
Return a list of (name, index) tuples for this id node.
Check that objects in list_of_nodes represent distinct (qu)bits. list_of_nodes is a list containing nodes of
statement : decl | quantum_op ';' | format ';' | ignore | quantum_op error |
indexed_id : id '[' NNINTEGER ']' | id '[' NNINTEGER error | id '[' error
gate_id_list : id
gate_id_list : gate_id_list ',' id
bit_list : id
bit_list : bit_list ',' id
decl : qreg_decl ';' | creg_decl ';' | qreg_decl error | creg_decl error | gate_decl
qreg_decl : QREG indexed_id
creg_decl : CREG indexed_id
gate_decl : GATE id gate_scope '(' ')' bit_list gate_body
gate_body : '{' '}'
unitary_op : U '(' exp_list ')' primary
unitary_op : CX primary ',' primary
unitary_op : id primary_list
unitary_op : id '(' ')' primary_list
unitary_op : id '(' exp_list ')' primary_list
gate_op : U '(' exp_list ')' id ';'
gate_op : CX id ',' id ';'
gate_op : id id_list ';'
gate_op : id '(' ')' id_list ';'
gate_op : id '(' exp_list ')' id_list ';'
gate_op : BARRIER id_list ';'
opaque : OPAQUE id gate_scope bit_list
opaque : OPAQUE id gate_scope '(' ')' bit_list
measure : MEASURE primary ASSIGN primary
barrier : BARRIER primary_list
reset : RESET primary
if : IF '(' id MATCHES NNINTEGER ')' quantum_op if : IF '(' id error
unary : id '(' expression ')'
expression : '-' expression %prec negative | '+' expression %prec positive
expression : expression '*' expression | expression '/' expression | expression '+' expression | expression
Compute the column. Input is the input text string. token is a token instance.
Returns a generator of the tokens.
Set the parse_deb field.
Parse some data.
Parser runner. To use this module stand-alone.
Returns a generator of the tokens.
Parse the data.
Apply crz from ctl to tgt with angle theta.
Return a basis state ndarray. Args: str_state (string): a string representing the state. num (int):
maps a pure state to a state matrix Args: state (ndarray): the number of qubits
Calculate the purity of a quantum state. Args: state (ndarray): a quantum state Returns: float:
Return the corresponding OPENQASM string.
Run the pass on the DAG, and write the discovered commutation relations into the property_set.
Creates a backend widget.
Updates the monitor info Called from another thread.
Generates a jobs_pending progress bar widget.
Flips the cx nodes to match the directed coupling map. Args: dag (DAGCircuit): DAG to
Run one pass of cx cancellation on the circuit Args: dag (DAGCircuit): the directed acyclic
Return a single backend matching the specified filtering. Args: name (str): name of the backend.
Return the shape for bipartite matrix
Return the conjugate of the QuantumChannel.
Return the transpose of the QuantumChannel.
Return the composition channel self∘other. Args: other (QuantumChannel): a quantum channel. qargs (list): a list
The matrix power of the channel. Args: n (int): compute the matrix power of the
Evolve a quantum state by the QuantumChannel. Args: state (QuantumState): The input statevector or density
Return the tensor product channel. Args: other (QuantumChannel): a quantum channel. reverse (bool): If False
Get the number and size of unique registers from bit_labels list. Args: bit_labels (list): this
Truncate long floats Args: matchobj (re.Match): contains original float format_str (str): format specifier Returns: str:
Return LaTeX string representation of circuit. This method uses the LaTeX Qconfig package to create
Get depth information for the circuit. Returns: int: number of columns in the circuit int:
Get height, width & scale attributes for the beamer page. Returns: tuple: (height, width, scale)
Returns an array of strings containing \\LaTeX for this circuit. If aliases is not None,
Get the index number for a quantum bit Args: qubit (tuple): The tuple of the
Loads the QObj schema for use in future validations. Caches schema in _SCHEMAS module attribute.
Generate validator for JSON schema. Args: name (str): Name for validator. Will be validator key
Load all default schemas into `_SCHEMAS`.
Validates JSON dict against a schema. Args: json_dict (dict): JSON to be validated. schema (dict
Return a cascading explanation of the validation error. Returns a cascading explanation of the validation
Return the corresponding OPENQASM string.
Majority gate.
Unmajority gate.
Returns a dict of DAGNode : Barrier objects, where the barrier needs to be inserted
Draw a quantum circuit to different formats (set by output parameter): 0. text: ASCII art
Draws a circuit using ascii art. Args: circuit (QuantumCircuit): Input circuit filename (str): optional filename
Draw a quantum circuit based on latex (Qcircuit package) Requires version >=2.6.0 of the qcircuit
Convert QuantumCircuit to LaTeX string. Args: circuit (QuantumCircuit): input circuit scale (float): image scaling filename
Draw a quantum circuit based on matplotlib. If `%matplotlib inline` is invoked in a Jupyter
Return a random quantum state from the uniform (Haar) measure on state space. Args: dim
Return a random dim x dim unitary Operator from the Haar measure. Args: dim (int):
Generate a random density matrix rho. Args: length (int): the length of the density matrix.
Return a normally distributed complex random matrix. Args: nrow (int): number of rows in output
Generate a random density matrix from the Hilbert-Schmidt metric. Args: N (int): the length of
Generate a random density matrix from the Bures metric. Args: N (int): the length of
Return the corresponding OPENQASM string.
Return a list of custom gate names in this gate body.
Return the corresponding OPENQASM string.
gate sdg a { u1(-pi/2) a; }
Return the composition channel self∘other. Args: other (QuantumChannel): a quantum channel. qargs (list): a list
The matrix power of the channel. Args: n (int): compute the matrix power of the
Return the QuantumChannel self + other. Args: other (QuantumChannel): a quantum channel. Returns: Chi: the
Return the QuantumChannel self + other. Args: other (complex): a complex number. Returns: Chi: the
Return the tensor product channel. Args: other (QuantumChannel): a quantum channel. reverse (bool): If False
Return the conjugate of the QuantumChannel.
Return the transpose of the QuantumChannel.
Return the composition channel self∘other. Args: other (QuantumChannel): a quantum channel. qargs (list): a list
Return the compose of a QuantumChannel with itself n times. Args: n (int): compute the
Return the QuantumChannel self + other. Args: other (QuantumChannel): a quantum channel. Returns: SuperOp: the
Return the QuantumChannel self + other. Args: other (complex): a complex number. Returns: SuperOp: the
Evolve a quantum state by the QuantumChannel. Args: state (QuantumState): The input statevector or density
Return the composition channel.
Evolve a quantum state by the operator. Args: state (QuantumState): The input statevector or density
Convert a QuantumCircuit or Instruction to a SuperOp.
Update the current Operator by apply an instruction.
Return a circuit with a barrier before last measurements.
Convert a list of circuits into a qobj. Args: circuits (list[QuantumCircuits] or QuantumCircuit): circuits to
Expand 3+ qubit gates using their decomposition rules. Args: dag(DAGCircuit): input dag Returns: DAGCircuit: output
Expand a given gate into its decomposition. Args: dag(DAGCircuit): input dag Returns: DAGCircuit: output dag
Apply u2 to q.
Calculate a subcircuit that implements this unitary.
Validate if the value is of the type of the schema's model. Assumes the nested
Validate if it's a list of valid item-field values. Check if each element in the
Plot the directed acyclic graph (dag) to represent operation dependencies in a quantum circuit. Note
Set the absolute tolerence parameter for float comparisons.
Set the relative tolerence parameter for float comparisons.
Reshape input and output dimensions of operator. Arg: input_dims (tuple): new subsystem input dimensions. output_dims
Return tuple of input dimension for specified subsystems.
Return tuple of output dimension for specified subsystems.
Make a copy of current operator.
Return the compose of a operator with itself n times. Args: n (int): the number
Check if input dimension corresponds to qubit subsystems.
Perform a contraction using Numpy.einsum Args: tensor (np.array): a vector or matrix reshaped to a
Override ``_deserialize`` for customizing the exception raised.
Override ``_serialize`` for customizing the exception raised.
Check if at least one of the possible choices validates the value. Possible choices are
Return the state fidelity between two quantum states. Either input may be a state vector,
Apply real scalar function to singular values of a matrix. Args: a (array_like): (N, N)
If `dag` is mapped to `coupling_map`, the property `is_swap_mapped` is set to True (or to
Take a statevector snapshot of the internal simulator representation. Works on all qubits, and prevents
Assemble a QasmQobjInstruction
Special case. Return self.
Set snapshot label to name Args: name (str or None): label to assign unitary Raises:
Return True if completely-positive trace-preserving (CPTP).
Test if a channel is completely-positive (CP)
Test if Choi-matrix is completely-positive (CP)
Return True if QuantumChannel is a unitary channel.
Try to convert channel to a unitary representation Operator.
Convert to a Kraus or UnitaryGate circuit instruction. If the channel is unitary it will
Test if a channel is completely-positive (CP)
Test if Choi-matrix is trace-preserving (TP)
Format input state so it is statevector or density matrix
Convert input into a QuantumChannel subclass object or Operator object
If `dag` is mapped and the direction is correct the property `is_direction_mapped` is set to
Create Graphene Enum for sorting a SQLAlchemy class query Parameters - cls : Sqlalchemy model
Returns a Graphene argument for the sort field that accepts a list of sorting directions
Find all substrings of the given string which represent date and/or time and parse them.
Monkey patching _strptime to avoid problems related with non-english locale changes on the system. For
Get an ordered mapping with locale codes as keys and corresponding locale instances as values.
Yield locale instances. :param languages: A list of language codes, e.g. ['en', 'es', 'zh-Hant']. If
Check if tokens are valid tokens for the locale. :param tokens: a list of string
Split the date string using translations in locale info. :param string: Date string to be
Find all substrings of the given string which represent date and/or time and parse them.
Parse date and time from given date string. :param date_string: A string representing date and/or
Attemps to parse time part of date strings like '1 day ago, 2 PM'
Check if the locale is applicable to translate date string. :param date_string: A string representing
Translate the date string to its English equivalent. :param date_string: A string representing date and/or
Parse with formats and return a dictionary with 'period' and 'obj_date'. :returns: :class:`datetime.datetime`, dict or
Parse string representing date and/or time in recognizable localized formats. Supports parsing multiple languages and
return load plan (timestamps generator)
return ammo generator
translate http code to net code. if accertion failed, set net code to 314
translate exception str to http code
Read phantom tool specific options
Generate phantom tool run config
get merged info about phantom conf
reads config
compose benchmark block
download remote resources, replace links with local filenames add result file section :param dict config:
2h 2h5m 5m 180 1h4m3 :param duration: :return:
step(10,200,5,180) step(5,50,2.5,5m) line(22,154,2h5m) step(5,50,2.5,5m) line(22,154,2h5m) const(10,1h4m3s) :param field: :param value: :return:
:returns: [(plugin_name, plugin_package, plugin_config), ...] :rtype: list of tuple
:returns: [(plugin_name, plugin_package, plugin_config), ...] :rtype: list of tuple
This function polls stdout and stderr streams and writes their contents to log
helper for above functions
Check whether pid exists in the current process table.
>>> string = 'apple orange "banana tree" green' >>> splitstring(string) ['apple', 'orange', 'green', '"banana tree"']
Reads {_len} characters if _len is not None else reads line :param pos: start reading
get_option wrapper
stepper part of reading options
Generate test data if necessary
Choose the name for stepped data file
Read stepper info from json
Write stepper info to json
stpd generation using Stepper class
Create Load Plan as defined in schedule. Publish info about its duration.
:param n: number of charge :return: when to shoot nth charge, milliseconds
Return rps for second t
get list of constant load parts (we have no constant load at all, but tank
get list of each second's rps :returns: list of tuples (rps, duration of corresponding rps
Execute and check exit code
The reason why we have two separate methods for monitoring and aggregates is a strong
x Make a set of points for `this` label overall_quantiles, overall_meta, net_codes, proto_codes, histograms
Parameters ---------- measurement : string measurement type (e.g. monitoring, overall_meta, net_codes, proto_codes, overall_quantiles) additional_tags :
publish value to status
helper to aggregate codes by mask
Say the workers to finish their jobs and quit.
A feeder that runs in distinct thread in main process.
A worker that does actual jobs
A worker that does actual jobs
Set up logging
override config options with user specified options
Make preparations before running Tank
returns default configs list, from /etc, home dir and package_data
call shutdown routines
Collect data, cache it and send to listeners
notify all listeners about aggregate data and stats
Returns a marker function of the requested marker_type >>> marker = get_marker('uniq')(__test_missile) >>> type(marker) <type
:type column_mapping: dict :type data_session: DataSession
:type path: str
:type options: list of str :rtype: list of dict
returns default configs list, from /etc and home dir
clean markup from string
Parse duration string, such as '3h2m3s' into milliseconds >>> parse_duration('3h2m3s') 10923000 >>> parse_duration('0.3s') 300 >>>
>>> solve_quadratic(1.0, 2.0, 1.0) (-1.0, -1.0)
rounds float to closest int :rtype: int :param n: float
Start local agent
Remove agent's files from remote host
Create folder and copy agent and metrics scripts to remote host
Start remote agent
Remove agent's files from remote host
:type cfg_ini: ConfigParser
:type sections: list of Section :rtype: list of Section
:rtype: {str: object}
:rtype: (str, object)
:rtype: callable
:type parent_name: str :type sections: list of Section
Underlines content with '='. New lines and tabs will be replaced :param str content: :param
Searching for line in jmeter.log such as Waiting for possible shutdown message on port 4445
Genius idea by Alexey Lavrenyuk
Gracefull termination of running process
Parse lines and return stats
instantiate criterion from config string
Prepare config data.
Startup and shutdown commands config Used by agent.py on the target
bash script w/ custom commands inside inspired by half a night trying to avoid escaping
Telegraf collector config, toml format
raise exception on disk space exceeded
raise exception on RAM exceeded
Gets width and height of terminal viewport
Gets next line for right panel
Cut tuple of line chunks according to it's wisible lenght
Render left blocks
Main method to render screen view
Add widget string to right panel of the screen
Right-pad lines of block to equal width
Calculate wisible length of string
Creates load plan timestamps generator >>> from util import take >>> take(7, LoadPlanBuilder().ramp(5, 4000).create()) [0,
format level str
formula for measurement error sqrt ( (sum(1, n, (k_i - <k>)**2) / (n*(n-1)))
add right panel widget
clean markup from string
Send request to writer service.
:return: job_nr, upload_token :rtype: tuple
:returns: {plugin_name: plugin_class, ...} :rtype: dict
Tells core to take plugin options and instantiate plugin classes
Call configure() on all plugins
Call is_test_finished() on all plugins 'till one of them initiates exit
Call post_process() on all plugins
if pid specified: set process w/ pid `pid` CPU affinity to specified `affinity` core(s) if
Retrieve a plugin of desired class, KeyError raised otherwise
Retrieve a list of plugins of desired class, KeyError raised otherwise
Move or copy single file to artifacts dir
Add file to be stored as result artifact on post-process phase
Generate temp file name in artifacts base dir and close temp file handle
Call close() for all plugins
Read configs set into storage
Flush current stat to file
Get options list with requested prefix
return sections with specified prefix
Return all items found in this chunk
:rtype: PhantomConfig
returns info object
Prepare for monitoring - install agents etc
Start agents execute popen of agent.py on target and start output reader thread.
Poll agents for data
Shutdown agents
sends pending data set to listeners
we need to be flexible in order to determine which plugin's configuration specified and make
store metric in data tree and calc offset signs sign < 0 is CYAN, means
decode agents jsons, count diffs
Start subscribing channels. If the necessary connection isn't open yet, it opens now.
Run forever and block until exception is rasised. initial_channels is the channels to start with.
Close any of open connections
## Experimental
Perform one request, possibly raising RetryException in the case the response is 429. Otherwise, if
Get a list of orders https://docs.alpaca.markets/web-api/orders/#get-a-list-of-orders
Request a new order
Get an order
Get an open position
Get a list of assets
Get an asset
Get BarSet(dict[str]->list[Bar]) The parameter symbols can be either a comma-split string or a list of
(decorator) Create a simple solid. This shortcut allows the creation of simple solids that do
(decorator) Create a solid with specified parameters. This shortcut simplifies the core solid API by
Create a new ``MultipleResults`` object from a dictionary. Keys of the dictionary are unpacked into
This captures a common pattern of fanning out a single value to N steps, where
gunzips /path/to/foo.gz to /path/to/raw/2019/01/01/data.json
Ensures argument obj is a dictionary, and enforces that the keys/values conform to the types
Ensures argument obj is a native Python dictionary, raises an exception if not, and otherwise
Ensures argument obj is either a dictionary or None; if the latter, instantiates an empty
Callback receives a stream of event_records
Record a stream of event records to json
Read a config file and instantiate the RCParser. Create new :class:`configparser.ConfigParser` for the given **path**
Get config dictionary for the given repository. If the repository section is not found in
Assigned parameters into the appropiate place in the input notebook Args: nb (NotebookNode): Executable notebook
Creates a solid with the given number of (meaningless) inputs and outputs. Config controls the
This recursive descent thing formats a config dict for GraphQL.
Get a pipeline by name. Only constructs that pipeline and caches it. Args: name (str):
Return all pipelines as a list Returns: List[PipelineDefinition]:
Spark configuration. See the Spark documentation for reference: https://spark.apache.org/docs/latest/submitting-applications.html
This function polls the process until it returns a valid item or returns PROCESS_DEAD_AND_QUEUE_EMPTY if
Execute pipeline using message queue as a transport
Waits until all there are no processes enqueued.
The schema for configuration data that describes the type, optionality, defaults, and description. Args: dagster_type
Snowflake configuration. See the Snowflake documentation for reference: https://docs.snowflake.net/manuals/user-guide/python-connector-api.html
Builds the execution plan.
Here we build a new ExecutionPlan from a pipeline definition and the environment config. To
Build a pipeline which is a subset of another pipeline. Only includes the solids which
Return the solid named "name". Throws if it does not exist. Args: name (str): Name
Get the shell commands we'll use to actually build and publish a package to PyPI.
Publishes (uploads) all submodules to PyPI. Appropriate credentials must be available to twine, e.g. in
Tags all submodules for a new release. Ensures that git tags, as well as the
Create a context definition from a pre-existing context. This can be useful in testing contexts
A decorator for annotating a function that can take the selected properties from a ``config_value``
A decorator for a annotating a function that can take the selected properties of a
Automagically wrap a block of text.
The following fields are shared between both QueryJobConfig and LoadJobConfig.
See: https://googleapis.github.io/google-cloud-python/latest/bigquery/generated/google.cloud.bigquery.job.QueryJobConfig.html
Return a new solid that executes and materializes a SQL select statement. Args: name (str):
Download an object from s3. Args: info (ExpectationExecutionInfo): Must expose a boto3 S3 client as
Upload a file to s3. Args: info (ExpectationExecutionInfo): Must expose a boto3 S3 client as
Wraps the execution of user-space code in an error boundary. This places a uniform policy
The missing mkdir -p functionality in os.
Wraps the output of a user provided function that may yield or return a value
Construct the run storage for this pipeline. Our rules are the following: If the RunConfig
In the event of pipeline initialization failure, we want to be able to log the
Returns iterator that yields :py:class:`SolidExecutionResult` for each solid executed in the pipeline. This is intended
"Synchronous" version of :py:func:`execute_pipeline_iterator`. Note: raise_on_error is very useful in testing contexts when not testing
Get a :py:class:`SolidExecutionResult` for a given solid name.
Whether the solid execution was successful
Whether the solid execution was skipped
Return dictionary of transformed results, with keys being output names. Returns None if execution result
Returns transformed value either for DEFAULT_OUTPUT or for the output given as output_name. Returns None
Returns the failing step's data that happened during this solid's execution, if any
A :py:class:`Dict` with a name allowing it to be referenced by that name.
Schema for configuration data with string keys and typed values via :py:class:`Field` . Args: fields
A permissive dict will permit the user to partially specify the permitted fields. Any fields
Selectors are used when you want to be able present several different options to the
A :py:class`Selector` with a name, allowing it to be referenced by that name. Args: name
Datasets must be of form "project.dataset" or "dataset"
Tables must be of form "project.dataset.table" or "dataset.table"
Execute the user-specified transform for the solid. Wrap in an error boundary and do all
Decorator version of as_dagster_type. See documentation for :py:func:`as_dagster_type` .
Takes a python cls and creates a type for it in the Dagster domain. Args:
A decorator for creating a resource. The decorated function will be used as the resource_fn
See https://bit.ly/2OpksJC for source of the subprocess stdout/stderr capture pattern in this function.
For each key-value pair in spark conf, we need to pass to CLI in format:
A SystemNamedDict object is simply a NamedDict intended for internal (dagster) use.
Events API v2 enables you to add PagerDuty's advanced event and incident management functionality to
Groups execution steps by solid, in topological order of the solids.
Default method to acquire database connection parameters. Sets connection parameters to match settings.py, and sets
Receives a dictionary connection_params to setup a connection to the database. Dictionary correct setup is
Returns an active connection cursor to the database.
Closes the client connection to the database.
Builds an instance of model from the model_dict.
Overrides standard to_python method from django models to allow correct translation of Mongo array to
Returns the formfield for the array.
Overrides Django's default to_python to allow correct translation to instance.
Filter the queryset for the instance this manager is bound to.
Computes the expected number of false positives caused by using u to approximate set sizes
Computes the matrix of expected false positives for all possible sub-intervals of the complete domain
Computes the expected number of false positives caused by using u to approximate set sizes
Computes the matrix of expected false positives for all possible sub-intervals of the complete domain
Computes the optimal partitions given the size distributions and computed number of expected false positives
Compute the optimal partitions given a distribution of set sizes. Args: sizes (numpy.array): The complete
Estimate the Jaccard similarity (resemblance) between this b-bit MinHash and the other.
Compute the function A(r, b)
Compute the functions C1 and C2
Initialize the slots of the LeanMinHash. Args: seed (int): The random seed controls the set
Compute the byte size after serialization. Args: byteorder (str, optional): This is byte order of
Serialize this lean MinHash and store the result in an allocated buffer. Args: buf (buffer):
Deserialize a lean MinHash from a buffer. Args: buf (buffer): `buf` must implement the `buffer`_
Update this MinHash with a new value. The value will be hashed using the hash
Estimate the `Jaccard similarity`_ (resemblance) between the sets represented by this MinHash and the other.
Estimate the cardinality count based on the technique described in `this paper <http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365694>`_. Returns: int:
Merge the other MinHash with this one, making this one the union of both. Args:
:returns: datasketch.MinHash -- A copy of this MinHash by exporting its state.
Create a MinHash which is the union of the MinHash objects passed as arguments. Args:
Compute the false positive probability given the containment threshold. xq is the ratio of x/q.
Compute the optimal parameters that minimizes the weighted sum of probabilities of false positive and
Index all sets given their keys, MinHashes, and sizes. It can be called only once
Giving the MinHash and size of the query set, retrieve keys that references sets with
Returns: bool: Check if the index is empty.
Estimate the `weighted Jaccard similarity`_ between the multi-sets represented by this weighted MinHash and the
Create a new weighted MinHash given a weighted Jaccard vector. Each dimension is an integer
Insert a key to the index, together with a MinHash (or weighted MinHash) of the
Remove the key from the index. Args: key (hashable): The unique identifier of a set.
Returns the bucket allocation counts (see :func:`~datasketch.MinHashLSH.get_counts` above) restricted to the list of keys given.
Update the HyperLogLog with a new data value in bytes. The value will be hashed
Estimate the cardinality of the data values seen so far. Returns: int: The estimated cardinality.
Merge the other HyperLogLog with this one, making this the union of the two. Args:
Reset the current HyperLogLog to empty.
Computes the average precision at k. This function computes the average prescision at k between
Computes the mean average precision at k. This function computes the mean average prescision at
Add a unique key, together with a MinHash (or weighted MinHash) of the set referenced
Index all the keys added so far and make them searchable.
Return the approximate top-k keys that have the highest Jaccard similarities to the query set.
https://golang.org/src/sort/search.go?s=2247:2287#L49
Cleanup client resources and disconnect from AsyncMinHashLSH storage.
see :class:`datasketch.MinHashLSH`.
see :class:`datasketch.MinHashLSH`.
Return ordered storage system based on the specified config. The canonical example of such a
Return an unordered storage system based on the specified config. The canonical example of such
Returns a dict where the keys are the keys of the container. The values are
:param adapter: allauth.socialaccount Adapter subclass. Usually OAuthAdapter or Auth2Adapter :param app: `allauth.socialaccount.SocialApp` instance :param token:
Required to allow using custom USER_DETAILS_SERIALIZER in JWTSerializer. Defining it here to avoid circular imports
Set the social login process state to connect rather than login Refer to the implementation
Select the correct text from the Japanese number, reading and alternatives
Merge lpair < rpair while applying semi-irregular rendaku rules
starting here, it groups the number by three from the tail '1234567' -> (('1',),('234',),('567',)) :param
it adds the list of spelling to the blocks ( ('1',),('034',)) -> (('1',['satu']),('234',['tiga', 'puluh', 'empat'])
join the words by first join lists in the tuple :param word_blocks: tuple :rtype: str
Args: val: Numeric value currency (str): Currency code cents (bool): Verbose cents separator (str): Cent
Parse scoped selector.
Parse a single statement. Returns: Either a `BindingStatement`, `ImportStatement`, `IncludeStatement`, or `None` if no more
Parse a single literal value. Returns: The parsed value.
Advances to next line.
Parse a (possibly scoped) selector. A selector is a sequence of one or more valid
Try to parse a container type (dict, list, or tuple).
Try to parse a basic type (str, bool, number).
Try to parse a configurable reference (@[scope/name/]fn_name[()]).
Try to parse an macro (%scope/name).
Reraises `exception`, appending `message` to its string representation.
Convert an operative config string to markdown format.
Writes out Gin's operative config, and maybe adds a summary of it.
Find the first __init__ or __new__ method in the given class's MRO.
Make sure `fn` can be wrapped cleanly by functools.wraps.
Decorate a function or class with the given decorator. When `fn_or_cls` is a function, applies
Checks whether `selector` should be skipped (if unknown).
Returns `value` in a format parseable by `parse_value`, or `None`. Simply put, This function ensures
Clears the global configuration. This clears any parameter values set by `bind_parameter` or `parse_config`, as
Binds the parameter value specified by `binding_key` to `value`. The `binding_key` argument should either be
Returns the currently bound value to the specified `binding_key`. The `binding_key` argument should look like
Returns True if `arg_name` might be a valid parameter for `fn_or_cls`. Specifically, this means that
Gets cached argspec for `fn`.
Returns the names of the supplied arguments to the given function.
Returns the names of all positional arguments to the given function.
Retrieve all default values for configurable parameters of a function. Any parameters included in the
Opens a new configuration scope. Provides a context manager that opens a new explicit configuration
Wraps `fn_or_cls` to make it configurable. Infers the configurable name from `fn_or_cls.__name__` if necessary, and
Decorator to make a function or class configurable. This decorator registers the decorated function/class as
Allow referencing/configuring an external class or function. This alerts Gin to the existence of the
Retrieve the "operative" configuration as a config string. The operative configuration consists of all parameter
Parse a file, string, or list of strings containing parameter bindings. Parses parameter binding strings
Register a file reader for use in parse_config_file. Registered file readers will be used to
Parse a Gin config file. Args: config_file: The path to a Gin config file. skip_unknown:
Parse a list of config files followed by extra Gin bindings. This function is equivalent
Parse and return a single Gin value.
A function that should be called after parsing all Gin config files. Calling this function
Provides an iterator over all values in a nested structure.
Provides an iterator over references in the given config. Args: config: A dictionary mapping scoped
Creates a constant that can be referenced from gin config files. After calling this function
Decorator for an enum class that generates Gin constants from values. Generated constants have format
Hook to find/raise errors for references to unknown configurables.
Retrieves all selectors matching `partial_selector`. For instance, if "one.a.b" and "two.a.b" are stored in a
Gets a (single) value matching `partial_selector`. If the partial_selector exactly matches a complete selector, the
Returns all values matching `partial_selector` as a list.
Returns the minimal selector that uniquely matches `complete_selector`. Args: complete_selector: A complete selector stored in
Translate a Mopidy search query to a Spotify search query
Parse Retry-After header from response if it is set.
Validate new property value before setting it. value -- New value
Get the property description. Returns a dictionary describing the property.
Set the current value of the property. value -- the value to set
Get the thing at the given index. idx -- the index
Initialize the handler. things -- list of Things managed by this server hosts -- list
Set the default headers for all requests.
Handle a GET request. property_name -- the name of the property from the URL path
Validate Host header.
Handle a GET request, including websocket requests. thing_id -- ID of the thing this request
Handle an incoming message. message -- message to handle
Handle a GET request. thing_id -- ID of the thing this request is for property_name
Handle a PUT request. thing_id -- ID of the thing this request is for property_name
Handle a POST request. thing_id -- ID of the thing this request is for
Handle a GET request. thing_id -- ID of the thing this request is for action_name
Handle a PUT request. TODO: this is not yet defined in the spec thing_id --
Handle a DELETE request. thing_id -- ID of the thing this request is for action_name
Handle a GET request. thing_id -- ID of the thing this request is for
Start listening for incoming connections.
Stop listening.
Get the action description. Returns a dictionary describing the action.
Start performing the action.
Finish performing the action.
Get the event description. Returns a dictionary describing the event.
Get the default local IP address. From: https://stackoverflow.com/a/28950776
Get all IP addresses. Returns list of addresses.
Set a new value for this thing. value -- value to set
Notify observers of a new value. value -- new value
Return the thing state as a Thing Description. Returns the state as a dictionary.
Set the prefix of any hrefs associated with this thing. prefix -- the prefix
Get the thing's properties as a dictionary. Returns the properties as a dictionary, i.e. name
Get the thing's actions as an array. action_name -- Optional action name to get descriptions
Get the thing's events as an array. event_name -- Optional event name to get descriptions
Add a property to this thing. property_ -- property to add
Remove a property from this thing. property_ -- property to remove
Get a property's value. property_name -- the property to get the value of Returns the
Get a mapping of all properties and their values. Returns a dictionary of property_name ->
Set a property value. property_name -- name of the property to set value -- value
Get an action. action_name -- name of the action action_id -- ID of the action
Add a new event and notify subscribers. event -- the event that occurred
Add an available event. name -- name of the event metadata -- event metadata, i.e.
Perform an action on the thing. action_name -- name of the action input_ -- any
Remove an existing action. action_name -- name of the action action_id -- ID of the
Add an available action. name -- name of the action metadata -- action metadata, i.e.
Remove a websocket subscriber. ws -- the websocket
Add a new websocket subscriber to an event. name -- name of the event ws
Remove a websocket subscriber from an event. name -- name of the event ws --
Notify all subscribers of a property change. property_ -- the property that changed
Notify all subscribers of an action status change. action -- the action whose status changed
Notify all subscribers of an event. event -- the event that occurred
Custom version of the standard annotate function that allows using field names as annotated fields.
Updates all rows that match the filter.
Sets the action to take when conflicts arise when attempting to insert/create a new row.
Creates multiple new records in the database. This allows specifying custom conflict behavior using .on_conflict().
Creates a new record in the database. This allows specifying custom conflict behavior using .on_conflict().
Creates a new record in the database and then gets the entire row. This allows
Creates a new record or updates the existing one with the specified data. Arguments: conflict_target:
Creates a new record or updates the existing one with the specified data and then
Creates a set of new records or updates the existing ones with the specified data.
Builds the SQL compiler for a insert query. Arguments: rows: A list of dictionaries, where
Verifies whether this field is gonna modify something on its own. "Magical" means that a
Gets the fields to use in an upsert. This some nice magic. We'll split the
Sets the action to take when conflicts arise when attempting to insert/create a new row.
Creates a new record or updates the existing one with the specified data. Arguments: conflict_target:
Creates a new record or updates the existing one with the specified data and then
Creates a set of new records or updates the existing ones with the specified data.
When a model gets created or updated.
When a model gets deleted.
Selects whichever field is not None, in the specified order. Arguments: fields: The fields to
Resolves expressions inside the dictionary.
Compiles the HStore value into SQL. Compiles expressions contained in the values of HStore entries
Compiles this expression into SQL.
Gets a re-labeled clone of this expression.
Resolves the expression into a :see:HStoreColumn expression.
Compiles this expression into SQL.
Renames the aliases for the specified annotations: .annotate(myfield=F('somestuf__myfield')) .rename_annotations(myfield='field') Arguments: annotations: The annotations to rename.
Adds an extra condition to an existing JOIN. This allows you to for example do:
Adds the given (model) fields to the select set. The field names are added in
Gets whether the field with the specified name is a HStoreField. Returns A tuple of
Sets the values to be used in this query. Insert fields are fields that are
Ran when a new model is created.
Ran when a model is being deleted.
Ran when the name of a model is changed.
Ran when a field is added to a model.
Ran when a field is removed from a model.
Ran when the configuration on a field changed.
Creates a REQUIRED CONSTRAINT for the specified hstore key.
Renames an existing REQUIRED CONSTRAINT for the specified hstore key.
Drops a REQUIRED CONSTRAINT for the specified hstore key.
Gets the name for a CONSTRAINT that applies to a single hstore key. Arguments: table:
Creates the actual SQL used when applying the migration.
Serializes the :see:ConditionalUniqueIndex for the migrations file.
Creates a custom setup.py command.
Gets the base class for the custom database back-end. This should be the Django PostgreSQL
Ran when a new model is created.
Ran when a model is being deleted.
Ran when the name of a model is changed.
Ran when a field is added to a model.
Ran when a field is removed from a model.
Ran when the configuration on a field changed.
Ran to prepare the configured database. This is where we enable the `hstore` extension if
Override the base class so it doesn't cast all values to strings. psqlextra supports expressions
Gets the values to pass to :see:__init__ when re-creating this object.
Extra prep on query values by converting dictionaries into :see:HStoreValue expressions. This allows putting expressions
Builds the RETURNING part of the query.
Builds the SQL INSERT statement.
Rewrites a formed SQL INSERT query to include the ON CONFLICT clause. Arguments: sql: The
Rewrites a formed SQL INSERT query to include the ON CONFLICT DO UPDATE clause.
Rewrites a formed SQL INSERT query to include the ON CONFLICT DO NOTHING clause.
Builds the `conflict_target` for the ON CONFLICT clause.
Gets the field on a model with the specified name. Arguments: name: The name of
Formats a field's name for usage in SQL. Arguments: field_name: The field name to format.
Formats a field's value for usage in SQL. Arguments: field_name: The name of the field
Normalizes a field name into a string by extracting the field name if it was
Ran when the name of a model is changed.
Ran when a field is added to a model.
Ran when a field is removed from a model.
Ran when the configuration on a field changed.
Creates a UNIQUE constraint for the specified hstore keys.
Renames an existing UNIQUE constraint for the specified hstore keys.
Drops a UNIQUE constraint for the specified hstore keys.
Gets the name for a UNIQUE INDEX that applies to one or more keys in
Iterates over the keys marked as "unique" in the specified field. Arguments: field: The field
Adds an extra condition to this join. Arguments: field: The field that the condition will
Compiles this JOIN into a SQL string.
Creates a new :see:ConditionalJoin from the specified :see:Join object. Arguments: join: The :see:Join object to
Approximate the 95% confidence interval for Student's T distribution. Given the degrees of freedom, returns
Find the pooled sample variance for two samples. Args: sample1: one sample. sample2: the other
Calculate a t-test score for the difference between two samples. Args: sample1: one sample. sample2:
Determine whether two samples differ significantly. This uses a Student's two-sample, two-tailed t-test with alpha=0.95.
Return a topological sorting of nodes in a graph. roots - list of root nodes
permutations(range(3), 2) --> (0,1) (0,2) (1,0) (1,2) (2,0) (2,1)
N-Queens solver. Args: queen_count: the number of queens to solve for. This is also the
uct tree search
select move; unexplored children first, then according to uct value
random play until both players pass
update win/loss count along path
Filters out benchmarks not supported by both Pythons. Args: benchmarks: a set() of benchmark names
Recursively expand name benchmark names. Args: bm_name: string naming a benchmark or benchmark group. Yields:
Generates the list of strings that will be used in the benchmarks. All strings have
Initialize the strings we'll run the regexes against. The strings used in the benchmark are
Pure-Python implementation of itertools.combinations(l, 2).
Returns the domain of the B-Spline
Fetch the messages. :param category: the category of items to fetch :param kwargs: backend arguments
Init client
Parse posts and returns in order.
Fetch the history of a channel.
Fetch user data.
Fetch a resource. :param entrypoint: entrypoint to access :param params: dict with the HTTP parameters
Initialize mailing lists directory path
Fetch the mbox files from the remote archiver. Stores the archives in the path given
Get the mboxes managed by this mailing list. Returns the archives sorted by date in
Fetch the entries from the url. The method retrieves all entries from a RSS url
Fetch the entries :param category: the category of items to fetch :param kwargs: backend arguments
Init client
Returns the RSS argument parser.
Fetch the bugs from the repository. The method retrieves, from a Bugzilla repository, the bugs
Fetch the bugs :param category: the category of items to fetch :param kwargs: backend arguments
Init client
Authenticate a user in the server. :param user: Bugzilla user :param password: user password
Get the information of a list of bugs. :param from_date: retrieve bugs that where updated
Get the comments of the given bugs. :param bug_ids: list of bug identifiers
Get the history of the given bugs. :param bug_ids: list of bug identifiers
Get the attachments of the given bugs. :param bug_id: list of bug identifiers
Retrive the given resource. :param resource: resource to retrieve :param params: dict with the HTTP
Sanitize payload of a HTTP request by removing the login, password and token information before
Fetch the items (issues or merge_requests) :param category: the category of items to fetch :param
Fetch the issues
Get issue notes
Fetch the merge requests
Get merge notes
Get merge versions
Get award emojis for issue/merge request
Fetch emojis for a note of an issue/merge request
Get the issues from pagination
Get the merge requests from pagination
Get the merge full data
Get the merge versions from pagination
Get merge version detail
Get the notes from pagination
Get emojis from pagination
Get emojis of a note
Calculate the seconds to reset the token requests, by obtaining the different between the current
Fetch the data from a given URL. :param url: link to the resource :param payload:
Return the items from GitLab API using links pagination
Sanitize payload of a HTTP request by removing the token information before storing/retrieving archived items
Initialize rate limit information
Returns the GitLab argument parser.
Fetch the messages from the channel. This method fetches the messages stored on the channel
Fetch the messages :param category: the category of items to fetch :param kwargs: backend arguments
Extracts the identifier from a Slack item. This identifier will be the mix of two
Init client
Fetch the number of members in a conversation, which is a supertype for public and
Fetch information about a channel.
Fetch the history of a channel.
Fetch user info.
Sanitize payload of a HTTP request by removing the token information before storing/retrieving archived items
Fetch a resource. :param resource: resource to get :param params: dict with the HTTP parameters
Returns the Slack argument parser.
Fetch the bugs :param category: the category of items to fetch :param kwargs: backend arguments
Extracts and coverts the update time from a Bugzilla item. The timestamp is extracted from
Parse a Bugzilla CSV bug list. The method parses the CSV file and returns an
Parse a Bugilla bugs details XML stream. This method returns a generator which parses the
Parse a Bugzilla bug activity HTML stream. This method extracts the information about activity from
Init client
Authenticate a user in the server. :param user: Bugzilla user :param password: user password
Logout from the server.
Get metadata information in XML format.
Get a summary of bugs in CSV format. :param from_date: retrieve bugs that where updated
Get the information of a list of bugs in XML format. :param bug_ids: list of
Get the activity of a bug in HTML format. :param bug_id: bug identifier
Run an API command. :param cgi: cgi command to run on the server :param params:
Sanitize payload of a HTTP request by removing the login and password information before storing/retrieving
Fetch the events from the server. This method fetches those events of a group stored
Fetch the events :param category: the category of items to fetch :param kwargs: backend arguments
Fetch the events pages of a given group.
Fetch the comments of a given event.
Fetch the rsvps of a given event.
Sanitize payload of a HTTP request by removing the token information before storing/retrieving archived items
Fetch a resource. Method to fetch and to iterate over the contents of a type
Fetch the questions :param category: the category of items to fetch :param kwargs: backend arguments
Init client
Fetch an Askbot HTML question body. The method fetchs the HTML question retrieving the question
Fetch all the comments of an Askbot question and answers. The method fetchs the list
Build an Askbot HTML response. The method puts together all the information regarding a question
Retrieve a question page using the API. :param page: page to retrieve
Retrieve a raw HTML question and all it's information. :param question_id: question identifier :param page:
Retrieve a list of comments by a given id. :param object_id: object identifiere
Parse the question info container of a given HTML question. The method parses the information
Parse the answers of a given HTML question. The method parses the answers related with
Parse number of answer pages to paginate over them. :param html_question: raw HTML question element
Parse the user information of a given HTML container. The method parses all the available
Fetch the reviews :param category: the category of items to fetch :param kwargs: backend arguments
Parse a Gerrit reviews list.
Specific fetch for gerrit 2.8 version. Get open and closed reviews in different queries. Take
Return the Gerrit server version.
Get the reviews starting from last_item.
Return the item to start from in next reviews group.
Execute gerrit command
Execute gerrit command against the archive
Execute gerrit command with retry if it fails
Returns the Gerrit argument parser.
Fetch the issues :param category: the category of items to fetch :param kwargs: backend arguments
Init client
Fetch the issues from a project (distribution/package)
Get data associated to an issue
Get attachments of an issue
Get messages of an issue
Get activities on an issue
Get data associated to an user
Get the issues from pagination
Get the user data by URL
Get the issue data by its ID
Get a collection list of a given issue
Build URL project
Send request
Build payload
Return the items from Launchpad API using pagination
Fetch the messages :param category: the category of items to fetch :param kwargs: backend arguments
Fetch the mbox files from the remote archiver. Stores the archives in the path given
Fetch the groupsio paginated subscriptions for a given token :param per_page: number of subscriptions per
Find the id of a group given its name by iterating on the list of
Fetch requests from groupsio API
Initialize mailing lists directory path
Returns the Groupsio argument parser.
Generate a UUID based on the given parameters. The UUID will be the SHA1 of
Fetch items using the given backend. Generator to get items using the given backend class.
Fetch items from an archive manager. Generator to get the items of a category (previously
Find available backends. Look for the Perceval backends and commands under `top_package` and its sub-packages.
Fetch items from the repository. The method retrieves items from a repository. To removed classified
Fetch the questions from an archive. It returns the items stored within an archive. If
Remove classified or confidential data from an item. It removes those fields that contain data
Add metadata to an item. It adds metadata to a given item such as how
Parse a list of arguments. Parse argument strings needed to run a backend command. The
Activate authentication arguments parsing
Activate archive arguments parsing
Activate output arguments parsing
Fetch and write items. This method runs the backend to fetch the items from the
Initialize archive based on the parsed parameters
Fetch the messages :param category: the category of items to fetch :param kwargs: backend arguments
Extracts the update time from a MBox item. The timestamp used is extracted from 'Date'
Parse a mbox file. This method parses a mbox file and returns an iterator of
Fetch and parse the messages from a mailing list
Copy the contents of a mbox to a temporary file
Check if the given message has the mandatory fields
Convert a message in CaseInsensitiveDict to dict. This method also converts well known problematic headers,
Return a Message representation or raise a KeyError.
Get the mboxes managed by this mailing list. Returns the archives sorted by name. :returns:
Fetch commits. The method retrieves from a Git repository or a log file a list
Fetch the commits :param category: the category of items to fetch :param kwargs: backend arguments
Parse a Git log file. The method parses the Git log file and returns an
Initialize repositories directory path
Returns the Git argument parser.
Parse the Git log stream.
Get the old filepath of a moved/renamed file. Moved or renamed files can be found
Clone a Git repository. Make a bare copy of the repository stored in `uri` into
Count the objects of a repository. The method returns the total number of objects (packed
Check if the repo is in a detached state. The repository is in a detached
Update repository from its remote. Calling this method, the repository will be synchronized with the
Keep the repository in sync. This method will synchronize the repository with its 'origin', fetching
Read the list commits from the repository The list of branches is a list of
Read the commit log from the repository. The method returns the Git log of the
Show the data of a set of commits. The method returns the output of Git
Fetch changes and store them in a pack.
Read the commits of a pack.
Update references removing old ones.
Get the current list of local or remote refs.
Update a reference.
Run a command with a non blocking call. Execute `cmd` command with a non blocking
Reads self.proc.stderr. Usually, this should be read in a thread, to prevent blocking the read
Run a command. Execute `cmd` command in the directory set by `cwd`. Environment variables can
Fetch the tweets from the server. This method fetches tweets from the TwitterSearch API published
Fetch the tweets :param category: the category of items to fetch :param kwargs: backend arguments
Init client
Fetch tweets for a given query between since_id and max_id. :param query: query to fetch
Fetch a resource. Method to fetch and to iterate over the contents of a type
Returns the Twitter argument parser.
Fetch data from Google API. The method retrieves a list of hits for some given
Fetch Google hit items :param category: the category of items to fetch :param kwargs: backend
Init client
Parse the hits returned by the Google Search API
Fetch information about a list of keywords.
Fetch the issues/pull requests from the repository. The method retrieves, from a GitHub repository, the
Fetch the items (issues or pull_requests) :param category: the category of items to fetch :param
Extracts the update time from a GitHub item. The timestamp used is extracted from 'updated_at'
Extracts the category from a GitHub item. This backend generates two types of item which
Init client
Fetch the issues
Fetch the pull requests
Get repo info about stars, watchers and forks
Get issue reactions
Get issue comments
Get reactions on issue comments
Get issue assignees
Get pull request requested reviewers
Get pull request commit hashes
Get pull request review comments
Get pull review comment reactions
Get user and org data for the login
Get reactions of an issue
Fetch the issues from the repository. The method retrieves, from a GitHub repository, the issues
Fetch the pull requests from the repository. The method retrieves, from a GitHub repository, the
Get repository data
Get pull requested reviewers
Get pull request commits
Get pull request review comments
Get reactions of a review comment
Get the user information and update the user cache
Get the user public organizations
Return token's remaining API points
Return array of all tokens remaining API points
Check all API tokens defined and choose one with most remaining API points
Check if we need to switch GitHub API tokens
Update rate limits data for the current token
Init metadata information. Metatada is composed by basic information needed to identify where archived data
Store a raw item in this archive. The method will store `data` content in this
Retrieve a raw item from the archive. The method will return the `data` content corresponding
Create a brand new archive. Call this method to create a new and empty archive.
Generate a SHA1 based on the given arguments. Hashcodes created by this method will used
Check whether the archive is valid or not. This method will check if tables were
Load metadata from the archive file
Fetch the number of rows in a table
Create a new archive. The method creates in the filesystem a brand new archive with
Remove an archive. This method deletes from the filesystem the archive stored in `archive_path`. :param
Search archives. Get the archives which store data based on the given parameters. These parameters
Search archives using filters.
Retrieve the file paths stored under the base path.
Check if filename is a compressed file supported by the tool. This function uses magic
Generate a months range. Generator of months starting on `from_date` util `to_date`. Each returned item
Convert an email message into a dictionary. This function transforms an `email.message.Message` object into a
Remove control and invalid characters from an xml stream. Looks for invalid characters and subtitutes
Convert a XML stream into a dictionary. This function transforms a xml stream into a
Fetch the issues :param category: the category of items to fetch :param kwargs: backend arguments
Parse a Redmine issues JSON stream. The method parses a JSON stream and returns a
Init client
Get the information of a list of issues. :param from_date: retrieve issues that where updated
Get the information of the given issue. :param issue_id: issue identifier
Get the information of the given user. :param user_id: user identifier
Sanitize payload of a HTTP request by removing the token information before storing/retrieving archived items
Call to get a resource. :param method: resource to get :param params: dict with the
Fetch the messages :param category: the category of items to fetch :param kwargs: backend arguments
Fetch the mbox files from the remote archiver. This method stores the archives in the
Fetch data from a Docker Hub repository. The method retrieves, from a repository stored in
Fetch the Dockher Hub items :param category: the category of items to fetch :param kwargs:
Init client
Fetch information about a repository.
Add extra information for custom fields. :param custom_fields: set of custom fields with the extra
Filter custom fields from a given set of fields. :param fields: set of fields :returns:
Fetch the issues :param category: the category of items to fetch :param kwargs: backend arguments
Parse a JIRA API raw response. The method parses the API response retrieving the issues
Init client
Get issue comments
Retrieve all the items from a given date. :param url: endpoint API url :param from_date:
Retrieve all the issues from a given date. :param from_date: obtain issues updated since this
Retrieve all the comments of a given issue. :param issue_id: ID of the issue
Retrieve all the fields available.
Fetch the builds from the url. The method retrieves, from a Jenkins url, the builds
Fetch the contents :param category: the category of items to fetch :param kwargs: backend arguments
Init client
Retrieve all jobs
Retrieve all builds from a job
Fetch the questions :param category: the category of items to fetch :param kwargs: backend arguments
Parse a StackExchange API raw response. The method parses the API response retrieving the questions
Init client
Retrieve all the questions from a given date. :param from_date: obtain questions updated since this
Sanitize payload of a HTTP request by removing the token information before storing/retrieving archived items
Returns the StackExchange argument parser.
Fetch the pages from the backend url. The method retrieves, from a MediaWiki url, the
Fetch the pages :param category: the category of items to fetch :param kwargs: backend arguments
Init client
Get the max date in unixtime format from reviews.
Fetch the pages from the backend url for MediaWiki >=1.27 The method retrieves, from a
Fetch the pages from the backend url. The method retrieves, from a MediaWiki url, the
Run an API command. :param cgi: cgi command to run on the server :param params:
Retrieve all pages from a namespace starting from apcontinue.
Retrieve recent pages from all namespaces starting from rccontinue.
Fetch the messages the bot can read from the server. The method retrieves, from the
Fetch the messages :param category: the category of items to fetch :param kwargs: backend arguments
Parse a Telegram JSON messages list. The method parses the JSON stream and returns an
Init client
Check if a message can be filtered based in a list of chats. This method
Fetch the messages that a bot can read. When the `offset` is given it will
Sanitize URL of a HTTP request by removing the token information before storing/retrieving archived items
Retrive the given resource. :param resource: resource to retrieve :param params: dict with the HTTP
Fetch the articles :param category: the category of items to fetch :param kwargs: backend arguments
NNTP metadata. This method takes items, overriding `metadata` decorator, to add extra information related to
Parse a NNTP article. This method parses a NNTP article stored in a string object
Init client
Fetch NNTP data from the server or from the archive :param method: the name of
Fetch article data :param article_id: id of the article to fetch
Fetch data from NNTP :param method: the name of the command to execute :param args:
Fetch data from the archive :param method: the name of the command to execute :param
Fetch the data from a given URL. :param url: link to the resource :param payload:
Create a http session and initialize the retry object.
Setup the rate limit handler. :param sleep_for_rate: sleep until rate limit is reset :param min_rate_to_sleep:
The fetching process sleeps until the rate limit is restored or raises a RateLimitError exception
Update the rate limit and the time to reset from the response headers. :param: response:
Fetch the messages :param category: the category of items to fetch :param kwargs: backend arguments
Parse a Supybot IRC log file. The method parses the Supybot IRC log file and
Retrieve the Supybot archives after the given date
List the filepath of the archives stored in dirpath
Parse a Supybot IRC stream. Returns an iterator of dicts. Each dicts contains information about
Parse timestamp section
Parse message section
Fetch the topics :param category: the category of items to fetch :param kwargs: backend arguments
Parse a topics page stream. The result of parsing process is a generator of tuples.
Retrieve the #page summaries of the latest topics. :param page: number of page to retrieve
Retrive the topic with `topic_id` identifier. :param topic_id: identifier of the topic to retrieve
Retrieve the post whit `post_id` identifier. :param post_id: identifier of the post to retrieve
Sanitize payload of a HTTP request by removing the token information before storing/retrieving archived items
Run an API command. :param res: type of resource to fetch :param res_id: identifier of
Fetch the tasks :param category: the category of items to fetch :param kwargs: backend arguments
Parse a Phabricator tasks JSON stream. The method parses a JSON stream and returns a
Parse a Phabricator users JSON stream. The method parses a JSON stream and returns a
Init client
Retrieve tasks. :param from_date: retrieve tasks that where updated from that date; dates are converted
Retrieve tasks transactions. :param phids: list of tasks identifiers
Retrieve users. :params phids: list of users identifiers
Retrieve data about PHIDs. :params phids: list of PHIDs
Sanitize payload of a HTTP request by removing the token information before storing/retrieving archived items
Call a method. :param method: method to call :param params: dict with the HTTP parameters
Fetch the contents :param category: the category of items to fetch :param kwargs: backend arguments
Extracts the identifier from a Confluence item. This identifier will be the mix of two
Parse a Confluence summary JSON list. The method parses a JSON stream and returns an
Init client
Get the contents of a repository. This method returns an iterator that manages the pagination
Get the snapshot of a content for the given version. :param content_id: fetch the snapshot
Retrive the given resource. :param resource: resource to retrieve :param params: dict with the HTTP
Parse the result property, extracting the value and unit of measure
Return a capabilities url
Get and parse a WFS capabilities document, returning an instance of WFSCapabilitiesInfoset Parameters ---------- url
Parse a WFS capabilities document, returning an instance of WFSCapabilitiesInfoset string should be an XML
Parse the result element of the observation type
implements Requirement 5 (/req/core/conformance-op) @returns: conformance object
implements Requirement 15 (/req/core/sfc-md-op) @type collection_name: string @param collection_name: name of collection @returns: feature collection
implements Requirement 17 (/req/core/fc-op) @type collection_name: string @param collection_name: name of collection @type bbox: list
helper function to build a WFS 3.0 URL @type path: string @param path: path of
Parses DescribeFeatureType response and creates schema compatible with :class:`fiona` :param str url: url of the
Get attribute elements
Consruct fiona schema based on given elements :param list Element: list of elements :param dict
Get url for describefeaturetype request :return str: url
use ComplexDataInput with a reference to a document
Get the list of Movie genres. Args: language: (optional) ISO 639-1 code. Returns: A dict
Get the list of TV genres. Args: language: (optional) ISO 639-1 code. Returns: A dict
Get the list of movies for a particular genre by id. By default, only movies
Get the basic movie information for a specific movie id. Args: language: (optional) ISO 639-1
Get the alternative titles for a specific movie id. Args: country: (optional) ISO 3166-1 code.
Get the cast and crew information for a specific movie id. Args: append_to_response: (optional) Comma
Get the external ids for a specific movie id. Args: language: (optional) ISO 639-1 code.
Get the images (posters and backdrops) for a specific movie id. Args: language: (optional) ISO
Get the plot keywords for a specific movie id. Returns: A dict representation of the
Get a list of recommended movies for a movie. Args: language: (optional) ISO 639-1 code.
Get the release dates and certification for a specific movie id. Args: append_to_response: (optional) Comma
Get the release date and certification information by country for a specific movie id. Args:
Get the videos (trailers, teasers, clips, etc...) for a specific movie id. Args: append_to_response: (optional)
Get the translations for a specific movie id. Args: append_to_response: (optional) Comma separated, any movie
Get the similar movies for a specific movie id. Args: page: (optional) Minimum value of
Get the reviews for a particular movie id. Args: page: (optional) Minimum value of 1.
Get the changes for a specific movie id. Changes are grouped by key, and ordered
Get the list of upcoming movies. This list refreshes every day. The maximum number of
Get the list of movies playing in theatres. This list refreshes every day. The maximum
Get the list of popular movies on The Movie Database. This list refreshes every day.
Get the list of top rated movies. By default, this list will only include movies
This method lets users get the status of whether or not the movie has been
This method lets users rate a movie. A valid session id or guest session id
Get the movie credits for a specific person id. Args: language: (optional) ISO 639-1 code.
Get the TV credits for a specific person id. Args: language: (optional) ISO 639-1 code.
Get the combined (movie and TV) credits for a specific person id. To get the
Get the detailed information about a particular credit record. This is currently only supported with
Discover TV shows by different types of data like average rating, number of votes, genres,
Get the system wide configuration info. Returns: A dict respresentation of the JSON returned from
Get the list of supported certifications for movies. Returns: A dict respresentation of the JSON
Get the basic information for an account. Call this method first, before calling other Account
Get the list of movies on an account watchlist. Args: page: (optional) Minimum 1, maximum
Generate a valid request token for user based authentication. A request token is required to
Authenticate a user with a TMDb username and password. The user must have a verified
Generate a session id for user based authentication. A session id is required in order
Generate a guest session id. Returns: A dict respresentation of the JSON returned from the
Get a list of rated moview for a specific guest session id. Args: page: (optional)
Check to see if a movie id is already added to a list. Args: movie_id:
Create a new list. A valid session id is required. Args: name: Name of the
Delete movies from a list that the user created. A valid session id is required.
Clears all of the items within a list. This is an irreversible action and should
Get the content ratings for a TV Series. Args: language: (optional) ISO 639 code. append_to_response:
Get the similar TV series for a specific TV series id. Args: page: (optional) Minimum
Get the list of TV shows that are currently on the air. This query looks
Get the list of TV shows that air today. Without a specified timezone, this query
Get the primary information about a TV season by its season number. Args: language: (optional)
Get the cast & crew credits for a TV season by season number. Returns: A
Get the external ids that we have stored for a TV season by season number.
Get the images (posters) that we have stored for a TV season by season number.
Get the videos that have been added to a TV season (trailers, teasers, etc...). Args:
Get the primary information about a TV episode by combination of a season and episode
Get the TV episode credits by combination of season and episode number. Returns: A dict
Get the external ids for a TV episode by combination of a season and episode
Get the images (episode stills) for a TV episode by combination of a season and
Get the videos that have been added to a TV episode (teasers, clips, etc...). Args:
Set attributes to dictionary values. - e.g. >>> import tmdbsimple as tmdb >>> movie =
Search for movies by title. Args: query: CGI escpaed string. page: (optional) Minimum value of
Search for collections by name. Args: query: CGI escpaed string. page: (optional) Minimum value of
Search for TV shows by title. Args: query: CGI escpaed string. page: (optional) Minimum value
Search for people by name. Args: query: CGI escpaed string. page: (optional) Minimum value of
Search for companies by name. Args: query: CGI escpaed string. page: (optional) Minimum value of
Search for keywords by name. Args: query: CGI escpaed string. page: (optional) Minimum value of
Search the movie, tv show and person collections with a single query. Args: query: CGI
Normalize and tokenize text. This is lifted from NIST mteval-v11a.pl.
Takes a list of reference sentences for a single segment and returns an object that
Takes a reference sentences for a single segment and returns an object that encapsulates everything
Complementary error function.
Returns the probability of the two sentences C{source_sentences[i]}, C{target_sentences[j]} being aligned with a specific C{alignment}.
Creates the sentence alignment of two blocks of texts (usually paragraphs). @param source_sentences: The list
Creates the sentence alignment of two texts. Texts can consist of several blocks. Block boundaries
Splits an iterator C{it} at values of C{split_value}. Each instance of C{split_value} is swallowed. The
Parses a stream of tokens and splits it into sentences (using C{soft_delimiter} tokens) and blocks
r"""[DEPRECATED] Get descriptors from module. Parameters: mdl(module): module to search Returns: [Descriptor]
r"""Get descriptors in module. Parameters: mdl(module): module to search submodule(bool): search recursively Returns: Iterator[Descriptor]
Register Descriptors from json descriptor objects. Parameters: obj(list or dict): descriptors to register
r"""Register descriptors. Descriptor-like: * Descriptor instance: self * Descriptor class: use Descriptor.preset() method * module:
Output message. Parameters: s(str): message to output file(file-like): output to end(str): end mark of message
r"""Calculate descriptors over mols. Parameters: mols(Iterable[rdkit.Mol]): moleculars nproc(int): number of process to use. default: multiprocessing.cpu_count()
r"""Calculate descriptors over mols. Returns: pandas.DataFrame
r"""Check calculatable descriptor class or not. Returns: bool
Convert to json serializable dictionary. Returns: dict: dictionary of descriptor
Get 3D coordinate. Returns: numpy.array[3, N]: coordinate matrix
[contextmanager] treat zero div as known exception.
r"""Calculate atomic surface area. :type i: int :param i: atom index :rtype: float
r"""Calculate all atomic surface area. :rtype: [float]
r"""Construct SurfaceArea from rdkit Mol type. :type mol: rdkit.Chem.Mol :param mol: input molecule :type conformer:
Create Descriptor instance from json dict. Parameters: obj(dict): descriptor dict Returns: Descriptor: descriptor
r"""Replace missing value to "value". Parameters: value: value that missing value is replaced Returns: Result
r"""Delete missing value. Returns: Result
r"""Get items. Returns: Iterable[(Descriptor, value)]
r"""Convert Result to dict. Parameters: rawkey(bool): * True: dict key is Descriptor instance * False:
r"""Access descriptor value by descriptor name or instance. >>> from mordred import Calculator, descriptors >>>
Decorator to log function calls.
Decorator to synchronize function.
Show current progress message to stderr. This function will remember the previous message so that
Program message output.
Utility function to handle runtime failures gracefully. Show concise information if possible, then terminate program.
Get a temp filename for atomic download.
Atomically rename and clean tempfile
Clean up temp files
Return a list of the logger methods: (debug, info, warn, error)
Get the fixed part of the path without wildcard
Given a API name, list all legal parameters using boto3 service model.
Combine existing parameters with extra options supplied from command line options. Carefully merge special type
Add the whole list of API parameters into optparse.
Override original join() with a timeout and handle keyboard interrupt.
Terminate all threads by deleting the queue and forcing the child threads to quit.
Utility function to add a single task into task queue
Utility function to wait all tasks to complete
Increase the processed task counter and show progress message
Retrieve S3 access keys from the environment, or None if not present.
Retrieve S3 access keys from the command line, or None if not present.
Retrieve S3 access key settings from s3cmd's config file, if present; otherwise return None.
Initialize s3 access keys from environment variable or s3cfg config file.
Connect to S3 storage
List all buckets
Walk through a S3 directory. This function initiate a walk with a basedir. It also
Walk through local directories from root basedir
Unix style basename. This fuction will return 'bar' for '/foo/bar/' instead of empty string. It
Expand the wildcards for an S3 path. This emulates the shall expansion for wildcards if
Upload a single file or a directory by adding a task into queue
Upload files to S3. This function can handle multiple file upload if source is a
Use the create_bucket API to create a new bucket
Get privileges from metadata of the source in s3, and apply them to target
Print out a series of files
Download a single file or a directory by adding a task into queue
Download files. This function can handle multiple files if source S3 URL has wildcard characters.
Remove remote files that are not present in the local source. (Obsolete) It is used
Copy a single file or a directory by adding a task into queue
Copy files This function can handle multiple files if source S3 URL has wildcard characters.
Delete files on S3
Generic version of directory walk. Return file list without base path for comparison.
Sync directory to directory.
Sync files to S3. Does implement deletions if syncing TO s3. Currently identical to get/put
Get the size component of the given s3url. If it is a directory, combine the
Calculate MD5 hash code for a local file
Get or calculate MD5 value of the local file.
Ensure all directories are created for a given target file.
Check MD5 for a local file and a remote file. Return True if they have
Partially match a path and a filter_path with wildcards. This function will return True if
Thread worker for s3walk. Recursively walk into all subdirectories if they still match the filter
Check all file item with given conditions.
Get file splits for upload/download/copy operation.
Get privileges of a local file
Get the s3 object with the S3 URL. Return None if not exist.
Read local file chunk
Thread worker for upload operation.
Verify the file size of the downloaded file.
Write local file chunk
Thread worker for download operation.
Copy a single file from source to target using boto S3 library.
Thread worker for download operation.
Delete a list of files in batch of batch_delete_size (default=1000).
Main entry to handle commands. Dispatch to individual command handler.
Validate input parameters with given format. This function also checks for wildcards for recursive mode.
Pretty print the result of s3walk. Here we calculate the maximum width of each column
Handler for ls command
Handler for mb command
Handler for put command
Handler for get command
Handler for cat command
Handler for dsync command.
Handler for sync command. XXX Here we emulate sync command with get/put -r -f --sync-check.
Handler for cp command
Handler for mv command
Handler for del command
Handler for size command
Handler of total_size command
Search for date information in the string
Search for time information in the string
Search for timedelta information in the string
Take json as dictionary parameter
Discover gateways using multicast
Start listening.
Stop listening.
Send data to gateway to turn on / off device
Get data from gateway
Push data broadcasted from gateway to device
Get key using token from gateway
Train your awesome model. :param hparams: The arguments to run the model with.
Train your awesome model. :param hparams: The arguments to run the model with.
Called by RQ when there is a failure in a worker. NOTE: Make sure that
Patches the pyramid_debugtoolbar (if installed) to display a link to the related rollbar item.
Pyramid entry point
If there's no log configuration, set up a default handler.
Get the current request object. Implementation varies on library support. Modified below when we know
Saves configuration variables in this module's SETTINGS. access_token: project access token. Get this from the
Decorator for making error handling on AWS Lambda easier
Reports an exception to Rollbar, using exc_info (from calling sys.exc_info()) exc_info: optional, should be the
Reports an arbitrary string message to Rollbar. message: the string body of the message level:
Sends a payload object, (the result of calling _build_payload() + _serialize_payload()). Uses the configured handler
Searches a project for items that match the input criteria. title: all or part of
Creates .rollbar log file for use with rollbar-agent
Called by report_exc_info() wrapper
Called by report_message() wrapper
Returns a dictionary describing the logged-in user using data from `request. Try request.rollbar_person first, then
Attempts to add information from the lambda context if it exists
Attempts to build request data; if successful, sets the 'request' key on `data`.
Returns True if we should record local variables for the given frame.
Returns a dictionary containing data from the request. Can handle webob or werkzeug-based request objects.
Returns a dictionary containing information about the server environment.
Returns the full payload as a string.
This runs the protocol on port 8000
This function returns a Hangul letter by composing the specified chosung, joongsung, and jongsung. @param
This function returns letters by decomposing the specified Hangul letter.
Check whether this letter contains Jongsung
add josa at the end of this word
Returns true if node is inside the name of an except handler.
Return true if given node is inside lambda
Recursively returns all atoms in nested lists and tuples.
Checks if an assignment node in an except handler clobbers an existing variable. Returns (True,
return True if the node is referencing the "super" builtin function
return true if the function does nothing but raising an exception
Returns True if the given node is an object from the __builtin__ module.
return True if the variable node is defined by a parent node (list, set, dict,
return true if the given Name node is used in function or lambda default argument's
return true if the name is used in function decorator
return True if `frame` is an astroid.Class node with `node` in the subtree of its
return the higher parent which is not an AssignName, Tuple or List node
return True if <name> is a method overridden from an ancestor
decorator to store messages that are handled by a checker method
Parses a format string, returning a tuple of (keys, num_args), where keys is the set
Given a format string, return an iterator of all the valid format fields. It handles
Parses a PEP 3101 format string, returning a tuple of (keyword_arguments, implicit_pos_args_cnt, explicit_pos_args), where keyword_arguments
return True if attribute name is protected (start with _ and some other details), False
return klass node for a method node (or a staticmethod or a classmethod), return null
Check that attribute name is private (at least two leading underscores, at most one trailing
Returns the specified argument from a function call. :param astroid.Call call_node: Node representing a function
Return true if the given class node is subclass of exceptions.Exception.
Check if the given exception handler catches the given error_type. The *handler* parameter is a
Detect if the given function node is decorated with a property.
Determine if the `func` node has a decorator with the qualified name `qname`.
Get the unimplemented abstract methods for the given *node*. A method can be considered abstract
Return the ExceptHandler or the TryExcept node in which the node is.
Check if the given node is from a fallback import block.
Return the collections of handlers handling the exception in arguments. Args: node (astroid.NodeNG): A node
Check if the node is directly under a Try/Except statement. (but not under an ExceptHandler!)
Check if the node is in a TryExcept which handles the given exception. If the
return true if the given class node should be considered as an abstract class
Return the inferred value for the given node. Return None if inference failed or if
Return the inferred type for `node` If there is more than one possible type, or
Check if the given function node is a singledispatch function.
Get the last lineno of the given node. For a simple statement this will just
Check if the postponed evaluation of annotations is enabled
Check if first node is a subclass of second node. :param child: Node to check
Split the names of the given module into subparts For example, _qualified_names('pylint.checkers.ImportsChecker') returns ['pylint', 'pylint.checkers',
Get a prepared module name from the given import node In the case of relative
return the node where [base.]<name> is imported or None if not found
get a list of 2-uple (module, list_of_files_which_import_this_module), it will return a dictionary to represent this
return a string which represents imports as a tree
write dependencies as a dot (graphviz) file
generate a dependencies graph and add some information about it in the report's section
called before visiting project (i.e set of modules)
called before visiting project (i.e set of modules)
triggered when an import statement is seen
triggered when a from statement is seen
Check `node` import or importfrom node position is correct Send a message if `node` comes
Record the package `node` imports from
Checks imports of module `node` are grouped by category Imports must follow this order: standard,
check relative import. node is either an Import or From node, modname the imported module
notify an imported module, used to analyze dependencies
check if the module is deprecated
check if the module has a preferred replacement
check if the import is necessary (i.e. not already done)
return a verbatim layout for displaying dependencies
write dependencies as a dot (graphviz) file
build the internal or the external depedency graph
Read config file and return list of options
insert default options to sys.argv
return the visibility from a name: public, protected, private or special
return true if the node should be treated
walk on the tree from <node>, getting callbacks from handler
get callbacks from handler for the visited node
walk on the tree from <node>, getting callbacks from handler
walk on the tree from <node>, getting callbacks from handler
launch the visit starting from the given node
Check the consistency of msgid. msg ids for a checker should be a string of
Visit a Call node.
Check that a datetime was infered. If so, emit boolean-datetime warning.
Check that the mode argument of an open or file call is valid.
Manage message of different type and in the context of path.
Launch layouts display
get title for objects
set different default options with _default dictionary
true if builtins and not show_builtins
visit one class and add it to diagram
return ancestor nodes of a class node
return associated nodes of a class node
extract recursively classes related to klass_node
visit a pyreverse.utils.Project node create a diagram definition for packages
leave the pyreverse.utils.Project node return the generated diagram definition
visit an astroid.Module node add this class to the package diagram definition
visit an astroid.Class node add this class to the class diagram definition
visit astroid.ImportFrom and catch modules for package diagram
return a class diagram definition for the given klass and its related klasses
Get the diagrams configuration data :param project:The pyreverse project :type project: pyreverse.utils.Project :param linker: The
Check if the given owner should be ignored This will verify if the owner's module
Given an owner and a name, try to find similar names The similar names are
Try to see if no-member should be emitted for the given owner. The following cases
Check if the given node has a parent of the given type.
Check if the given name is used as a variadic argument.
Verify if the given call node has variadic nodes without context This is a workaround
Try to infer what the given *func* constructor is building :param astroid.FunctionDef func: A metaclass
required method to auto register this checker
check that the accessed attribute exists to avoid too much false positives for now, we'll
check that if assigning to a function call, the function is possibly returning something valuable
Check that the given uninferable Call node does not call an actual function.
check that called functions/methods are inferred to callable objects, and that the arguments passed to
Detect TypeErrors for unary operands.
Called when a :class:`.astroid.node_classes.Call` node is visited. See :mod:`astroid` for the description of available nodes.
Return an iterator on interfaces implemented by the given class node.
return a Project from a list of files or modules
visit a pyreverse.utils.Project node * optionally tag the node with a unique id
visit an astroid.Package node * optionally tag the node with a unique id
visit an astroid.Module node * set the locals_type mapping * set the depends mapping *
visit an astroid.Class node * set the locals_type and instance_attrs_type mappings * set the implements
visit an astroid.Function node * set the locals_type mapping * optionally tag the node with
visit an astroid.AssignName node handle locals_type
handle an astroid.assignattr node handle instance_attrs_type
visit an astroid.Import node resolve module dependencies
visit an astroid.ImportFrom node resolve module dependencies
return true if the module should be added to dependencies
Notify an imported module, used to analyze dependencies
Return true if the give object (maybe an instance or class) implements the interface.
return ansi escape code corresponding to color and style :type color: str or None :param
colorize message by wrapping it with ansi escape codes :type msg: str or unicode :param
Register the reporter classes with the linter.
manage message of different type and in the context of path
launch layouts display
manage message of different types, and colorize output using ansi escape codes
open a vcg graph
draw a node
draw an edge from a node to another.
write graph, node or edge attributes
Given a list of format specifiers, returns the final access path (e.g. a.b.c[0][1]).
required method to auto register this checker
Mostly replicate `ast.literal_eval(token)` manually to avoid any performance hit. This supports f-strings, contrary to `ast.literal_eval`.
Check the new string formatting.
Check attribute and index access in the format string ("{0.a}" and "{0[a]}").
check for bad escapes in a non-raw string. prefix: lowercase string of eg 'ur' string
display a section as text
Display an evaluation section as a text.
display a table as text
format a table
display a verbatim layout as text (so difficult ;)
Register the old ID and symbol for a warning that was renamed. This allows users
Register all messages from a checker. :param BaseChecker checker:
Register a MessageDefinition with consistency in mind. :param MessageDefinition message: The message definition being added.
helper for register_message()
Check that a symbol is not already used.
Raise an error when a symbol is duplicated. :param str msgid: The msgid corresponding to
Raise an error when a msgid is duplicated. :param str symbol: The symbol corresponding to
Returns the Message object for this message. :param str msgid_or_symbol: msgid_or_symbol may be either a
Generates a user-consumable representation of a message. Can be just the message ID or the
Display help messages for the given message identifiers
Output full messages list documentation in ReST format.
Required method to auto register this checker. :param linter: Main interface object for Pylint plugins
Output full documentation in ReST format for all extension modules
run pylint
Use sched_affinity if available for virtualized or containerized environments.
make total errors / warnings report
make messages type report
make errors / warnings by modules report
look for some options (keys of <search_for>) which have to be processed before others values
Prepare sys.path for running the linter checks. Within this context, each of the given arguments
take a list of module names which are pylint plugins and load and register them
Call the configuration hook for plugins This walks through the list of plugins, grabs the
overridden from config.OptionsProviderMixin to handle some special options
register a new checker checker is an object implementing IRawChecker or / and IAstroidChecker
disable all reporters
error mode: enable only errors; no reports, no persistent
Disable all other checkers and enable Python 3 warnings.
process tokens from the current module to search for module/block level options
return all available checkers as a list
Get all the checker names that this linter knows about.
return checkers needed for activated messages and reports
main checking entry: check a list of files or modules from their name.
get modules and errors from a list of modules and handle errors
set the name of the currently analyzed module and init statistics for it
return an ast(roid) representation for a module
Check a module from its astroid representation.
initialize counters
close the whole package /module, it's time to make reports ! if persistent run, pickle
make the global evaluation report
callback for option preprocessing (i.e. before option parsing)
optik callback for sample config file generation
optik callback for sample config file generation
optik callback for printing some help about a particular message
optik callback for printing full documentation
optik callback for printing available messages
List all the check groups that pylint knows about These should be useful to know
Wrap the text on the given line length.
return the module name and the frame id in the module
return decoded line from encoding or decode with default encoding
Determines if the basename is matched in a regex blacklist :param str base_name: The basename
take a list of files/modules/packages and return the list of tuple (file, module name) which
load all module and package in the given directory, looking for a 'register' function in
Retrieve an option defined by the given *checker* or by all known option providers. It
return a list of stripped string by splitting the string given as argument on `sep`
remove optional quotes (simple or double) from the string :type string: str or unicode :param
return string as a comment
return the user input's value from a 'compiled' value
format an options section using the INI format
format options using the INI format
insert a child node
return the visit name for the mixed class. When calling 'accept', the method <'visit_' +
overridden to detect problems easily
return the ancestor nodes
format and write the given layout into the stream object unicode policy: unicode strings may
trick to get table content without actually writing it return an aligned list of lists
trick to compute the formatting of children layout before actually writing it return an iterator
Walk the AST to collect block level options line numbers.
Recursively walk (depth first) AST to collect block level options line numbers.
Set status (enabled/disable) for a given message at a given line
Report an ignored message. state_scope is either MSG_STATE_SCOPE_MODULE or MSG_STATE_SCOPE_CONFIG, depending on whether the message
register a report reportid is the unique identifier for the report r_title the report's title
disable the report of the given id
disable the report of the given id
render registered reports
add some stats entries to the statistic dictionary raise an AssertionError if there is a
Get the name of the property that the given node is a setter for. :param
Get the property node for the given setter node. :param node: The node to get
Check if a return node returns a value other than None. :param return_node: The return
Gets all of the possible raised exception types for the given raise node. .. note::
required method to auto register this checker
inspect the source file to find messages activated or deactivated by id.
inspect the source file to find encoding problem
inspect the source to find fixme problems
Check if the name is a future import from another module.
Returns True if stmt in inside the else branch for a parent For stmt.
get overridden method if any
return extra information to add to the message for unpacking-non-sequence and unbalanced-tuple-unpacking errors
Detect that the given frames shares a global scope. Two frames shares a global scope
Try to fix imports with multiple dots, by returning a dictionary with the import names
Detect imports in the frame, with the required *name*. Such imports can be considered assignments.
Checks if name_node has corresponding assign statement in same scope
Mark the name as consumed and delete it from the to_consume dictionary
visit module : update consumption analysis variable checks globals doesn't overrides builtins
leave module: check globals
visit function: update consumption analysis variable and check locals
leave function: check function's locals are consumed
check names imported exists in the global scope
Return True if the node is in a local class scope, as an assignment. :param
check that a name is defined if the current scope and doesn't redefine a built-in
Return True if there is a node with the same name in the to_consume dict
check modules attribute accesses
check modules attribute accesses
Check unbalanced tuple unpacking for assignments and unpacking non-sequences as well as in case self/cls
Check that self/cls don't get assigned
Check for unbalanced tuple unpacking and unpacking non sequences.
check that module_names (list of string) are accessible through the given module if the latest
Update consumption analysis for metaclasses.
get values listed in <columns> from <stats> and <old_stats>, and return a formated list of
Creates the proper script names required for each platform (taken from 4Suite)
return a list of subpackages for the given directory
setup entry point
overridden from install_lib class
return lines with leading/trailing whitespace and any ignored code features removed
make a layout with some stats about duplication
standalone command line access point
append a file to search for similarities
compute similarities in appended files
display computed similarities on stdout
find similarities in the two given linesets
iterate on similarities among all files, by making a cartesian product
return an iterator on stripped lines, starting from a given index if specified, else 0
create the index for this set
method called to set an option (registered in the options list) overridden to report options
init the checkers: reset linesets and statistics information
process a module the module's content is accessible via the stream object stream must implement
compute and display similarities on closing (i.e. end of parsing)
Check if a definition signature is equivalent to a call.
Check equality of nodes based on the comparison of their attributes named attr_name. Args: node_a
Check if original and overridden methods arguments have different default values Return True if one
Determine if the two methods have different parameters They are considered to have different parameters
Check if the func was called in any of the given methods, belonging to the
Check if the given attribute *name* is a property in the given *klass*. It will
Safely infer the return value of a function. Returns None if inference failed or if
return a dictionary where keys are the list of base classes providing the queried method,
required method to auto register this checker
Set the given node as accessed.
init visit variable _accessed
Detect that a class has a consistent mro or duplicate bases.
Detect that a class inherits something which is not a class or a type.
close a class node: check that instance attributes are defined in __init__ and check access
check method arguments, overriding
Check if the given function node is an useless method override We consider it *useless*
on method node, check if this method couldn't be a function ignore class, static and
check if the getattr is an access to a class member if so, register it.
Check that the given AssignAttr node is defined in the class slots.
Checks for uses of classmethod() or staticmethod() When a @classmethod or @staticmethod decorator should be
Given an attribute access node (set or get), check if attribute access is legitimate. Call
check if the name handle an access to a class member if so, register it
check that accessed members are defined
check the name of first argument, expect: * 'self' for a regular method * 'cls'
check that the given class node implements abstract methods from base classes
check that the __init__ method call super or ancestors'__init__ method
check that the signature of the two given methods match
Check if astroid.Name corresponds to first attribute variable name Name is `self` for method, `cls`
Recursively generate nodes inferred by the given statement. If the inferred value is a list
Return true if the given statement node raise an exception
Verify that the exception context is properly set. An exception context can be only `None`
check for empty except
check use of super
display results encapsulated in the layout tree
Check if a class node is a typing.NamedTuple class
Check if a class definition defines an Enum class. :param node: The class node to
Check if a class definition defines a Python 3.7+ dataclass :param node: The class node
Counts the number of boolean expressions in BoolOp `bool_op` (recursive) example: a and (b or
initialize visit variables
check size of inheritance hierarchy and number of instance attributes
check number of public methods
check function name, docstring, arguments, redefinition, variable names, max locals
most of the work is done here on close: checks for max returns, branch, return
increments the branches counter
increments the branches counter and checks boolean expressions
Go through "if" node `node` and counts its boolean expressions if the "if" node test
increments the branches counter
check the node has any spelling errors
Format the message according to the given template. The template format is the one of
Checks if node is len(SOMETHING).
Check if the given token is a trailing comma :param tokens: Sequence of modules tokens
Required method to auto register this checker.
Check if the given node is an actual elif This is a problem we're having
Check if the given if node can be simplified. The if statement can be reduced
Check if an exception of type StopIteration is raised inside a generator
Return True if the exception node in argument inherit from StopIteration
Check if a StopIteration exception is raised by the call to next function If the
Update and check the number of nested blocks
Get the duplicated types from the underlying isinstance calls. :param astroid.BoolOp node: Node which should
Check isinstance calls which can be merged together.
Check if there is any chained comparison in the expression. Add a refactoring message if
We start with the augmented assignment and work our way upwards. Names of variables for
Returns true if node is 'condition and true_value or false_value' form. All of: condition, true_value
Check that all return statements inside a function are consistent. Return statements are consistent if:
Check if the node ends with an explicit return statement. Args: node (astroid.NodeNG): node to
Check for presence of a *single* return statement at the end of a function. "return"
Emit a convention whenever range and len are used for indexing.
`not len(S)` must become `not S` regardless if the parent block is a test condition
check if we need graphviz for different output format
checking arguments and run project
check for empty except
write files for <project> according to <diadefs>
write a package diagram
write a class diagram
initialize DotWriter and add options for layout.
get label and shape for classes. The label contains all attributes and methods
initialize VCGWriter for a UML graph
get label and shape for classes. The label contains all attributes and methods
return True if message may be emitted using the current interpreter
return the help string for the given message id
process a module the module's content is accessible via node.stream() function
Extracts the environment PYTHONPATH and appends the current sys.path to those.
Pylint the given file. When run from emacs we will be in the directory of
Run pylint from python ``command_options`` is a string containing ``pylint`` command line options; ``return_std`` (boolean)
Transforms /some/path/foo.png into ('/some/path', 'foo.png', 'png').
given a dictionary representing an ordered graph (i.e. key are vertices and values is a
recursive function doing the real work for get_cycles
returns self._source
Generates a graph file. :param str outputfile: filename and path [defaults to graphname.png] :param str
emit an edge from <name1> to <name2>. edge properties: see http://www.graphviz.org/doc/info/attrs.html
emit a node with given properties. node properties: see http://www.graphviz.org/doc/info/attrs.html
calculate percentage of code / doc / comment / empty
return the line type : docstring, comment, code, empty
init statistics
update stats
format an options section using as ReST formatted output
If the msgid is a numeric one, then register it to inform the user it
don't output message of the given id
reenable message of the given id
Get the message symbol of the given message id Return the original message id if
Returns the scope at which a message was enabled/disabled.
return true if the message associated to the given message id is enabled msgid may
Adds a message given by ID or name. If provided, the message string is expanded
output a full documentation in ReST format
Helper method for print_full_documentation. Also used by doc/exts/pylint_extensions.py.
Return the length of the indentation on the given token's line.
Return a line with |s for each of the positions in the given lists.
Get an indentation string for hanging indentation, consisting of the line-indent plus a number of
Record the first non-junk token at the start of a line.
Returns the valid offsets for the token at the given position.
Extracts indentation information for a hanging indent Case of hanging indent after a bracket (including
Extracts indentation information for a continued indent.
Pushes a new token for continued indentation on the stack. Tokens that can modify continued
a new line has been encountered, process it if necessary
Check that there are not unnecessary parens after a keyword. Parens are unnecessary if there
Extended check of PEP-484 type hint presence
Check the spacing of a single equals sign.
Check that a binary operator is surrounded by exactly one space.
process tokens and search for : _ non strict indentation (i.e. not always using the
check the node line number and check it if not yet done
Check for lines containing multiple statements.
check lines have less than a maximum number of characters
return the indent level of the string
Check if the node is being used as an iterator. Definition is taken from lib2to3.fixer_util.in_special_context().
Checks if an import node is in the context of a conditional.
Detect when a "bad" built-in is referenced.
Look for indexing exceptions.
Look for removed attributes
Visit an except handler block and check for exception unpacking.
Visit a raise statement and check for raising strings or old-raise-syntax.
search the pylint rc file and return its path if it find it, else None
return a validated value for an option according to its type optional argument name is
Patch OptionParser.expand_default with custom behaviour This will handle defaults to avoid overriding values in the
Disable abbreviations.
register an options provider
get our personal option definition and return a suitable form for use with optik/optparse
optik callback for option setting
set option on the correct option provider
write a configuration file according to the current configuration into the given stream or stdout
read the configuration file but do not load it (i.e. dispatching values to each options
dispatch values previously read from a configuration file to each options provider)
Override configuration according to command line parameters return additional arguments
add a dummy option section for help purpose
return the usage string for available options
initialize the provider using default values
get the config attribute corresponding to opt
method called to set an option (registered in the options list)
return the dictionary defining an option given its name
return an iterator on options grouped by section (section, [list of (optname, optdict, optvalue)])
Determines if a BoundMethod node represents a method call. Args: func (astroid.BoundMethod): The BoundMethod AST
Checks if node represents a string with complex formatting specs. Args: node (astroid.node_classes.NodeNG): AST node
Clears any state left in this checker from last module checked.
Checks to see if a module uses a non-Python logging module.
Checks to see if this module uses Python's built-in logging.
Checks calls to logging methods.
Checks calls to logging.log(level, format, *format_args).
Checks that function call is not format_string.format(). Args: node (astroid.node_classes.Call): Call AST node to be
Checks that format string tokens match the supplied arguments. Args: node (astroid.node_classes.NodeNG): AST node to
Detect that the given node (AssignName) is inside an exception handler and redefines an import
return True if the node is inside a kind of for loop
return true if the object is an element of <nested_list> or of a nested list
Returns the loop node that holds the break node in arguments. Args: break_node (astroid.Break): the
Returns true if a loop may ends up in a break statement. Args: loop (astroid.For,
Returns a tuple of property classes and names. Property classes are fully qualified, such as
Determine the name type whose regex the a function's name should match. :param node: A
make a report of * percentage of different types documented * percentage of different types
return True if the object is a method redefined via decorator. For example: @property def
Is this a call with exactly 1 argument, where that argument is positional?
required method to auto register this checker
Check that a Starred expression is used in an assignment target.
Check that a name is both nonlocal and global.
check use of the non-existent ++ and -- operator operator
Check instantiating abstract class with abc.ABCMeta as metaclass.
Check that any loop with an else clause has a break statement.
check that a node is inside a for or while loop
check for redefinition of a function / method / class name
initialize visit variables and statistics
check for various kind of statements without effect
check whether or not the lambda is suspicious
check function name, docstring, arguments, redefinition, variable names, max locals
1 - check is the node has a right sibling (if so, that's some unreachable
1 - check is the node has a right sibling (if so, that's some unreachable
visit a Call node -> check if this is not a blacklisted builtin call and
check the use of an assert statement on a tuple.
check duplicate key in dictionary
check unreachable code
check that a node is not inside a finally clause of a try...finally statement. If
check that the argument to `reversed` is a sequence
check module level assigned names
check names in a possibly recursive list <arg>
check for a name using the type's regexp
check the node has a non empty docstring
Check if we compare to a literal, which is usually what we do not want
Check if identifier is compared against itself. :param node: Compare node :type node: astroid.node_classes.Compare :Example:
Check for expressions like type(x) == Y.
create the subgraphs representing any `if` and `for` statements
parse the body and any `else` block of `if` and `for` statements
visit an astroid.Module node to check too complex rating and add message if is greather
walk to the checker's dir and collect visit and leave methods
call visit events of astroid checkers for the given node, recurse on its children, then
create a relation ship
return a relation ship or None
return visible attributes, possibly with class name
return visible methods
create a diagram object
return class names if needed in diagram
return all class nodes in the diagram
return a class by its name, raise KeyError if not found
extract relation ships between nodes in the diagram
return all module nodes in the diagram
return a module by its name, raise KeyError if not found
return a module by its name, looking also for relative imports; raise KeyError if not
add dependencies created by from-imports
extract relation ships between nodes in the diagram
Called for function and method definitions (def). :param node: Node for a function or method
Check that all parameters in a function, method or class constructor on the one hand
Adds a message on :param:`node` for the missing exception type. :param missing_excs: A list of
Configures an :class:`OAuth2Provider` instance to use various caching systems to get and set the grant
Configures the given :class:`OAuth2Provider` instance with the required getters and setters for persistence with SQLAlchemy.
Removes itself from the cache Note: This is required by the oauthlib
Determines which method of getting the query object for use
Returns the User object Returns None if the user isn't found or the passwords don't
returns a Token object with the given access token or refresh token :param access_token: User's
Creates a Token object and removes all expired tokens that belong to the user :param
Creates Grant object with the given params :param client_id: ID of the client :param code:
Get the Grant object with the given client ID and code :param client_id: ID of
Parse the response returned by :meth:`OAuthRemoteApp.http_request`. :param resp: response of http_request :param content: content of
Make request parameters right.
Init app with Flask instance. You can also pass the instance of Flask later:: oauth
Registers a new remote application. :param name: the name of the remote application :param register:
Sends a request to the remote server with OAuth tokens attached. :param data: the data
Returns a redirect response to the remote authorization URL with the signed callback given. :param
Handles an oauth1 authorization response.
Handles an oauth2 authorization response.
Handles authorization response smartly.
Handles an OAuth callback. .. versionchanged:: 0.7 @authorized_handler is deprecated in favor of authorized_response.
Creates a hashable object for given token then we could use it as a dictionary
The lazy-created OAuth session with the return value of :meth:`tokengetter`. :returns: The OAuth session instance
Uses cached client or create new one with specific token.
Creates a client with specific access token pair. :param token: a tuple of access token
Creates a context to enable the oauthlib environment variable in order to debug with insecure
All in one endpoints. This property is created automaticly if you have implemented all the
Authorization handler decorator. This decorator will sort the parameters and headers out, and pre validate
When consumer confirm the authrozation.
Request token handler decorator. The decorated function should return an dictionary or None as the
Protect resource with specified scopes.
Get client secret. The client object must has ``client_secret`` attribute.
Get request token secret. The request token object should a ``secret`` attribute.
Get access token secret. The access token object should a ``secret`` attribute.
Default realms of the client.
Realms for this request token.
Redirect uri for this request token.
Retrieves a previously stored client provided RSA key.
Validates that supplied client key.
Validates request token is available for client.
Validates access token is available for client.
Validate the timestamp and nonce is used or not.
Validate if the redirect_uri is allowed by the client.
Check if the token has permission on those realms.
Validate verifier exists.
Verify if the request token is existed.
Verify if the realms match the requested realms.
Save access token to database. A tokensetter is required, which accepts a token and request
Save request token to database. A grantsetter is required, which accepts a token and request
Save verifier to database. A verifiersetter is required. It would be better to combine request
The error page URI. When something turns error, it will redirect to this error page.
All in one endpoints. This property is created automaticly if you have implemented all the
Authorization handler decorator. This decorator will sort the parameters and headers out, and pre validate
When consumer confirm the authorization.
Verify current request, get the oauth data. If you can't use the ``require_oauth`` decorator, you
Access/refresh token handler decorator. The decorated function should return an dictionary or None as the
Access/refresh token revoke decorator. Any return value by the decorated function will get discarded as
Protect resource with specified scopes.
Return client credentials based on the current request. According to the rfc6749, client MAY use
Determine if client authentication is required for current request. According to the rfc6749, client authentication
Authenticate itself in other means. Other means means is described in `Section 3.2.1`_. .. _`Section
Authenticate a non-confidential client. :param client_id: Client ID of the non-confidential client :param request: The
Ensure client is authorized to redirect to the redirect_uri. This method is used in the
Get the list of scopes associated with the refresh token. This method is used in
Ensures the requested scope matches the scope originally granted by the resource owner. If the
Default redirect_uri for the given client.
Default scopes for the given client.
Invalidate an authorization code after use. We keep the temporary code in a grant, which
Persist the authorization code.
Persist the Bearer token.
Validate access token. :param token: A string of random characters :param scopes: A list of
Ensure client_id belong to a valid and active client.
Ensure the grant code is valid.
Ensure the client is authorized to use the grant type requested. It will allow any
Ensure client is authorized to redirect to the redirect_uri. This method is used in the
Ensure the token is valid and belongs to the client This method is used by
Ensure client is authorized to use the response type requested. It will allow any of
Ensure the client is authorized access to requested scopes.
Ensure the username and password is valid. Attach user object on request for later using.
Revoke an access or refresh token.
OAuthResponse class can't parse the JSON data with content-type- text/html and because of a rubbish
Update some required parameters for OAuth2.0 API calls
Recursively converts dictionary keys to strings.
Since weibo is a rubbish server, it does not follow the standard, we need to
Creates a remote app and registers it.
Creates a remote app only.
The uri returned from request.uri is not properly urlencoded (sometimes it's partially urldecoded) This is
Extract request params.
Make sure text is bytes type.
Decode base64 string.
Create response class for Flask.
Returns a :class:`SimpleCache` instance .. warning:: This cache system might not be thread safe. Use
Returns a :class:`MemcachedCache` instance
Returns a :class:`RedisCache` instance
Returns a :class:`FileSystemCache` instance
Gets the cached clients dictionary in current context.
Adds remote application and applies custom attributes on it. If the application instance's name is
Creates and adds new remote application. :param name: the remote application's name. :param version: '1'
Call the method repeatedly such that it will raise an exception.
Call the method repeatedly such that it will return a PKey object.
Call the function with an encrypted PEM and a passphrase callback.
Call the function with an encrypted PEM and a passphrase callback which returns the wrong
Call the function with an encrypted PEM and a passphrase callback which returns a non-string.
Create a CRL object with 100 Revoked objects, then call the get_revoked method repeatedly.
Copy an empty Revoked object repeatedly. The copy is not garbage collected, therefore it needs
Repeatedly create an EC_KEY* from an :py:obj:`_EllipticCurve`. The structure should be automatically garbage collected.
Connect to an SNI-enabled server and request a specific hostname, specified by argv[1], of it.
Create a public/private key pair. Arguments: type - Key type, must be one of TYPE_RSA
Create a certificate request. Arguments: pkey - The key to associate with the request digest
Generate a certificate given a certificate request. Arguments: req - Certificate request to use issuerCert
Builds a decorator that ensures that functions that rely on OpenSSL functions that are not
Let SSL know where we can find trusted certificates for the certificate chain. Note that
Set the passphrase callback. This function will be called when a private key with a
Specify that the platform provided CA certificates are to be used for verification purposes. This
Check to see if the default cert dir/file environment vars are present. :return: bool
Default verify paths are based on the compiled version of OpenSSL. However, when pyca/cryptography is
Load a certificate chain from a file. :param certfile: The name of the certificate chain
Load a certificate from a file :param certfile: The name of the certificate file (``bytes``
Load a certificate from a X509 object :param cert: The X509 object :return: None
Add certificate to chain :param certobj: The X509 certificate object to add to the chain
Load a private key from a file :param keyfile: The name of the key file
Load a private key from a PKey object :param pkey: The PKey object :return: None
Load the trusted certificates that will be sent to the client. Does not actually imply
Set the session id to *buf* within which a session can be reused for this
Set the behavior of the session cache used by all connections using this Context. The
et the verification flags for this Context object to *mode* and specify that *callback* should
Set the maximum depth for the certificate chain verification that shall be allowed for this
Load parameters for Ephemeral Diffie-Hellman :param dhfile: The file to load EDH parameters from (``bytes``
Set the list of ciphers to be used in this context. See the OpenSSL manual
Set the list of preferred client certificate signers for this server context. This list of
Add the CA certificate to the list of preferred signers for this context. The list
Set the timeout for newly created sessions for this Context object to *timeout*. The default
Set the information callback to *callback*. This function will be called from time to time
Get the certificate store for the context. This can be used to add "trusted" certificates
Add options. Options set before are not cleared! This method should be used with the
Add modes via bitmask. Modes set before are not cleared! This method should be used
Specify a callback function to be called when clients specify a server name. :param callback:
Enable support for negotiating SRTP keying material. :param bytes profiles: A colon delimited list of
Specify a callback function that will be called when offering `Next Protocol Negotiation <https://technotes.googlecode.com/git/nextprotoneg.html>`_ as
Specify a callback function that will be called when a server offers Next Protocol Negotiation
Specify the protocols that the client is prepared to speak after the TLS connection has
Specify a callback function that will be called on the server when a client offers
This internal helper does the common work for ``set_ocsp_server_callback`` and ``set_ocsp_client_callback``, which is almost all
Set a callback to provide OCSP data to be stapled to the TLS handshake on
Set a callback to validate OCSP data stapled to the TLS handshake on the client
Switch this connection to a new session context. :param context: A :class:`Context` instance giving the
Retrieve the servername extension value if provided in the client hello message, or None if
Set the value of the servername extension to send in the client hello. :param name:
Send data on the connection. NOTE: If you get one of the WantRead, WantWrite or
Send "all" data on the connection. This calls send() repeatedly until all data is sent.
Receive data on the connection. :param bufsiz: The maximum number of bytes to read :param
Receive data on the connection and copy it directly into the provided buffer, rather than
If the Connection was created with a memory BIO, this method can be used to
If the Connection was created with a memory BIO, this method can be used to
Renegotiate the session. :return: True if the renegotiation can be started, False otherwise :rtype: bool
Perform an SSL handshake (usually called after :meth:`renegotiate` or one of :meth:`set_accept_state` or :meth:`set_accept_state`). This
Call the :meth:`connect` method of the underlying socket and set up SSL on the socket,
Call the :meth:`connect_ex` method of the underlying socket and set up SSL on the socket,
Call the :meth:`accept` method of the underlying socket and set up SSL on the returned
Send the shutdown message to the Connection. :return: True if the shutdown completed successfully (i.e.
Retrieve the list of ciphers used by the Connection object. :return: A list of native
Get CAs whose certificates are suggested for client authentication. :return: If this is a server
Set the shutdown state of the Connection. :param state: bitvector of SENT_SHUTDOWN, RECEIVED_SHUTDOWN. :return: None
Retrieve the random value used with the server hello message. :return: A string representing the
Retrieve the random value used with the client hello message. :return: A string representing the
Retrieve the value of the master key for this session. :return: A string representing the
Obtain keying material for application use. :param: label - a disambiguating label string as described
Retrieve the local certificate (if any) :return: The local certificate
Retrieve the other side's certificate (if any) :return: The peer's certificate
Retrieve the other side's certificate (if any) :return: A list of X509 instances giving the
Returns the Session currently used. :return: An instance of :class:`OpenSSL.SSL.Session` or :obj:`None` if no session
Set the session to be used when the TLS/SSL connection is established. :param session: A
Helper to implement :meth:`get_finished` and :meth:`get_peer_finished`. :param function: Either :data:`SSL_get_finished`: or :data:`SSL_get_peer_finished`. :return: :data:`None` if
Obtain the name of the currently used cipher. :returns: The name of the currently used
Obtain the number of secret bits of the currently used cipher. :returns: The number of
Obtain the protocol version of the currently used cipher. :returns: The protocol name of the
Retrieve the protocol version of the current connection. :returns: The TLS version of the current
Get the protocol that was negotiated by NPN. :returns: A bytestring of the protocol name.
Specify the client's ALPN protocol list. These protocols are offered to the server during protocol
Get the protocol that was negotiated by ALPN. :returns: A bytestring of the protocol name.
Called to request that the server sends stapled OCSP data, if available. If this is
Allocate a new OpenSSL memory BIO. Arrange for the garbage collector to clean it up
Copy the contents of an OpenSSL BIO object into a Python byte string.
The the time value of an ASN1 time object. @param boundary: An ASN1_TIME pointer (or
Retrieve the time value of an ASN1 time object. @param timestamp: An ASN1_GENERALIZEDTIME* (or an
Return a single curve object selected by name. See :py:func:`get_elliptic_curves` for information about curve objects.
Load a certificate (X509) from the string *buffer* encoded with the type *type*. :param type:
Dump the certificate *cert* into a buffer string encoded with the type *type*. :param type:
Dump a public key to a buffer. :param type: The file type (one of :data:`FILETYPE_PEM`
Dump the private key *pkey* into a buffer string encoded with the type *type*. Optionally
Load a public key from a buffer. :param type: The file type (one of :data:`FILETYPE_PEM`,
Load a private key (PKey) from the string *buffer* encoded with the type *type*. :param
Dump the certificate request *req* into a buffer string encoded with the type *type*. :param
Load a certificate request (X509Req) from the string *buffer* encoded with the type *type*. :param
Sign a data string using the given key and message digest. :param pkey: PKey to
Verify the signature for a data string. :param cert: signing certificate (X509 object) corresponding to
Dump a certificate revocation list to a buffer. :param type: The file type (one of
Load Certificate Revocation List (CRL) data from a string *buffer*. *buffer* encoded with the type
Load pkcs7 data from the string *buffer* encoded with the type *type*. :param type: The
Load pkcs12 data from the string *buffer*. If the pkcs12 structure is encrypted, a *passphrase*
Export as a ``cryptography`` key. :rtype: One of ``cryptography``'s `key interfaces`_. .. _key interfaces: https://cryptography.io/en/latest/hazmat/\
Construct based on a ``cryptography`` *crypto_key*. :param crypto_key: A ``cryptography`` key. :type crypto_key: One of
Generate a key pair of the given type, with the given number of bits. This
Check the consistency of an RSA private key. This is the Python equivalent of OpenSSL's
Get the curves supported by OpenSSL. :param lib: The OpenSSL library binding object. :return: A
Get, cache, and return the curves supported by OpenSSL. :param lib: The OpenSSL library binding
Instantiate a new :py:class:`_EllipticCurve` associated with the given OpenSSL NID. :param lib: The OpenSSL library
Create a new OpenSSL EC_KEY structure initialized to use this curve. The structure is automatically
Return the DER encoding of this name. :return: The DER encoded form of this name.
Returns the components of this name, as a sequence of 2-tuples. :return: The components of
Returns the short type name of this X.509 extension. The result is a byte string
Returns the data of the X509 extension, encoded as ASN.1. :return: The ASN.1 encoded data
Export as a ``cryptography`` certificate signing request. :rtype: ``cryptography.x509.CertificateSigningRequest`` .. versionadded:: 17.1.0
Construct based on a ``cryptography`` *crypto_req*. :param crypto_req: A ``cryptography`` X.509 certificate signing request :type
Set the public key of the certificate signing request. :param pkey: The public key to
Get the public key of the certificate signing request. :return: The public key. :rtype: :py:class:`PKey`
Set the version subfield (RFC 2459, section 4.1.2.1) of the certificate request. :param int version:
Return the subject of this certificate signing request. This creates a new :class:`X509Name` that wraps
Add extensions to the certificate signing request. :param extensions: The X.509 extensions to add. :type
Get X.509 extensions in the certificate signing request. :return: The X.509 extensions in this request.
Verifies the signature on this certificate signing request. :param PKey key: A public key. :return:
Export as a ``cryptography`` certificate. :rtype: ``cryptography.x509.Certificate`` .. versionadded:: 17.1.0
Construct based on a ``cryptography`` *crypto_cert*. :param crypto_key: A ``cryptography`` X.509 certificate. :type crypto_key: ``cryptography.x509.Certificate``
Set the version number of the certificate. Note that the version value is zero-based, eg.
Get the public key of the certificate. :return: The public key. :rtype: :py:class:`PKey`
Set the public key of the certificate. :param pkey: The public key. :type pkey: :py:class:`PKey`
Sign the certificate with this key and digest type. :param pkey: The key to sign
Return the signature algorithm used in the certificate. :return: The name of the algorithm. :rtype:
Return the digest of the X509 object. :param digest_name: The name of the digest algorithm
Set the serial number of the certificate. :param serial: The new serial number. :type serial:
Return the serial number of this certificate. :return: The serial number. :rtype: int
Adjust the time stamp on which the certificate stops being valid. :param int amount: The
Adjust the timestamp on which the certificate starts being valid. :param amount: The number of
Check whether the certificate has expired. :return: ``True`` if the certificate has expired, ``False`` otherwise.
Return the issuer of this certificate. This creates a new :class:`X509Name` that wraps the underlying
Set the issuer of this certificate. :param issuer: The issuer. :type issuer: :py:class:`X509Name` :return: ``None``
Return the subject of this certificate. This creates a new :class:`X509Name` that wraps the underlying
Set the subject of this certificate. :param subject: The subject. :type subject: :py:class:`X509Name` :return: ``None``
Add extensions to the certificate. :param extensions: The extensions to add. :type extensions: An iterable
Get a specific extension of the certificate by index. Extensions on a certificate are kept
Adds a trusted certificate to this store. Adding a certificate with this method adds this
Add a certificate revocation list to this store. The certificate revocation lists added to a
Set the time against which the certificates are verified. Normally the current time is used.
Set up the store context for a subsequent verification operation. Calling this method more than
Convert an OpenSSL native context error failure into a Python exception. When a call to
Verify a certificate in a context. .. versionadded:: 0.15 :raises X509StoreContextError: If an error occurred
Set the serial number. The serial number is formatted as a hexadecimal number encoded in
Get the serial number. The serial number is formatted as a hexadecimal number encoded in
Set the reason of this revocation. If :data:`reason` is ``None``, delete the reason instead. :param
Get the reason of this revocation. :return: The reason, or ``None`` if there is none.
Set the revocation timestamp. :param bytes when: The timestamp of the revocation, as ASN.1 TIME.
Export as a ``cryptography`` CRL. :rtype: ``cryptography.x509.CertificateRevocationList`` .. versionadded:: 17.1.0
Construct based on a ``cryptography`` *crypto_crl*. :param crypto_crl: A ``cryptography`` certificate revocation list :type crypto_crl:
Return the revocations in this certificate revocation list. These revocations will be provided by value,
Add a revoked (by value not reference) to the CRL structure This revocation will be
Get the CRL's issuer. .. versionadded:: 16.1.0 :rtype: X509Name
Sign the CRL. Signing a CRL enables clients to associate the CRL itself with an
Export the CRL as a string. :param X509 cert: The certificate used to sign the
Returns the type name of the PKCS7 structure :return: A string with the typename
Set the certificate in the PKCS #12 structure. :param cert: The new certificate, or :py:const:`None`
Set the certificate portion of the PKCS #12 structure. :param pkey: The new private key,
Replace or set the CA certificates within the PKCS12 object. :param cacerts: The new CA
Set the friendly name in the PKCS #12 structure. :param name: The new friendly name,
Dump a PKCS12 object as a string. For more information, see the :c:func:`PKCS12_create` man page.
Sign the certificate request with this key and digest type. :param pkey: The private key
Verifies a signature on a certificate request. :param PKey key: The public key that signature
Generate a base64 encoded representation of this SPKI object. :return: The base64 encoded string. :rtype:
Get the public key of this certificate. :return: The public key. :rtype: :py:class:`PKey`
Set the public key of the certificate :param pkey: The public key :return: ``None``
Convert an OpenSSL library failure into a Python exception. When a call to the native
Convert :py:class:`bytes` or :py:class:`unicode` to the native :py:class:`str` type, using UTF-8 encoding if conversion is
Convert a Python string to a :py:class:`bytes` string identifying the same path and which can
If ``obj`` is text, emit a warning that it should be bytes instead and try
Mix bytes from *string* into the PRNG state. The *entropy* argument is (the lower bound
This is the other part of the shutdown() workaround. Since servers create new sockets, we
We need to use socket._fileobject Because SSL.Connection doesn't have a 'dup'. Not exactly sure WHY
Run an SNI-enabled server which selects between a few certificates in a C{dict} based on
Internal helper to provide color names.
Return extra config options to be passed to the TrelloIssue class
Returns a list of dicts representing issues from a remote service.
A wrapper around get_comments that build the taskwarrior annotations.
Get the list of boards to pull cards from. If the user gave a value
Returns a list of the filtered lists for the given board This filters the trello
Returns an iterator for the cards in a given list, filtered according to configuration values
Returns an iterator for the comments on a certain card.
Make a trello API request. This takes an absolute url (without protocol and host) and
Grab all the issues
Approach: 1. Get user ID from bugwarriorrc file 2. Get list of tickets from /user-tasks
Build the full url to the API endpoint
Run a generic issue/PR query
Pagination utility. Obnoxious.
Utility for ripping apart github's Link header field. It's kind of ugly.
Grab all the issues
Grab all issues matching a github query
Grab all the pull requests
This worker function is separated out from the main :func:`aggregate_issues` func only so that we
Return all issues from every target.
Return a main config value, or default if it does not exist.
Get any defined templates for configuration values. Users can override the value of any Taskwarrior
Validate generic options for a particular target
Return true if the issue in question should be included
Make a RST-compatible table From http://stackoverflow.com/a/12539081
Retrieve the sensitive password for a service by: * retrieving password from a secure store
Retrieve password from the given command
Determine the path to the config file. This will return, in this order of precedence:
Expand environment variables and user home (~) in the log.file and return as relative path.
Accepts both integers and empty values.
Default longdescs/flags case to [] since they may not be present.
Pull down tasks from forges and add them to your taskwarrior tasks. Relies on configuration
Perform a request to the fully qualified url and return json.
Pages through an object collection from the bitbucket API. Returns an iterator that lazily goes
Count the # of differences between equal length strings str1 and str2
For a given issue issue, find its local UUID. Assembles a list of task IDs
Merge array field from the remote_issue into local_task * Local 'left' entries are preserved without
Returns a list of UDAs defined by given targets For all targets in `targets`, build
Parse the big ugly sprint string stored by JIRA. They look like: com.atlassian.greenhopper.service.sprint.Sprint@4c9c41a5[id=2322,rapid ViewId=1173,state=ACTIVE,name=Sprint 1,startDate=2016-09-06T16:08:07.4
Gets valid user credentials from storage. If nothing has been stored, or if the stored
Efficient way to compute highly repetitive scoring i.e. sequences are involved multiple time Args: sequences(list[str]):
Computes ROUGE-N of two text collections of sentences. Sourece: http://research.microsoft.com/en-us/um/people/cyl/download/ papers/rouge-working-note-v1.3.1.pdf Args: evaluated_sentences: The sentences
Returns LCS_u(r_i, C) which is the LCS score of the union longest common subsequence between
Computes ROUGE-L (summary level) of two text collections of sentences. http://research.microsoft.com/en-us/um/people/cyl/download/papers/ rouge-working-note-v1.3.1.pdf Calculated according to:
Calculate ROUGE scores between each pair of lines (hyp_file[i], ref_file[i]). Args: * hyp_path: hypothesis file
calculate pvalues for all categories in the graph :param set query: set of identifiers for
benjamini hocheberg fdr correction. inspired by statsmodels
Standardize the mean and variance of the data axis Parameters. :param data2d: DataFrame to normalize.
Visualize the dataframe. :param df: DataFrame from expression table. :param z_score: z_score axis{0, 1}. If
This is the main function for reproducing the gsea plot. :param rank_metric: pd.Series for rankings,
Visualize enrichr results. :param df: GSEApy DataFrame results. :param column: which column of DataFrame to
Visualize enrichr results. :param df: GSEApy DataFrame results. :param column: which column of DataFrame to
function for removing spines and ticks. :param ax: axes object :param spines: a list of
The Main function/pipeline for GSEApy.
Prepare argparser object. New options will be added in this function first.
output option
output group
Add main function 'gsea' argument parsers.
Add function 'prerank' argument parsers.
Add function 'plot' argument parsers.
Add function 'enrichr' argument parsers.
Add function 'biomart' argument parsers.
This is the most important function of GSEApy. It has the same algorithm with GSEA
Next generation algorithm of GSEA and ssGSEA. :param gene_mat: the ordered gene list(vector) with or
Build shuffled ranking matrix when permutation_type eq to phenotype. :param exprs: gene_expression DataFrame, gene_name indexed.
The main function to rank an expression table. :param df: gene_expression DataFrame. :param method: The
compute enrichment scores and enrichment nulls. :param data: preprocessed expression dataframe or a pre-ranked file
compute enrichment scores and enrichment nulls. :param data: preprocessed expression dataframe or a pre-ranked file
Compute nominal p-value. From article (PNAS): estimate nominal p-value for S from esnull by using
normalize the ES(S,pi) and the observed ES(S), separately rescaling the positive and negative scores by
Compute nominal pvals, normalized ES, and FDR q value. For a given NES(S) = NES*
logging start
log stop
retry connection. define max tries num if the backoff_factor is 0.1, then sleep() will sleep
Extract class(phenotype) name from .cls file. :param cls: the a class list instance or .cls
Parse results.edb file stored under **edb** file folder. :param results_path: the .results file located inside
Parse gene_sets.gmt(gene set database) file or download from enrichr server. :param gmt: the gene_sets.gmt file
return enrichr active enrichr library name. :param str database: Select one from { 'Human', 'Mouse',
Get available marts and their names.
Get available datasets from mart you've selected
Get available attritbutes from dataset you've selected
Get available filters from dataset you've selected
mapping ids using BioMart. :param dataset: str, default: 'hsapiens_gene_ensembl' :param attributes: str, list, tuple :param
Run Gene Set Enrichment Analysis. :param data: Gene expression data table, Pandas DataFrame, gct file.
Run Gene Set Enrichment Analysis with single sample GSEA tool :param data: Expression table, pd.Series,
Run Gene Set Enrichment Analysis with pre-ranked correlation defined by user. :param rnk: pre-ranked correlation
The main function to reproduce GSEA desktop outputs. :param indir: GSEA desktop results directory. In
create temp directory.
set cpu numbers to be used
Parse ranking file. This file contains ranking correlation vector( or expression values) and gene names
load gene set dict
gmt parser
return active enrichr library name.Offical API
download enrichr libraries.
only use for gsea heatmap
Plotting API. :param rank_metric: sorted pd.Series with rankings values. :param results: self.results :param data: preprocessed
reformat gsea results, and save to txt
pre-processed the data frame.new filtering methods will be implement here.
GSEA main procedure
GSEA prerank workflow
normalization samples see here: http://rowley.mit.edu/caw_web/ssGSEAProjection/ssGSEAProjection.Library.R
run entry
Single Sample GSEA workflow with permutation procedure
Single Sample GSEA workflow. multiprocessing utility on samples.
save es and stats
main replot function
Enrichr API. :param gene_list: Flat file with list of genes, one gene id per row,
create temp directory.
parse gene_sets input file type
parse gene list
send gene list to enrichr server
Compare the genes sent and received to get successfully recognized genes
Enrichr API
get background gene
Select Enrichr organism from below: Human & Mouse: H. sapiens & M. musculus Fly: D.
use local mode p = p-value computed using the Fisher exact test (Hypergeometric test) Not
run enrichr for one sample gene list but multi-libraries
Create a cube primitive Note that this is made of 6 quads, not triangles
Create a cylinder or cone primitive. Usage is based on OpenSCAD. # height = height
create an icosphere mesh radius Radius of the sphere # subdivisions = Subdivision level; Number
# angle = Angle of the cone subtending the cap. It must be <180 less
Create a torus mesh Args: major_radius (float, (optional)): radius from the origin to the center
2D square/plane/grid created on XY plane x_segments # Number of segments in the X direction.
Create a 2D (surface) circle or annulus radius1=1 # Outer radius of the circle radius2=0
Creates a round open tube, e.g. a cylinder with no top or bottom. Useful if
Creates a square open tube, e.g. a box with no top or bottom. Useful if
Creates a square open tube, e.g. a box with no top or bottom. Useful if
Creates a plane with a specified number of vertices on it sides, but no vertices
Create a box with user defined number of segments in each direction. Grid spacing is
Create a cylinder with user defined number of segments
Create a cylinder with user defined number of segments
Read color_names.txt and find the red, green, and blue values for a named color.
Check if a variable is a list and is the correct length. If variable is
Make a variable a list if it is not already If variable is not a
Write filter to FilterScript object or filename Args: script (FilterScript object or filename str): the
Apply LS3 Subdivision Surface algorithm using Loop's weights. This refinement method take normals into account.
Merge together all the vertices that are nearer than the specified threshold. Like a unify
Close holes smaller than a given threshold Args: script: the FilterScript object or script filename
Split non-manifold vertices until it becomes two-manifold. Args: script: the FilterScript object or script filename
Try to snap together adjacent borders that are slightly mismatched. This situation can happen on
An alternative translate implementation that uses a geometric function. This is more accurate than the
An alternative rotate implementation that uses a geometric function. This is more accurate than the
An alternative scale implementation that uses a geometric function. This is more accurate than the
Freeze the current transformation matrix into the coordinates of the vertices of the mesh (and
Geometric function using muparser lib to generate new Coordinates You can change x, y, z
Geometric function using muparser lib to generate new Coordinates You can change x, y, z
Geometric function using cylindrical coordinates. Define functions in Z up cylindrical coordinates, with radius 'r',
flare_radius must be >= end_height (height) end_radius max = flare_radius + r end_radius (num): radius
flare_radius must be >= z2 (height) r2 max = flare_radius + r r2 (num): radius
flare_radius must be >= z2 (height) r2 max = flare_radius + r r2 (num): radius
Deform mesh around cylinder of radius and axis z y = 0 will be on
Bends mesh around cylinder of radius radius and axis z to a certain angle straight_ends:
Deform a mesh along a parametric curve function Provide a parametric curve function with z
Transfer vertex colors to texture colors Args: script: the FilterScript object or script filename to
Transfer mesh colors to face colors Args: script: the FilterScript object or script filename to
Vertex Attribute Transfer (between 2 meshes) Transfer the chosen per-vertex attributes from one mesh to
Transfer Vertex Attributes to Texture (between 2 meshes) Args: script: the FilterScript object or script
Transfer texture colors to vertex colors (between 2 meshes) Args: script: the FilterScript object or
Simplify a mesh using a Quadric based Edge Collapse Strategy, better than clustering but slower.
Create a new mesh that is a resampled version of the current one. The resampling
Calculate the convex hull with Qhull library http://www.qhull.org/html/qconvex.htm The convex hull of a set of
Use the points and normals to build a surface using the Poisson Surface reconstruction approach.
This surface reconstruction algorithm creates watertight surfaces from oriented point sets. The filter uses the
Use the points and normals to build a surface using the Poisson Surface reconstruction approach.
Turn a model into a surface with Voronoi style holes in it References: http://meshlabstuff.blogspot.com/2009/03/creating-voronoi-sphere.html http://meshlabstuff.blogspot.com/2009/04/creating-voronoi-sphere-2.html
Select all the faces of the current mesh Args: script: the FilterScript object or script
Grow (dilate, expand) the current set of selected faces Args: script: the FilterScript object or
Shrink (erode, reduce) the current set of selected faces Args: script: the FilterScript object or
Select the small disconnected parts (components) of a mesh. Args: script: the FilterScript object or
Select all the faces and vertexes within the specified vertex quality range. Args: script: the
Boolean function using muparser lib to perform face selection over current mesh. See help(mlx.muparser_ref) for
Boolean function using muparser lib to perform vertex selection over current mesh. See help(mlx.muparser_ref) for
Select all vertices within a cylindrical radius Args: radius (float): radius of the sphere center_pt
Select all vertices within a spherical radius Args: radius (float): radius of the sphere center_pt
Flatten all or only the visible layers into a single new mesh. Transformations are preserved.
Delete layer Args: script: the mlx.FilterScript object or script filename to write the filter to.
Rename layer label Can be useful for outputting mlp files, as the output file names
Change the current layer by specifying the new layer number. Args: script: the mlx.FilterScript object
Duplicate a layer. New layer label is '*_copy'. Args: script: the mlx.FilterScript object or script
Split current layer into many layers, one for each part (connected component) Mesh is split
Delete all layers below the specified one. Useful for MeshLab ver 2016.12, whcih will only
Subprocess program error handling Args: program_name (str): name of the subprocess program Returns: break_now (bool):
Run meshlabserver in a subprocess. Args: log (str): filename of the log file for meshlabxml.
Finds the filenames of the referenced texture file(s) (and material file for obj) for the
Set default output mask options based on file extension Note: v1.34BETA changed -om switch to
Create new mlx script and write opening tags. Performs special processing on stl files. If
Create mlp file mlp_mesh (list containing dictionary) filename* label matrix mlp_raster filename* label semantic camera
Add new mesh layer to the end of the stack Args: label (str): new label
Delete mesh layer
Save filter script to an mlx file
Run the script
Run main script
Select & delete the small disconnected parts (components) of a mesh. Args: script: the FilterScript
Delete selected vertices and/or faces Note: if the mesh has no faces (e.g. a point
Check for every vertex on the mesh: if it is NOT referenced by a face,
"Check for every vertex on the mesh: if there are two vertices with the same
Compute the Hausdorff Distance between two meshes, sampling one of the two and finding for
Create a new layer populated with a point sampling of the current mesh. Samples are
Create a new layer populated with a point sampling of the current mesh, at most
"Create a new layer populated with a subsampling of the vertexes of the current mesh
Flat plane parameterization
Trivial Per-Triangle parameterization
Voronoi Atlas parameterization
Isometric parameterization
Isometric parameterization: Build Atlased Mesh This actually generates the UV mapping from the isometric parameterization
Isometric parameterization: Save Abstract Domain
Isometric parameterization: Load Abstract Domain
Isometric parameterization: transfer between meshes Provide the layer numbers of the source and target meshes.
Isometric parameterization: remeshing
Set texture
Set texture Creates new texture file tex_file_out = must be png fill_atlas_gaps = setting this
Set texture
Set texture
Compute the polyline representing a planar section (a slice) of a mesh. If the resulting
Compute a set of geometric measures of a mesh/pointcloud. Bounding box extents and diagonal, principal
Compute a set of topological measures over a mesh Args: script: the mlx.FilterScript object or
Parse the ml_log file generated by the measure_geometry function. Warnings: Not all keys may exist
Parse the ml_log file generated by the measure_topology function. Args: ml_log (str): MeshLab log file
Parse the ml_log file generated by the hausdorff_distance function. Args: ml_log (str): MeshLab log file
Color function using muparser lib to generate new RGBA color for every vertex Red, Green,
Given a Mesh 'M' and a Pointset 'P', the filter projects each vertex of P
Color mesh vertices in a repeating sinusiodal rainbow pattern Sine wave follows the following equation
muparser atan2 function Implements an atan2(y,x) function for older muparser versions (<2.1.0); atan2 was added
muparser cross product function Compute the cross product of two 3x1 vectors Args: u (list
Multiply vector by scalar
A tight (small inner crossings) (p,q) torus knot parametric curve Source (for trefoil): https://en.wikipedia.org/wiki/Trefoil_knot
Add a new Per-Vertex scalar attribute to current mesh and fill it with the defined
:Quality function using muparser to generate new Quality for every vertex<br>It's possibile to use the
Rainbow colored voronoi quatrefoil (3,4) torus knot
Invert faces orientation, flipping the normals of the mesh. If requested, it tries to guess
Compute the normals of the vertices of a mesh without exploiting the triangle connectivity, useful
Laplacian smooth of the mesh: for each vertex it calculates the average position with nearest
The lambda & mu Taubin smoothing, it make two steps of smoothing, forth and back,
Two Step Smoothing, a feature preserving/enhancing fairing filter. It is based on a Normal Smoothing
A laplacian smooth that is constrained to move vertices only along the view direction. Args:
Measure the axis aligned bounding box (aabb) of a mesh in multiple coordinate systems. Args:
Measure a cross section of a mesh Perform a plane cut in one of the
Sort separate line segments in obj format into a continuous polyline or polylines. NOT FINISHED;
Measures mesh topology Args: fbasename (str): input filename. log (str): filename to log output Returns:
Measures mesh geometry, aabb and topology.
Measure a dimension of a mesh
This is a helper used by UploadSet.save to provide lowercase extensions for all processed files,
By default, Flask will accept uploads to an arbitrary size. While Werkzeug switches uploads from
This is a helper function for `configure_uploads` that extracts the configuration for a single set.
Call this after the app has been configured. It will go through all the upload
This gets the current configuration. By default, it looks up the current application and gets
This function gets the URL a file uploaded to this set would be accessed at.
This returns the absolute path of a file uploaded to this set. It doesn't actually
This determines whether a specific extension is allowed. It is called by `file_allowed`, so if
This saves a `werkzeug.FileStorage` into this upload set. If the upload is not allowed, an
If a file with the selected name already exists in the target folder, this method
Returns actual version specified in filename.
Removes duplicate objects. http://www.peterbe.com/plog/uniqifiers-benchmark.
Returns count difference in two collections of Python objects.
Formats object count.
Checks memory usage when 'line' event occur.
Returns processed memory usage.
Returns all objects that are considered a profiler overhead. Objects are hardcoded for convenience.
Returns memory overhead.
Returns memory stats for a package.
Returns memory stats for a module.
Returns memory stats for a function.
Collects memory stats for specified Python program.
Returns module filenames from package. Args: package_path: Path to Python package. Returns: A set of
Runs function in separate process. This function is used instead of a decorator, since Python
Determines run object type.
Initializes profiler with a module.
Initializes profiler with a package.
Initializes profiler with a function.
Replaces sys.argv with proper args to pass to script.
Samples current stack and adds result in self._stats. Args: signum: Signal that activates handler. frame:
Inserts stack into the call tree. Args: stack: Call stack. sample_count: Sample count of call
Counts and fills sample counts inside call tree.
Reformats call tree for the UI.
Returns call tree.
Runs statistical profiler on a package.
Runs statistical profiler on a module.
Runs statistical profiler on a function.
Processes collected stats for UI.
Runs cProfile on a package.
Runs cProfile on a module.
Runs cProfile on a function.
Initializes DB.
Returns all existing guestbook records.
Adds single guestbook record.
Profiler handler.
Starts HTTP server with specified parameters. Args: host: Server host name. port: Server port. profiler_stats:
Handles index.html requests.
Handles static files requests.
Handles HTTP GET requests.
Handles HTTP POST requests.
Sends HTTP response code, message and headers.
Main function of the module.
Checks whether path belongs to standard library or installed modules.
Records line execution time.
Filters code from standard library from self.lines.
Fills code heatmap and execution count dictionaries.
Calculates skip map for large sources. Skip map is a list of tuples where first
Skips lines in src_code specified by skip map.
Calculates heatmap for package.
Formats heatmap for UI.
Calculates heatmap for module.
Calculates heatmap for function.
Runs profilers on run_object. Args: run_object: An object (string or tuple) for profiling. prof_config: A
Runs profilers on a function. Args: func: A Python function. options: A string with profilers
Return probability estimates for the RDD containing test vector X. Parameters ---------- X : RDD
Return log-probability estimates for the RDD containing the test vector X. Parameters ---------- X :
Fit Gaussian Naive Bayes according to X, y Parameters ---------- X : array-like, shape (n_samples,
TODO fulibacsi fix docstring Fit Multinomial Naive Bayes according to (X,y) pair which is zipped
Create vocabulary
Create sparse feature matrix, and vocabulary where fixed_vocab=False
Sort features by name Returns a reordered matrix and modifies the vocabulary in place
Remove too rare or too common features. Prune features that are non zero in more
Learn the vocabulary dictionary and return term-document matrix. This is equivalent to fit followed by
Transform documents to document-term matrix. Extract token counts out of raw text documents using the
Transform an ArrayRDD (or DictRDD with column 'X') containing sequence of documents to a document-term
Learn the idf vector (global term weights) Parameters ---------- Z : ArrayRDD or DictRDD containing
Compute the mean and std to be used for later scaling. Parameters ---------- Z :
Perform standardization by centering and scaling Parameters ---------- Z : DictRDD containing (X, y) pairs
Convert to equivalent StandardScaler
Wraps a Scikit-learn Linear model's fit method to use with RDD input. Parameters ---------- cls
Wraps a Scikit-learn Linear model's predict method to use with RDD input. Parameters ---------- cls
Fit linear model. Parameters ---------- Z : DictRDD with (X, y) values X containing numpy
Fit all the transforms one after the other and transform the data, then fit the
Fit all the transforms one after the other and transform the data, then use fit_transform
Applies transforms to the data, and the score method of the final estimator. Valid only
TODO: rewrite docstring Fit all transformers using X. Parameters ---------- X : array-like or sparse
TODO: rewrite docstring Fit all transformers using X, transform the data and concatenate results. Parameters
TODO: rewrite docstring Transform X separately by each transformer, concatenate results. Parameters ---------- X :
Fit the model according to the given training data. Parameters ---------- Z : DictRDD containing
Actual fitting, performing the search over parameters.
Fit label encoder Parameters ---------- y : ArrayRDD (n_samples,) Target values. Returns ------- self :
Transform labels to normalized encoding. Parameters ---------- y : ArrayRDD [n_samples] Target values. Returns -------
Compute the score of an estimator on a given test set.
Compute k-means clustering. Parameters ---------- Z : ArrayRDD or DictRDD containing array-like or sparse matrix
Predict the closest cluster each sample in X belongs to. In the vector quantization literature,
Fit the model according to the given training data. Parameters ---------- Z : DictRDD containing
Distributed method to predict class labels for samples in X. Parameters ---------- X : ArrayRDD
Checks if the blocks in the RDD matches the expected types. Parameters: ----------- rdd: splearn.BlockRDD
Learn a list of feature name -> indices mappings. Parameters ---------- Z : DictRDD with
Transform ArrayRDD's (or DictRDD's 'X' column's) feature->value dicts to array or sparse matrix. Named features
Learn empirical variances from X. Parameters ---------- X : {array-like, sparse matrix}, shape (n_samples, n_features)
Calculate the SVD of a blocked RDD directly, returning only the leading k singular vectors.
Calculate the SVD of a blocked RDD using an expectation maximization algorithm (from Roweis, NIPS,
Fit LSI model to X and perform dimensionality reduction on X. Parameters ---------- X :
Perform dimensionality reduction on X. Parameters ---------- X : {array-like, sparse matrix}, shape (n_samples, n_features)
Pack rdd with a specific collection constructor.
Pack rdd of tuples as tuples of arrays or scipy.sparse matrices.
Block an RDD Parameters ---------- rdd : RDD RDD of data points to block into
Execute the blocking process on the given rdd. Parameters ---------- rdd : pyspark.rdd.RDD Distributed data
Equivalent to map, compatibility purpose only. Column parameter ignored.
Returns the shape of the data.
Returns the data as numpy.array from each partition.
Execute the blocking process on the given rdd. Parameters ---------- rdd : pyspark.rdd.RDD Distributed data
Execute a transformation on a column or columns. Returns the modified DictRDD. Parameters ---------- f
Returns zero if there are no permissions for a bit of the perm. of a
File is only writable by root :param str path: Path to file :return: True if
Command to check configuration file. Raises InvalidConfig on error :param str file: path to config
Parse and validate the config file. The read data is accessible as a dictionary in
Get the arguments to execute a command as a user :param str cmd: command to
Excecute command on thread :param cmd: Command to execute :param cwd: current working directory :return:
Excecute command on remote machine using SSH :param cmd: Command to execute :param ssh: Server
Execute using self.data :param bool root_allowed: Allow execute as root commands :return:
Check self.data. Raise InvalidConfig on error :return: None
Execute using self.data :param bool root_allowed: Only used for ExecuteCmd :return:
Get HTTP Headers to send. By default default_headers :return: HTTP Headers :rtype: dict
API url :return: url :rtype: str
Return "data" value on self.data :return: data to send :rtype: str
Home assistant url :return: url :rtype: str
IFTTT Webhook url :return: url :rtype: str
Return source mac address for this Scapy Packet :param scapy.packet.Packet pkt: Scapy Packet :return: Mac
Scandevice callback. Register src mac to avoid src repetition. Print device on screen. :param scapy.packet.Packet
Print help and scan devices on screen. :return: None
Execute this device :param bool root_allowed: Only used for ExecuteCmd :return: None
Send success or error message to configured confirmation :param str message: Body message to send
Press button. Check DEFAULT_DELAY. :param scapy.packet.Packet device: Scapy packet :return: None
Execute a device. Used if the time between executions is greater than DEFAULT_DELAY :param scapy.packet.Packet
Start daemon mode :param bool root_allowed: Only used for ExecuteCmd :return: loop
Sniff packages :param fn: callback on packet :param lfilter: filter packages :return: loop
Loads a web page in the current browser session. :param absolgenerateute_or_relative_url: an absolute url to
Convert an OFX Transaction to a posting
Returns main ledger file path or raise exception if it cannot be \found.
This function is the final common pathway of program: Print initial balance if requested; Print
Run the unit test suite with each support library and Python version.
Returns the width, in pixels, of a string in DejaVu Sans 110pt.
Transform README.md into a usable long description. Replaces relative references to svg images to absolute
Returns the width, in pixels, of a string in DejaVu Sans 110pt.
Return a PrecalculatedTextMeasurer given a JSON stream. See precalculate_text.py for details on the required format.
Returns a reasonable default PrecalculatedTextMeasurer.
Creates a github-style badge as an SVG image. >>> badge(left_text='coverage', right_text='23%', right_color='red') '<svg...</svg>' >>> badge(left_text='build',
Generate the characters support by the font at the given path.
Generates the subset of 'characters' that can be encoded by 'encodings'. Args: characters: The characters
Return a mapping between each given character and its length. Args: measurer: The TextMeasurer used
Returns a mapping between each *pair* of characters and their kerning. Args: measurer: The TextMeasurer
Write the data required by PrecalculatedTextMeasurer to a stream.
Convolve 2d gaussian.
Generate a gaussian kernel.
Convert PIL image to numpy grayscale array and numpy alpha array. Args: img (PIL.Image): PIL
Main function for pyssim.
Compute the SSIM value from the reference image to the target image. Args: target (str
Compute the complex wavelet SSIM (CW-SSIM) value from the reference image to the target image.
Computes SSIM. Args: im1: First PIL Image object to compare. im2: Second PIL Image object
Replicated decorator. Use it to mark your class members that modifies a class state. Function
Correctly destroy SyncObj. Stop autoTickThread, close connections, etc.
Waits until initialized (binded port). If success - just returns. If failed to initialized after
Switch to a new code version on all cluster nodes. You should ensure that cluster
Remove single node from cluster (dynamic membership changes). Async. You should wait until node successfully
Dumps different debug info about cluster to dict and return it
Dumps different debug info about cluster to default logger
Find the node to which a connection belongs. :param conn: connection object :type conn: TcpConnection
Create the TCP server (but don't bind yet)
Bind the server unless it is already bound, this is a read-only node, or the
Callback for connections initiated by the other side :param conn: connection object :type conn: TcpConnection
Callback for initial messages on incoming connections. Handles encryption, utility messages, and association of the
Callback for the utility messages :param res: result of the command :param err: error code
Check whether this node should initiate a connection to another node :param node: the other
Connect to a node if necessary. :param node: node to connect to :type node: Node
Callback for when a new connection from this to another node is established. Handles encryption
Callback for receiving a message on a new outgoing connection. Used only if encryption is
Callback for when a connection is terminated or considered dead. Initiates a reconnect if necessary.
Add a node to the network :param node: node to add :type node: TCPNode
Drop a node from the network :param node: node to drop :type node: Node
Send a message to a node. Returns False if the connection appears to be dead
Destroy this transport
Put an item into the queue. True - if item placed in queue. False -
Put an item into the queue. Items should be comparable, eg. tuples. True - if
Extract the smallest item from queue. Return default if queue is empty.
Attempt to acquire lock. :param lockID: unique lock identifier. :type lockID: str :param sync: True
Check if lock is acquired by ourselves. :param lockID: unique lock identifier. :type lockID: str
Release previously-acquired lock. :param lockID: unique lock identifier. :type lockID: str :param sync: True -
Decorator which wraps checks and returns an error response on failure.
Decorator which ensures that one of the WATCHMAN_TOKENS is provided if set. WATCHMAN_TOKEN_NAME can also
Sets the Elasticsearch hosts to use Args: hosts (str): A single hostname or URL, or
Create Elasticsearch indexes Args: names (list): A list of index names settings (dict): Index settings
Updates index mappings Args: aggregate_indexes (list): A list of aggregate index names forensic_indexes (list): A
Saves a parsed DMARC aggregate report to ElasticSearch Args: aggregate_report (OrderedDict): A parsed forensic report
Saves a parsed DMARC forensic report to ElasticSearch Args: forensic_report (OrderedDict): A parsed forensic report
Duplicates org_name, org_email and report_id into JSON root and removes report_metadata key to bring it
Creates a date_range timestamp with format YYYY-MM-DD-T-HH:MM:SS based on begin and end dates for easier
Saves aggregate DMARC reports to Kafka Args: aggregate_reports (list): A list of aggregate report dictionaries
Saves forensic DMARC reports to Kafka, sends individual records (slices) since Kafka requires messages to
Converts a record from a DMARC aggregate report into a more consistent format Args: record
Parses a DMARC XML report string and returns a consistent OrderedDict Args: xml (str): A
Extracts xml from a zip or gzip file at the given path, file-like object, or
Parses a file at the given path, a file-like object. or bytes as a aggregate
Converts one or more parsed aggregate reports to flat CSV format, including headers Args: reports:
Converts a DMARC forensic report and sample to a ``OrderedDict`` Args: feedback_report (str): A message's
Converts one or more parsed forensic reports to flat CSV format, including headers Args: reports:
Parses a DMARC report from an email Args: input_: An emailed DMARC report in RFC
Parses a DMARC aggregate or forensic file at the given path, a file-like object. or
Returns a list of an IMAP server's capabilities Args: server (imapclient.IMAPClient): An instance of imapclient.IMAPClient
Fetches and parses DMARC reports from sn inbox Args: host: The mail server hostname or
Save report data in the given directory Args: results (OrderedDict): Parsing results output_directory: The patch
Creates a zip file of parsed report output Args: results (OrderedDict): The parsed results Returns:
Emails parsing results as a zip file Args: results (OrderedDict): Parsing results host: Mail server
Use an IDLE IMAP connection to parse incoming emails, and pass the results to a
Saves aggregate DMARC reports to Splunk Args: aggregate_reports: A list of aggregate report dictionaries to
Saves forensic DMARC reports to Splunk Args: forensic_reports (list): A list of forensic report dictionaries
Decodes a base64 string, with padding being optional Args: data: A base64 encoded string Returns:
Gets the base domain name for the given domain .. note:: Results are based on
Queries DNS Args: domain (str): The domain or subdomain to query about record_type (str): The
Resolves an IP address to a hostname using a reverse DNS query Args: ip_address (str):
Converts a human-readable timestamp into a Python ``DateTime`` object Args: human_timestamp (str): A timestamp string
Uses the MaxMind Geolite2 Country database to return the ISO code for the country associated
Returns reverse DNS and country information for the given IP address Args: ip_address (str): The
Converts a string to a string that is safe for a filename Args: string (str):
Uses the ``msgconvert`` Perl utility to convert an Outlook MS file to standard RFC 822
A simplified email parser Args: data: The RFC 822 message string, or MSG binary strip_attachment_payloads
Converts a comma separated string to a list
Separated this function for multiprocessing
Called when the module is executed
Drain will put a connection into a drain state. All subscriptions will immediately be put
Sends a PUB command to the server on the specified subject. ->> PUB hello 5
Publishes a message tagging it with a reply subscription which can be used by those
Sends PUB command to the NATS server.
Takes a subject string and optional queue string to send a SUB cmd, and a
Sets the subcription to use a task per message to be processed. ..deprecated:: 7.0 Will
Takes a subscription sequence id and removes the subscription from the client, optionally after receiving
Implements the request/response pattern via pub/sub using a single wildcard subscription that handles the responses.
Implements the request/response pattern via pub/sub using an ephemeral subscription which will be published with
Sends a ping to the server expecting a pong back ensuring what we have written
Looks up in the server pool for an available server and attempts to connect.
Processes the raw error message sent by the server and close connection with current server.
Process errors which occured while reading or parsing the protocol. If allow_reconnect is enabled it
Generates a JSON string with the params to be used when sending CONNECT to the
Process PONG sent by server.
Process MSG sent by server.
Process INFO lines sent by the server to reconfigure client with latest updates from cluster
Process INFO received from the server and CONNECT to the server with authentication. It is
Coroutine which continuously tries to consume pending commands and then flushes them to the socket.
Coroutine which gathers bytes sent by the server and feeds them to the protocol parser.
Compute and save coactivation map given input image as seed. This is essentially just a
Decodes a set of images. Args: images: The images to decode. Can be: - A
Load features from current Dataset instance or a list of files. Args: features: List containing
Load feature data from a 2D ndarray on disk.
Load feature image data from the current Dataset instance. See load_features() for documentation.
Load feature image data from image files. Args: images: A list of image filenames. names:
Decode images using Pearson's r. Computes the correlation between each input image and each feature
Decoding using the dot product.
Computes the strength of association between activation in a mask and presence/absence of a semantic
Implements various kinds of feature selection
Set up data for a classification task given a set of masks Given a set
Returns a list with the order that features requested appear in dataset
Perform classification on specified regions Given a set of masks, this function retrieves studies associated
Wrapper for scikit-learn classification functions Imlements various types of classification and cross validation
Fits X to outcomes y, using clf
Sets the class_weight of the classifier to match y
Fits X to outcomes y, using clf and cv_method
Returns cross validated scores (just like cross_val_score), but includes feature selection as part of the
Given a dataset, fits either features or voxels to y
list : list ANDNOT list
list : list AND list
list : list OR list
list : feature | WORD
Aggregates over all voxels within each ROI in the input image. Takes a Dataset and
Imposes a 3D grid on the brain volume and averages across all voxels that fall
Returns mappable data for a random subset of voxels. May be useful as a baseline
Return top forty words from each topic in trained topic model.
Perform topic modeling using Latent Dirichlet Allocation with the Java toolbox MALLET. Args: abstracts: A
Correlates row vector x with each row vector in 2D array y.
Two-way chi-square test of independence. Takes a 3D array as input: N(voxels) x 2 x
One-way chi-square test of independence. Takes a 1D array as input and compares activation at
Determine FDR threshold given a p value array and desired false discovery rate q.
Download the latest data files. Args: path (str): Location to save the retrieved data files.
Download the abstracts for a dataset/list of pmids
Load activation data from a text file. Args: filename (str): a string pointing to the
Create and store a new ImageTable instance based on the current Dataset. Will generally be
Get IDs or data for studies that meet specific criteria. If multiple criteria are passed,
Construct a new FeatureTable from file. Args: features: Feature data to add. Can be: (a)
A convenience wrapper for ImageTable.get_image_data(). Args: ids (list, array): A list or 1D numpy array
Returns names of features. If features is None, returns all features. Otherwise assumes the user
Returns a dictionary, where the keys are the feature names and the values are the
Load a pickled Dataset instance from file.
Pickle the Dataset instance to the provided file.
Slices and returns a subset of image data. Args: ids (list, array): A list or
Trim ImageTable to keep only the passed studies. This is a convenience method, and should
Add new features to FeatureTable. Args: features (str, DataFrame): A filename to load data from,
Slices and returns a subset of feature data. Args: ids (list, array): A list or
Given a list of features, returns features in order that they appear in database. Args:
Returns a list of all studies in the table that meet the desired feature-based criteria.
Returns all features that match any of the elements in the input list. Args: search
Use a PEG to parse expression and return study IDs.
Returns features for which the mean loading across all specified studies (in ids) is >=
Convert FeatureTable to SciPy CSR matrix.
Inverse of _sdf_to_csr().
Deprecation warning decorator. Takes optional deprecation message, otherwise will use a generic warning.
Execute a full clustering analysis pipeline. Args: dataset: a Dataset instance to extract all data
Apply a transformation to the Clusterable instance. Accepts any scikit-learn-style class that implements a fit_transform()
Generate meta-analysis images for a set of features. Args: dataset: A Dataset instance containing feature
Write out any images generated by the meta-analysis. Args: output_dir (str): folder to write images
Convert coordinates from one space to another using provided transformation matrix.
Convert an N x 3 array of XYZ coordinates to matrix indices.
Apply a named transformation to a set of foci. If the named transformation doesn't exist,
Reset/remove all layers, keeping only the initial volume.
Add one or more layers to the stack of masking layers. Args: layers: A string,
Remove one or more layers from the stack of masking layers. Args: layers: An int,
A flexible method for transforming between different representations of image data. Args: image: The input
Vectorize an image and mask out all invalid voxels. Args: images: The image to vectorize
Reconstruct a masked vector into the original 3D volume. Args: data: The 1D vector to
Set the current mask by taking the conjunction of all specified layers. Args: layers: Which
# Return all points within r mm of coordinates. Generates a cube and then discards
Take a set of discrete foci (i.e., 2-D array of xyz coordinates) and generate a
Load multiple images from file into an ndarray. Args: filenames: A single filename or list
Save a vectorized image to file.
Threshold data, setting all values in the array above/below threshold to zero. Args: data (ndarray):
Creates an image containing labeled cells in a 3D grid. Args: image: String or nibabel
Set neurosynth's logging level Args level : str Name of the logging level (warning, error,
Expand the given address into one or more normalized strings. Required -------- @param address: the
Normalizes a string, tokenizes, and normalizes each token with string and token-level options. This version
Parse address into components. @param address: the address as either Unicode or a UTF-8 encoded
Hash the given address into normalized strings that can be used to group similar addresses
Detect whether the file contains an api key in the Token object that is not
Change the api key in the Token object to 40*'0'. See issue #86. :param file:
Converts a python dict to a namedtuple, saving memory.
Return a list of dicts of metadata tickers for all supported tickers of the specified
Return metadata for 1 ticker Use TiingoClient.list_tickers() to get available options Args: ticker (str) :
Check to see that frequency was specified correctly :param frequency (string): frequency string :return (boolean):
Return url based on frequency. Daily, weekly, or yearly use Tiingo EOD api; anything less
By default, return latest EOD Composite Price for a stock ticker. On average, each feed
Return a pandas.DataFrame of historical prices for one or more ticker symbols. By default, return
Return list of news articles matching given search terms https://api.tiingo.com/docs/tiingo/news # Dates are in YYYY-MM-DD
Only available to institutional clients. If ID is NOT provided, return array of available file_ids.
Make HTTP request and return response object Args: method (str): GET, POST, PUT, DELETE url
Get the application bearer token from client_id and client_secret.
Make a request to the spotify API with the current bearer credentials. Parameters ---------- route
Get a spotify album by its ID. Parameters ---------- spotify_id : str The spotify_id to
Get an albums tracks by an ID. Parameters ---------- spotify_id : str The spotify_id to
Get a spotify album by its ID. Parameters ---------- spotify_ids : List[str] The spotify_ids to
Get a spotify artist by their ID. Parameters ---------- spotify_id : str The spotify_id to
Get an artists tracks by their ID. Parameters ---------- spotify_id : str The spotify_id to
Get an artists top tracks per country with their ID. Parameters ---------- spotify_id : str
Get related artists for an artist by their ID. Parameters ---------- spotify_id : str The
Get a spotify artists by their IDs. Parameters ---------- spotify_id : List[str] The spotify_ids to
Get a single category used to tag items in Spotify. Parameters ---------- category_id : str
Get a list of Spotify playlists tagged with a particular category. Parameters ---------- category_id :
Get a list of categories used to tag items in Spotify. Parameters ---------- limit :
Get a list of Spotify featured playlists. Parameters ---------- locale : LOCALE_TP LOCALE country :
Get a list of new album releases featured in Spotify. Parameters ---------- limit : Optional[int]
Get Recommendations Based on Seeds. Parameters ---------- seed_artists : str A comma separated list of
Check to see if the current user is following one or more artists or other
Get the albums of a Spotify artist. Parameters ---------- limit : Optional[int] The maximum number
loads all of the artists albums, depending on how many the artist has this may
get the total amout of tracks in the album. Parameters ---------- market : Optional[str] An
Get Spotify catalog information about an artist’s top tracks by country. Parameters ---------- country :
Get Spotify catalog information about artists similar to a given artist. Similarity is based on
Get the users currently playing track. Returns ------- context, track : Tuple[Context, Track] A tuple
Get information about the users current playback. Returns ------- player : Player A player object
Get information about the users avaliable devices. Returns ------- devices : List[Device] The devices the
Get tracks from the current users recently played tracks. Returns ------- playlist_history : List[Dict[str, Union[Track,
Add one or more tracks to a user’s playlist. Parameters ---------- playlist : Union[str, Playlist]
Replace all the tracks in a playlist, overwriting its existing tracks. This powerful request can
Remove one or more tracks from a user’s playlist. Parameters ---------- playlist : Union[str, Playlist]
Reorder a track or a group of tracks in a playlist. Parameters ---------- playlist :
Change a playlist’s name and public/private, collaborative state and description. Parameters ---------- playlist : Union[str,
Create a playlist for a Spotify user. Parameters ---------- name : str The name of
get the users playlists from spotify. Parameters ---------- limit : Optional[int] The limit on how
get the albums tracks from spotify. Parameters ---------- limit : Optional[int] The limit on how
loads all of the albums tracks, depending on how many the album has this may
Generate an outh2 url for user authentication. Parameters ---------- redirect_uri : str Where spotify should
Retrive an album with a spotify ID. Parameters ---------- spotify_id : str The ID to
Retrive an artist with a spotify ID. Parameters ---------- spotify_id : str The ID to
Retrive an track with a spotify ID. Parameters ---------- spotify_id : str The ID to
Retrive an user with a spotify ID. Parameters ---------- spotify_id : str The ID to
Retrive multiple albums with a list of spotify IDs. Parameters ---------- ids : List[str] the
Retrive multiple artists with a list of spotify IDs. Parameters ---------- ids : List[str] the
Access the spotify search functionality. Parameters ---------- q : str the search query types :
Check if one or more albums is already saved in the current Spotify user’s ‘Your
Check if one or more tracks is already saved in the current Spotify user’s ‘Your
Get a list of the songs saved in the current Spotify user’s ‘Your Music’ library.
Get a list of the albums saved in the current Spotify user’s ‘Your Music’ library.
Remove one or more albums from the current user’s ‘Your Music’ library. Parameters ---------- albums
Remove one or more tracks from the current user’s ‘Your Music’ library. Parameters ---------- tracks
Save one or more albums to the current user’s ‘Your Music’ library. Parameters ---------- albums
Save one or more tracks to the current user’s ‘Your Music’ library. Parameters ---------- tracks
Get a spotify ID from a URI or open.spotify URL. Paramters --------- string : str
decorator to assert an object has an attribute when run.
Construct a OAuth2 object from a `spotify.Client`.
Construct a OAuth2 URL instead of an OAuth2 object.
Attributes used when constructing url parameters.
URL parameters used.
get the track object for each link in the partial tracks data Returns ------- tracks
Get all playlist tracks from the playlist. Returns ------- tracks : List[PlaylistTrack] The playlists tracks.
Pause playback on the user’s account. Parameters ---------- device : Optional[:obj:`SomeDevice`] The Device object or
Resume playback on the user's account. Parameters ---------- device : Optional[:obj:`SomeDevice`] The Device object or
Seeks to the given position in the user’s currently playing track. Parameters ---------- pos :
Set the repeat mode for the user’s playback. Parameters ---------- state : str Options are
Set the volume for the user’s current playback device. Parameters ---------- volume : int The
Skips to next track in the user’s queue. Parameters ---------- device : Optional[:obj:`SomeDevice`] The Device
Skips to previous track in the user’s queue. Note that this will ALWAYS skip to
Start a new context or resume current playback on the user’s active device. The method
shuffle on or off for user’s playback. Parameters ---------- state : Optional[bool] if `True` then
Transfer playback to a new device and determine if it should start playing. Parameters ----------
Get the full object from spotify with a `href` attribute.
Execute the logic behind the meaning of ExpirationDate + return the matched status. :return: The
Convert a given month into our unified format. :param data: The month to convert or
A little internal helper of self.format. (Avoiding of nested loops) .. note:: Please note that
Format the expiration date into an unified format (01-jan-1970). :param date_to_convert: The date to convert.
Extract the expiration date from the whois record. :return: The status of the domain. :rtype:
Read the code and update all links.
Check if the current version is greater as the older older one.
Check if the current branch is `dev`.
Check if we have to put the previous version into the deprecated list.
Update the given documentation file or :code:`README.rst` so that it always gives branch related URL
Update :code:`setup.py` so that it always have the right name.
Update :code:`.travis.yml` according to current branch.
Backup the current execution state.
Restore data from the given path.
Check if we have to ignore the given line. :param line: The line from the
Handle the data from the options. :param options: The list of options from the rule.
Extract the base of the given element. .. example: given "hello/world?world=beautiful" return "hello" :param element:
Decode/extract the domains to test from the adblock formated file. :return: The list of domains
Format the exctracted adblock line before passing it to the system. :param to_format: The extracted
Get the HTTP code status. :return: The matched HTTP status code. :rtype: int|None
Return the HTTP code status. :return: The matched and formatted status code. :rtype: str|int|None
Check the syntax of the given domain. :param domain: The domain to check the syntax
Check if the given domain is a subdomain. :param domain: The domain we are checking.
Check the syntax of the given IPv4. :param ip: The IPv4 to check the syntax
Check if the given IP is an IP range. :param ip: The IP we are
Check the syntax of the given URL. :param url: The URL to check the syntax
Load the configuration. :param under_test: Tell us if we only have to load the configuration
Print a friendly message.
Provide the command line interface.
Check if the given information is a URL. If it is the case, it download
Manage the loading of the url system.
Avoid to have 1 millions line into self.__init__()
Exit the script if :code:`[PyFunceble skip]` is matched into the latest commit message.
Decide if we print or not the header.
Manage the database, autosave and autocontinue systems for the case that we are reading a
Manage the case that we want to test only a domain. :param domain: The domain
Manage the case that we want to test only a given url. :param url_to_test: The
Print the colored logo based on global results. :param home: Tell us if we have
Format the extracted domain before passing it to the system. :param extracted_domain: The extracted domain.
Extract all non commented lines from the file we are testing. :return: The elements to
Manage the case that need to test each domain of a given file path. ..
Manage the case that we have to test a file .. note:: 1 URL per
Switch PyFunceble.CONFIGURATION variables to their opposite. :param variable: The variable name to switch. The variable
Get the status while testing for an IP or domain. .. note:: We consider that
Handle the lack of WHOIS and expiration date. :smile_cat: :param matched_status: The status that we
Handle the backend of the given status.
Backup the developer state of `output/` in order to make it restorable and portable for
Check if we need to replace ".gitignore" to ".keep". :return: The replacement status. :rtype: bool
Update the paths according to configs. :param structure: The read structure. :type structure: dict
Get the structure we are going to work with. :return: The structure we have to
Creates the given directory if it does not exists. :param directory: The directory to create.
Restore the 'output/' directory structure based on the `dir_structure.json` file.
Delete the directory which are not registered into our structure.
Set the paths to the configuration files. :param path_to_config: The possible path to the config
Load .PyFunceble.yaml into the system.
Download the production configuration and install it in the current directory.
Download `iana-domains-db.json` if not present.
Download `public-suffix.json` if not present.
Download the latest version of `dir_structure_production.json`.
Simply merge the older into the new one.
Execute the logic behind the merging.
Convert the versions to a shorter one. :param version: The version to split. :type version:
Compare the given versions. :param local: The local version converted by split_versions(). :type local: list
Compare the current version with the upstream saved version.
Let us know if we are currently in the cloned version of PyFunceble which implicitly
Handle and check that some configuration index exists.
Return the analytic directory to write depending of the matched status.
Generate the hosts file, the plain list and the splitted lists.
Generate unified file. Understand by that that we use an unified table instead of a
Generate :code:`Analytic/*` files based on the given old and new statuses. :param new_status: The new
Logic behind the printing (in file) when generating status file.
Logic behind the printing (on screen) when generating status file.
Generate a file according to the domain status.
Check if we are allowed to produce a file based from the given information. :return:
Extract the extension from the given line. :param line: The line from the official public
Update of the content of the :code:`public-suffix.json`.
Load the public suffix database into the system.
Implement the standard and alphabetical sorting. :param element: The element we are currently reading. :type
The idea behind this method is to sort a list of domain hierarchicaly. :param element:
Initiate the IANA database if it is not the case.
Return the referer for the given extension. :param extension: A valid domain extension. :type extension:
Extract the extention from the given block. Plus get its referer.
Update the content of the `iana-domains-db` file.
Search for domain or URL related to the original URL or domain. :return: The mined
Retrieve the mining informations.
Backup the mined informations.
Add the currently mined information to the mined "database". :param to_add: The element to add.
Remove the currently tested element from the mining data.
Provide the list of mined so they can be added to the list queue. :return:
Process the logic and structuration of the mining database.
Get and return the content of the given log file. :param file: The file we
Write the content into the given file. :param content: The dict to write. :type content:
Logs the WHOIS record if needed. :param record: The record to log. :type record: str
Logs the extracted expiration date. :param extracted: The extracted expiration date (from WHOIS record). :type
Logs the case that the referer was not found. :param extension: The extension of the
Print informations about PyFunceble and the date of generation of a file into a given
Construct header of the table according to template. :param data_to_print: The list of data to
Management and creation of templates of header. Please consider as "header" the title of each
Construct the table of data according to given size. :param size: The maximal length of
Get the size of each columns from the header. :param header: The header template we
Retun colored string. :param data: The string to colorify. :type data: str :return: A colored
Management of the json template.
Management and input of data to the table. :raises: :code:`Exception` When self.data_to_print is not a
Save the current time to the file. :param last: Tell us if we are at
calculate the difference between starting and ending time. :param start: A starting time. :type start:
Format the calculated time into a human readable format. :param start: A starting time. :type
Return the list of file to delete.
Set the databases files to delete.
Delete almost all discovered files. :param clean_all: Tell the subsystem if we have to clean
Get the hash of the given file :param algo: The algorithm to use. :type algo:
Get hash of the given data. :param algo: The algorithm to use. :type algo: str
Return the hash of the given file
Execute the given command. :return: The output of the command. :rtype: str
Run the given command and yield each line(s) one by one. .. note:: The difference
Remove a given key from a given dictionary. :param key_to_remove: The key(s) to delete. :type
Rename the given keys from the given dictionary. :param key_to_rename: The key(s) to rename. Expected
Merge the content of to_merge into the given main dictionnary. :param to_merge: The dictionnary to
Save a dictionnary into a JSON file. :param destination: A path to a file where
Save a dictionnary into a YAML file. :param destination: A path to a file where
Fix the path of the given path. :param splited_path: A list to convert to the
Write or append data into the given file path. :param data_to_write: The data to write.
Read a given file path and return its content. :return: The content of the given
Return a well formatted list. Basicaly, it's sort a list and remove duplicate. :return: A
Return a well formatted list. With the key_method as a function/method to format the elements
Merge to_merge into the given main list. :param to_merge: The list to merge. :type to_merge:
Return a list of string which don't match the given regex.
Used to get exploitable result of re.search :return: The data of the match status. :rtype:
Used to replace a matched string with another. :return: The data after replacement. :rtype: str
Download the given link and return or save its :code:`requests.text` at the given destination. :rtype:
Count the number of domain for each status.
Calculate the percentage of each status.
Print on screen and on file the percentages for each status.
Check if the given URL is valid. :param url: The url to validate. :type url:
Check if the given domain is a valid. :param domain: The domain to validate. :type
Check if the given subdomain is a subdomain. :param domain: The domain to validate. :type
Check if the given IP is a valid IPv4. :param ip_to_check: The IP to test.
Check if the given IP is a valid IPv4. :param ip_to_check: The IP to test.
Execute the logic behind the Syntax handling. :return: The syntax status. :rtype: str
Format the old format so it can be merged into the newer format.
Merge the real database with the older one which has already been set into :code:`PyFunceble.INTERN["inactive_db"]`
Return the current content of the inactive-db.json file.
Save the current database into the inactive-db.json file.
Get the timestamp where we are going to save our current list. :return: The timestamp
Save the current :code.`PyFunceble.CONFIGURATION['to_test']` into the current timestamp.
Remove all occurence of :code:`PyFunceble.CONFIGURATION['to_test']` from the database.
Get the content of the database. :return: The content of the database. :rtype: list
Check if the currently tested element is into the database.
Retrieve the data from the database.
Backup the database into its file.
Check if the element is into the database.
Check if the current time is older than the one in the database.
Get the expiration date from the database. :return: The expiration date from the database. :rtype:
Add the currently tested element into the database.
Set permissions in order to avoid issues before commiting.
Logic behind autosave under Travis CI.
Implementation of UNIX nslookup.
Implementation of UNIX whois. :param whois_server: The WHOIS server to use to get the record.
Execute the logic behind the URL handling. :return: The status of the URL. :rtype: str
This function will extract the version from PyFunceble/__init__.py
Return the referer aka the WHOIS server of the current domain extension.
register serviser :param servicer: servicer
register extension :param name: extension name :param ext: extension object
Get current object. This is useful if you want the real object behind the proxy
Yield paths to standard modules.
Yield standard module names.
Yield line numbers of unused imports.
Yield line number and module name of unused imports.
Yield line number of star import usage.
Yield line number, undefined name, and its possible origin module.
Yield line numbers of unused variables.
Yield line numbers of duplicate keys.
Return dict mapping the key to list of messages.
Return messages from pyflakes.
Return package name in import statement.
Return True if import is spans multiples lines.
Return True if this is part of a multiline statement.
Parse and filter ``from something import a, b, c``. Return line without unused import modules,
Return line with imports on separate lines.
Yield code with unused imports removed.
Return dictionary that maps line number to message.
Return line with the star import expanded.
Return line if used, otherwise return None.
Return line if used, otherwise return None.
Return '' if first occurrence of the key otherwise return `line`.
Return True if `line` is a dict entry that uses `key`. Return False for multiline
Return True if value is a literal or a name.
Yield line numbers of unneeded "pass" statements.
Yield code with useless "pass" lines removed.
Return leading whitespace.
Return line ending.
Return code with all filtering run on it.
Run fix_code() on a file.
Return file encoding.
Return file encoding.
Return a set of strings.
Return True if filename is Python file.
Return True if file matches exclude pattern.
Return True if file is okay for modifying/recursing.
Yield filenames.
Return exit status. 0 means no error.
Read the data encoding the ObtainLease response payload and decode it into its constituent parts.
Write the data encoding the ObtainLease response payload to a stream. Args: output_stream (stream): A
Write the data encoding the Cancel request payload to a stream. Args: output_stream (stream): A
Read the data encoding the Cancel response payload and decode it into its constituent parts.
Returns a Name object, populated with the given value and type
Read the data encoding the Digest object and decode it into its constituent parts. Args:
Write the data encoding the Digest object to a stream. Args: ostream (Stream): A data
Construct a Digest object from provided digest values. Args: hashing_algorithm (HashingAlgorithm): An enumeration representing the
Read the data encoding the ApplicationSpecificInformation object and decode it into its constituent parts. Args:
Write the data encoding the ApplicationSpecificInformation object to a stream. Args: ostream (Stream): A data
Construct an ApplicationSpecificInformation object from provided data and namespace values. Args: application_namespace (str): The name
Read the data encoding the DerivationParameters struct and decode it into its constituent parts. Args:
Write the data encoding the DerivationParameters struct to a stream. Args: output_stream (stream): A data
Read the data encoding the Get request payload and decode it into its constituent parts.
Write the data encoding the Get request payload to a stream. Args: output_stream (stream): A
Read the data encoding the Get response payload and decode it into its constituent parts.
Write the data encoding the Get response payload to a stream. Args: output_stream (stream): A
Read the data encoding the SignatureVerify request payload and decode it into its constituent parts.
Write the data encoding the SignatureVerify request payload to a stream. Args: output_stream (stream): A
Read the data encoding the SignatureVerify response payload and decode it into its constituent parts.
Process a KMIP request message. This routine is the main driver of the KmipEngine. It
Build a simple ResponseMessage with a single error result. Args: version (ProtocolVersion): The protocol version
Given a kmip.core TemplateAttribute object, extract the attribute value data into a usable dictionary format.
Given a kmip.pie object and a list of attribute names, attempt to get all of
Get the attribute value from the kmip.pie managed object.
Given a kmip.pie object and a dictionary of attributes, attempt to set the attribute values
Set the attribute value on the kmip.pie managed object.
Look up the policy corresponding to the provided policy name and group (optional). Log any
Determine if object access is allowed for the provided policy and session settings.
Write the data encoding the Decrypt request payload to a stream. Args: output_stream (stream): A
Read the data encoding the RevokeRequestPayload object and decode it into its constituent parts. Args:
Write the data encoding the RevokeRequestPayload object to a stream. Args: ostream (Stream): A data
Error check the attributes of the ActivateRequestPayload object.
Read the data encoding the RevokeResponsePayload object and decode it into its constituent parts. Args:
Create a secret object of the specified type with the given value. Args: secret_type (ObjectType):
Set a specific setting value. This will overwrite the current setting value for the specified
Load configuration settings from the file pointed to by path. This will overwrite all current
Returns the integer value of the usage mask bitmask. This value is stored in the
Returns a new list of enums.CryptographicUsageMask Enums. This converts the integer value into the list
Read the encoding of the LongInteger from the input stream. Args: istream (stream): A buffer
Write the encoding of the LongInteger to the output stream. Args: ostream (stream): A buffer
Verify that the value of the LongInteger is valid. Raises: TypeError: if the value is
Read the encoding of the BigInteger from the input stream. Args: istream (stream): A buffer
Write the encoding of the BigInteger to the output stream. Args: ostream (Stream): A buffer
Verify that the value of the BigInteger is valid. Raises: TypeError: if the value is
Verify that the value of the Enumeration is valid. Raises: TypeError: if the enum is
Read the value of the Boolean object from the input stream. Args: istream (Stream): A
Write the value of the Boolean object to the output stream. Args: ostream (Stream): A
Write the encoding of the Boolean object to the output stream. Args: ostream (Stream): A
Verify that the value of the Boolean object is valid. Raises: TypeError: if the value
Read the encoding of the Interval from the input stream. Args: istream (stream): A buffer
Verify that the value of the Interval is valid. Raises: TypeError: if the value is
Retrieve all of the relevant key wrapping data fields and return them as a dictionary.
Set the key wrapping data attributes using a dictionary.
Verify that the contents of the PublicKey object are valid. Raises: TypeError: if the types
Verify that the contents of the SecretData object are valid. Raises: TypeError: if the types
Verify that the contents of the OpaqueObject are valid. Raises: TypeError: if the types of
A utility function that converts an attribute name string into the corresponding attribute tag. For
A utility function that converts an attribute tag into the corresponding attribute name string. For
A utility function that computes a bit mask from a collection of enumeration values. Args:
A utility function that creates a list of enumeration values from a bit mask for
A utility function that checks if the provided value is a composite bit mask of
A utility function that checks if the tag is a valid attribute tag. Args: tag
Read the data encoding the CreateKeyPair request payload and decode it into its constituent parts.
Write the data encoding the CreateKeyPair request payload to a buffer. Args: output_buffer (stream): A
Read the data encoding the CreateKeyPair response payload and decode it into its constituent parts.
Write the data encoding the CreateKeyPair response payload to a buffer. Args: output_buffer (stream): A
Read the data encoding the GetAttributeList request payload and decode it into its constituent parts.
Write the data encoding the GetAttributeList request payload to a stream. Args: output_buffer (stream): A
Read the data encoding the GetAttributeList response payload and decode it into its constituent parts.
Write the data encoding the GetAttributeList response payload to a stream. Args: output_buffer (stream): A
Scan the provided policy directory for all JSON policy files.
Scan the policy directory for policy data.
Start monitoring operation policy files.
Extract an X.509 certificate from a socket connection.
Given an X.509 certificate, extract and return the extendedKeyUsage extension.
Given an X.509 certificate, extract and return all common names.
Given an X.509 certificate, extract and return the client identity.
Read the data encoding the Create request payload and decode it into its constituent parts.
Write the data encoding the Create request payload to a buffer. Args: output_buffer (stream): A
Read the data encoding the Create response payload and decode it into its constituent parts.
Write the data encoding the Create response payload to a buffer. Args: output_buffer (stream): A
Convert a Pie object into a core secret object and vice versa. Args: obj (various):
Read the data encoding the Encrypt response payload and decode it into its constituent parts.
Read the data encoding the DeriveKey request payload and decode it into its constituent parts.
Write the data encoding the DeriveKey request payload to a stream. Args: output_buffer (stream): A
Check if the attribute is supported by the current KMIP version. Args: attribute (string): The
Check if the attribute is deprecated by the current KMIP version. Args: attribute (string): The
Check if the attribute is supported by the given object type. Args: attribute (string): The
Check if the attribute is allowed to have multiple instances. Args: attribute (string): The name
Returns a value that can be used as a parameter in client or server. If
Read the data encoding the Check response payload and decode it into its constituent parts.
Write the data encoding the Check response payload to a stream. Args: output_stream (stream): A
Read the data stream and decode the AttributeReference structure into its parts. Args: input_buffer (stream):
Write the AttributeReference structure encoding to the data stream. Args: output_buffer (stream): A data stream
Read the data stream and decode the Attributes structure into its parts. Args: input_stream (stream):
Write the Attributes structure encoding to the data stream. Args: output_stream (stream): A data stream
Read the data encoding the Nonce struct and decode it into its constituent parts. Args:
Write the data encoding the Nonce struct to a stream. Args: output_stream (stream): A data
Read the data encoding the UsernamePasswordCredential struct and decode it into its constituent parts. Args:
Write the data encoding the UsernamePasswordCredential struct to a stream. Args: output_stream (stream): A data
Read the data encoding the DeviceCredential struct and decode it into its constituent parts. Args:
Write the data encoding the DeviceCredential struct to a stream. Args: output_stream (stream): A data
Read the data encoding the Credential struct and decode it into its constituent parts. Args:
Write the data encoding the Credential struct to a stream. Args: output_stream (stream): A data
Read the data encoding the MACSignatureKeyInformation struct and decode it into its constituent parts. Args:
Write the data encoding the MACSignatureKeyInformation struct to a stream. Args: output_stream (stream): A data
Read the data encoding the KeyWrappingData struct and decode it into its constituent parts. Args:
Write the data encoding the KeyWrappingData struct to a stream. Args: output_stream (stream): A data
Read the data encoding the KeyWrappingSpecification struct and decode it into its constituent parts. Args:
Write the data encoding the KeyWrappingSpecification struct to a stream. Args: output_stream (stream): A data
Read the data encoding the ExtensionInformation object and decode it into its constituent parts. Args:
Write the data encoding the ExtensionInformation object to a stream. Args: ostream (Stream): A data
Construct an ExtensionInformation object from provided extension values. Args: extension_name (str): The name of the
Read the data encoding the RevocationReason object and decode it into its constituent parts. Args:
Write the data encoding the RevocationReason object to a stream. Args: ostream (Stream): A data
validate the RevocationReason object
Read the data encoding the ObjectDefaults structure and decode it into its constituent parts. Args:
Write the ObjectDefaults structure encoding to the data stream. Args: output_buffer (stream): A data stream
Read the data encoding the DefaultsInformation structure and decode it into its constituent parts. Args:
Write the DefaultsInformation structure encoding to the data stream. Args: output_buffer (stream): A data stream
Read the data encoding the RNGParameters structure and decode it into its constituent parts. Args:
Write the RNGParameters structure encoding to the data stream. Args: output_buffer (stream): A data stream
Read the data encoding the ProfileInformation structure and decode it into its constituent parts. Args:
Write the ProfileInformation structure encoding to the data stream. Args: output_buffer (stream): A data stream
Read the data encoding the ValidationInformation structure and decode it into its constituent parts. Args:
Write the ValidationInformation structure encoding to the data stream. Args: output_buffer (stream): A data stream
Read the data encoding the CapabilityInformation structure and decode it into its constituent parts. Args:
Write the CapabilityInformation structure encoding to the data stream. Args: output_buffer (stream): A data stream
Prepare the server to start serving connections. Configure the server socket handler and establish a
Stop the server. Halt server client connections and clean up any existing connection threads. Raises:
Serve client connections. Begin listening for client connections, spinning off new KmipSessions as connections are
Read the data encoding the Locate request payload and decode it into its constituent parts.
Write the data encoding the Locate request payload to a buffer. Args: output_buffer (stream): A
Read the data encoding the Locate response payload and decode it into its constituent parts.
Write the data encoding the Locate response payload to a buffer. Args: output_buffer (stream): A
Create a symmetric key. Args: algorithm(CryptographicAlgorithm): An enumeration specifying the algorithm for which the created
Create an asymmetric key pair. Args: algorithm(CryptographicAlgorithm): An enumeration specifying the algorithm for which the
Generate message authentication code. Args: algorithm(CryptographicAlgorithm): An enumeration specifying the algorithm for which the MAC
Encrypt data using symmetric or asymmetric encryption. Args: encryption_algorithm (CryptographicAlgorithm): An enumeration specifying the encryption
Encrypt data using symmetric encryption. Args: encryption_algorithm (CryptographicAlgorithm): An enumeration specifying the symmetric encryption algorithm
Encrypt data using asymmetric encryption. Args: encryption_algorithm (CryptographicAlgorithm): An enumeration specifying the asymmetric encryption algorithm
Decrypt data using symmetric decryption. Args: decryption_algorithm (CryptographicAlgorithm): An enumeration specifying the symmetric decryption algorithm
Decrypt data using symmetric decryption. Args: decryption_algorithm (CryptographicAlgorithm): An enumeration specifying the symmetric decryption algorithm
Encrypt data using asymmetric decryption. Args: decryption_algorithm (CryptographicAlgorithm): An enumeration specifying the asymmetric decryption algorithm
Create an RSA key pair. Args: length(int): The length of the keys to be created.
Derive key data using a variety of key derivation functions. Args: derivation_method (DerivationMethod): An enumeration
Args: key_material (bytes): The bytes of the key to wrap. Required. wrapping_method (WrappingMethod): A WrappingMethod
Instantiates an RSA key from bytes. Args: bytes (byte string): Bytes of RSA private key.
Args: digital_signature_algorithm (DigitalSignatureAlgorithm): An enumeration specifying the asymmetric cryptographic algorithm and hashing algorithm to use
Verify a message signature. Args: signing_key (bytes): The bytes of the signing key to use
Read the data encoding the Sign response payload and decode it. Args: input_stream (stream): A
Write the data encoding the Sign response to a stream. Args: output_stream (stream): A data
Read the data encoding the GetUsageAllocation request payload and decode it into its constituent parts.
Convert a ProtocolVersion struct to its KMIPVersion enumeration equivalent. Args: value (ProtocolVersion): A ProtocolVersion struct
Read the data encoding the ProtocolVersion struct and decode it into its constituent parts. Args:
Write the data encoding the ProtocolVersion struct to a stream. Args: output_stream (stream): A data
Read the data encoding the Authentication struct and decode it into its constituent parts. Args:
Write the data encoding the Authentication struct to a stream. Args: output_stream (stream): A data
Read the data encoding the Poll request payload and decode it into its constituent parts.
Read the data encoding the Certificate object and decode it into its constituent parts. Args:
Write the data encoding the Certificate object to a stream. Args: ostream (Stream): A data
Query the configured SLUGS service with the provided credentials. Args: connection_certificate (cryptography.x509.Certificate): An X.509 certificate
Read the data encoding the Archive response payload and decode it into its constituent parts.
Write the data encoding the Archive response payload to a stream. Args: output_stream (stream): A
The main thread routine executed by invoking thread.start. This method manages the new client connection,
Write the data encoding the Rekey request payload to a stream. Args: output_stream (stream): A
Read the data encoding the Rekey response payload and decode it into its constituent parts.
Write the data encoding the Rekey request payload to a stream. Args: output_stream (stream): A
Write the data encoding the ActivateRequestPayload object to a stream. Args: ostream (Stream): A data
Error check the attributes of the ActivateRequestPayload object.
Set the KMIP version for the client. Args: value (KMIPVersion): A KMIPVersion enumeration Return: None
Check if a profile is supported by the client. Args: conformance_clause (ConformanceClause): authentication_suite (AuthenticationSuite): Returns:
Check object usage according to specific constraints. Args: uuid (string): The unique identifier of a
Derive a new key or secret data from an existing managed object. Args: object_type (ObjectType):
Check object usage according to specific constraints. Args: uuid (string): The unique identifier of a
Send a GetAttributes request to the server. Args: uuid (string): The ID of the managed
Send a GetAttributeList request to the server. Args: uid (string): The ID of the managed
Send a Query request to the server. Args: batch (boolean): A flag indicating if the
Encrypt data using the specified encryption key and parameters. Args: data (bytes): The bytes to
Verify a message signature using the specified signing key. Args: message (bytes): The bytes of
Sign specified data using a specified signing key. Args: data (bytes): Data to be signed.
This internal function takes the host string from the config file and turns it into
Set the KMIP version for the client. Args: value (KMIPVersion): A KMIPVersion enumeration Return: None
Open the client connection. Raises: ClientConnectionFailure: if the client connection is already open Exception: if
Close the client connection. Raises: Exception: if an error occurs while trying to close the
Create a symmetric key on a KMIP appliance. Args: algorithm (CryptographicAlgorithm): An enumeration defining the
Create an asymmetric key pair on a KMIP appliance. Args: algorithm (CryptographicAlgorithm): An enumeration defining
Register a managed object with a KMIP appliance. Args: managed_object (ManagedObject): A managed object to
Rekey an existing key. Args: uid (string): The unique ID of the symmetric key to
Derive a new key or secret data from existing managed objects. Args: object_type (ObjectType): An
Search for managed objects, depending on the attributes specified in the request. Args: maximum_items (integer):
Check the constraints for a managed object. Args: uid (string): The unique ID of the
Get a managed object from a KMIP appliance. Args: uid (string): The unique ID of
Get the attributes associated with a managed object. If the uid is not specified, the
Activate a managed object stored by a KMIP appliance. Args: uid (string): The unique ID
Revoke a managed object stored by a KMIP appliance. Args: revocation_reason (RevocationReasonCode): An enumeration indicating
Encrypt data using the specified encryption key and parameters. Args: data (bytes): The bytes to
Verify a message signature using the specified signing key. Args: message (bytes): The bytes of
Get the message authentication code for data. Args: data (string): The data to be MACed.
Build a CryptographicParameters struct from a dictionary. Args: value (dict): A dictionary containing the key/value
Build an EncryptionKeyInformation struct from a dictionary. Args: value (dict): A dictionary containing the key/value
Build an MACSignatureKeyInformation struct from a dictionary. Args: value (dict): A dictionary containing the key/value
Build a KeyWrappingSpecification struct from a dictionary. Args: value (dict): A dictionary containing the key/value
Build a list of common attributes that are shared across symmetric as well as asymmetric
Build a name attribute, returned in a list for ease of use in the caller
Read the data encoding the QueryRequestPayload object and decode it into its constituent parts. Args:
Write the data encoding the QueryRequestPayload object to a stream. Args: output_buffer (Stream): A data
Read the data encoding the QueryResponsePayload object and decode it into its constituent parts. Args:
Write the data encoding the QueryResponsePayload object to a stream. Args: output_buffer (Stream): A data
Read the data encoding the GetAttributes response payload and decode it into its constituent parts.
Write the data encoding the GetAttributes response payload to a stream. Args: output_buffer (stream): A
Find a single entry point. Returns an :class:`EntryPoint` object, or raises :exc:`NoSuchEntryPoint` if no match
Find a group of entry points with unique names. Returns a dictionary of names to
Find all entry points in a group. Returns a list of :class:`EntryPoint` objects.
Load the object to which this entry point refers.
Parse an entry point from the syntax in entry_points.txt :param str epstr: The entry point
Run livereload server
New project.
Generate controller, include the controller file, template & css & js directories.
Generate action.
Generate form.
Generate model.
Genarate macro.
mkdir -p path
Replace vars and copy.
Friendly time gap
Check url schema.
Encode something with SECRET_KEY.
Decode something with SECRET_KEY.
JSON decorator.
Absolute url for endpoint.
Load config.
Sign in user.
Get current user.
Signin
Signup
Create Flask app.
Register jinja filters, vars, functions.
Register routes.
Register HTTP error pages.
Register hooks.
serialize the dataframe with different delimiters
Returns csv data as a pandas Dataframe object
Serialize a dataframe. Parameters ---------- writer : file File-like object to write to. Must be
Deserialize a dataframe. Parameters ---------- reader : file File-like object to read from. Must be
Serialize the specified DataFrame and replace the existing dataset. Parameters ---------- dataframe : pandas.DataFrame Data
Upload already serialized raw data and replace the existing dataset. Parameters ---------- raw_data: bytes Dataset
Full URL to the dataset contents.
Serialize the specified DataFrame and upload it as a new dataset. Parameters ---------- dataframe :
Upload already serialized raw data as a new dataset. Parameters ---------- raw_data: bytes Dataset contents
Open and return a stream for the dataset contents.
Read and return the dataset contents as binary.
Read and return the dataset contents as text.
Read and return the dataset contents as a pandas DataFrame.
Get an intermediate dataset. Parameters ---------- node_id : str Module node id from the experiment
Runs HTTP GET request to retrieve the list of experiments.
Runs HTTP GET request to retrieve the list of datasets.
Runs HTTP GET request to retrieve a single dataset.
publishes a callable function or decorates a function to be published. Returns a callable, iterable
Marks a function as having been published and causes all invocations to go to the
Specifies the types used for the arguments of a published service.@types(a=int, b = str)def f(a,
Specifies the return type for a published service.@returns(int)def f(...): pass
attaches a file to the payload to be uploaded.If contents is omitted the file is
walks the byte code to find the variables which are actually globals
maps the function onto multiple inputs. The input should be multiple sequences. Thesequences will be
Create a copy of this pen.
Return RGBA values of color c c should be either an X11 color or a
Draw this shape with the given cairo context
Find extremas of a function of real domain defined by evaluating a cubic bernstein polynomial
Evaluate polynomial of given bernstein coefficients using de Casteljau's algorithm.
Build choices list runtime using 'sitetree_tree' tag
Compatibility function to get rid of optparse in management commands after Django 1.10. :param tuple
Returns SiteTree (thread-singleton) object, implementing utility methods. :rtype: SiteTree
Registers a hook callable to process tree items right before they are passed to templates.
Registers dynamic trees to be available for `sitetree` runtime. Expects `trees` to be an iterable
Returns a structure describing a dynamic sitetree.utils The structure can be built from various sources,
Initializes local cache from Django cache.
Empties cached sitetree data.
Returns cache entry parameter value by its name. :param str|unicode entry_name: :param key: :return:
Updates cache entry parameter with new data. :param str|unicode entry_name: :param key: :param value:
Replaces entire cache entry parameter data by its name with new data. :param str|unicode entry_name:
Initializes sitetree to handle new request. :param Context|None context:
Resolves internationalized tree alias. Verifies whether a separate sitetree is available for currently active language.
Attaches dynamic sitetrees items registered with `register_dynamic_trees()` to an initial (source) items list. :param str|unicode
Returns boolean whether current application is Admin contrib. :rtype: bool
Gets site tree items from the given site tree. Caches result to dictionary. Returns (tree
Calculates depth of the item in the tree. :param str|unicode tree_alias: :param int item_id: :param
Resolves current tree item of 'tree_alias' tree matching current request path against URL of given
Resolves item's URL. :param TreeItemBase sitetree_item: TreeItemBase heir object, 'url' property of which is processed
Initializes sitetree in memory. Returns tuple with resolved tree alias and items on success. On
Returns an arbitrary attribute of a sitetree item resolved as current for current page. :param
Returns ancestor of level `deep` recursively :param TreeItemBase current_item: :param int depth: :rtype: TreeItemBase
Builds and returns menu structure for 'sitetree_menu' tag. :param str|unicode tree_alias: :param str|unicode tree_branches: :param
Applies item processing hook, registered with ``register_item_hook()`` to items supplied, and returns processed list. Returns
Checks whether a current user has an access to a certain item. :param TreeItemBase item:
Builds and returns breadcrumb trail structure for 'sitetree_breadcrumbs' tag. :param str|unicode tree_alias: :param Context context:
Builds and returns tree structure for 'sitetree_tree' tag. :param str|unicode tree_alias: :param Context context: :rtype:
Builds and returns site tree item children structure for 'sitetree_children' tag. :param TreeItemBase parent_item: :param
Returns item's children. :param str|unicode tree_alias: :param TreeItemBase|None item: :rtype: list
Updates 'has_children' attribute for tree items inplace. :param str|unicode tree_alias: :param list tree_items: :param str|unicode
Filters sitetree item's children if hidden and by navigation type. NB: We do not apply
Climbs up the site tree to resolve root item for chosen one. :param str|unicode tree_alias:
Climbs up the site tree to mark items of current branch. :param str|unicode tree_alias: :param
Resolves name as a variable in a given context. If no context specified page context'
Parses sitetree tag parameters. Two notation types are possible: 1. Two arguments: {% sitetree_tree from
Parses sitetree_children tag parameters. Six arguments: {% sitetree_children of someitem for menu template "sitetree/mychildren.html" %}
Parses sitetree_breadcrumbs tag parameters. Two notation types are possible: 1. Two arguments: {% sitetree_breadcrumbs from
Parses sitetree_menu tag parameters. {% sitetree_menu from "mytree" include "trunk,1,level3" %} Used to render trunk,
Render helper is used by template node functions to render given template with given tree
Node constructor to be used in tags.
Returns a URL for a given Tree admin page type.
Forces unregistration of tree admin class with following re-registration.
Fixes Admin contrib redirects compatibility problems introduced in Django 1.4 by url handling changes.
Generic redirect for item editor.
Redirects to the appropriate items' 'continue' page on item add. As we administer tree items
Redirects to the appropriate items' 'add' page on item change. As we administer tree items
Returns modified form for TreeItem model. 'Parent' field choices are built by sitetree itself.
Fetches Tree for current or given TreeItem.
Moves item up or down by swapping 'sort_order' field values of neighboring items.
Saves TreeItem model under certain Tree. Handles item's parent assignment exception.
Manages not only TreeAdmin URLs but also TreeItemAdmin URLs.
Dumps sitetrees with items using django-smuggler. :param request: :return:
Dynamically creates and returns a sitetree. :param str|unicode alias: :param str|unicode title: :param iterable items:
Dynamically creates and returns a sitetree item object. :param str|unicode title: :param str|unicode url: :param
Imports sitetree module from a given app. :param str|unicode app: Application name :return: module|None
Imports sitetrees modules from packages (apps). Returns a list of submodules. :rtype: list
Returns tuple with application and tree[item] model class names. :param str|unicode settings_entry_name: :rtype: tuple
Returns a certain sitetree model as defined in the project settings. :param str|unicode settings_entry_name: :rtype:
Called by the ASGI instance to send a message.
Called by the ASGI instance to send a message.
Serve an ASGI framework app given the config. This allows for a programmatic way to
Serve an ASGI framework app given the config. This allows for a programmatic way to
Create a configuration from a mapping. This allows either a mapping to be directly passed
Create a configuration from a Python file. .. code-block:: python Config.from_pyfile('hypercorn_config.py') Arguments: filename: The filename
Load the configuration values from a TOML formatted file. This allows configuration to be loaded
Create a configuration from a Python object. This can be used to reference modules or
Main function to log all the annotations stored during the entire request. This is done
Creates a set of zipkin attributes for a span. :param sample_rate: Float between 0.0 and
Generate the headers for a new zipkin span. .. note:: If the method is not
Returns the current ZipkinAttrs and generates new ones if needed. :returns: (report_root_timestamp, zipkin_attrs) :rtype: (bool,
Enter the new span context. All annotations logged inside this context will be attributed to
Exit the span context. Zipkin attrs are pushed onto the threadlocal stack regardless of sampling,
Updates the binary annotations for the current span.
Adds a 'sa' binary annotation to the current span. 'sa' binary annotations are useful for
Overrides the current span name. This is useful if you don't know the span name
Creates a new Endpoint object. :param port: TCP/UDP port. Defaults to 0. :type port: int
Creates a copy of a given endpoint with a new service name. :param endpoint: existing
Builds and returns a V1 Span. :return: newly generated _V1Span :rtype: _V1Span
Encode list of protobuf Spans to binary. :param pb_spans: list of protobuf Spans. :type pb_spans:
Converts a py_zipkin Span in a protobuf Span. :param span: py_zipkin Span to convert. :type
Encodes to hexadecimal ids to big-endian binary. :param hex_id: hexadecimal id to encode. :type hex_id:
Converts py_zipkin's Kind to Protobuf's Kind. :param kind: py_zipkin's Kind. :type kind: py_zipkin.Kind :return: correcponding
Converts py_zipkin's Endpoint to Protobuf's Endpoint. :param endpoint: py_zipkins' endpoint to convert. :type endpoint: py_zipkin.encoding.Endpoint
Converts py_zipkin's annotations dict to protobuf. :param annotations: annotations dict. :type annotations: dict :return: corresponding
Create a zipkin annotation object :param timestamp: timestamp of when the annotation occured in microseconds
Create a zipkin binary annotation object :param key: name of the annotation, such as 'http.uri'
Create a zipkin Endpoint object. An Endpoint object holds information about the network context of
Copies a copy of a given endpoint with a new service name. This should be
Reformat annotations dict to return list of corresponding zipkin_core objects. :param annotations: dict containing key
Reformat binary annotations dict to return list of zipkin_core objects. The value of the binary
Takes a bunch of span attributes and returns a thriftpy2 representation of the span. Timestamps
Returns a TBinaryProtocol encoded Thrift span. :param thrift_span: thrift object to encode. :returns: thrift object
Returns a TBinaryProtocol encoded list of Thrift objects. :param binary_thrift_obj_list: list of TBinaryProtocol objects to
Returns the span type and encoding for the message provided. The logic in this function
Converts encoded spans to a different encoding. param spans: encoded input spans. type spans: byte
Stores the zipkin attributes to thread local. .. deprecated:: Use the Tracer interface which offers
Returns a 128 bit UTF-8 encoded string. Follows the same conventions as generate_random_64bit_string(). The upper
Creates encoder object for the given encoding. :param encoding: desired output encoding protocol. :type encoding:
Checks if the new span fits in the max payload size. Thrift lists have a
Encodes the current span to thrift.
Converts an Endpoint to a JSON endpoint dict. :param endpoint: endpoint object to convert. :type
Encodes a single span to JSON.
Encodes a single span to JSON.
Checks if the new span fits in the max payload size.
Encodes a single span to protobuf.
Creates encoder object for the given encoding. :param encoding: desired output encoding protocol :type encoding:
Decodes an encoded list of spans. :param spans: encoded list of spans :type spans: bytes
Accepts a thrift decoded endpoint and converts it to an Endpoint. :param thrift_endpoint: thrift encoded
Accepts a thrift annotation and converts it to a v1 annotation. :param thrift_annotations: list of
Accepts a thrift decoded binary annotation and converts it to a v1 binary annotation.
Decodes a thrift span. :param thrift_span: thrift span :type thrift_span: thrift Span object :returns: span
Converts the provided traceId hex value with optional high bits to a string. :param trace_id:
Converts the provided unsigned long value to a hex string. :param value: the value to
Writes an unsigned long value across a byte array. :param data: the buffer to write
Replace illegal February 29, 30 dates with the last day of February. German banks use
mBank Collect uses transaction code 911 to distinguish icoming mass payments transactions, adding transaction_code may
mBank Collect uses ID IPH to distinguish between virtual accounts, adding iph_id may be helpful
mBank Collect states TNR in transaction details as unique id for transactions, that may be
Parses mt940 data, expects a string with data Args: data (str): The MT940 data Returns:
Parses mt940 data and returns transactions object :param src: file handler to read, filename to
Join strings together and strip whitespace in between if needed
Turns response into a properly formatted json or text object
Handles the message shown when we are ratelimited
Handles requests to the API
Gets the information of the given Bot ID
Gets an object of bots on DBL
Gets the guild count from the Client/Bot object
This function is a coroutine. Posts the guild count to discordbots.org .. _0 based indexing
This function is a coroutine. Gets a guild count from discordbots.org Parameters ========== bot_id: int[Optional]
This function is a coroutine. Gets information about a bot from discordbots.org Parameters ========== bot_id:
This function is a coroutine. Gets information about listed bots on discordbots.org Parameters ========== limit:
This function is a coroutine. Generates a custom large widget. Do not add `#` to
This function is a coroutine. Generates the default large widget. Parameters ========== bot_id: int The
This function is a coroutine. Generates a custom large widget. Do not add `#` to
This function is a coroutine. Generates the default small widget. Parameters ========== bot_id: int The
This function is a coroutine. Closes all connections.
Read incoming message.
Write outgoing message.
Close port.
Decode Erlang external term.
Encode Erlang external term.
**Description** Get the set of falco rules files from the backend. The _files programs and
**Description** Given a dict returned from get_default_falco_rules_files, save those files to a set of files
**Description** Given a file and directory layout as described in save_default_falco_rules_files(), load those files and
**Description** Fetch all policy events that occurred in the last duration_sec seconds. This method is
**Description** Fetch all policy events with id that occurred in the time range [from_sec:to_sec]. This
**Description** Create a set of default policies using the current system falco rules file as
**Description** Delete all existing policies. The falco rules file is unchanged. **Arguments** - None **Success
**Description** Change the policy evaluation order **Arguments** - priorities_json: a description of the new policy
**Description** Find the policy with name <name> and return its json description. **Arguments** - name:
**Description** Add a new policy using the provided json. **Arguments** - policy_json: a description of
**Description** Delete the policy with the given name. **Arguments** - name: the name of the
**Description** Delete the policy with the given id **Arguments** - id: the id of the
**Description** Add a new compliance task. **Arguments** - name: The name of the task e.g.
**Description** Get the list of all compliance tasks. **Arguments** - None **Success Return Value** A
**Description** Get a compliance task. **Arguments** - id: the id of the compliance task to
**Description** Update an existing compliance task. **Arguments** - id: the id of the compliance task
**Description** Delete the compliance task with the given id **Arguments** - id: the id of
**Description** Get the list of all compliance tasks runs. **Arguments** - limit: Maximum number of
**Description** Retrieve the details for a specific compliance task run result in csv. **Arguments** -
**Description** List the commands audit. **Arguments** - from_sec: the start of the timerange for which
**Description** Get a command audit. **Arguments** - id: the id of the command audit to
**Description** Returns the list of Sysdig Monitor alert notifications. **Arguments** - **from_ts**: filter events by
**Description** Updates the resolution status of an alert notification. **Arguments** - **notification**: notification object as
**Description** Create a threshold-based alert. **Arguments** - **name**: the alert name. This will appear in
**Description** Update a modified threshold-based alert. **Arguments** - **alert**: one modified alert object of the
**Description** Deletes an alert. **Arguments** - **alert**: the alert dictionary as returned by :func:`~SdcClient.get_alerts`. **Success
**Description** Return the user's current grouping hierarchy as visible in the Explore tab of Sysdig
**Description** Changes the grouping hierarchy in the Explore panel of the current user. **Arguments** -
**Description** Return the list of dashboards available under the given user account. This includes the
**Description** Finds dashboards with the specified name. You can then delete the dashboard (with :func:`~SdcClient.delete_dashboard`)
**Description** Removes a panel from the dashboard. The panel to remove is identified by the
**Description** Create a new dasboard using one of the Sysdig Monitor views as a template.
**Description** Create a new dasboard using one of the existing dashboards as a template. You
**Description** Create a new dasboard using a dashboard template saved to disk. See :func:`~SdcClient.save_dashboard_to_file` to
**Description** Save a dashboard to disk. See :func:`~SdcClient.create_dashboard_from_file` to use the file to create a
**Description** Deletes a dashboard. **Arguments** - **dashboard**: the dashboard object as returned by :func:`~SdcClient.get_dashboards`. **Success
**Description** Internal function to convert a filter string to a filter object to be used
**Description** Get an array of all configured Notification Channel IDs, or a filtered subset of
**Description** Send an event to Sysdig Monitor. The events you post are available in the
**Description** Returns the list of Sysdig Monitor events. **Arguments** - **name**: filter events by name.
**Description** Deletes an event. **Arguments** - **event**: the event object as returned by :func:`~SdcClient.get_events`. **Success
**Description** Export metric data (both time-series and table-based). **Arguments** - **metrics**: a list of dictionaries,
**Description** Returns the list of sysdig captures for the user. **Arguments** - from_sec: the start
**Description** Fetch the updated state of a sysdig capture. Can be used to poll the
**Description** Create a new sysdig capture. The capture will be immediately started. **Arguments** - **hostname**:
**Description** Download a sysdig capture by id. **Arguments** - **capture_id**: the capture id to download.
**Description** Invites a new user to use Sysdig Monitor. This should result in an email
**Description** Deletes a user from Sysdig Monitor. **Arguments** - **user_email**: the email address of the
**Description** Return the set of teams that match the filter specified. The *team_filter* should be
**Description** Return the team with the specified team name, if it is present. **Arguments** -
**Description** Creates a new team **Arguments** - **name**: the name of the team to create.
**Description** Edits an existing team. All arguments are optional. Team settings for any arguments unspecified
**Description** Deletes a team from Sysdig Monitor. **Arguments** - **name**: the name of the team
**Description** List all memberships for specified team. **Arguments** - **team**: the name of the team
**Description** Create new user team memberships or update existing ones. **Arguments** - **team**: the name
**Description** Remove user memberships from specified team. **Arguments** - **team**: the name of the team
**Description** Creates an empty dashboard. You can then add panels by using ``add_dashboard_panel``. **Arguments** -
**Description** Adds a panel to the dashboard. A panel can be a time series, or
**Description** Add an image to the scanner **Arguments** - image: Input image can be in
**Description** Import an image from the scanner export **Arguments** - image_data: A JSON with the
**Description** Find the image with the tag <image> and return its json description **Arguments** -
**Description** Find the image with the tag <image> and return its content. **Arguments** - image:
**Description** Find the image with the tag <image> and return its metadata. **Arguments** - image:
**Description** Find the image with the tag <image> and return its vulnerabilities. **Arguments** - image:
**Description** Delete image from the scanner. **Arguments** - None
**Description** Check the latest policy evaluation for an image **Arguments** - image: Input image can
**Description** Add image registry **Arguments** - registry: Full hostname/port of registry. Eg. myrepo.example.com:5000 - registry_user:
**Description** Update an existing image registry. **Arguments** - registry: Full hostname/port of registry. Eg. myrepo.example.com:5000
**Description** Delete an existing image registry **Arguments** - registry: Full hostname/port of registry. Eg. myrepo.example.com:5000
**Description** Find the registry and return its json description **Arguments** - registry: Full hostname/port of
**Description** Create a new policy **Arguments** - name: The name of the policy. - rules:
**Description** Retrieve the policy with the given id in the targeted policy bundle **Arguments** -
**Description** Update the policy with the given id **Arguments** - policyid: Unique identifier associated with
**Description** Create a new alert **Arguments** - name: The name of the alert. - description:
**Description** List the current set of scanning alerts. **Arguments** - limit: Maximum number of alerts
**Description** Update the alert with the given id **Arguments** - alertid: Unique identifier associated with
**Description** Delete the alert with the given id **Arguments** - alertid: Unique identifier associated with
**Description** List all subscriptions **Arguments** - None **Success Return Value** A JSON object representing the
**Description** List runtime containers **Arguments** - scope: An AND-composed string of predicates that selects the
None means 'system default
Method sleeps, if nothing to do
Set callback, which will be called when new service appeared online and sent Hi message
cleans up and stops the discovery server
send Bye messages for the services and remove them
search for services given the TYPES and SCOPES in a given TIMEOUT
Publish a service with the given TYPES, SCOPES and XAddrs (service addresses) if xAddrs contains
construct a a raw SOAP XML string, given a prepared SoapEnvelope object
parse raw XML data string, return a (minidom) xml document
Discover systems using WS-Discovery
Return the manager that handles the relation from this instance to the tagged_item class. If
Return a serialised version of the model's fields which exist as local database columns (i.e.
Return a list of RelatedObject records for child relations of the given model, including ones
Return a list of ParentalManyToManyFields on the given model, including ones attached to ancestors of
Save the model and commit all child relations.
Build an instance of this model from the JSON-like structure passed in, recursing into related
This clean method will check for unique_together condition
Return True if data differs from initial.
Create a DeferringRelatedManager class that wraps an ordinary RelatedManager with 'deferring' behaviour: any updates to
Sort a list of objects on the given fields. The field list works analogously to
Returns the address with a valid checksum attached.
Generates the correct checksum for this address.
Executes the command and (optionally) returns an exit code (used by the shell to determine
Executes the command from a collection of arguments (e.g., :py:data`sys.argv`) and returns the exit code.
Parses arguments for the command. :param argv: Arguments to pass to the argument parser. If
Returns the argument parser that will be used to interpret arguments and options from argv.
Prompts the user to enter their seed via stdin.
"Normalizes" a hash, converting it into a sequence of integers (not trits!) suitable for use
Returns whether a sequence of signature fragments is valid. :param fragments: Sequence of signature fragments
Generates a single key. :param index: The key index. :param iterations: Number of transform iterations
Generates the key associated with the specified address. Note that this method will generate the
Generates and returns one or more keys at the specified index(es). This is a one-time
Creates a generator that can be used to progressively generate new keys. :param start: Starting
Prepares the hash sponge for the generator.
Absorb trits into the sponge. :param trits: Sequence of trits to absorb. :param offset: Starting
Squeeze trits from the sponge. :param trits: Sequence that the squeezed trits will be copied
Transforms internal state.
Generates one or more key digests from the seed. Digests are safe to share; use
Generates one or more private keys from the seed. As the name implies, private keys
Prepares a bundle that authorizes the spending of IOTAs from a multisig address. .. note::
Adds two sequences of trits together. The result is a list of trits equal in
Returns a trit representation of an integer value. :param n: Integer value to convert. :param
Adds two individual trits together. The result is always a single trit.
Adds two trits together, with support for a carry trit.
Outputs the user's seed to stdout, along with lots of warnings about security.
Attaches the specified transactions (trytes) to the Tangle by doing Proof of Work. You need
Find the transactions which match the specified input and return. All input values are lists,
Similar to :py:meth:`get_inclusion_states`. Returns the confirmed balance which a list of addresses have at the
Get the inclusion states of a set of transactions. This is for determining if a
More comprehensive version of :py:meth:`get_transfers` that returns addresses and account balance in addition to bundles.
Gets all possible inputs of a seed and returns them, along with the total balance.
Generates one or more new addresses from the seed. :param index: The key index of
Returns all transfers associated with the seed. :param start: Starting key index. :param stop: Stop
Prepares transactions to be broadcast to the Tangle, by generating the correct bundle, as well
Promotes a transaction by adding spam on top of it. :return: Dict with the following
Takes a tail transaction hash as input, gets the bundle associated with the transaction and
Prepares a set of transfers and creates the bundle, then attaches the bundle to the
Attaches transaction trytes to the Tangle, then broadcasts and stores them. :param trytes: Transaction encoded
Given a URI, returns a properly-configured adapter instance.
Sends an API request to the node. :param payload: JSON payload. :param kwargs: Additional keyword
Sends a message to the instance's logger, if configured.
Sends the actual HTTP request. Split into its own method so that it can be
Interprets the HTTP response from the node. :param response: The response object received from :py:meth:`_send_http_request`.
Sets the response that the adapter will return for the specified command. You can seed
Absorbs a digest into the sponge. .. important:: Keep track of the order that digests
Returns the new multisig address. Note that you can continue to add digests after extracting
Generates and returns one or more addresses at the specified index(es). This is a one-time
Creates an iterator that can be used to progressively generate new addresses. :param start: Starting
Generates an address from a private key digest.
Generates a new address. Used in the event of a cache miss.
Finds transactions matching the specified criteria, fetches the corresponding trytes and converts them into Transaction
Scans the Tangle for used addresses. This is basically the opposite of invoking ``getNewAddresses`` with
Given a set of transaction hashes, returns the corresponding bundles, sorted by tail transaction timestamp.
Adds inputs to spend in the bundle. Note that each input may require multiple transactions,
Determines which codec to use for the specified encoding. References: - https://docs.python.org/3/library/codecs.html#codecs.register
Returns information used by the codecs library to configure the codec for use.
Encodes a byte string into trytes.
Decodes a tryte string into bytes.
Find addresses matching the command parameters.
Adds a route to the wrapper. :param command: The name of the command to route
Creates a Transaction object from a sequence of trytes. :param trytes: Raw trytes. Should be
Returns a JSON-compatible representation of the object. References: - :py:class:`iota.json.JsonEncoder`.
Returns a TryteString representation of the transaction.
Returns the values needed to validate the transaction's ``signature_message_fragment`` value.
Sets the ``is_confirmed`` for the bundle.
Attempts to decipher encoded messages from the transactions in the bundle. :param errors: How to
Returns TryteString representations of the transactions in this bundle. :param head_to_tail: Determines the order of
Groups transactions in the bundle by address.
Automatically discover commands in the specified package. :param package: Package path or reference. :param recursively:
Sends the request object to the adapter and returns the response. The command name will
Applies a filter to a value. If the value does not pass the filter, an
Returns the URL to check job status. :param job_id: The ID of the job to
Returns all errors found with the bundle.
Returns whether the bundle is valid.
Creates a generator that does all the work.
Validates the signature fragments in the bundle. :return: List of error messages. If empty, signature
Validates the signature fragments for a group of transactions using the specified sponge type. Note:
Recursively traverse the Tangle, collecting transactions until we hit a new bundle. This method is
Starts the REPL.
Generates a random seed using a CSPRNG. :param length: Length of seed, in trytes. For
Generates the digest used to do the actual signing. Signing keys can have variable length
Signs the inputs starting at the specified index. :param bundle: The bundle that contains the
Makes JSON-serializable objects play nice with IPython's default pretty-printer. Sadly, :py:func:`pprint.pprint` does not have a
Absorb trits into the sponge from a buffer. :param trits: Buffer that contains the trits
Squeeze trits from the sponge into a buffer. :param trits: Buffer that will hold the
Attaches a ``context`` value to an Exception. Before: .. code-block:: python exc = Exception('Frog blast
Generates a filter chain for validating a security level.
Returns a TryteString representation of the transaction.
Increments the transaction's legacy tag, used to fix insecure bundle hashes when finalizing a bundle.
Determines the most relevant tag for the bundle.
Adds a transaction to the bundle. If the transaction message is too long, it will
Adds inputs to spend in the bundle. Note that each input may require multiple transactions,
Finalizes the bundle, preparing it to be attached to the Tangle.
Sign inputs in a finalized bundle.
Signs the input at the specified index. :param start_index: The index of the first input
Creates transactions for the specified input address.
Converts between any two standard units of iota. :param value: Value (affixed) to convert. For
``modular_squareroot_in_FQ2(x)`` returns the value ``y`` such that ``y**2 % q == x``, and None if
A compressed point is a 384-bit integer with the bit order (c_flag, b_flag, a_flag, x),
Recovers x and y coordinates from the compressed point.
The compressed point (z1, z2) has the bit order: z1: (c_flag1, b_flag1, a_flag1, x1) z2:
Recovers x and y coordinates from the compressed point (z1, z2).
Extended euclidean algorithm to find modular inverses for integers
Load a lexicon from a JSON file. Args: filename (str): The path to a JSON
Given a string and a category, finds and combines words into groups based on their
Given a string and a dict of synonyms, returns the 'preferred' word. Case insensitive. Args:
Parse a piece of text and replace any abbreviations with their full word equivalents. Uses
Takes a piece of text representing a lithologic description for one component, e.g. "Red vf-f
Split a description into parts, each of which can be turned into a single component.
Lists the categories in the lexicon, except the optional categories. Returns: list: A list of
Jupyter Notebook magic repr function.
Jupyter Notebook magic repr function as a row – used by ``Legend._repr_html_()``.
Returns a minimal Decor with a random colour.
Make a simple plot of the Decor. Args: fmt (str): A Python format string for
Jupyter Notebook magic repr function.
Generate a default legend. Args: name (str): The name of the legend you want. Not
Generate a default timescale legend. No arguments. Returns: Legend: The timescale stored in `defaults.py`.
Generate a random legend for a given list of components. Args: components (list or Striplog):
A slightly easier way to make legends from images. Args: filename (str) components (list) ignore
Read CSV text and generate a Legend. Args: string (str): The CSV string. In the
Renders a legend as a CSV string. No arguments. Returns: str: The legend as a
The maximum width of all the Decors in the Legend. This is needed to scale
Get the decor for a component. Args: c (component): The component to look up. match_only
Get the attribute of a component. Args: c (component): The component to look up. attr
Get the display colour of a component. Wraps `getattr()`. Development note: Cannot define this as
Get the display width of a component. Wraps `getattr()`. Development note: Cannot define this as
Get the component corresponding to a display colour. This is for generating a Striplog object
Make a simple plot of the legend. Simply calls Decor.plot() on all of its members.
Jupyter Notebook magic repr function.
Generate a Component from a text string, using a Lexicon. Args: text (str): The text
Given a format string, return a summary description of a component. Args: component (dict): A
Graceful deprecation for old class name.
Processes a single row from the file.
Read all the rows and return a dict of the results.
Still unsure about best way to do this, hence cruft.
Private method. Checks if striplog is monotonically increasing in depth. Returns: Bool.
Property. Summarize a Striplog with some statistics. Returns: List. A list of (Component, total thickness
Property.
Private method. Take a sequence of tops in an arbitrary dimension, and provide a list
Private function. Make sure we have what we need to make a striplog.
Makes a striplog from a Petrel text file. Returns: striplog.
Private function. Takes a data dictionary and reconstructs a list of Intervals from it. Args:
Load from a CSV file or text.
Convert a CSV string into a striplog. Expects 2 or 3 fields: top, description OR
Read an image and generate Striplog. Args: filename (str): An image file, preferably high-res PNG.
For backwards compatibility.
DEPRECATING. Turn an array-like into a Striplog. It should have the following format (where ``base``
Turn a 1D array into a striplog, given a cutoff. Args: log (array-like): A 1D
Turn LAS3 'lithology' section into a Striplog. Args: string (str): A section from an LAS3
Eat a Canstrat DAT file and make a striplog.
Returns a shallow copy.
Returns a CSV string built from the summaries of the Intervals. Args: use_descriptions (bool): Whether
Returns an LAS 3.0 section string. Args: use_descriptions (bool): Whether to use descriptions instead of
Return a fully sampled log from a striplog. Useful for crossplotting with log data, for
Plotting, but only for points (as opposed to intervals).
Plotting, but only for tops (as opposed to intervals).
Plotting, but only for tops (as opposed to intervals).
Plotting, but only the Rectangles. You have to set up the figure. Returns a matplotlib
Get data from the striplog.
Hands-free plotting. Args: legend (Legend): The Legend to use for colours, etc. width (int): The
Get the index of the interval at a particular 'depth' (though this might be an
For backwards compatibility.
'Extract' a log into the components of a striplog. Args: log (array_like). A log or
Look for a regex expression in the descriptions of the striplog. If there's no description,
Private method. Finds gaps and overlaps in a striplog. Called by find_gaps() and find_overlaps(). Args:
Find overlaps in a striplog. Args: index (bool): If True, returns indices of intervals with
Finds gaps in a striplog. Args: index (bool): If True, returns indices of intervals with
Remove intervals below a certain limit thickness. In place. Args: limit (float): Anything thinner than
Fill in empty intervals by growing from top and base. Note that this operation happens
Fill gaps with the component provided. Example t = s.fill(Component({'lithology': 'cheese'}))
Makes a striplog of all unions. Args: Striplog. The striplog instance to union with. Returns:
Makes a striplog of all intersections. Args: Striplog. The striplog instance to intersect with. Returns:
Merges overlaps by merging overlapping Intervals. The function takes no arguments and returns ``None``. It
Makes a new striplog in which matching neighbours (for which the components are the same)
Returns the thickest interval(s) as a striplog. Args: n (int): The number of thickest intervals
Plots a histogram and returns the data for it. Args: lumping (str): If given, the
Make a bar plot of thickness per interval. Args: height (str): The property of the
Inverts the striplog, changing its order and the order of its contents. Operates in place
Crop to a new depth range. Args: extent (tuple): The new start and stop depth.
Run a series of tests and return the corresponding results. Based on curve testing for
Jupyter Notebook magic repr function.
Convert hex to a color name, using matplotlib's colour names. Args: hexx (str): A hexadecimal
Utility function to convert (r,g,b) triples to hex. http://ageo.co/1CFxXpO Args: rgb (tuple): A sequence of
Get a log-like stream of RGB values from an image. Args: filename (str): The filename
Take a log-like stream of numbers or strings, and return two arrays: one of the
http://stackoverflow.com/questions/29107800 inverse = False : Axis => Data = True : Data => Axis
Return an underscore if the attribute is absent. Not all components have the same attributes.
Define some extra field conversion functions.
Lists all the jobs registered with Nomad. https://www.nomadproject.io/docs/http/jobs.html arguments: - prefix :(str) optional, specifies a
Parse a HCL Job file. Returns a dict with the JSON formatted job. This API
Update token. https://www.nomadproject.io/api/acl-tokens.html arguments: - AccdesorID - token returns: dict raises: - nomad.api.exceptions.BaseNomadException - nomad.api.exceptions.URLNotFoundNomadException
Create policy. https://www.nomadproject.io/api/acl-policies.html arguments: - policy returns: request.Response raises: - nomad.api.exceptions.BaseNomadException - nomad.api.exceptions.URLNotFoundNomadException
Create policy. https://www.nomadproject.io/api/acl-policies.html arguments: - name - policy returns: request.Response raises: - nomad.api.exceptions.BaseNomadException - nomad.api.exceptions.URLNotFoundNomadException
Lists all the allocations. https://www.nomadproject.io/docs/http/allocs.html arguments: - prefix :(str) optional, specifies a string to filter
This endpoint is used to mark a deployment as failed. This should be done to
This endpoint is used to pause or unpause a deployment. This is done to pause
This endpoint is used to promote task groups that have canaries for a deployment. This
This endpoint is used to promote task groups that have canaries for a deployment. This
This endpoint is used to set the health of an allocation that is in the
Toggle the drain mode of the node. When enabled, no further allocations will be assigned
This endpoint toggles the drain mode of the node. When draining is enabled, no further
Toggle the eligibility of the node. https://www.nomadproject.io/docs/http/node.html arguments: - id (str uuid): node id -
List files in an allocation directory. https://www.nomadproject.io/docs/http/client-fs-ls.html arguments: - id - path returns: list raises:
Read contents of a file in an allocation directory. https://www.nomadproject.io/docs/http/client-fs-cat.html arguments: - id - path
Read contents of a file in an allocation directory. https://www.nomadproject.io/docs/http/client-fs-cat.html arguments: - id: (str) allocation_id
This endpoint streams the contents of a file in an allocation directory. https://www.nomadproject.io/api/client.html#stream-file arguments: -
This endpoint streams a task's stderr/stdout logs. https://www.nomadproject.io/api/client.html#stream-logs arguments: - id: (str) allocation_id required -
Stat a file in an allocation directory. https://www.nomadproject.io/docs/http/client-fs-stat.html arguments: - id - path returns: dict
Initiate a join between the agent and target peers. https://www.nomadproject.io/docs/http/agent-join.html returns: dict raises: - nomad.api.exceptions.BaseNomadException
Updates the list of known servers to the provided list. Replaces all previous server addresses
Force a failed gossip member into the left state. https://www.nomadproject.io/docs/http/agent-force-leave.html returns: 200 status code raises:
Lists all the client nodes registered with Nomad. https://www.nomadproject.io/docs/http/nodes.html arguments: - prefix :(str) optional, specifies
Lists all the evaluations. https://www.nomadproject.io/docs/http/evals.html arguments: - prefix :(str) optional, specifies a string to filter
Lists all the namespaces registered with Nomad. https://www.nomadproject.io/docs/enterprise/namespaces/index.html arguments: - prefix :(str) optional, specifies a
Registers a new job or updates an existing job https://www.nomadproject.io/docs/http/job.html arguments: - id returns: dict
Invoke a dry-run of the scheduler for the job. https://www.nomadproject.io/docs/http/job.html arguments: - id - job,
Dispatches a new instance of a parameterized job. https://www.nomadproject.io/docs/http/job.html arguments: - id - payload -
This endpoint reverts the job to an older version. https://www.nomadproject.io/docs/http/job.html arguments: - id - version,
This endpoint sets the job's stability. https://www.nomadproject.io/docs/http/job.html arguments: - id - version, Specifies the job
Deregisters a job, and stops all allocations part of it. https://www.nomadproject.io/docs/http/job.html arguments: - id -
Query the status of a client node registered with Nomad. https://www.nomadproject.io/docs/http/operator.html returns: dict optional arguments:
Remove the Nomad server with given address from the Raft configuration. The return code signifies
This endpoint lists all deployments. https://www.nomadproject.io/docs/http/deployments.html optional_arguments: - prefix, (default "") Specifies a string to
Update namespace https://www.nomadproject.io/api/namespaces.html arguments: - id - namespace (dict) returns: requests.Response raises: - nomad.api.exceptions.BaseNomadException -
Get a random mutator from a list of mutators
Get a random mutator for the given type
Return a polyglot attack containing the original object
Perform the fuzzing
Perform the actual fuzzing using random strategies
Safely return an unicode encoded string
Start the servers
Kill the servers
Serve custom HTML page
Serve fuzzed JSON object
Fix default socket lib to handle client disconnection while receiving data (Broken pipe)
Generic fuzz mutator, use a decorator for the given type
Spawn a new process using subprocess
Try to get output in a separate thread
Wait until we got output or until timeout is over
Terminate the newly created process
Parse the command line and start PyJFuzz
Build the provided value, while properly handling native Python types, :any:`gramfuzz.fields.Field` instances, and :any:`gramfuzz.fields.Field` subclasses.
Perform the actual external fuzzing, you may replace this method in order to increase performance
Decorator used to change the return value from PJFFactory.fuzzed, it makes the structure printable
Determine a new random value derived from the defined :any:`gramfuzz.fields.Field.odds` value. :returns: The derived value
Build the integer, optionally providing a ``pre`` list that *may* be used to define prerequisites
Build the String instance :param list pre: The prerequisites list (optional, default=None) :param bool shortest:
Build the ``Join`` field instance. :param list pre: The prerequisites list :param bool shortest: Whether
Build the ``And`` instance :param list pre: The prerequisites list :param bool shortest: Whether or
Build the ``Quote`` instance :param list pre: The prerequisites list :param bool shortest: Whether or
Build the ``Or`` instance :param list pre: The prerequisites list :param bool shortest: Whether or
Build the current ``Opt`` instance :param list pre: The prerequisites list :param bool shortest: Whether
Build this rule definition :param list pre: The prerequisites list :param bool shortest: Whether or
Build the ``Ref`` instance by fetching the rule from the GramFuzzer instance and building it
Build the STAR field. :param list pre: The prerequisites list :param bool shortest: Whether or
Shutdown the running process and the monitor
Run command once and check exit code
Run command in a loop and check exit status plus restart process when needed
Return a random float :param float a: Either the minimum value (inclusive) if ``b`` is
Load a grammar file (python file containing grammar definitions) by file path. When loaded, the
Set the maximum reference-recursion depth (not the Python system maximum stack recursion level). This controls
Calculate shortest reference-paths of each rule (and Or field), and prune all unreachable rules.
Add a new rule definition named ``def_name`` having value ``def_value`` to the category ``cat``. :param
Associate the provided rule definition name ``def_name`` with the category group ``cat_group`` in the category
Return one of the rules in the category ``cat`` with the name ``refname``. If multiple
Generate ``num`` rules from category ``cat``, optionally specifying preferred category groups ``preferred`` that should be
Commit any staged rule definition changes (rule generation went smoothly).
Fuzz all elements inside the object
Get a printable fuzzed object
Return the fuzzed object
Mutate a generic object based on type
\ if REDIS_SERVER is just an ip address, then we try to translate it to
\ we try to return IPADDR:PID form to identify where any singlebeat instance is running.
When we get term signal if we are waiting and got a sigterm, we just
\ kills the child and exits
\ if we have a running child we kill it and set our state to
\ sets state to waiting - so we resume spawning children
\ stops the running child process - if its running it will re-spawn in any
\ restart the subprocess i. we set our state to RESTARTING - on restarting we
Retrieve a list of events since the last poll. Multiple calls may be needed to
Set the current user's presence on the network. Supports :attr:`.Status.Online`, :attr:`.Status.Busy` or :attr:`.Status.Hidden` (shown as
Update the activity message for the current user. Args: mood (str): new mood message
Update the profile picture for the current user. Args: image (file): a file-like object to
Retrieve various metadata associated with a URL, as seen by Skype. Args: url (str): address
Request one batch of events from Skype, calling :meth:`onEvent` with each event in turn. Subclasses
Update the cached list of all enabled flags, and store it in the :attr:`flags` attribute.
Retrieve all details for a specific contact, including fields such as birthday and mood. Args:
Retrieve public information about a user. Args: id (str): user identifier to lookup Returns: SkypeUser:
Retrieve a list of all known bots. Returns: SkypeBotUser list: resulting bot user objects
Retrieve a single bot. Args: id (str): UUID or username of the bot Returns: SkypeBotUser:
Search the Skype Directory for a user. Args: query (str): name to search for Returns:
Retrieve any pending contact requests. Returns: :class:`SkypeRequest` list: collection of requests
Create a new instance based on the raw properties of an API response. This can
Copy properties from other into self, skipping ``None`` values. Also merges the raw data. Args:
Add a given object to the cache, or update an existing entry to include more
Method decorator: if a given status code is received, re-authenticate and try again. Args: codes
Make a public API call without a connected :class:`.Skype` instance. The obvious implications are that
Follow and track sync state URLs provided by an API endpoint, in order to implicitly
Replace the stub :meth:`getSkypeToken` method with one that connects via the Microsoft account flow using
Attempt to re-establish a connection using previously acquired tokens. If the Skype token is valid
Store details of the current connection in the named file. This can be used by
Ensure the authentication token for the given auth method is still valid. Args: auth (Auth):
Obtain connection parameters from the Microsoft account login page, and perform a login with the
Connect to Skype as a guest, joining a given conversation. In this state, some APIs
Take the existing Skype token and refresh it, to extend the expiry time without other
Ask Skype for the authenticated user's identifier, and store it on the connection object.
Acquire a new registration token. Once successful, all tokens and expiry times are written to
Retrieve all current endpoints for the connected user.
Perform a login with the given Skype username and its password. This emulates a login
Query a username or email address to see if a corresponding Microsoft account exists. Args:
Obtain connection parameters from the Microsoft account login page, and perform a login with the
Connect to Skype as a guest, joining a given conversation. In this state, some APIs
Take an existing Skype token and refresh it, to extend the expiry time without other
Request a new registration token using a current Skype token. Args: skypeToken (str): existing Skype
Generate the lock-and-key response, needed to acquire registration tokens.
Configure this endpoint to allow setting presence. Args: name (str): display name for this endpoint
Send a keep-alive request for the endpoint. Args: timeout (int): maximum amount of time for
Subscribe to contact and conversation events. These are accessible through :meth:`getEvents`.
Retrieve a selection of conversations with the most recent activity, and store them in the
Get a single conversation by identifier. Args: id (str): single or group chat identifier
Create a new group chat with the given users. The current user is automatically added
Resolve a ``join.skype.com`` URL and returns various identifiers for the group conversation. Args: url (str):
Extract the username from a contact URL. Matches addresses containing ``users/<user>`` or ``users/ME/contacts/<user>``. Args: url
Extract the conversation ID from a conversation URL. Matches addresses containing ``conversations/<chat>``. Args: url (str):
Class decorator: automatically generate an ``__init__`` method that expects args from cls.attrs and stores them.
Class decorator: add helper methods to convert identifier properties into SkypeObjs. Args: types (str list):
Class decorator: override __bool__ to set truthiness based on any attr being present. Args: cls
Method decorator: calculate the value on first access, produce the cached value thereafter. If the
Repeatedly call a function, starting with init, until false-y, yielding each item in turn. The
Return unicode text, no matter what
Figure out which handler to use, based on metadata. Returns a handler instance or None.
Parse text with frontmatter, return metadata and content. Pass in optional metadata defaults as keyword
Load and parse a file-like object or filename, return a :py:class:`post <frontmatter.Post>`. :: >>> post
Parse text (binary or unicode) and return a :py:class:`post <frontmatter.Post>`. :: >>> with open('tests/hello-world.markdown') as
Serialize :py:class:`post <frontmatter.Post>` to a string and write to a file-like object. Text will be
Serialize a :py:class:`post <frontmatter.Post>` to a string and return text. This always returns unicode text,
Post as a dict, for serializing
Parse YAML front matter. This uses yaml.SafeLoader by default.
Export metadata as YAML. This uses yaml.SafeDumper by default.
Turn metadata into JSON
Return the match object for the current list.
Return items as a list of strings. Don't include sub-items and the start pattern.
Return the Lists inside the item with the given index. :param i: The index if
Convert to another list type by replacing starting pattern.
Parse template content. Create self.name and self.arguments.
Return the lists in all arguments. For performance reasons it is usually preferred to get
Return template's name (includes whitespace).
Create a Trie out of a list of words and return an atomic regex pattern.
Convert a trie to a regex pattern.
Return adjusted start and stop index as tuple. Used in __setitem__ and __delitem__.
Insert the given string before the specified index. This method has the same effect as
Return str(self).
Partition self.string where `char`'s not in atomic sub-spans.
Return all the sub-span including self._span.
Close all sub-spans of (start, stop).
Update self._type_to_spans according to the removed span. Warning: If an operation involves both _shrink_update and
Update self._type_to_spans according to the added length.
Return the nesting level of self. The minimum nesting_level is 0. Being part of any
Return a copy of self.string with specific sub-spans replaced. Comments blocks are replaced by spaces.
Replace the invalid chars of SPAN_PARSER_TYPES with b'_'. For comments, all characters are replaced, but
Create the arguments for the parse function used in pformat method. Only return sub-spans and
Deprecated, use self.pformat instead.
Return a pretty-print of self.string as string. Try to organize templates and parser functions by
Return a list of parameter objects.
Return a list of parser function objects.
Return a list of templates as template objects.
Return a list of wikilink objects.
Return a list of comment objects.
Return a list of found external link objects. Note: Templates adjacent to external links are
Return a list of section in current wikitext. The first section will always be the
Return a list of found table objects.
r"""Return a list of WikiList objects. :param pattern: The starting pattern for list items. Return
Return all tags with the given name.
Yield all the sub-span indices excluding self._span.
Return the ancestors of the current node. :param type_: the type of the desired ancestors
Return the parent node of the current object. :param type_: the type of the desired
Return the most common item in the list. Return the first one if there are
Return the first argument in the args that has the given name. Return None if
Return normal form of self.name. - Remove comments. - Remove language code. - Remove namespace
Eliminate duplicate arguments by removing the first occurrences. Remove the first occurrences of duplicate arguments,
Remove duplicate arguments in a safe manner. Remove the duplicate arguments only in the following
Set the value for `name` argument. Add it if it doesn't exist. - Use `positional`,
Return the last argument with the given name. Return None if no argument with that
Return true if the is an arg named `name`. Also check equality of values if
Delete all arguments with the given then.
Build crs table of all equivalent format variations by scraping spatialreference.org. Saves table as tab-delimited
Lookup crscode on spatialreference.org and return in specified format. Arguments: - *codetype*: "epsg", "esri", or
Returns the CS as a proj4 formatted string or dict. Arguments: - **as_dict** (optional): If
Returns the CS as a OGC WKT formatted string.
Returns the CS as a ESRI WKT formatted string.
Returns the CS as a proj4 formatted string or dict. Arguments: - **as_dict** (optional): If
Returns the CS as a OGC WKT formatted string.
Returns the CS as a ESRI WKT formatted string.
Search for a ellipsoid name located in this module. Arguments: - **ellipsname**: The ellipsoid name
Returns the crs object from a string interpreted as a specified format, located at a
Returns the crs object from a file, with the format determined from the filename extension.
Load crs object from epsg code, via spatialreference.org. Parses based on the proj4 representation. Arguments:
Load crs object from esri code, via spatialreference.org. Parses based on the proj4 representation. Arguments:
Load crs object from sr-org code, via spatialreference.org. Parses based on the proj4 representation. Arguments:
Internal method for parsing wkt, with minor differences depending on ogc or esri style. Arguments:
Parse crs as proj4 formatted string or dict and return the resulting crs object. Arguments:
Detect crs string format and parse into crs object with appropriate function. Arguments: - *text*:
Write the raw header content to the out stream Parameters: ---------- out : {file object}
Instantiate a RawVLR by reading the content from the data stream Parameters: ---------- data_stream :
Gets the 3 GeoTiff vlrs from the vlr_list and parse them into a nicer structure
Parses the GeoTiff VLRs information into nicer structs
Returns the signedness foe the given type index Parameters ---------- type_index: int index of the
Returns the index of the type as defined in the LAS Specification Parameters ---------- type_str:
Construct a new PackedPointRecord from an existing one with the ability to change to point
Tries to copy the values of the current dimensions from other_record
Appends zeros to the points stored if the value we are trying to fit is
Returns all the dimensions names, including the names of sub_fields and their corresponding packed fields
Creates a new point record with all dimensions initialized to zero Parameters ---------- point_format_id: int
Construct the point record by reading the points from the stream
Construct the point record by reading and decompressing the points data from the input buffer
Returns the scaled x positions of the points as doubles
Returns the scaled y positions of the points as doubles
Returns the scaled z positions of the points as doubles
Setter for the points property, Takes care of changing the point_format of the file (as
Adds a new extra dimension to the point record Parameters ---------- name: str the name
writes the data to a stream Parameters ---------- out_stream: file object the destination stream, implementing
Writes the las data into a file Parameters ---------- filename : str The file where
Writes to a stream or file When destination is a string, it will be interpreted
Builds the dict mapping point format id to numpy.dtype In the dtypes, bit fields are
Builds the dict mapping point format id to numpy.dtype In the dtypes, bit fields are
Tries to find a matching point format id for the input numpy dtype To match,
Returns the minimum file version that supports the given point_format_id
Returns true if the file version support the point_format_id
Function to get vlrs by user_id and/or record_ids. Always returns a list even if only
Returns the list of vlrs of the requested type Always returns a list even if
Returns the list of vlrs of the requested type The difference with get is that
Reads vlrs and parse them if possible from the stream Parameters ---------- data_stream : io.BytesIO
Returns true if all the files have the same points format id
Returns true if all the files have the same numpy datatype
Reads the 4 first bytes of the stream to check that is LASF
Reads the head of the las file and returns it
Reads and return the vlrs of the file
Reads the whole las data (header, vlrs ,points, etc) and returns a LasData object
private function to handle reading of the points record parts of the las file. the
reads the compressed point record
reads and returns the waveform vlr header, waveform record
Reads the EVLRs of the file, will fail if the file version does not support
Helper function to warn about unknown bytes found in the file
Given a raw_vlr tries to find its corresponding KnownVLR class that can parse its data.
Opens and reads the header of the las content in the source >>> with open_las('pylastests/simple.las')
Entry point for reading las data in pylas Reads the whole file into memory. >>>
Creates a File from an existing header, allocating the array of point according to the
Function to create a new empty las data object .. note:: If you provide both
Converts a Las from one point format to another Automatically upgrades the file version if
Merges multiple las files into one merged = merge_las(las_1, las_2) merged = merge_las([las_1, las_2, las_3])
writes the given las into memory using BytesIO and reads it again, returning the newly
Returns the creation date stored in the las file Returns ------- datetime.date
Returns the date of file creation as a python date object
Returns de minimum values of x, y, z as a numpy array
Sets de minimum values of x, y, z as a numpy array
Returns de maximum values of x, y, z as a numpy array
Sets de maximum values of x, y, z as a numpy array
Returns the scaling values of x, y, z as a numpy array
Returns the offsets values of x, y, z as a numpy array
>>> HeaderFactory.header_class_for_version(2.0) Traceback (most recent call last): ... pylas.errors.FileVersionNotSupported: 2.0 >>> HeaderFactory.header_class_for_version(1.2) <class 'pylas.headers.rawheader.RawHeader1_2'> >>>
seeks to the position of the las version header fields in the stream and returns
Converts a header to a another version Parameters ---------- old_header: the old header instance new_version:
Unpack sub field using its mask Parameters: ---------- source_array : numpy.ndarray The source array mask
Packs a sub field's array into another array using a mask Parameters: ---------- array :
Returns a list of the names of the dimensions that will be lost when converting
Returns the numpy.dtype used to store the point records in a numpy array .. note::
Returns the numpy.dtype used to store the point records in a numpy array .. note::
Returns a dict of the sub fields for this point format Returns ------- Dict[str, Tuple[str,
Returns the number of extra bytes
Returns True if the point format has waveform packet dimensions
Console script for satel_integra.
Function to calculate checksum as per Satel manual.
Debugging method to print out frames in hex.
Verify checksum and strip header and footer of received frame.
Return list of positions of bits set to one in given data. This method is
Add header, checksum and footer to command data.
Basic demo of the monitoring capabilities.
Make a TCP connection to the alarm system.
Start monitoring for interesting events.
0x17 outputs state 0x17 + 16/32 bytes
Send arming command to the alarm. Modes allowed: from 0 till 3.
Send command to disarm.
Send command to clear the alarm.
Send output turn on command to the alarm.
A workaround for Satel Integra disconnecting after 25s. Every interval it sends some random question
Start monitoring of the alarm status. Send command to satel integra to start sending updates.
Stop monitoring and close connection.
Clear all matching our user_id.
Guess the type of a file. If allow_directory is False, don't consider the possibility that
Get the id of a file in the database. This function is specific to this
Get a notebook from the database.
Build a notebook model from database record.
Get a directory from the database.
Apply _notebook_model_from_db or _file_model_from_db to each entry in file_records, depending on the result of `guess_type`.
Build a directory model from database directory record.
Build a file model from database record.
Save a notebook. Returns a validation message.
Save a non-notebook file.
Rename object from old_path to path. NOTE: This method is unfortunately named on the base
Delete object corresponding to path.
Apply preprocessing steps to file/notebook content that we're going to write to the database. Applies
Add a new user if they don't already exist.
Delete a user and all of their resources.
Create a directory.
Return a WHERE clause that matches entries in a directory. Parameterized on table because this
Delete a directory.
Internal implementation of dir_exists. Expects a db-style path name.
Return files in a directory.
Return subdirectories of a directory.
Return the names of all files/directories that are direct children of api_dirname. If content is
Return a WHERE clause matching the given API path and user_id.
Return a SELECT statement that returns the latest N versions of a file.
Default fields returned by a file query.
Get file data for the given user_id, path, and query_fields. The query_fields parameter specifies which
Get file data for the given user_id and path. Include content only if include_content=True.
Get the value in the 'id' column for the file with the given user_id and
Delete a file. TODO: Consider making this a soft delete.
Check if a file exists.
Rename a file.
Rename a directory.
Save a file. TODO: Update-then-insert is probably cheaper than insert-then-update.
Create a generator of decrypted files. Files are yielded in ascending order of their timestamp.
Delete all database records for the given user_id.
Create a generator of decrypted remote checkpoints. Checkpoints are yielded in ascending order of their
See docstrings for `generate_files` and `generate_checkpoints`. Parameters ---------- table : SQLAlchemy.Table Table to fetch notebooks
Re-encrypt a row from ``table`` with ``id`` of ``row_id``.
Get all file ids for a user.
Get all file ids for a user.
Re-encrypt all of the files and checkpoints for a single user.
Convert a secret key and a user ID into an encryption key to use with
Derive a list of per-user Fernet keys from a list of master keys and a
Create and return a function suitable for passing as a crypto_factory to ``pgcontents.utils.sync.reencrypt_all_users`` The factory
Decorator memoizing a single-argument function
Get the name from a column-like SQLAlchemy expression. Works for Columns and Cast expressions.
Convert a SQLAlchemy row that does not contain a 'content' field to a dict. If
Convert a SQLAlchemy row that contains a 'content' field to a dict. ``decrypt_func`` will be
Create a checkpoint of the current state of a notebook Returns a checkpoint_id for the
Create a checkpoint of the current state of a file Returns a checkpoint_id for the
delete a checkpoint for a file
Get the content of a checkpoint.
Return a list of checkpoints for a given file
Rename all checkpoints for old_path to new_path.
Delete all checkpoints for the given path.
Purge all database records for the current user.
Resolve a path based on a dictionary of manager prefixes. Returns a triple of (prefix,
Get an argument, either from kwargs or from the first entry in args. Raises a
Prefix all path entries in model with the given prefix.
Decorator for methods that accept path as a first argument.
Parameterized decorator for methods that accept path as a second argument.
Decorator for methods accepting old_path and new_path.
Strip slashes from directories before updating.
Special case handling for listing root dir.
Ensure that roots of our managers can't be deleted. This should be enforced by https://github.com/ipython/ipython/pull/8168,
Resolve paths with '..' to normalized paths, raising an error if the final result is
Split an API file path into directory and name.
Write a notebook as base64.
Read a notebook from base64.
Decode base64 data of unknown format. Attempts to interpret data as utf-8, falling back to
Decode base64 content for a file. format: If 'text', the contents will be decoded as
Return an iterable of all prefix directories of path, descending from root.
Decorator for converting PathOutsideRoot errors to 404s.
Create a user.
Split an iterable of models into a list of file paths and a list of
Recursive helper for walk.
Iterate over all files visible to ``mgr``.
Iterate over the contents of all files visible to ``mgr``.
Re-encrypt data for all users. This function is idempotent, meaning that it should be possible
Re-encrypt all files and checkpoints for a single user.
Unencrypt data for all users. Parameters ---------- engine : SQLAlchemy.engine Engine encapsulating database connections. old_crypto_factory
Unencrypt all files and checkpoints for a single user.
Temporarily write an alembic.ini file for use with alembic migration scripts.
Upgrade the given database to revision.
Returns list of authors as a comma-separated string (with 'and' before last author).
Returns list of authors as a comma-separated string sorted by author type (with 'and' before
Santizes the data for the given block. If block has a matching embed serializer, use
Queue an instance to be fetched from the database.
Fetch all queued instances of type `embed_type`, save results to `self.instances`
Insert a fetched instance into embed block.
Load data in bulk for each embed block.
Perform validation of the widget data
Render HTML entry point for manager app.
Return JSON representation for this template
Hides authenticated_fields if request context is missing or user is not authenticated
Excludes fields that are included in the queryparameters
Get the latest article with the given primary key.
Optionally restricts the returned articles by filtering against a `topic` query parameter in the URL.
Only display unpublished content to authenticated users, filter by query parameter if present.
Overrides the default get_attribute method to convert None values to False.
Checks that the given widget contains the required fields
Checks that the given zone contains the required fields
Return True if id is a valid UUID, False otherwise.
Returns the user's permissions.
Modify the user's permissions.
Raise a ValidationError if data does not match the author format.
Save widget data for this zone.
Returns data from each field.
Prepare widget data for template.
Renders the widget as HTML.
Returns artilce/page content as HTML
Returns article/page content as JSON
Retrieves the settings for this integration as a dictionary. Removes all hidden fields if show_hidden=False
Receive OAuth callback request from Facebook.
Return settings for given integration as a dictionary.
Updates settings for given integration.
Handles requests to the user signup page.
Returns the HTML produced from enclosing each item in `contents` in a tag of type
Renders the contents of the zone with given zone_id.
Handles the saving/updating of a Publishable instance. Arguments: revision - if True, a new version
Handles saving the featured image. If data is None, the featured image will be removed.
Save the subsection to the parent article
Returns the file extension.
Returns the medium size image URL.
Custom save method to process thumbnails and save image dimensions.
Processes and saves a resized thumbnail version of the image.
Initialize the `app` for use with this :class:`~flask_mysqldb.MySQL` class. This is called automatically if `app`
Attempts to connect to the MySQL server. :return: Bound MySQL connection object if successful or
Wraps a fileobj in a bandwidth limited stream wrapper :type fileobj: file-like obj :param fileobj:
Read a specified amount Reads will only be throttled if bandwidth limiting is enabled.
Consume an a requested amount :type amt: int :param amt: The amount of bytes to
Schedules a wait time to be able to consume an amount :type amt: int :param
Processes a scheduled consumption request that has completed :type token: RequestToken :param token: The token
Get the projected rate using a provided amount and time :type amt: int :param amt:
Record the consumption rate based off amount and time point :type amt: int :param amt:
Downloads the object's contents to a file :type bucket: str :param bucket: The name of
Poll for the result of a transfer :param transfer_id: Unique identifier for the transfer :return:
Calculate the range parameter for multipart downloads/copies :type part_size: int :param part_size: The size of
Retrieves callbacks from a subscriber :type transfer_future: s3transfer.futures.TransferFuture :param transfer_future: The transfer future the subscriber
Gets a dictionary filtered by whitelisted keys :param original_dict: The original dictionary of arguments to
Decrement the count by one
Finalize the counter Once finalized, the counter never be incremented and the callback can be
Checks to see if a file is a special UNIX file. It checks if the
Convenience factory function to create from a filename. :type start_byte: int :param start_byte: The first
Acquire the semaphore :param tag: A tag identifying what is acquiring the semaphore. Note that
Release the semaphore :param tag: A tag identifying what is releasing the semaphore :param acquire_token:
Get a chunksize close to current that fits within all S3 limits. :type current_chunksize: int
Queue IO write for submission to the IO executor. This method accepts an IO executor
Get an IO write task for the requested set of data This task can be
Retrieves a class for managing output for a download :type transfer_future: s3transfer.futures.TransferFuture :param transfer_future: The
:param client: The client associated with the transfer manager :type config: s3transfer.manager.TransferConfig :param config: The
Downloads an object and places content into io queue :param client: The client to use
Pulls off an io queue to write contents to a file :param fileobj: The file
Request any available writes given new incoming data. You call this method by providing new
Backwards compat function to determine if a fileobj is seekable :param fileobj: The file-like object
Uploads a file to S3 :type fileobj: str or seekable file-like object :param fileobj: The
Downloads a file from S3 :type bucket: str :param bucket: The name of the bucket
Copies a file in S3 :type copy_source: dict :param copy_source: The name of the source
Delete an S3 object. :type bucket: str :param bucket: The name of the bucket. :type
Shutdown the TransferManager It will wait till all transfers complete before it completely shuts down.
Cancels all inprogress transfers This cancels the inprogress transfers by calling cancel() on all tracked
Wait until there are no more inprogress transfers This will not stop when failures are
Reads a specific amount of data from a stream and returns it. If there is
Wraps data with the interrupt reader and the file chunk reader. :type data: bytes :param
Retrieves a class for managing input for an upload based on file type :type transfer_future:
:param client: The client associated with the transfer manager :type config: s3transfer.manager.TransferConfig :param config: The
:param client: The client to use when calling PutObject :param fileobj: The file to upload.
:param client: The client to use when calling PutObject :param fileobj: The file to upload.
Sets the exception on the future.
Set a result for the TransferFuture Implies that the TransferFuture succeeded. This will always set
Set an exception for the TransferFuture Implies the TransferFuture failed. :param exception: The exception that
Waits until TransferFuture is done and returns the result If the TransferFuture succeeded, it will
Cancels the TransferFuture :param msg: The message to attach to the cancellation :param exc_type: The
Submits a task to a provided executor :type executor: s3transfer.futures.BoundedExecutor :param executor: The executor to
Add a done callback to be invoked when transfer is done
Adds a callback to call upon failure
Announce that future is done running and run associated callbacks This will run any failure
Submit a task to complete :type task: s3transfer.tasks.Task :param task: The task to run __call__
Adds a callback to be completed once future is done :parm fn: A callable that
:param client: The client associated with the transfer manager :type config: s3transfer.manager.TransferConfig :param config: The
:param client: The client associated with the transfer manager :type config: s3transfer.manager.TransferConfig :param config: The
:param client: The client to use when calling PutObject :param copy_source: The CopySource parameter to
:param client: The client to use when calling PutObject :param copy_source: The CopySource parameter to
Convenience factory function to create from a filename. :type start_byte: int :param start_byte: The first
Upload a file to an S3 object. Variants have also been injected into S3 client,
Download an S3 object to a file. Variants have also been injected into S3 client,
:type transfer_future: s3transfer.futures.TransferFuture :param transfer_future: The transfer future associated with the transfer request that tasks
:param client: The client to use when calling CreateMultipartUpload :param bucket: The name of the
:param client: The client to use when calling CompleteMultipartUpload :param bucket: The name of the
Create a PythonFile object with specified file_path and content. If content is None then, it
Find functions with step decorator in parsed file
Get the arguments passed to step decorators converted to python objects.
Iterate over steps in the parsed file.
Find the ast node which contains the text.
Find the step with old_text and change it to new_text.The step function parameters are also
Create a PythonFile object with specified file_path and content. If content is None then, it
Find functions with step decorator in parsed file.
Get arguments passed to step decorators converted to python objects.
Iterate over steps in the parsed file.
Find the ast node which contains the text.
Find the step with old_text and change it to new_text. The step function parameters are
Select default parser for loading and refactoring steps. Passing `redbaron` as argument will select the
List team memberships for a team, by ID. This method supports Webex Teams's implementation of
Add someone to a team by Person ID or email address. Add someone to a
Update a team membership, by ID. Args: membershipId(basestring): The team membership ID. isModerator(bool): Set to
Delete a team membership, by ID. Args: membershipId(basestring): The team membership ID. Raises: TypeError: If
Get a cat fact from catfact.ninja and return it as a string. Functions for Soundhound,
Respond to inbound webhook JSON HTTP POSTs from Webex Teams.
List room memberships. By default, lists memberships for rooms to which the authenticated user belongs.
Delete a membership, by ID. Args: membershipId(basestring): The membership ID. Raises: TypeError: If the parameter
Convert a string (bytes, str or unicode) to unicode.
Convert a string (bytes, str or unicode) to bytes.
Verify that base_url specifies a protocol and network location.
Check to see if string is an validly-formatted web url.
Open the file and return an EncodableFile tuple.
Object is an instance of one of the acceptable types or None. Args: o: The
Creates a dict with the inputted items; pruning any that are `None`. Args: *dictionaries(dict): Dictionaries
Check response code against the expected code; raise ApiError. Checks the requests.response.status_code against the provided
Given a dictionary or JSON string; return a dictionary. Args: json_data(dict, str): Input JSON object.
strptime with the Webex Teams DateTime format as the default.
List rooms. By default, lists rooms to which the authenticated user belongs. This method supports
Create a room. The authenticated user is automatically added as a member of the room.
Update details for a room, by ID. Args: roomId(basestring): The room ID. title(basestring): A user-friendly
Delete a room. Args: roomId(basestring): The ID of the room to be deleted. Raises: TypeError:
List all licenses for a given organization. If no orgId is specified, the default is
Creation date and time in ISO8601 format.
Function Decorator: Containerize calls to a generator function. Args: generator_function(func): The generator function being containerized.
Processes incoming requests to the '/events' URI.
Attempt to get the access token from the environment. Try using the current and legacy
Create a webhook. Args: name(basestring): A user-friendly name for this webhook. targetUrl(basestring): The URL that
Update a webhook, by ID. Args: webhookId(basestring): The webhook ID. name(basestring): A user-friendly name for
Delete a webhook, by ID. Args: webhookId(basestring): The ID of the webhook to be deleted.
Remove max=null parameter from URL. Patch for Webex Teams Defect: 'next' URL returned in the
The timeout (seconds) for a single HTTP REST API request.
Enable or disable automatic rate-limit handling.
Update the HTTP headers used for requests in this session. Note: Updates provided by the
Given a relative or absolute URL; return an absolute URL. Args: url(basestring): A relative or
Abstract base method for making requests to the Webex Teams APIs. This base method: *
Sends a GET request. Args: url(basestring): The URL of the API endpoint. params(dict): The parameters
Return a generator that GETs and yields pages of data. Provides native support for RFC5988
Return a generator that GETs and yields individual JSON `items`. Yields individual `items` from Webex
Sends a PUT request. Args: url(basestring): The URL of the API endpoint. json: Data to
Sends a DELETE request. Args: url(basestring): The URL of the API endpoint. **kwargs: erc(int): The
Create a new guest issuer using the provided issuer token. This function returns a guest
Lists messages in a room. Each message will include content attachments if present. The list
Post a message, and optionally a attachment, to a room. The files parameter is a
Delete a message. Args: messageId(basestring): The ID of the message to be deleted. Raises: TypeError:
List people This method supports Webex Teams's implementation of RFC5988 Web Linking to provide pagination
Create a new user account for a given organization Only an admin can create a
Get a person's details, by ID. Args: personId(basestring): The ID of the person to be
Update details for a person, by ID. Only an admin can update a person's details.
Remove a person from the system. Only an admin can remove a person. Args: personId(basestring):
Get the details of the person accessing the API. Raises: ApiError: If the Webex Teams
List all roles. Args: **request_parameters: Additional request parameters (provides support for parameters that may be
List teams to which the authenticated user belongs. This method supports Webex Teams's implementation of
Create a team. The authenticated user is automatically added as a member of the team.
Update details for a team, by ID. Args: teamId(basestring): The team ID. name(basestring): A user-friendly
Delete a team. Args: teamId(basestring): The ID of the team to be deleted. Raises: TypeError:
List events. List events in your organization. Several query parameters are available to filter the
Serialize data to an frozen tuple.
Exchange an Authorization Code for an Access Token. Exchange an Authorization Code for an Access
The date and time of the person's last activity.
Respond to inbound webhook JSON HTTP POST from Webex Teams.
Get the ngrok public HTTP URL from the local client API.
Find a webhook by name.
Create a Webex Teams webhook pointing to the public ngrok URL.
Delete previous webhooks. If local ngrok tunnel, create a webhook.
Since there isn't a real sensor connected, read() creates random data.
Output DSMR data to console.
Read complete DSMR telegram's from the serial interface and parse it into CosemObject's and MbusObject's
Read complete DSMR telegram's from the serial interface and parse it into CosemObject's and MbusObject's.
Creates a DSMR asyncio protocol.
Creates a DSMR asyncio protocol coroutine using serial port.
Creates a DSMR asyncio protocol coroutine using TCP connection.
Add incoming data to buffer.
Stop when connection is lost.
Send off parsed telegram to handling callback.
Parse telegram from string to dict. The telegram str type makes python 2.x integration easier.
:param str telegram: :raises ParseError: :raises InvalidChecksumError:
Remove telegram from buffer and incomplete data preceding it. This is easier than validating the
Get the version of the package from the given file by executing it and extracting
Given a list of range specifiers for python, ensure compatibility.
Find all of the packages.
Create a command class with the given optional prerelease class. Parameters ---------- prerelease_cmd: (name, Command)
Create a command that calls the given function.
Echo a command before running it. Defaults to repo as cwd
Gets the newest/oldest mtime for all files in a directory.
Return a Command that checks that certain files exist. Raises a ValueError if any of
Wrap a setup command Parameters ---------- cmds: list(str) The names of the other commands to
Get a package_data and data_files handler command.
Expand data file specs into valid data files metadata. Parameters ---------- data_specs: list of tuples
Expand file patterns to a list of `package_data` paths. Parameters ----------- root: str The relative
Translate and compile a glob pattern to a regular expression matcher.
Iterate over all the parts of a path. Splits path recursively with os.path.split().
Translate a glob PATTERN to a regular expression.
Join translated glob pattern parts. This is different from a simple join, as care need
Translate a glob PATTERN PART to a regular expression.
Send DDL to truncate the specified `table` :Parameters: - `table`: an instance of a :py:class:`mysql2pgsql.lib.mysql_reader.MysqlReader.Table`
Send DDL to create the specified `table` :Parameters: - `table`: an instance of a :py:class:`mysql2pgsql.lib.mysql_reader.MysqlReader.Table`
Send DDL to create the specified `table` indexes :Parameters: - `table`: an instance of a
Send DDL to create the specified `table` triggers :Parameters: - `table`: an instance of a
Send DDL to create the specified `table` constraints :Parameters: - `table`: an instance of a
Write the contents of `table` :Parameters: - `table`: an instance of a :py:class:`mysql2pgsql.lib.mysql_reader.MysqlReader.Table` object that
Examines row data from MySQL and alters the values when necessary to be compatible with
Write DDL to truncate the specified `table` :Parameters: - `table`: an instance of a :py:class:`mysql2pgsql.lib.mysql_reader.MysqlReader.Table`
Write DDL to create the specified `table`. :Parameters: - `table`: an instance of a :py:class:`mysql2pgsql.lib.mysql_reader.MysqlReader.Table`
Write DDL of `table` indexes to the output file :Parameters: - `table`: an instance of
Write DDL of `table` constraints to the output file :Parameters: - `table`: an instance of
Write TRIGGERs existing on `table` to the output file :Parameters: - `table`: an instance of
Write the data contents of `table` to the output file. :Parameters: - `table`: an instance
info face="Haettenschweiler" size=60 bold=0 italic=0 charset="" unicode=0 stretchH=100 smooth=1 aa=1 padding=0,0,0,0 spacing=2,2 common lineHeight=64 base=53
struct CCZHeader { unsigned char sig[4]; // signature. Should be 'CCZ!' 4 bytes unsigned short
Return an approximate number of queued tasks in the queue.
Enqueue task with specified data.
Retrieve a task handler from the queue. If block is True, this function will block
This method is a good one to extend if you want to create a queue
Designed to be passed as the default kwarg in simplejson.dumps. Serializes dates and datetimes to
Closes the existing database connection and re-opens it.
Query the connection and return the rows (or affected rows if not a select query).
Returns the first row returned for the given query.
Executes the given query, returning the lastrowid from the query.
Executes the given query, returning the lastrowid from the query.
Returns a new connection to the database.
Run a set of InsertWorkers and record their performance.
`agg` should be (host, port) Returns a live connection from the connection pool
Returns an aggregator connection.
Used for development only
Returns the number of connections cached by the pool.
OperationalError's are emitted by the _mysql library for almost every error code emitted by MySQL.
Build a simple expression ready to be added onto another query. >>> simple_expression(joiner=' AND ',
Build a update query. >>> update('foo_table', a=5, b=2) "UPDATE `foo_table` SET `a`=%(_QB_a)s, `b`=%(_QB_b)s", { '_QB_a':
Notify the manager that this lock is still active.
Release the lock.
Connect to the database specified
Initialize the required tables in the database
Destroy the SQLStepQueue tables in the database
Returns True if the tables have been setup, False otherwise
Check to see if we are still active.
Notify the queue that this task is still active.
Start a step.
Stop a step.
load steps -> basically load all the datetime isoformats into datetimes
Disconnects from the websocket connection and joins the Thread. :return:
Issues a reconnection by setting the reconnect_required event. :return:
Creates a websocket connection. :return:
Handles and passes received data to the appropriate handlers. :return:
Stops ping, pong and connection timers. :return:
Sends a ping message to the API and starts pong timers. :return:
Checks if a Pong message was received. :return:
Sends the given Payload to the API via the websocket connection. :param kwargs: payload paarameters
Passes data up to the client via a Queue(). :param event: :param data: :param args:
Unpauses the connection. Send a message up to client that he should re-subscribe to all
Distributes system messages to the appropriate handler. System messages include everything that arrives as a
Handles responses to (un)subscribe and conf commands. Passes data up to client. :param data: :param
Handle INFO messages from the API and issues relevant actions. :param data: :param ts:
Handle Error messages and log them accordingly. :param data: :param ts:
Handles data messages by passing them up to the client. :param data: :param ts: :return:
Resubscribes to all channels found in self.channel_configs. :param soft: if True, unsubscribes first. :return: None
Set sentinel for run() method and join thread. :param timeout: :return:
Main routine. :return:
Handles responses to subscribe() commands. Registers a channel id with the client and assigns a
Handles responses to unsubscribe() commands. Removes a channel id from the client. :param dtype: :param
Handles authentication responses. :param dtype: :param data: :param ts: :return:
Handles configuration messages. :param dtype: :param data: :param ts: :return:
Updates the timestamp for the given channel id. :param chan_id: :param ts: :return:
Handles Account related data. translation table for channel names: Data Channels os - Orders hos
Adds received ticker data to self.tickers dict, filed under its channel id. :param dtype: :param
Updates the order book stored in self.books[chan_id]. :param dtype: :param data: :param ts: :return:
Updates the raw order books stored in self.raw_books[chan_id]. :param dtype: :param data: :param ts: :return:
Files trades in self._trades[chan_id]. :param dtype: :param data: :param ts: :return:
Stores OHLC data received via wss in self.candles[chan_id]. :param dtype: :param data: :param ts: :return:
Reset the client. :return:
Return a queue containing all received candles data. :param pair: str, Symbol pair to request
Send configuration to websocket server :param decimals_as_strings: bool, turn on/off decimals as strings :param ts_as_dates:
Subscribe to the passed pair's ticker channel. :param pair: str, Symbol pair to request data
Unsubscribe to the passed pair's ticker channel. :param pair: str, Symbol pair to request data
Subscribe to the passed pair's order book channel. :param pair: str, Symbol pair to request
Unsubscribe to the passed pair's order book channel. :param pair: str, Symbol pair to request
Subscribe to the passed pair's raw order book channel. :param pair: str, Symbol pair to
Unsubscribe to the passed pair's raw order book channel. :param pair: str, Symbol pair to
Subscribe to the passed pair's trades channel. :param pair: str, Symbol pair to request data
Unsubscribe to the passed pair's trades channel. :param pair: str, Symbol pair to request data
Subscribe to the passed pair's OHLC data channel. :param pair: str, Symbol pair to request
Unsubscribe to the passed pair's OHLC data channel. :param timeframe: str, {1m, 5m, 15m, 30m,
Authenticate with the Bitfinex API. :return:
Cancel one or multiple orders via Websocket. :param multi: bool, whether order_settings contains settings for
Parse environment variables into a Python dictionary suitable for passing to the device client constructor
Parse a yaml configuration file into a Python dictionary suitable for passing to the device
Internal callback for device command messages, parses source device from topic string and passes the
Internal callback for gateway command messages, parses source device from topic string and passes the
Internal callback for gateway notification messages, parses source device from topic string and passes the
Gets the list of Historian connectors, they are used to configure the Watson IoT Platform
Create a connector for the organization in the Watson IoT Platform. The connector must reference
Updates the connector with the specified uuid. if description is empty, the existing description will
Gets the list of services that the Watson IoT Platform can connect to. The list
Create a new external service. The service must include all of the details required to
Updates the service with the specified id. if description is empty, the existing description will
Register one or more new device types, each request can contain a maximum of 512KB.
Publish an event to Watson IoT Platform. # Parameters event (string): Name of this event
Retrieve the organization-specific status of each of the services offered by the IBM Watson IoT
Register one or more new devices, each request can contain a maximum of 512KB. The
Update an existing device
Delete one or more devices, each request can contain a maximum of 512Kb It accepts
Iterate through all Connectors
List all device management extension packages
Create a new device management extension package In case of failure it throws APIException
Delete a device management extension package It accepts bundleId (string) as parameters In case of
Update a device management extension package It accepts bundleId (string) as parameters In case of
Registers a new thing. It accepts thingTypeId (string), thingId (string), name (string), description (string), aggregatedObjects
Gets thing details. It accepts thingTypeId (string), thingId (string) In case of failure it throws
Gets details for multiple things of a type It accepts thingTypeId (string) and parameters In
Delete an existing thing. It accepts thingTypeId (string) and thingId (string) as parameters In case
Creates a thing type. It accepts thingTypeId (string), name (string), description (string), schemaId(string) and metadata(dict)
Updates a thing type. It accepts thingTypeId (string), name (string), description (string), schemaId (string) and
Retrieves all existing draft thing types. It accepts accepts an optional query parameters (Dictionary) In
Retrieves all existing draft thing types. It accepts accepts an optional query parameters (Dictionary) In
Deletes a Thing type. It accepts thingTypeId (string) as the parameter In case of failure
Create a schema for the org. Returns: schemaId (string), response (object). Throws APIException on failure
Delete a schema. Parameter: schemaId (string). Throws APIException on failure.
Update a schema. Throws APIException on failure.
Get the content for a schema. Parameters: schemaId (string), draft (boolean). Throws APIException on failure.
Updates the content for a schema. Parameters: schemaId (string). Throws APIException on failure.
Updates an event type. Parameters: eventTypeId (string), name (string), schemaId (string), description (string, optional). Throws
Deletes an event type. Parameters: eventTypeId (string). Throws APIException on failure.
Gets an event type. Parameters: eventTypeId (string), draft (boolean). Throws APIException on failure.
Create a physical interface. Parameters: - name (string) - description (string, optional) Returns: physical interface
Update a physical interface. Parameters: - physicalInterfaceId (string) - name (string) - schemaId (string) -
Delete a physical interface. Parameters: physicalInterfaceId (string). Throws APIException on failure.
Get a physical interface. Parameters: - physicalInterfaceId (string) - draft (boolean) Throws APIException on failure.
Create an event mapping for a physical interface. Parameters: physicalInterfaceId (string) - value returned by
Delete an event mapping from a physical interface. Parameters: physicalInterfaceId (string), eventId (string). Throws APIException
Get all logical interfaces for an org. Parameters: draft (boolean). Returns: - list of ids
Updates a logical interface. Parameters: logicalInterfaceId (string), name (string), schemaId (string), description (string, optional). Throws
Deletes a logical interface. Parameters: logicalInterfaceId (string). Throws APIException on failure.
Gets a logical interface. Parameters: - logicalInterfaceId (string) - draft (boolean) Throws APIException on failure.
Gets a rule for a logical interface. Parameters: - logicalInterfaceId (string) - ruleId (string) -
Adds a rule to a logical interface. Parameters: - logicalInterfaceId (string) - name (string) -
Updates a rule on a logical interface.. Parameters: - logicalInterfaceId (string), - ruleId (string) -
Deletes a rule from a logical interface Parameters: - logicalInterfaceId (string), - ruleId (string) Returns:
Adds a physical interface to a device type. Parameters: - typeId (string) - the device
Gets the physical interface associated with a device type. Parameters: - typeId (string) - the
Get all logical interfaces for a device type. Parameters: - typeId (string) - draft (boolean)
Adds a logical interface to a device type. Parameters: - typeId (string) - the device
Removes a logical interface from a device type. Parameters: - typeId (string) - the device
Get all the mappings for a device type. Parameters: - typeId (string) - the device
Gets the mappings for a logical interface from a device type. Parameters: - typeId (string)
Validate the device type configuration. Parameters: - typeId (string) - the platform device type Throws
Validate the logical interface configuration. Parameters: - logicalInterfaceId (string) Throws APIException on failure.
Gets the state for a logical interface for a device. Parameters: - typeId (string) -
Gets the state for a logical interface for a thing. Parameters: - thingTypeId (string) -
Perform an operation against the thing state for a logical interface Parameters: - thingTypeId (string)
Get all logical interfaces for a thing type. Parameters: - thingTypeId (string) - draft (boolean)
Adds a logical interface to a thing type. Parameters: - thingTypeId (string) - the thing
Removes a logical interface from a thing type. Parameters: - thingTypeId (string) - the thing
Get all the mappings for a thing type. Parameters: - thingTypeId (string) - the thing
Gets the mappings for a logical interface from a thing type. Parameters: - thingTypeId (string)
Add mappings for a thing type. Parameters: - thingTypeId (string) - the thing type -
Connect the client to IBM Watson IoT Platform using the underlying Paho MQTT client #
Disconnect the client from IBM Watson IoT Platform
Called when the client has log information. See [paho.mqtt.python#on_log](https://github.com/eclipse/paho.mqtt.python#on_log) for more information # Parameters mqttc
Called when the broker responds to our connection request. The value of rc determines success
Called when the client disconnects from IBM Watson IoT Platform. See [paho.mqtt.python#on_disconnect](https://github.com/eclipse/paho.mqtt.python#on_disconnect) for more information
Called when a message from the client has been successfully sent to IBM Watson IoT
Subscribe to device event messages # Parameters typeId (string): typeId for the subscription, optional. Defaults
Subscribe to device status messages # Parameters typeId (string): typeId for the subscription, optional. Defaults
Subscribe to device command messages # Parameters typeId (string): typeId for the subscription, optional. Defaults
Publish a command to a device # Parameters typeId (string) : The type of the
Internal callback for messages that have not been handled by any of the specific internal
Internal callback for device event messages, parses source device from topic string and passes the
Internal callback for device status messages, parses source device from topic string and passes the
Internal callback for application command messages, parses source application from topic string and passes the
Parse environment variables into a Python dictionary suitable for passing to the device client constructor
Retrieves the last cached message for specified event from a specific device.
Retrieves a list of the last cached message for all events from a specific device.
Retrieve bulk devices It accepts accepts a list of parameters In case of failure it
Convert a generic JSON message * The entire message is converted to JSON and treated
The decoder understands the comma-seperated format produced by the encoder and allocates the two values
Retrieve the organization-specific status of each of the services offered by the IBM Watson IoT
Initiates a device management request, such as reboot. In case of failure it throws APIException
Clears the status of a device management request. You can use this operation to clear
Gets details of a device management request. It accepts requestId (string) as parameters In case
Get a list of device management request device statuses. Get an individual device mangaement request
Force a flush of the index to storage. Renders index inaccessible.
Inserts an item into the index with the given coordinates. :param id: long integer A
Return number of objects that intersect the given coordinates. :param coordinates: sequence or array This
Return ids or objects in the index that intersect the given coordinates. :param coordinates: sequence
Returns the ``k``-nearest objects to the given coordinates. :param coordinates: sequence or array This may
Returns the bounds of the index :param coordinate_interleaved: If True, the coordinates are turned in
Deletes items from the index with the given ``'id'`` within the specified coordinates. :param id:
[xmin, ymin, xmax, ymax] => [xmin, xmax, ymin, ymax] >>> Index.deinterleave([0, 10, 1, 11]) [0,
[xmin, xmax, ymin, ymax, zmin, zmax] => [xmin, ymin, zmin, xmax, ymax, zmax] >>> Index.interleave([0,
This function is used to instantiate the index given an iterable stream of data.
please override
please override
please override
please override
please override
Must be overridden. Must return a string with the loaded data.
Inserts an item into the index with the given coordinates. :param obj: object Any object.
Return ids or objects in the index that intersect the given coordinates. :param coordinates: sequence
Deletes the item from the container within the specified coordinates. :param obj: object Any object.
Error checking for Error calls
Error checking for void* returns
Error checking for void* returns that might be empty with no error
Attempt an import of the specified application
Initializes the Flask application with Common.
Serves the Flask application.
For djangorestframework <=2.3.14
Return a PIL Image instance cropped from `image`. Image has an aspect ratio provided by
Return a BytesIO instance of `image` cropped to `width` and `height`. Cropping will first reduce
Return a BytesIO instance of `image` that fits in a bounding box. Bounding box dimensions
Return a BytesIO instance of `image` with inverted colors.
Ensure data is prepped properly before handing off to ImageField.
Process the field's placeholder image. Ensures the placeholder image has been saved to the same
Return field's value just before saving.
Update field's ppoi field, if defined. This method is hooked up this field's pre_save method
Handle data sent from MultiValueField forms that set ppoi values. `instance`: The model instance that
Return a formfield.
Prepare field for serialization.
Prints out a Yum-style progress bar (via sys.stdout.write). `start`: The 'current' value of the progress
Returns a 2-tuple: 0: bool signifying whether the image was successfully pre-warmed 1: The url
Returns a 2-tuple: [0]: Number of images successfully pre-warmed [1]: A list of paths on
Discover versatileimagefield.py modules. Iterate over django.apps.get_app_configs() and discover versatileimagefield.py modules.
Register a new SizedImage subclass (`sizedimage_cls`). To be used via the attribute (`attr_name`).
Unregister the SizedImage subclass currently assigned to `attr_name`. If a SizedImage subclass isn't already registered
Register a new FilteredImage subclass (`filterimage_cls`). To be used via the attribute (filters.`attr_name`)
Unregister the FilteredImage subclass currently assigned to attr_name. If a FilteredImage subclass isn't already registered
Return the appropriate URL. URL is constructed based on these field conditions: * If empty
Primary Point of Interest (ppoi) setter.
Build the filters and sizers for a field.
Return the location where filtered images are stored.
Return the location where sized images are stored.
Return the location where filtered + sized images are stored.
Delete files in `root_folder` which match `regex` before file ext. Example values: * root_folder =
Validates that a tuple (`value`)... ...has a len of exactly 2 ...both values are floats/ints
Converts, validates and optionally returns a string with formatting: '%(x_axis)dx%(y_axis)d' into a two position tuple.
Preprocess an image. An API hook for image pre-processing. Calls any image format specific pre-processors
Receive a PIL Image instance of a GIF and return 2-tuple. Args: * [0]: Original
Receive a PIL Image instance of a JPEG and returns 2-tuple. Args: * [0]: Image
Return a PIL Image instance stored at `path_to_image`.
Save an image to self.storage at `save_path`. Arguments: `imagefile`: Raw image data, typically a BytesIO
Return PPOI value as a string.
Create a resized image. `path_to_image`: The path to the image with the media directory to
Render the widget as an HTML string. Overridden here to support Django < 1.11.
Get the context to render this widget with.
Build an attribute dictionary.
Return the 'resized filename' (according to `width`, `height` and `filename_key`) in the following format: `filename`-`filename_key`-`width`x`height`.ext
Return a `path_to_image` location on `storage` as dictated by `width`, `height` and `filename_key`
Return the 'filtered filename' (according to `filename_key`) in the following format: `filename`__`filename_key`__.ext
Return the 'filtered path'
Validate a list of size keys. `sizes`: An iterable of 2-tuples, both strings. Example: [
Build a URL from `image_key`.
Return a dictionary of urls corresponding to size_set - `image_instance`: A VersatileImageFieldFile - `size_set`: An
Retrieve a validated and prepped Rendition Key Set from settings.VERSATILEIMAGEFIELD_RENDITION_KEY_SETS
Takes a raw `Instruction` and translates it into a human readable text representation. As of
Takes a `FunctionBody` and optionally a `FunctionType`, yielding the string representation of the function line
Decodes raw bytecode, yielding `Instruction`s.
Decodes raw WASM modules, yielding `ModuleFragment`s.
Deprecates a function, printing a warning on the first usage.
Send an :class:`~panoramisk.actions.Action` to the server: :param action: an Action or dict with action name
Send a :class:`~panoramisk.actions.Command` to the server:: manager = Manager() resp = manager.send_command('http show status') Return
Send a :class:`~panoramisk.actions.Command` to the server: :param channel: Channel name where to launch command. Ex:
connect to the server
register an event. See :class:`~panoramisk.message.Message`: .. code-block:: python >>> def callback(manager, event): ... print(manager, event)
Close the connection
Send a command for FastAGI request: :param command: Command to launch on FastAGI request. Ex:
Parse read a response from the AGI and parse it. :return dict: The AGI response
Add a route for FastAGI requests: :param path: URI to answer. Ex: 'calls/start' :type path:
Delete a route for FastAGI requests: :param path: URI to answer. Ex: 'calls/start' :type path:
AsyncIO coroutine handler to launch socket listening. :Example: :: @asyncio.coroutine def start(request): print('Receive a FastAGI
Parse AGI results using Regular expression. AGI Result examples:: 100 result=0 Trying... 200 result=0 200
Check the AGI code and return a dict to help on error handling.
Mostly used for unit testing. Allow to use a static uuid and reset all counter
Mostly used for debugging
return True if a response status is Success or Follows: .. code-block:: python >>> resp
Convert a multi values header to a case-insensitive dict: .. code-block:: python >>> resp =
Run a setup script in a somewhat controlled environment, and return the Distribution instance that
Returns data from a package directory. 'path' should be an absolute path.
Get primary key properties for a SQLAlchemy model. :param model: SQLAlchemy model class
Deserialize a serialized value to a model instance. If the parent schema is transient, create
Retrieve the related object from an existing instance in the DB. :param query: A SQLAlchemy
Add keyword arguments to kwargs (in-place) based on the passed in `Column <sqlalchemy.schema.Column>`.
Add keyword arguments to kwargs (in-place) based on the passed in relationship `Property`.
Updates declared fields with fields converted from the SQLAlchemy model passed as the `model` class
Retrieve an existing record by primary key(s). If the schema instance is transient, return None.
Deserialize data to an instance of the model. Update an existing row if specified in
Deserialize data to internal representation. :param session: Optional SQLAlchemy session. :param instance: Optional existing instance
Split serialized attrs to ensure association proxies are passed separately. This is necessary for Python
Deletes old stellar tables that are not used anymore
Takes a snapshot of the database
Returns a list of snapshots
Restores the database from a snapshot
Removes a snapshot
Renames a snapshot
Replaces a snapshot
Initializes Stellar configuration.
Updates indexes after each epoch for shuffling
Defines the default function for cleaning text. This function operates over a list.
Apply function to list of elements. Automatically determines the chunk size.
Generate a function that will clean and tokenize text.
Combine the cleaner and tokenizer.
Apply cleaner -> tokenizer.
Analyze document length statistics for padding strategy
TODO: update docs Apply cleaner and tokenzier to raw data and build vocabulary. Parameters ----------
See token counts as pandas dataframe
Apply cleaner and tokenzier to raw data, build vocabulary and return transfomred dataset that is
Transform List of documents into List[List[int]] If transforming a large number of documents consider using
Transform List of documents into List[List[int]]. Uses process based threading on all available cores. If
Vectorize and apply padding on a set of tokenized doucments ex: [['hello, 'world'], ['goodbye', 'now']]
Transforms tokenized text to a sequence of integers. Only top "num_words" most frequent words will
Transforms tokenized text to a sequence of integers. Only top "num_words" most frequent words will
Perform param type mapping This requires a bit of logic since this isn't standardized. If
Parse the conduit.query json dict response This performs the logic of parsing the non-standard params
The inverse of this bidict type, i.e. one with *_fwdm_cls* and *_invm_cls* swapped.
The inverse of this bidict. *See also* :attr:`inv`
Check *key* and *val* for any duplication in self. Handle any duplication as per the
Update, rolling back on failure.
A shallow copy.
A shallow copy of this ordered bidict.
Return whether (key, val) duplicates an existing item.
Order-sensitive equality check. *See also* :ref:`eq-order-insensitive`
r"""Create a new subclass of *base_type* with custom accessors. Analagous to :func:`collections.namedtuple`. The new class's
Create a named bidict with the indicated arguments and return an empty instance. Used to
Yield the items from the positional argument (if given) and then any from *kw*. :raises
Yield the inverse items of the provided object. If *arg* has a :func:`callable` ``__inverted__`` attribute,
Remove all items.
u"""*x.popitem() → (k, v)* Remove and return the most recently added item as a (key,
Move an existing key to the beginning or end of this ordered bidict. The item
Associate *key* with *val* with the specified duplication policies. If *on_dup_kv* is ``None``, the *on_dup_val*
Associate *key* with *val* unconditionally. Replace any existing mappings containing key *key* or value *val*
u"""*x.pop(k[, d]) → v* Remove specified key and return the corresponding value. :raises KeyError: if
u"""*x.popitem() → (k, v)* Remove and return some item as a (key, value) pair. :raises
Like :meth:`putall` with default duplication policies.
Like a bulk :meth:`forceput`.
Like a bulk :meth:`put`. If one of the given items causes an exception to be
Create a new temporary file and write some initial text to it. :param text: the
returns a list of CarddavObject objects :param address_books: list of selected address books :type address_books:
Get a list of contacts from one or more address books. :param address_books: the address
Merge the parsed arguments from argparse into the config object. :param args: the parsed command
Load all address books with the given names from the config. :param names: the address
Prepare the search query string from the given command line args. Each address book can
TODO: Docstring for generate_contact_list. :param config: the config object to use :type config: config.Config :param
Create a new contact. :param selected_address_books: a list of addressbooks that were selected on the
Add a new email address to contacts, creating new contacts if necessary. :param input_from_stdin_or_file: the
Print birthday contact table. :param vcard_list: the vcards to search for matching entries which should
Print a phone application friendly contact table. :param search_terms: used as search term to filter
Print a contact table. with all postal / mailing addresses :param search_terms: used as search
Print a mail client friendly contacts table that is compatible with the default format used
Print a user friendly contacts table. :param vcard_list: the vcards to print :type vcard_list: list
Modify a contact in an external editor. :param selected_vcard: the contact to modify :type selected_vcard:
Remove a contact from the addressbook. :param selected_vcard: the contact to delete :type selected_vcard: carddav_object.CarddavObject
Open the vcard file for a contact in an external editor. :param selected_vcard: the contact
Merge two contacts into one. :param vcard_list: the vcards from which to choose contacts for
Copy or move a contact to a different address book. :action: the string "copy" or
Parse the command line arguments and return the namespace that was creates by argparse.ArgumentParser.parse_args(). :returns:
Find the name of the action for the supplied alias. If no action is asociated
Convert the named field to bool. The current value should be one of the strings
Use this to create a new and empty contact.
Use this if you want to create a new contact from an existing .vcf file.
Use this if you want to create a new contact from user input.
Use this if you want to clone an existing contact and replace its data with
Get some part of the "N" entry in the vCard as a list :param part:
:rtype: str
:rtype: str
:returns: list of organisations, sorted alphabetically :rtype: list(list(str))
:rtype: list(list(str))
:rtype: list(list(str))
: returns: dict of type and phone number list :rtype: dict(str, list(str))
: returns: dict of type and email address list :rtype: dict(str, list(str))
: returns: dict of type and post address list :rtype: dict(str, list(dict(str,list|str)))
:rtype: list(str) or list(list(str))
categories variable must be a list
:rtype: list(list(str))
:rtype: list(list(str))
:rtype: dict(str, list(str))
:rtype: list(list(str))
:returns: contacts anniversary or None if not available :rtype: datetime.datetime or str
:returns: contacts birthday or None if not available :rtype: datetime.datetime or str
get list of types for phone number, email or post address :param object: vcard class
Parse type value of phone numbers, email and post addresses. :param types: list of type
converts list to string recursively so that nested lists are supported :param input: a list
Convert string to date object. :param input: the date string to parse :type input: str
converts a value list into yaml syntax :param name: name of object (example: phone) :type
converts user input into vcard compatible data structures :param name: object name, only required for
Calculate the minimum length of initial substrings of uid1 and uid2 for them to be
Search in all fields for contacts matching query. :param query: the query to search for
Search in the name filed for contacts matching query. :param query: the query to search
Search for contacts with a matching uid. :param query: the query to search for :type
Search this address book for contacts matching the query. The method can be one of
Create a dictionary of shortend UIDs for all contacts. All arguments are only used if
Get the shortend UID for the given UID. :param uid: the full UID to shorten
Find all vcard files inside this address book. If a search string is given only
Load all vcard files in this address book from disk. If a search string is
Get one of the backing abdress books by its name, :param name: the name of
This function is used in sys command (when user want to find a specific syscall)
Initialize the dictionary of architectures for assembling via keystone
Initialize the dictionary of architectures for disassembling via capstone
An `inspect.getargspec` with a relaxed sanity check to support Cython. Motivation: A Cython-compiled function is
Parses given list of arguments using given parser, calls the relevant function and prints the
Assumes that `function` is a callable. Tries different approaches to call it (with `namespace_obj` or
A wrapper for :func:`dispatch` that creates a one-command parser. Uses :attr:`PARSER_FORMATTER`. This:: dispatch_command(foo) ...is a
A wrapper for :func:`dispatch` that creates a parser, adds commands to the parser and dispatches
Prompts user for input. Correctly handles prompt message encoding.
Encodes given value so it can be written to given file object. Value may be
Writes given line to given output file. See :func:`encode_output` for details.
Adds support for shell completion via argcomplete_ by patching given `argparse.ArgumentParser` (sub)class. If completion is
Wrapper for :meth:`argparse.ArgumentParser.parse_args`. If `namespace` is not defined, :class:`argh.dispatching.ArghNamespace` is used. This is required for
This method is copied verbatim from ArgumentDefaultsHelpFormatter with a couple of lines added just before
Adds types, actions, etc. to given argument specification. For example, ``default=3`` implies ``type=int``. :param arg:
Sets default command (i.e. a function) for given parser. If `parser.description` is empty and the
Adds given functions as commands to given parser. :param parser: an :class:`argparse.ArgumentParser` instance. :param functions:
A wrapper for :func:`add_commands`. These examples are equivalent:: add_commands(parser, [get, put], namespace='db', namespace_kwargs={ 'title': 'database
Returns the :class:`argparse._SubParsersAction` instance for given :class:`ArgumentParser` instance as would have been returned by :meth:`ArgumentParser.add_subparsers`.
Returns argument specification for given function. Omits special arguments of instance methods (`self`) and static
Sets given string as command name instead of the function name. The string is used
Defines alternative command name(s) for given function (along with its original name). Usage:: @aliases('co', 'check')
Declares an argument for given function. Does not register the function anywhere, nor does it
Decorator. Wraps given exceptions into :class:`~argh.exceptions.CommandError`. Usage:: @wrap_errors([AssertionError]) def foo(x=None, y=None): assert x or y,
A shortcut for typical confirmation prompt. :param action: a string describing the action, e.g. "Apply
Select the provided column names from the model, do not return an entity, do not
Copy the Query object, optionally replacing the filters, order_by, or limit information on the copy.
Only columns/attributes that have been specified as having an index with the ``index=True`` option on
When provided with keyword arguments of the form ``col=prefix``, this will limit the entities returned
When provided with keyword arguments of the form ``col=suffix``, this will limit the entities returned
When provided with keyword arguments of the form ``col=pattern``, this will limit the entities returned
When provided with a column name, will sort the results of your query:: # returns
Will return the total count of the objects that match the specified filters.:: # counts
Iterate over the results of your query instead of getting them all with `.all()`. Will
This will execute the query, returning the key where a ZSET of your results will
Returns only the first result from the query, if any.
Will delete the entities that match at the time the query is executed. Used like::
This function handles all on_delete semantics defined on OneToMany columns. This function only exists because
Performs the actual prefix, suffix, and pattern match operations.
Estimates the total work necessary to calculate the prefix match over the given index with
Search for model ids that match the provided filters. Arguments: * *filters* - A list
Returns the count of the items that match the provided filters. For the meaning of
Tries to get the _conn attribute from a model. Barring that, gets the global default
This is a basic full-text index keygen function. Words are lowercased, split by whitespace, and
This is a basic case-sensitive "sorted order" index keygen function for strings. This will return
This is a basic "equality" index keygen, primarily meant to be used for things like::
This utility function will iterate over all entities of a provided model, refreshing their indices.
This utility function will clean out old index data that was accidentally left during item
This utility function will print the progress of a passed iterator job as started by
Borrowed/modified from my book, Redis in Action: https://github.com/josiahcarlson/redis-in-action/blob/master/python/ch11_listing_source.py Used for Lua scripting support when writing
Useful when you want exclusive access to an entity across all writers.:: # example import
Adds an entity to the session.
Forgets about an entity (automatically called when an entity is deleted). Call this to ensure
Fetches an entity from the session based on primary key.
Call ``.save()`` on all modified entities in the session. Use when you want to flush
Call ``.save()`` on all modified entities in the session. Also forgets all known entities in
This method is an alternate API for saving many entities (possibly not tracked by the
This method offers the ability to delete multiple entities in a single round trip to
This method is an alternate API for refreshing many entities (possibly not tracked by the
This method is an alternate API for refreshing all entities tracked by the session. You
... Actually write data to Redis. This is an internal detail. Please don't call me
Saves the current entity to Redis. Will only save changed data by default, but you
Deletes the entity immediately. Also performs any on_delete operations specified as part of column definitions.
Creates a shallow copy of the given entity (any entities that can be retrieved from
Will fetch one or more entities of this type from the session or Redis. Used
This method offers a simple query method for fetching entities of this type via attribute
Updates multiple attributes in a model. If ``args`` are provided, this method will assign attributes
Replacement for pickle.dump() using _LokyPickler.
Attach a reducer function to a given type in the dispatch table.
Construct or retrieve a semaphore with the given name If value is None, try to
Return the number of CPUs the current process can use. The returned number of CPUs
Returns a queue object
Returns a queue object
Iterates over zip()ed iterables in chunks.
Safely send back the given result or exception
Evaluates calls from call_queue and places the results in result_queue. This worker is run in
Fills call_queue with _WorkItems from pending_work_items. This function never blocks. Args: pending_work_items: A dict mapping
Manages the communication between this process and the worker processes. This function is run in
ensures all workers and management thread are running
Returns an iterator equivalent to map(fn, iter). Args: fn: A callable that will take as
Wrapper for non-picklable object to use cloudpickle to serialize them. Note that this wrapper tends
Spawn a server process for this manager object
Return a wrapper for an fd.
Return the current ReusableExectutor instance. Start a new instance if it has not been started
Wait for the cache to be empty before resizing the pool.
Return info about parent needed by child to unpickle process object
Try to get current process ready to unpickle process object
Wait till an object in object_list is ready/readable. Returns list of those objects which are
Close all the file descriptors except those in keep_fds.
Terminate a process and its descendants.
Recursively kill the descendants of a process before killing it.
Return a formated string with the exitcodes of terminated workers. If necessary, wait (up to
Format a list of exit code with names of the signals if possible
Run semaphore tracker.
Make sure that semaphore tracker process is running. This can be run from any process.
A simple event processor that prints out events.
Program counter.
Almost a copy of code.interact Closely emulate the interactive Python interpreter. This is a backwards
Execute a code object. When an exception occurs, self.showtraceback() is called to display a traceback.
Adjust stack frame by pos positions. If absolute_pos then pos is an absolute number. Otherwise
Parses arguments for the "list" command and returns the tuple: (filename, first line number, last
Use this to set where to read from. Set opts['try_lineedit'] if you want this input
Read a line of input. EOFError will be raised on EOF. Note: some user interfaces
Run debugger on string `cmd' using builtin function eval and if that builtin exec. Arguments
Run debugger on string `cmd' which will executed via the builtin function exec. Arguments `globals_'
Run debugger on function call: `func(*args, **kwds)' See also `run_eval' if what you want to
Run debugger on string `expr' which will executed via the built-in Python function: eval; `globals_'
Run debugger on Python script `filename'. The script may inspect sys.argv for command arguments. `globals_'
Split a command line's arguments in a shell-like manner returned as a list of lists.
Return a stack of frames which the debugger will use for in showing backtraces and
Run each function in `hooks' with args
Print out a source location , e.g. the first line in line in: (/tmp.py:2 @21):
Show where we are. GUI's and front-end interfaces often use this to update displays. So
command event processor: reading a commands do something with them.
Remove memory of state variables set in the command processor
Like cmdfns.get_an_int(), but if there's a stack frame use that in evaluation.
Eval arg and it is an integer return the value. Otherwise return None
If no argument use the default. If arg is a an integer between least min_value
We separate some of the common debugger command checks here: whether it makes sense to
Handle debugger commands.
Initialization done before entering the debugger-command loop. In particular we set up the call stack
Arrange for file of debugger commands to get read in the process-command loop.
Read the command history file -- possibly.
Write the command history file -- possibly.
Create an instance of each of the debugger commands. Commands are found by importing files
Populate self.lists and hashes: self.commands, and self.aliases, self.category
Find all starting matches in dictionary *aliases* that start with *prefix*, but filter out any
Find all starting matches in dictionary *aliases* that start with *prefix*, but filter out any
Find the next token in str string from start_pos, we return the token and the
Common routine for reporting debugger error messages.
Script interface to read a command. `prompt' is a parameter for compatibilty and is ignored.
Closes both input and output
Read a line of input. EOFError will be raised on EOF. Note that we don't
This method the debugger uses to write. In contrast to writeline, no newline is added
Handle debugger options. Set `option_list' if you are writing another main program and want to
Disassemble classes, methods, functions, or code. With no argument, disassemble the last traceback.
Disassemble a code object.
Disassemble byte string of code. If end_line is negative it counts the number of statement
Return a count of the number of frames
Format and return a stack entry gdb-style. Note: lprefix is not used. It is kept
If f_back is looking at a call function, return the name for it. Otherwise return
Print count entries of the stack trace
Return a string representation of an object
Return a string representation of an object
Find subcmd in self.subcmds
Show short help for a subcommand.
Add subcmd to the available subcommands for this object. It will have the supplied docstring,
Run subcmd_name with args using obj for the environent
help for subcommands.
:param file_inp: a `filename` or ``sys.stdin``? :param file_out: a `filename` or ``sys.stdout`?`
Evaluate the expression (given as a string) under debugger control starting with the statement subsequent
Call the function (a function or method object, not a string) with the given arguments
Execute the statement (given as a string) under debugger control starting with the statement subsequent
Enter the debugger.Parameters----------level : how many stack frames go back. Usually it will bethe default
List the command categories and a short description of each.
Show short help for all commands in `category'.
Current line number in source file
Test whether a path exists and is readable. Returns None for broken symbolic links or
lookupmodule()->(module, file) translates a possibly incomplete file or module name into an absolute file name.
parse_position(errmsg, arg)->(fn, name, lineno) Parse arg as [filename|module:]lineno Make sure it works for C:\foo\bar.py:12
Find the first frame that is a debugged frame. We do this Generally we want
Invert threading._active
Use this to set where to read from.
Read a line of input. EOFError will be raised on EOF. Note that we don't
Use this to set where to write to. output can be a file object or
This method the debugger uses to write. In contrast to writeline, no newline is added
Return fully expanded configuration filename location for base_filename. python2 and python3 debuggers share the smae
Read debugger startup file(s): both python code and debugger profile to dbg_initfiles.
Handle debugger options. Set `option_list' if you are writing another main program and want to
Handle options (`opts') that feed into the debugger (`dbg')
Send a message back to the server (in contrast to the local user output channel).
Another get_int() routine, this one simpler and less stylized than get_int(). We eval arg return
If arg is an int, use that otherwise take default.
Return True if arg is 'on' or 1 and False arg is 'off' or 0.
set a Boolean-valued debugger setting. 'obj' is a generally a subcommand that has 'name' and
set an Integer-valued debugger setting. 'obj' is a generally a subcommand that has 'name' and
Generic subcommand showing a boolean-valued debugger setting. 'obj' is generally a subcommand that has 'name'
Generic subcommand integer value display
Generic subcommand value display
Return the next opcode and offset as a tuple. Tuple (-100, -1000) is returned when
Return True if we are looking at a def statement
Return True if we are looking at a class definition statement
quit command when there's just one thread.
quit command when several threads are involved.
Get bacground from default values based on the TERM environment variable
Pass as parameters R G B values in hex On return, variable is_dark_bg is set
Consult (environment) variables DARK_BG and COLORFGB On return, variable is_dark_bg is set
Handle debugger options. Set `option_list' if you are writing another main program and want to
Handle options (`opts') that feed into the debugger (`dbg')
Routine which gets run if we were invoked directly
Get the name caller's caller. NB: f_code.co_filenames and thus this code kind of broken for
return suitable frame signature to key display expressions off of.
List all display items; return 0 if none
Delete display expression *display_number*
display any items that are active
format display item
Read one message unit. It's possible however that more than one message will be set
Return the current debugger instance (if any), or creates a new one.
Set breakpoint at current location, or a specified frame
Given the path to a .py file, return the path to its .pyc/.pyo file. The
Create an instance of each of the debugger subcommands. Commands are found by importing files
Give help for a command which has subcommands. This can be called in several ways:
Ooops -- the debugger author didn't redefine this run docstring.
Error message when subcommand asked for but doesn't exist
Execute a code object. When an exception occurs, self.showtraceback() is called to display a traceback.
**down** [*count*]Move the current frame down in the stack trace (to a newer frame). 0is
Expand fields in Location namedtuple. If: '.': get fields from stack function/module: get fields from
Expand fields in Location namedtuple. If: '.': get fields from stack function/module: get fields from
The dance we have to do to set debugger frame state to *frame*, which is
The simple case: thread frame switching has been done or is not needed and we
See if *name_or_id* is either a thread name or a thread id. The frame of
Run a frame command. This routine is a little complex because we allow a number
Try to pretty print a simple case where a list is not nested. Return True
Routine which gets run if we were invoked directly
Use this to set where to write to. output can be a file object or
This method the debugger uses to write. In contrast to writeline, no newline is added
Find the corresponding signal name for 'num'. Return None if 'num' is invalid.
Find the corresponding signal number for 'name'. Return None if 'name' is invalid.
Return a signal name for a signal name or signal number. Return None is name_num
A replacement for signal.signal which chains the signal behind the debugger's handler
Check to see if a single signal handler that we are interested in has changed
Check to see if any of the signal handlers we are interested in have changed
Print status for a single signal name (signame)
Print information about a signal
Delegate the actions specified in 'arg' to another method.
Set whether we stop or not when this signal is caught. If 'set_stop' is True
Set whether we stop or not when this signal is caught. If 'set_stop' is True
Set whether we pass this signal to the program (or not) when this signal is
Set whether we print or not when this signal is caught.
This method is called when a signal is received.
Check whether specified line seems to be executable. Return `lineno` if it is, 0 if
Given a file name, extract the most likely module name.
Return a full pathname for filename if we can find one. path is a list
Do a shell-like path lookup for py_script and return the results. If we can't find
Return a string representation of an object
All python files caller's dir without the path and trailing .py
Adjust stack frame by pos positions. If absolute_pos then pos is an absolute number. Otherwise
We separate some of the common debugger command checks here: whether it makes sense to
Initialization done before entering the debugger-command loop. In particular we set up the call stack
Create an instance of each of the debugger commands. Commands are found by importing files
Populate self.commands
Show where we are. GUI's and front-end interfaces often use this to update displays. So
used to write to a debugger that is connected to this server; `str' written will
Execution status of the program.
List commands arranged in an aligned columns
Convenience short-hand for self.debugger.intf[-1].confirm
Convenience short-hand for self.debugger.intf[-1].errmsg
Convenience short-hand for self.debugger.intf[-1].msg
Convenience short-hand for self.debugger.intf[-1].msg_nocr
Convert ReStructuredText and run through msg()
Intended to be used going into post mortem routines. If sys.last_traceback is set, we will
Enter debugger read loop after your program has crashed. exc is a triple like you
Closes both socket and server connection.
This method the debugger uses to write. In contrast to writeline, no newline is added
Find all starting matches in dictionary *aliases* that start with *prefix*, but filter out any
Complete an arbitrary expression.
Convenience short-hand for self.intf[-1].errmsg
Convert ReStructuredText and run through msg()
Invoke a debugger command from inside a python shell called inside the debugger.
quit command when there's just one thread.
Parses arguments for the "list" command and returns the tuple: (filename, first line number, last
Add `frame_or_fn' to the list of functions that are not to be debugged
Turns `filename' into its canonic representation and returns this string. This allows a user to
Return filename or the basename of that depending on the basename setting
Return True if debugging is in progress.
We've already created a debugger object, but here we start debugging in earnest. We can
Does the magic to determine if we stop here and run a command processor or
Sets to stop on the next event that happens in frame 'frame'.
A trace event occurred. Filter or pass the information to a specialized event processor. Note
A mini stack trace routine for threads.
Get file information
**next**[**+**|**-**] [*count*]Step one statement ignoring steps into function calls at this level.With an integer argument,
Check whether we should break here because of `b.funcname`.
remove breakpoint `bp
Remove a breakpoint given its breakpoint number.
Enable or disable all breakpoints.
Enable or disable a breakpoint given its breakpoint number.
Removes all breakpoints at a give filename and line number. Returns a list of breakpoints
Determine which breakpoint for this file:line is to be acted upon. Called only if we
Use this to set what file to read from.
Read a line of input. Prompt and use_raw exist to be compatible with other input
Called when a dangerous action is about to be done to make sure it's okay.
r'\s+
r"'[^'].+
r'"[^"]+"
r':
r',
r'^[+-]$
r'\d+
r'[+]\d+
r'[*]\d+
extract_concepts takes a list of sentences and ids(optional) then returns a list of Concept objects
extract_concepts takes a list of sentences and ids(optional) then returns a list of Concept objects
Wrap a `sqlalchemy.orm.query.Query` object into a `concurrent.futures.Future` so that it can be yielded. Parameters ----------
Utility function for forcing a login as specific user -- be careful about calling this
Restore an original login session, checking the signed session
Code to load create user module. Copied off django-browserid.
Yield each document in a Luminoso project in turn. Requires a client whose URL points
Given a LuminosoClient pointing to a project and a filename to write to, retrieve all
Handle arguments for the 'lumi-download' command.
Convert a JSON or CSV file of input to a JSON stream (.jsons). This kind
Read a JSON or CSV file and convert it into a JSON stream, which will
Deduce the format of a file, within reason. - If the filename ends with .csv
This function is meant to normalize data for upload to the Luminoso Analytics system. Currently
Convert a date in a given format to epoch time. Mostly a wrapper for datetime's
Use ftfy to detect the encoding of a file, based on a sample of its
Load a JSON stream and return a generator, yielding one object at a time.
Convert a file in some other encoding into a temporary file that's in UTF-8.
Open a CSV file using Python 2's CSV module, working around the deficiency where it
Given a constructed CSV reader object, a header row that we've read, and a detected
Handle command line arguments to convert a file to a JSON stream as a script.
When sent in an authorized REST request, only strings and integers can be transmitted accurately.
Returns an object that makes requests to the API, authenticated with a saved or specified
Take a long-lived API token and store it to a local file. Long-lived tokens can
Returns an object that makes requests to the API, authenticated with a short-lived token retrieved
Make a request via the `requests` module. If the result has an HTTP error status,
Make a POST request to the given path, and return the JSON-decoded result. Keyword parameters
Make a DELETE request to the given path, and return the JSON-decoded result. Keyword parameters
Returns a new client with the same root URL and authentication, but a different specific
A deprecated alias for post(path, docs=docs), included only for backward compatibility.
A convenience method designed to inform you when a project build has completed. It polls
Saves binary content to a file with name filename. filename should include the appropriate file
Get the "root URL" for a URL, as described in the LuminosoClient documentation.
When sent in an authorized REST request, only strings and integers can be transmitted accurately.
Returns an object that makes requests to the API, authenticated with the provided username/password, at
Obtain the user's long-lived API token and save it in a local file. If the
Make a request of the specified type and expect a JSON object in response. If
Make a POST request to the given path, and return the JSON-decoded result. Keyword parameters
Make a POST request to the given path, with `data` in its body. Return the
Return a new LuminosoClient for a subpath of this one. For example, you might want
Get the ID of an account you can use to access projects.
Get the documentation that the server sends for the API.
A convenience method for uploading a set of dictionaries representing documents. You still need to
Wait for an asynchronous task to finish. Unlike the thin methods elsewhere on this object,
Get the raw text of a response. This is only generally useful for specific URLs,
Print a JSON list of JSON objects in CSV format.
Read parameters from input file, -j, and -p arguments, in that order.
Take an iterator and yield its contents in groups of `size` items.
Limit a document to just the three fields we should upload.
Given an iterator of documents, upload them as a Luminoso project.
Given a LuminosoClient pointing to the root of the API, and a filename to read
Handle arguments for the 'lumi-upload' command.
Take an iterator and yield its contents in groups of `size` items.
Given a file-like object containing a JSON stream, upload it to Luminoso with the given
Upload a file to Luminoso with the given account and project name. Given a file
Handle command line arguments, to upload a file to a Luminoso project as a script.
Obtain a short-lived token using a username and password, and use that token to create
Set http session.
Login to enedis.
Get data.
Get the latest data from Enedis.
Main function
Load the view on first load
Load the view on first load could also load based on session, group, etc..
Execute the correct handler depending on what is connecting.
When enaml.js sends a message
When pages change, update the menus
Generate the handlers for this site
When we get an event from js, lookup the node and invoke the action on
When an event from enaml occurs, send it out the websocket so the client's browser
Create the toolkit widget for the proxy object. This method is called during the top-down
Initialize the state of the toolkit widget. This method is called during the top-down pass,
A reimplemented destructor. This destructor will clear the reference to the toolkit widget and set
Handle the child added event from the declaration. This handler will insert the child toolkit
Handle the child removed event from the declaration. This handler will unparent the child toolkit
Get the node(s) matching the query
Get the child toolkit widgets for this object. Returns ------- result : iterable of QObject
Default handler for those not explicitly defined
Update the proxy widget when the Widget data changes.
If a change occurs when we have a websocket connection active notify the websocket client
Find nodes matching the given xpath query
Prepare for rendering
Initialize the widget with the source.
Set the source by parsing the source and inserting it into the component.
If the mode changes. Refresh the items.
A change handler for the 'objects' list of the Include. If the object is initialized
When the children of the block change. Update the referenced block.
Read the contents of a file located relative to setup.py
Print the dict returned by a MongoDB Query in the standard output.
Connect with `address`, and return a tuple with a :class:`~pymongo.MongoClient`, and a :class:`~pymongo.database.Database` object. :param
Print `msg` error and exit with status `exit_code`
Print any parsing error and exit with status -1
Gets a Item from the Menu by name. Note that the name is not case-sensitive
Clear out the current session on the remote and setup a new one. :return: A
Clears out the current store and gets a cookie. Set the cross site request forgery
Search for dominos pizza stores using a search term. :param string search: Search term. :return:
Set local cookies by initialising the delivery system on the remote. Requires a store ID
Retrieve the menu from the selected store. :param Store store: A store. :return: The store
Add an item to the current basket. :param Item item: Item from menu. :param int
Add a pizza to the current basket. :param Item item: Item from menu. :param int
Add a side to the current basket. :param Item item: Item from menu. :param int
Remove an item from the current basket. :param int idx: Basket item id. :return: A
Select the payment method going to be used to make a purchase. :param int method:
Proceed with payment using the payment method selected earlier. :return: A response having processes the
Make a HTTP GET request to the Dominos UK API with the given parameters for
Make a HTTP POST request to the Dominos UK API with the given parameters for
Make a HTTP request to the Dominos UK API with the given parameters for the
Add an item to the end of the menu before the exit item :param MenuItem
Add the exit item if necessary. Used to make sure there aren't multiple exit items
Redraws the menu and refreshes the screen. Should be called whenever something changes that needs
Gets the next single character and decides what to do with it
Select the current item and run it
This class overrides this method
This class overrides this method
This class overrides this method
Take an old-style menuData dictionary and return a CursesMenu :param dict menu_data: :return: A new
This class overrides this method
This class overrides this method
Add new columns containing aggregations values on existing columns --- ### Parameters *mandatory :* -
Get the top or flop N results based on a column value for each specified
Get the top or flop N results based on a function and a column value
Convert string column into datetime column --- ### Parameters *mandatory :* - `column` (*str*): name
Convert datetime column into string column --- ### Parameters *mandatory :* - column (*str*): name
Convert the format of a date --- ### Parameters *mandatory :* - `column` (*str*): name
Convert column's type into type --- ### Parameters *mandatory :* - `column` (*str*): name of
This function answers the question: how has a value changed on a weekly, monthly, yearly
This function answers the question: how has a value changed compare to a specific value
Compute an evolution column : - against a period distant from a fixed frequency. -
This function creates rank columns based on numeric values to be ranked. --- ### Parameters
Return a line for each bars of a waterfall chart, totals, groups, subgroups. Compute the
Compute two dataframes with value for start and end Args: totals(dataframe): Returns: Dataframe, Dataframe
Compute diff value between start and end Args: df(dataframe): Returns: Dataframe
Compute inside Group Args: df(dataframe): Returns: Dataframe
Compute upperGroup Args: df (Dataframe): Returns: Dataframe
Basic mathematical operation to apply operator on `column_1` and `column_2` Both can be either a
DEPRECATED - use `formula` instead
DEPRECATED - use `formula` instead
DEPRECATED - use `formula` instead
DEPRECATED - use `formula` instead
Do mathematic operations on columns (add, subtract, multiply or divide) --- ### Parameters *mandatory:* -
Round each value of a column --- ### Parameters *mandatory :* - `column` (*str*): name
Get the absolute numeric value of each element of a column --- ### Parameters *mandatory
Pivot the data. Reverse operation of melting --- ### Parameters *mandatory :* - `index` (*list*):
Pivot a dataframe by group of variables --- ### Parameters *mandatory :* * `variable` (*str*):
Aggregate values by groups. --- ### Parameters *mandatory :* - `group_cols` (*list*): list of columns
DEPRECATED - please use `compute_cumsum` instead
Add missing row to a df base on a reference column --- ### Parameters *mandatory
Returns: dict: Dict[str, DataFrame]
Args: data (str | byte): Returns: dict: Dict[str, DataFrame]
Returns: dict: Dict[str, DataFrame]
Args: file_name (str): Returns: pd.DataFrame:
Args: data (str | byte): Returns: dict: Dict[str, DataFrame]
This method is used to: - slugify the column names (if slugify is set to
Compute `ffill` with `groupby` Dedicated method as there is a performance issue with a simple
`conf` is a list of dictionaries like {'type': 'label', 'values': ['Paris', 'Marseille', 'Lyons'], 'name': 'Cities'}
Transforms one or multiple columns into rows. Unlike melt function, two value columns can be
Concatenate `columns` element-wise See [pandas doc]( https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.cat.html) for more information --- ### Parameters *mandatory :*
Test if pattern or regex is contained within strings of `column` See [pandas doc]( https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.contains.html)
Duplicate each string in `column` by indicated number of time See [pandas doc]( https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.repeat.html) for
Replace occurrences of pattern/regex in `column` with some other string See [pandas doc]( https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.replace.html) for
Decorator to catch an exception and don't raise it. Logs information if a decorator failed.
Decorator to log a message before executing a function
Decorator to log the execution time of a function
Decorator to log the shapes of input and output dataframes It considers all the dataframes
Basic log decorator Can be used as : - @log (with default logger) - @log(mylogger)
Allow to apply a function f(df: DataFrame) -> DataFrame) on dfs by specifying the key
Avoid to recompute a function if its parameters and its source code doesnt have changed.
This function injects a joblib.Memory object in the cache() function (in a thread-specific slot of
A melt will transform a dataset by creating a column "variable" and a column "value".
Replaces data values and column names according to the locale --- ### Parameters - `values`
Compute cumsum for a group of columns. --- ### Parameters *mandatory :* - `id_cols` (*list*):
Aggregates data to reproduce "All" category for requester --- ### Parameters *mandatory :* - `id_cols`
Get the value of a function's parameter based on its signature and the call's args
Try to get sourcecode using standard inspect.getsource(). If the function comes from a module which
Returns a slugified name (we allow _ to be used)
Given a function name and a mapping of function dependencies, returns a list of *all*
Remove old entries from the cache
Creates aggregates following a given hierarchy --- ### Parameters *mandatory :* - `levels` (*list of
Keep the row of the data corresponding to the maximal value in a column ---
Keep the row of the data corresponding to the minimal value in a column ---
Can fill NaN values from a column with a given value or a column ---
From a dataset containing dates in a column, return a dataset with at least 3
normalize symbolic date values (e.g. 'TODAY') Convert a symbolic value in a valid date. Currenlty
add a human readable offset to `dateobj` and return corresponding date. rely on `pandas.Timedelta` and
return `dateobj` + `nb_months` If landing date doesn't exist (e.g. february, 30th), return the last
return `dateobj` + `nb_years` If landing date doesn't exist (e.g. february, 30th), return the last
parse `datestr` and return corresponding date object. `datestr` should be a string matching `date_fmt` and
Filter dataframe your data by date. This function will interpret `start`, `stop` and `atdate` and
Change the label of a value or a columns within your data source. (Similar to
Add a column to the dataframe according to the groupby logic on group_cols --- ###
Optimize by SGD, AdaGrad, or AdaDelta.
General optimization function for Theano. Parameters: params - parameters gradients - gradients config - training
Create a optimizing function receives gradients. Parameters: params - parameters config - training configuration Returns:
Return updates in the training.
Get parameters to be optimized.
Return updates from optimization.
Get the learning function. :param func: :return:
Parameters: x_t - 28x28 image l_p - 2x1 focus vector Returns: 4x12 matrix
Parameters: x_t - 28x28 image l_p - 2x1 focus vector Returns: 7*14 matrix
Parameters: x_t - 28x28 image l_p - 2x1 focus vector Returns: 4x12 matrix
Parameters: h_t - 256x1 vector Returns: 10x1 vector
Get baseline model. Parameters: model - model path Returns: network
Compute first glimpse position using down-sampled image.
Parameters: x_t - 28x28 image l_p - 2x1 focus vector h_p - 256x1 vector Returns:
All codes that create parameters should be put into 'setup' function.
Build the computation graph here.
Process all data with given function. The scheme of function should be x,y -> x,y.
Make targets be one-hot vectors.
Print dataset statistics.
We train over mini-batches and evaluate periodically.
Sample outputs from LM.
:param x: (batch, time, vec)
Compute the alignment weights based on the previous state.
Compute the context vector with soft attention.
Train the model in multi-GPU environment.
A utility function of concatenate.
Wrap a Theano tensor into the variable for defining neural network. :param last_dim: last dimension
Pad sequences to given length in the left or right side.
RMSPROP optimization core.
Pad data set to specified length. Parameters: length - max length, a just to the
Prepare for one epoch. Returns: bool: False if to stop the training.
Handles a control_request received from a worker. Returns: string or dict: response 'stop' - the
Report elapsed time.
Compare to previous records and return whether the given cost is a new best. :return:
Run the model with validation data and return costs.
This function will be called after each iteration.
Create inner loop variables.
Internal scan with dummy input variables.
Get the outputs of the loop. Return specific variables by passing the keys to the
Momentum SGD optimization core.
Execute `then_branch` when training.
Switch training mode. :param flag: switch on training mode when flag is True.
Nesterov's Accelerated Gradient (NAG). See http://www.cs.toronto.edu/~fritz/absps/momentum.pdf . Still unfinished
Skip N batches in the training.
Load parameters for the training. This method can load free parameters and resume the training
Add iteration callbacks function (receives an argument of the trainer). :param controllers: can be a
Add epoch callbacks function. :param controllers: can be a `TrainingController` or a function.
Train the model and return costs.
Run one training iteration.
Run one valid iteration, return true if to continue training.
Report the scores and record them in the log.
Get specified split of data.
Run until the end. :param epoch_controllers: deprecated
:type bunch_stack: list of list of int
:type bunch_stack: list of list
Apply a function to tensors.
Rprop optimizer. See http://sci2s.ugr.es/keel/pdf/algorithm/articulo/2003-Neuro-Igel-IRprop+.pdf.
Report usage of training parameters.
Create a parameters block. :param layers: register some layers in the block :param name: specify
An alias of deepy.tensor.var.
Create vars given a dataset and set test values. Useful when dataset is already defined.
A loop function, the usage is identical with the theano one. :type block: deepy.layers.Block
Start a loop. Usage: ``` with deepy.graph.loop(sequences={"x": x}, outputs={"o": None}) as vars: vars.o = vars.x
Get a trainer to optimize given model. :rtype: deepy.trainers.GeneralNeuralTrainer
Create a shared theano scalar value.
Load parameters from file to fill all blocks sequentially. :type blocks: list of deepy.layers.Block
Return size of training data. (optional) :rtype: number
Run it, return whether to end training.
Run it, return whether to end training.
Perform reparameterization trick for latent variables. :param layer_size: the size of latent variable
Stack encoding layers, this must be done before stacking decoding layers.
Stack decoding layers.
Encode given input.
Decode given representation.
This function creates a 2d gaussian kernel with the standard deviation denoted by sigma :param
This method performs elastic transformations on an image by convolving with a gaussian kernel. :param
Stack a neural layer. :type layer: NeuralLayer :param no_setup: whether the layer is already initialized
Register the layer so that it's param will be trained. But the output of the
Monitoring the outputs of each layer. Useful for troubleshooting convergence problems.
Return all parameters.
Set up variables.
Return network output.
Save parameters to file.
Load parameters from file.
Print network statistics.
Initialize the layer. :param no_prepare: avoid calling preparation function
Compute based on NeuralVariable. :type inputs: list of NeuralVariable :return: NeuralVariable
Let the given block or network manage the parameters of this layer. :param block: Block
Register parameters.
Register updates that will be executed in each iteration.
Register updates that will only be executed in training phase.
Register monitors they should be tuple of name and Theano variable.
Get the L2 norm of multiple tensors. This function is taken from blocks.
dumps one element to file_obj, a file opened in write mode
load contents from file_obj, returning a generator that yields one element at a time
Fix the block, register all the parameters of sub layers. :return:
Register one connected layer. :type layer: NeuralLayer
Load parameters to the block.
Compute one step in the RNN. :return: one variable for RNN and GRU, multiple variables
:type input_var: T.var :rtype: dict
:type input_var: T.var :rtype: dict
Convert neural vars to theano vars. :param obj: NeuralVariable or list or dict or tuple
Convert object and a test object into neural var. :param obj: tensor or list or
An annotation to enable theano-based fucntions to be called with NeuralVar. :param original_func: :param prefer_tensor:
# batch x time
Creates |oauth2| request elements.
Decode state and return param. :param str state: state parameter passed through by provider :param
Refreshes :class:`.Credentials` if it gives sense. :param credentials: :class:`.Credentials` to be refreshed. :returns: :class:`.Response`.
We need to override this method to fix Facebooks naming deviation.
Google doesn't accept client ID and secret to be at the same time in request
Login handler, must accept both GET and POST to be able to use OpenID.
Replaces all values that are single-item iterables with the value of its index 0. :param
Converts list of tuples to dictionary with duplicate keys converted to lists. :param list items:
Parses response body from JSON, XML or query string. :param body: string :returns: :class:`dict`, :class:`list`
Returns a provider class. :param class_name: :class:`string` or :class:`authomatic.providers.BaseProvider` subclass.
Returns the provider :doc:`config` key based on it's ``id`` value. :param dict config: :doc:`config`. :param
Creates the value for ``Set-Cookie`` HTTP header. :param bool delete: If ``True`` the cookie value
Adds the session cookie to headers.
Extracts the session data from cookie.
Gets session data lazily.
Creates signature for the session.
Converts the value to a signed string with timestamp. :param value: Object to be serialized.
Deserializes and verifies the value created by :meth:`._serialize`. :param str value: The serialized value. :returns:
Converts the :class:`.User` instance to a :class:`dict`. :returns: :class:`dict`
Computes :attr:`.expiration_time` when the value is set.
``True`` if credentials are valid, ``False`` if expired.
Returns ``True`` if credentials expire sooner than specified. :param int seconds: Number of seconds. :returns:
Refreshes the credentials only if the **provider** supports it and if it will expire in
Converts the credentials to a percent encoded string to be stored for later use. :returns:
A *class method* which reconstructs credentials created by :meth:`serialize`. You can also pass it a
Returns JavaScript that: #. Triggers the ``options.onLoginComplete(result, closer)`` handler set with the :ref:`authomatic.setup() <js_setup>` function
Returns a HTML with JavaScript that: #. Triggers the ``options.onLoginComplete(result, closer)`` handler set with the
Return true if string is binary data.
The whole response content.
A :class:`dict` of data parsed from :attr:`.content`.
If :data:`provider_name` specified, launches the login procedure for corresponding :doc:`provider </reference/providers>` and returns :class:`.LoginResult`. If
Accesses **protected resource** on behalf of the **user**. :param credentials: The **user's** :class:`.Credentials` (serialized or
Creates request elements for accessing **protected resource of a user**. Required arguments are :data:`credentials` and
Converts a *request handler* to a JSON backend which you can use with :ref:`authomatic.js <js>`.
Returns a normalized query string sorted first by key, then by value excluding the ``realm``
Returns base string for HMAC-SHA1 signature as specified in: http://oauth.net/core/1.0a/#rfc.section.9.1.3.
Returns HMAC-SHA1 signature as specified at: http://oauth.net/core/1.0a/#rfc.section.9.2. :param str method: HTTP method of the request
Creates |oauth1| request elements.
Email is available in separate method so second request is needed.
Vimeo requires the user ID to access the user info endpoint, so we need to
Decorator for Flask view functions.
Resembles the :meth:`dict.get` method. :returns: A configuration dictionary for specified provider.
Resembles the :meth:`dict.values` method.
Creates an **"Example"** entity of kind **"NDBConfig"** in the datastore if the model is empty
Launches the OpenID authentication procedure.
Generates error traceback HTML. :param tuple exc_info: Output of :func:`sys.exc_info` function. :param traceback: Output of
Decorate the :meth:`.BaseProvider.login` implementations with this decorator. Provides mechanism for error reporting and returning result
Converts the provider instance to a :class:`dict`. :returns: :class:`dict`
Resolves keyword arguments from constructor or :doc:`config`. .. note:: The keyword arguments take this order
Generates session key string. :param str key: e.g. ``"authomatic:facebook:key"``
Saves a value to session.
Generates CSRF token. Inspired by this article: http://blog.ptsecurity.com/2012/10/random-number-security-in-python.html :returns: :class:`str` Random unguessable string.
Logs a message with pre-formatted prefix. :param int level: Logging level as specified in the
Fetches a URL. :param str url: The URL to fetch. :param str method: HTTP method
Updates or creates :attr:`.user`. :returns: :class:`.User`
Checks whether a HTTP status code is in the category denoted by the hundreds digit.
A short string representing the provider implementation id used for serialization of :class:`.Credentials` and to
Fetches the **protected resource** of an authenticated **user**. :param credentials: The **user's** :class:`.Credentials` (serialized or
Same as :meth:`.access` but runs asynchronously in a separate thread. .. warning:: |async| :returns: :class:`.Future`
Updates the :attr:`.BaseProvider.user`. .. warning:: Fetches the :attr:`.user_info_url`! :returns: :class:`.UserInfoResponse`
Creates authorization headers if the provider supports it. See: http://en.wikipedia.org/wiki/Basic_access_authentication. :param credentials: :class:`.Credentials` :returns: Headers
Validates the :attr:`.consumer`.
Splits given url to url base and params converted to list of tuples.
Accesses the :attr:`.user_info_url`. :returns: :class:`.UserInfoResponse`
This function is the decorator which is used to wrap a Sanic route with. In
Performs the actual evaluation of Sanic-CORS options and actually modifies the response object. This function
Returns the dictionary of CORS specific app configurations.
A more flexible str function which intelligently handles stringifying strings, lists and other iterables. The
Wraps scalars or string types as a list, or returns the iterable instance.
Python 3.4 does not have math.isclose, so we need to steal it and add it
Deprecator decorator.
Attempts to deserialize a bytestring into an audiosegment. :param bstr: The bytestring serialized via an
Returns an AudioSegment object from the given file based on its file extension. If the
Returns an AudioSegment created from the given numpy array. The numpy array must have shape
Creates an AudioSegment object of the specified duration/frame_rate filled with digital silence. :param duration: The
Sound Pressure Level - defined as 20 * log10(p/p0), where p is the RMS of
Returns a numpy array of shape (nfilters, nsamples), where each row of data is the
Algorithm based on paper: Auditory Segmentation Based on Onset and Offset Analysis, by Hu and
Returns self as a list of tuples: [('v', voiced segment), ('u', unvoiced segment), (etc.)] The
Cuts the AudioSegment into `seconds` segments (at most). So for example, if seconds=10, this will
A list of tuples of the form [('n', AudioSegment), ('y', AudioSegment), etc.] is returned, where
Executes a Sox command in a platform-independent manner. `cmd` must be a format string that
Returns a copy of this AudioSegment, but whose silence has been removed. .. note:: This
Transforms the indicated slice of the AudioSegment into the frequency domain and returns the bins
Yields self's data in chunks of frame_duration_ms. This function adapted from pywebrtc's example [https://github.com/wiseman/py-webrtcvad/blob/master/example.py]. :param
Does the same thing as `generate_frames`, but yields tuples of (AudioSegment, timestamp) instead of Frames.
Returns an estimate of whether this AudioSegment is mostly human audible or not. This is
Normalize the values in the AudioSegment so that its `spl` property gives `db`. .. note::
Reduces others into this one by concatenating all the others onto this one and returning
Returns a new AudioSegment whose data is the same as this one, but which has
Serializes into a bytestring. :returns: An object of type Bytes.
Does a series of FFTs from `start_s` or `start_sample` for `duration_s` or `num_samples`. Effectively, transforms
Convenience function for `np.array(self.get_array_of_samples())` while keeping the appropriate dtype.
Adds a number of zeros (digital silence) to the AudioSegment (returning a new one). :param
Takes a spectrogram and returns a 2D array of the form: 0 0 0 1
Takes an array of onsets and an array of offsets, of the shape [nfrequencies, nsamples],
Takes an array of onsets or offsets (shape = [nfrequencies, nsamples], where a 1 corresponds
Takes an onset index (freq, sample) and returns the offset index (freq, sample) such that
Return a list of tuples of the form (frequency_idx, sample_idx), corresponding to all the indexes
Returns a front ID which is the id of the offset front that contains the
Returns the offset_front_id which corresponds to the offset front which occurs first entirely after the
Get the ID corresponding to the offset which occurs first after the given onset_front_id. By
Find all offset fronts which are composed of at least one offset which corresponds to
Yields lists of the form [(f, s), (f, s)], one at a time from the
Gets an onset_front and an offset_front such that they both occupy at least some of
Returns an updated segmentation mask such that the input `segmentation_mask` has been updated by segmenting
Returns the front ID found in `front` at the given `index`. :param front: An onset
Yields one onset front ID at a time until they are gone. All the onset
Gets the offsets that occur as close as possible to the onsets in the given
Returns all the offset fronts that are composed of at least one of the given
Removes all points in the fronts that overlap with the segmentation mask.
Returns a segmentation mask, which looks like this: frequency 1: 0 0 4 4 4
Removes all fronts from `fronts` which are strictly smaller than `size` consecutive frequencies in length.
For each onset front, for each frequency in that front, break the onset front if
Merges the segments specified by `id` (found in `toupdate`) and `otherid` (found in `other`) if
Checks if seg1 and seg2 are adjacent at any point. Each is a tuple of
Merges all segments in `mask` which are touching.
`segmasks` should be in sorted order of [coarsest, ..., finest]. Integrates the given list of
Returns a list of segmentation masks each of the same dimension as the input one,
Takes the given `mask` and `stft`, which must be matrices of shape `frequencies, times` and
Maps the given `mask`, which is in domain (`frequencies`, `times`) to the new domain (`stft_frequencies`,
Worker for the ASA algorithm's multiprocessing step.
Runs a Markov Decision Process over the given `seg` in chunks of `ms_per_input`, yielding `True`
Takes a list of 1s and 0s and returns a list of tuples of the
Takes `ls` (a list of 1s and 0s) and smoothes it so that adjacent values
Does a bandpass filter over the given data. :param data: The data (numpy array) to
Does a lowpass filter over the given data. :param data: The data (numpy array) to
Separates the outcome feature from the data and creates the onehot vector for each row.
Standardizes continuous features and expands categorical features.
Used to check whether the two edge lists have the same edges when elements are
Create unique value structures: When performing repairs, we choose median values. If repair is partial,
Given a list of audit files, rank them using the `measurer` and return the features
Given a confusion matrix, returns the accuracy. Accuracy Definition: http://research.ics.aalto.fi/events/eyechallenge2005/evaluation.shtml
Given a confusion matrix, returns Balanced Classification Rate. BCR is (1 - Balanced Error Rate).
Given an unsorted list of numeric values, return median value (as a float). Note that
with open("brandon_testing/test_"+str(time.clock())+".csv","w") as f: writer = csv.writer(f,delimiter=",") for row in fin: writer.writerow(row)
Loads a confusion matrix in a two-level dictionary format. For example, the confusion matrix of
Separates the outcome feature from the data.
The bin size in FD-binning is given by size = 2 * IQR(x) * n^(-1/3)
Checks for alternative index-url in pip.conf
:type package_name: str :type current_version: version.Version
:type package_name: str :type current_version: version.Version :type response: requests.models.Response
:type package_name: str :type current_version: version.Version :type response: requests.models.Response
Main CLI entrypoint.
Update (install) the package in current environment, and if success, also replace version in file
Attempt to detect requirements files in the current working directory
Resolve all streams on the network. This function returns all currently available streams from any
Resolve all streams with a specific value for a given property. If the goal is
Resolve all streams that match a given predicate. Advanced query that allows to impose more
Error handler function. Translates an error code into an exception.
Push a sample into the outlet. Each entry in the list corresponds to one channel.
Push a list of samples into the outlet. samples -- A list of samples, either
Wait until some consumer shows up (without wasting resources). Returns True if the wait was
Retrieve the complete information of the given stream. This includes the extended description. Can be
Subscribe to the data stream. All samples pushed in at the other end from this
Retrieve an estimated time correction offset for the given stream. The first call to this
Pull a sample from the inlet and return it. Keyword arguments: timeout -- The timeout
Pull a chunk of samples from the inlet. Keyword arguments: timeout -- The timeout of
Get a child with a specified name.
Get the next sibling in the children list of the parent node. If a name
Get the previous sibling in the children list of the parent node. If a name
Get child value (value of the first child that is text). If a name is
Append a child node with a given name, which has a (nameless) plain-text child with
Prepend a child node with a given name, which has a (nameless) plain-text child with
Set the text value of the (nameless) plain-text child of a named child node.
Set the element's name. Returns False if the node is empty.
Set the element's value. Returns False if the node is empty.
Append a child element with the specified name.
Prepend a child element with the specified name.
Append a copy of the specified element as a child.
Prepend a copy of the specified element as a child.
Remove a given child element, specified by name or as element.
Obtain the set of currently present streams on the network. Returns a list of matching
See all token associated with a given token. PAIR lilas
Shows autocomplete results for a given token.
Compute edge ngram of token from min. Does not include token itself.
Allow for iterators to return either an item or an iterator of items.
Import functions or class by their path. Should be of the form: path.to.module.func
Calculate the great circle distance between two points on the earth (specified in decimal degrees).
Customized version of imap_unordered. Directly send chunks to func, instead of iterating in each process
Naive neighborhoods algo.
Compute fuzzy extensions of word. FUZZY lilas
Compute fuzzy extensions of word that exist in index. FUZZYINDEX lilas
Try to extract the bigger group of interlinked tokens. Should generally be used at last
Display this help message.
Run a search many times to benchmark it. BENCH [100] rue des Lilas
Do a raw intersect between tokens (default limit 100). INTERSECT rue des lilas [LIMIT 100]
Print some useful infos from Redis DB.
Print raw content of a DB key. DBKEY g|u09tyzfe
Compute geodistance from a result to a point. GEODISTANCE 772210180J 48.1234 2.9876
Build GeoJSON corresponding to geohash given as parameter. GEOHASHTOGEOJSON u09vej04 [NEIGHBORS 0|1|2]
Compute a geohash from latitude and longitude. GEOHASH 48.1234 2.9876
Return members of a geohash and its neighbors. GEOHASHMEMBERS u09vej04 [NEIGHBORS 0]
Get document from index with its id. GET 772210180J
Get index details for a document by its id. INDEX 772210180J
Return document linked to word with higher score. BESTSCORE lilas
Do a reverse search. Args: lat lon. REVERSE 48.1234 2.9876
Print the distance score between two strings. Use | as separator. STRDISTANCE rue des lilas|porte
Inspect loaded Addok config. Output all config without argument. CONFIG [CONFIG_KEY]
Run a Lua script. Takes the raw Redis arguments. SCRIPT script_name number_of_keys key1 key2… arg1
Just sends the request using its send method and returns its response.
Concurrently converts a list of Requests to Responses. :param requests: a collection of Request objects.
Concurrently converts a generator object of Requests to a generator of Responses. :param requests: a
Concurrently converts a generator object of Requests to a generator of Responses. :param requests: a
Gets value of bits between selected range from memory :param start: bit address of start
Cast HArray signal or value to signal or value of type Bits
convert python slice to value of SLICE hdl type
:return: bit range which contains data of this part on bus data signal
:return: bit range which contains data of this part on interface of field
Apply enclosure on list of statements (fill all unused code branches with assignments from value
Find files by pattern in directory
Generate if tree for cases like (syntax shugar for large elifs) ..code-block:: python if cond0:
Hdl convertible in operator, check if any of items in "iterable" equals "sigOrVal"
Generate for loop for static items :param parentUnit: unit where this code should be instantiated
Connect src (signals/interfaces/values) to all destinations :param exclude: interfaces on any level on src or
Rotate left
Logical shift left
Returns no of bits required to store x-1 for example x=8 returns 3
Check if number or constant is power of two
Add multiple case statements from iterable of tuleles (caseVal, statements)
c-like case of switch statement
c-like default of switch statement
:param stateFrom: apply when FSM is in this state :param condAndNextState: tupes (condition, newState), last
:return: (vcd type name, vcd width)
Register signals from interfaces for Interface or Unit instances
This method is called before first step of simulation.
This method is called for every value change of any signal.
Serialize HWProcess instance :param scope: name scope to prevent name collisions
Trim or extend scope lvl = 1 -> only one scope (global)
:return: how many bits is this slice selecting
Walk all interfaces on unit and instantiate agent for every interface. :return: all monitor/driver functions
Iterable of values to ints (nonvalid = None)
If interface has associated rst(_n) return it otherwise try to find rst(_n) on parent recursively
If interface has associated clk return it otherwise try to find clk on parent recursively
:return: list of extra discovered processes
uniq operation with key selector
Get value from iterable where fn(item) and check if there is not fn(other item) :raise
:return: generator of first n items from iterrable
:return: generator of tuples (isLastFlag, item)
same like itertools.groupby :note: This function does not needs initial sorting like itertools.groupby :attention: Order
Flatten nested lists, tuples, generators and maps :param level: maximum depth of flattening
Doc on parent class :meth:`HdlStatement._cut_off_drivers_of`
Doc on parent class :meth:`HdlStatement._discover_enclosure`
Doc on parent class :meth:`HdlStatement._discover_sensitivity`
Doc on parent class :meth:`HdlStatement._iter_stms`
Doc on parent class :meth:`HdlStatement._try_reduce`
Merge nested IfContarner form else branch to this IfContainer as elif and else branches
:attention: statements has to be mergable (to check use _is_mergable method)
:return: True if other has same meaning as this statement
If signal is not driving anything remove it
check if process is just unconditional assignments and it is useless to merge them
Try merge procB into procA :raise IncompatibleStructure: if merge is not possible :attention: procA is
Try to merge processes as much is possible :param processes: list of processes instances
on writeReqRecieved in monitor mode
Convert object to HDL string :param obj: object to serialize :param ctx: HwtSerializerCtx instance
Entity is just forward declaration of Architecture, it is not used in most HDL languages
Convert unit to RTL using specified serializer :param unitOrCls: unit instance or class, which should
Resolve name for process and mark outputs of statemens as not hidden
Cut off drivers from statements
Pack statements into HWProcess instances, * for each out signal resolve it's drivers and collect
* check if all signals are driven by something * mark signals with hidden =
Create new signal in this context :param clk: clk signal, if specified signal is synthesized
Build Entity and Architecture instance out of netlist representation
Convert python or hdl value/signal object to hdl value/signal object
:param dst: is signal connected with value :param val: value object, can be instance of
Get maximum _instId from all assigments in statement
get max statement id, used for sorting of processes in architecture
Collect data from interface
write data to interface
Push data to interface
:param val: value of python type int or None :param typeObj: instance of Integer :param
Note that this interface will be master :return: self
load declaratoins from _declr method This function is called first for parent and then for
Remove all signals from this interface (used after unit is synthesized and its parent is
generate _sig for each interface which has no subinterface if already has _sig return it
Get name in HDL
Replace parameter on this interface (in configuration stage) :ivar pName: actual name of param on
:note: doc in :func:`~hwt.synthesizer.interfaceLevel.propDeclCollector._updateParamsFrom`
Sum of all width of interfaces in this interface
connect to another interface interface (on rtl level) works like self <= master in VHDL
get sensitivity type for operator
Load all operands and process them by self._evalFn
Cast signed-unsigned, to int or bool
Reinterpret signal of type Bits to signal of type HStruct
Cast object of same bit size between to other type (f.e. bits to struct, union
Sort items from iterators(generators) by alwas selecting item with lowest value (min first) :return: generator
:param splitsOnWord: list of lists of parts (fields splited on word boundaries) :return: generators of
Count of complete words between two addresses
Group transaction parts splited on words to words :param transaction: TransTmpl instance which parts should
:return: generator of TransPart instance
:param val: value of python type bool or None :param typeObj: instance of HdlType :param
Pretty print interface
Convert transaction template into FrameTmpls :param transaction: transaction template used which are FrameTmpls created from
Walk enumerated words in this frame :attention: not all indexes has to be present, only
Construct dictionary {StructField:value} for faster lookup of values for fields
Pack data into list of BitsVal of specified dataWidth :param data: dict of values for
:return: True if two Value instances are same :note: not just equal
:return: True if two vectors of Value instances are same :note: not just equal
:return: True if two lists of HdlStatement instances are same
:return: True if all statements are same
:return: first statement with rank > 0 or None if iterator empty
Clean informations about enclosure for outputs and sensitivity of this statement
Collect inputs/outputs from all child statements to :py:attr:`~_input` / :py:attr:`_output` attribure on this object
Discover enclosure for list of statements :param statements: list of statements in one code branch
Discover sensitivity for list of signals
get RtlNetlist context from signals
Update signal IO after reuce atempt :param self_reduced: if True this object was reduced :param
After merging statements update IO, sensitivity and context :attention: rank is not updated
Walk statements and compare if they can be merged into one statement list
Merge statements in list to remove duplicated if-then-else trees :return: tuple (list of merged statements,
Merge two lists of statements into one :return: list of merged statements
Simplify statements in the list
After parrent statement become event dependent propagate event dependency flag to child statements
Assign parent statement and propagate dependency flags if necessary
Append statements to this container under conditions specified by condSet
Disconnect this statement from signals and delete it from RtlNetlist context :attention: signal endpoints/drivers will
:param val: python string or None :param typeObj: instance of String HdlType :param vldMask: if
Create register in this unit :param defVal: default value of this register, if this value
Create signal in this unit
Disconnect internal signals so unit can be reused by parent unit
Select fields from structure (rest will become spacing) :param structT: HStruct type instance :param fieldsToUse:
Walk all simple values in HStruct or HArray
opposite of packAxiSFrame
Convert signum, no bit manipulation just data are represented differently :param signed: if True value
Construct value from pythonic value (int, bytes, enum.Enum member)
Concatenate this with other to one wider value/signal
register sensitivity for process
Evaluate list of values as condition
Connect ports of simulation models by name
Create value updater for simulation :param nextVal: instance of Value which will be asssiggned to
Create value updater for simulation for value of array type :param nextVal: instance of Value
:param val: None or dictionary {index:value} or iterrable of values :param vldMask: if is None
:atention: this will clone item from array, iterate over .val if you need to modify
create hdl vector value
Collect data from interface
Push data to interface set vld high and wait on rd in high then pass
Gues resource usage by HWProcess
:return: bit width for this type
Get value of parameter
set value of this param
Generate flattened register map for HStruct :param interfaceMap: sequence of tuple (type, name) or (will
mux record is in format (self.MUX, n, m) where n is number of bits of
Resolve ports of discovered memories
Try lookup operator with this parameters in _usedOps if not found create new one and
__eq__ is not overloaded because it will destroy hashability of object
Find out if this signal is something indexed
Construct value of this type. Delegated on value class for this type
Cast value or signal of this type to another compatible type. :param sigOrVal: instance of
Cast value or signal of this type to another type of same size. :param sigOrVal:
walk parameter instances on this interface
Connect 1D vector signal to this structuralized interface :param packedSrc: vector which should be connected
:param shouldEnterIntfFn: function (actual interface) returns tuple (shouldEnter, shouldYield)
Concatenate all signals to one big signal, recursively :param masterDirEqTo: only signals with this direction
Due to verilog restrictions it is not posible to use array constants and rom memories
:return: list of extra discovered processes
synthesize all subunits, make connections between them, build entity and component for this unit
Load all declarations from _decl() method, recursively for all interfaces/units.
Register interface in implementation phase
Reverse byteorder (littleendian/bigendian) of signal or value
Return sig and val reduced by & operator or None if it is not possible
Return sig and val reduced by ^ operator or None if it is not possible
Get root of name space
Convert object to HDL string :param obj: object to serialize :param ctx: SerializerCtx instance
Entity is just forward declaration of Architecture, it is not used in most HDL languages
Decide if this unit should be serialized or not eventually fix name to fit same
Serialize HdlType instance
Srialize IfContainer instance
:return: simulation driver which keeps signal value high for initDelay then it sets value to
if is negated return original cond and negated flag
Construct SimBitsT with cache
:param val: None or dict {field name: field value} :param typeObj: instance of String HdlType
Create basic :class:`.Signal` interface where type is vector
Get constant name for value name of constant is reused if same value was used
Cut off statements which are driver of specified signal
Parse HArray type to this transaction template instance :return: address of it's end
Parse HStruct type to this transaction template instance :return: address of it's end
Parse HUnion type to this transaction template instance :return: address of it's end
Parse HUnion type to this transaction template instance :return: address of it's end
Parse any HDL type to this transaction template instance
Only for transactions derived from HArray :return: width of item in original array
Walk fields in instance of TransTmpl :param offset: optional offset for all children in this
:return: generator of generators of tuples ((startBitAddress, endBitAddress), TransTmpl instance) for each possiblility in this
Convert negative int to positive int which has same bits set
:attention: If other is Bool signal convert this to bool (not ideal, due VHDL event
:attention: If other is Bool signal, convert this to bool (not ideal, due VHDL event
:param val: value of python type bool or None :param typeObj: instance of HEnum :param
Doc on parent class :meth:`HdlStatement._discover_sensitivity`
:attention: enclosure has to be discoverd first use _discover_enclosure() method
Doc on parent class :meth:`HdlStatement._iter_stms`
:return: True if other can be merged into this statement else False
Merge other statement to this statement
Doc on parent class :meth:`HdlStatement._try_reduce`
:return: True if statements in branches has different effect
Doc on parent class :meth:`HdlStatement.isSame`
:return: generator of tuples (event operator, signal)
Cached indent getter function
Check if is register or wire
:param top: object which is represenation of design :param topName: name which should be used
:see: doc of method on parent class
:see: doc of method on parent class
:see: doc of method on parent class
:see: doc of method on parent class
:see: doc of method on parent class
:see: doc of method on parent class
Check if not redefining property on obj
Register Param object on interface level object
Auto-propagate params by name to child components and interfaces Usage: .. code-block:: python with self._paramsShared():
Associate this object with specified clk/rst
Update all parameters which are defined on self from otherObj :param otherObj: other object which
Register unit object on interface level object
Register interface object on interface level object
Register array of items on interface level object
:attention: unit has to be parametrized before it is registered (some components can change interface
Returns a first driver if signal has only one driver.
Register potential signals to drivers/endpoints
Recursively statistically evaluate result of this operator
Create operator with result signal :ivar resT: data type of result signal :ivar outputs: iterable
Create copy of this context with increased indent
Try connect src to interface of specified name on unit. Ignore if interface is not
Propagate "clk" clock signal to all subcomponents
Propagate "clk" clock and negative reset "rst_n" signal to all subcomponents
Propagate "clk" clock and reset "rst" signal to all subcomponents
Propagate negative reset "rst_n" signal to all subcomponents
Propagate reset "rst" signal to all subcomponents
Slice signal "what" to fit in "where" or arithmetically (for signed by MSB / unsigned,
Iterate over bits in vector :param sigOrVal: signal or value to iterate over :param bitsInOne:
:param numberOfBits: number of bits to get from actual possition :param doCollect: if False output
:param numberOfBits: number of bits to get from actual possition :return: chunk of bits of
Always decide not to serialize obj :param priv: private data for this function first unit
Decide to serialize only first obj of it's class :param priv: private data for this
Decide to serialize only objs with uniq parameters and class :param priv: private data for
get all name hierarchy separated by '.'
Delegate _make_association on items :note: doc in :func:`~hwt.synthesizer.interfaceLevel.propDeclCollector._make_association`
:note: doc in :func:`~hwt.synthesizer.interfaceLevel.propDeclCollector._updateParamsFrom`
Create simulation model and connect it with interfaces of original unit and decorate it with
Create a simulation model for unit :param unit: interface level unit which you wont prepare
Reconnect model signals to unit to run simulation with simulation model but use original unit
Syntax sugar If outputFile is string try to open it as file :return: hdl simulator
:param unit: interface level unit to simulate :param stimulFunctions: iterable of function(env) (simpy environment) which
Oscillative simulation driver for your signal (usually used as clk generator)
Process for injecting of this callback loop into simulator
Connect to port item on subunit
Connect internal signal to port item, this connection is used by simulator and only output
connet signal from internal side of of this component to this port
return signal inside unit which has this port
Check if hdl process has event depenency on signal
Schedule process on actual time with specified priority
Add hdl process to execution queue :param trigger: instance of SimSignal :param proc: python generator
* Inject default values to simulation * Instantiate IOs for every process
Schedule combUpdateDoneEv event to let agents know that current delta step is ending and values
Apply stashed values to signals
This functions resolves write conflicts for signal :param actionSet: set of actions made by process
Delta step for combinational processes
Delta step for event dependent processes
Perform delta step by writing stacked values to signals
Read value from signal or interface
Write value to signal or interface.
Run simulation until specified time :note: can be used to run simulation again after it
Add process to events with default priority on current time
Run simulation for Unit instance
Function to create variadic operator function :param fn: function to perform binary operation
Check if is register or wire
Convert all ternary operators to IfContainers
Serialize HWProcess objects as VHDL :param scope: name scope to prevent name collisions
Compute the hamming distance between two hashes
Compute the average hash of the given image.
Compute the hamming distance between two images
Set up the Vizio media player platform.
Retrieve latest state of the device.
Mute the volume.
Increasing volume of the device.
Decreasing volume of the device.
Set volume level.
Restores the starting position.
Gets the piece at the given square.
Removes a piece from the given square if present.
Sets a piece at the given square. An existing piece is replaced.
Checks if the given move would move would leave the king in check or put
Checks if the king of the other side is attacked. Such a position is not
Checks if the game is over due to checkmate, stalemate or fourfold repetition.
Checks if the current position is a checkmate.
a game is ended if a position occurs for the fourth time on consecutive alternating
Updates the position with the given move and puts it onto a stack. Null moves
Restores the previous position and returns the last move from the stack.
Gets an SFEN representation of the current position.
Parses a SFEN and sets the position from it. Rasies `ValueError` if the SFEN string
Parses a move in standard coordinate notation, makes the move and puts it on the
Returns a Zobrist hash of the current position.
Gets the symbol `p`, `l`, `n`, etc.
Creates a piece instance from a piece symbol. Raises `ValueError` if the symbol is invalid.
Gets an USI string for the move. For example a move from 7A to 8A
Parses an USI string. Raises `ValueError` if the USI string is invalid.
Accept a string and parse it into many commits. Parse and yield each commit-dictionary. This
Accept a parsed single commit. Some of the named groups require further processing, so parse
run_git_log([git_dir]) -> File Run `git log --numstat --pretty=raw` on the specified git repository and return
Examples: simple call $ vl README.md Adding debug outputs $ vl README.md --debug Adding a
Loads config, checking CLI arguments for a config file
Load's config then runs Django's execute_from_command_line
Adds argument for config to existing argparser
Given a file path, parse it based on its extension (YAML or JSON) and return
Find config file and set values
Dumps initial config in YAML
Documents values in markdown
converts string to type requested by `cast_as`
Returns all dates from first to last included.
Fast %Y-%m-%d parsing.
To be subclassed if alternate methods of loading data.
Fill missing rates of a currency with the closest available ones.
Fill missing rates of a currency. This is done by linear interpolation of the two
Get a rate for a given currency and date. :type date: datetime.date >>> from datetime
Convert amount from a currency to another one. :param float amount: The amount of `currency`
Group iterable by n elements. >>> for t in grouper('abcdefg', 3, fillvalue='x'): ... print(''.join(t)) abc
Animate given frame for set number of iterations. Parameters ---------- frames : list Frames for
Convert Cnf object ot Dimacs cnf string cnf: Cnf object In the converted Cnf there
I just found a remarkably large bug in my SAT solver and found an interesting
[DEPRECATED] Load the polynomial series for `name` and return it.
[DEPRECATED] Compute the position of `name` at time ``tdb [+ tdb2]``. The position is returned
[DEPRECATED] Compute the position and velocity of `name` at ``tdb [+ tdb2]``. The position and
[DEPRECATED] Legacy routine that concatenates position and velocity vectors. This routine is deprecated. Use the
[DEPRECATED] Return a tuple of coefficients and parameters for `tdb`. The return value is a
[DEPRECATED] Return position, given the `coefficient_bundle()` return value.
[DEPRECATED] Return velocity, given the `coefficient_bundle()` return value.
Return record `n` as 1,024 bytes; records are indexed from 1.
Write `data` to file record `n`; records are indexed from 1.
Return a memory-map of the elements `start` through `end`. The memory map will offer the
Return the text inside the comment area of the file.
Return floats from `start` to `end` inclusive, indexed from 1. The entire range of floats
Return floats from `start` to `end` inclusive, indexed from 1. Instead of pausing to load
Yield (record_number, n_summaries, record_data) for each record. Readers will only use the second two values
Yield (name, (value, value, ...)) for each summary in the file.
Add a new array to the DAF file. The summary will be initialized with the
Close this SPK file.
Return a textual description of the segment.
Compute the component values for the time `tdb` plus `tdb2`.
Close this file.
Return a textual description of the segment.
Map the coefficients into memory using a NumPy array.
Generate angles and derivatives for time `tdb` plus `tdb2`. If ``derivative`` is true, return a
Show system notification with duration t (ms)
批量获取音乐的地址
Visit a function call. We expect every logging statement and string format to be a
Process binary operations while processing the first logging argument.
Process dict arguments.
Process f-string arguments.
Process keyword arguments.
Process except blocks.
Heuristic to decide whether an AST Call is a logging call.
Helper to get the exception name from an ExceptHandler node in both py2 and py3.
Check if value has id attribute and return it. :param value: The value to get
Checks if the node is a bare exception name from an except block.
Checks if the node is the expression str(e) or unicode(e), where e is an exception
Reports a violation if exc_info keyword is used with logging.error or logging.exception.
Delete file from database only if needed. When editing and the filefield is a new
Delete the file (if any) from the database. Call this function immediately AFTER deleting the
Edit the download-link inner text.
Returns the freshly rendered content for the template and context described by the PDFResponse. This
Returns a PDF response with a template rendered with the given context.
Converts ``options`` into a list of command-line arguments. Skip arguments where no value is provided
Converts html to PDF using http://wkhtmltopdf.org/. pages: List of file paths or URLs of the
Given a unicode string, will do its dandiest to give you back a valid ascii
Convert all MEDIA files into a file://URL paths in order to correctly get it displayed
If text is matched with pattern, return variable names specified(%{pattern:variable name}) in pattern and their
Sets defaults for ``class Meta`` declarations. Arguments can either be extracted from a `module` (in
Updates class-level defaults for :class:`_Options` container.
Converts a given string from CamelCase to under_score. >>> to_underscore('FooBar') 'foo_bar'
Builds all indices, listed in model's Meta class. >>> class SomeModel(Model) ... class Meta: ...
Same as :meth:`pymongo.collection.Collection.find`, except it returns the right document class.
Same as :meth:`pymongo.collection.Collection.find_one`, except it returns the right document class.
Load and parse a .csv file
Loads the content of the text file
Parse a CSV line into a price element
translate the incoming symbol into locally-used
Loads all symbol maps from db
Reuses the same db session
Add individual price
Import prices from CSV file
displays last price, for symbol if provided
Display all prices
Download the latest prices
Delete old prices, leaving just the last.
Return the default session. The path is read from the default config.
Creates a symbol mapping
Displays all symbol maps
Finds the map by in-symbol
Read text lines from a file
Map the price entity
Parse into the Price entity, ready for saving
Read the config file
gets the default config path from resources
Copy the config template into user's directory
Returns the path where the active config file is expected. This is the user's profile
Reads the contents of the config file
Sets a value in config
Retrieves a config value
Save the config file
Splits the symbol into namespace, symbol tuple
Creates a new price record
Adds the price
Download and save price online
Downloads all the prices that are listed in the Security table. Accepts filter arguments: currency,
Incomplete
Returns the current db session
Fetches all the prices for the given arguments
Returns the latest price on the date
Price repository
Security repository
Prune historical prices for all symbols, leaving only the latest. Returns the number of items
Delete all but the latest available price for the given symbol. Returns the number of
Save changes
Downloads and parses the price
Fetches the securities that match the given filters
Return partial of original function call
Replace child nodes on original function call with their partials
Descend depth first into all child nodes
Decorator for multi to remove nodes for original test functions from root node
Verify that a part that is zoomed in on has equal length. Typically used in
Test whether abstract syntax trees match between the student and solution code. ``has_equal_ast()`` can be
Test the student code. Tests if the student typed a (pattern of) text. It is
Checks whether student imported a package or function correctly. Python features many ways to import
Search student output for a pattern. Among the student and solution process, the student submission
Check if the right printouts happened. ``has_printout()`` will look for the printout in the solution
Check whether the submission did not generate a runtime error. If all SCTs for an
Test multiple choice exercise. Test for a MultipleChoiceExercise. The correct answer (as an integer) and
Check whether a particular function is called. ``check_function()`` is typically followed by: - ``check_args()`` to
Decorator to (optionally) run function in a process.
Get a value from process, return tuple of value, res if succesful
Creates code to assign name (or tuple of names) node from expr This is useful
Override the solution code with something arbitrary. There might be cases in which you want
Update context values for student and solution environments. When ``has_equal_x()`` is used after this, the
Update/set environemnt variables for student and solution environments. When ``has_equal_x()`` is used after this, the
Check object existence (and equality) Check whether an object is defined in the student's process,
Check whether an object is an instance of a certain class. ``is_instance()`` can currently only
Check whether a DataFrame was defined and it is the right type ``check_df()`` is a
Check whether an object (dict, DataFrame, etc) has a key. ``check_keys()`` can currently only be
Return copy of instance, omitting entries that are EMPTY
Dive into nested tree. Set the current state as a state with a subtree of
getter for Parser outputs
When dispatched on loops, has_context the target vars are the attribute _target_vars. Note: This is
When dispatched on with statements, has_context loops over each context manager. Note: This is to
Return child state with name part as its ast tree
Return child state with indexed name part as its ast tree. ``index`` can be: -
Check whether a function argument is specified. This function can follow ``check_function()`` in an SCT
When checking a function definition of lambda function, prepare has_equal_x for checking the call of
Does this compiler support OpenMP parallelization?
zs = np.linspace(0., 1., 1000) rp = 0.1 wrapped = wrapper(_quadratic_ld._quadratic_ld, zs, rp, 0.1, 0.3,
Calculate a model light curve. :param params: Transit parameters :type params: A `TransitParams` instance :return:
Return the time of periastron passage (calculated using `params.t0`).
Return the time of secondary eclipse center (calculated using `params.t0`).
Return the time of primary transit center (calculated using `params.t_secondary`).
Return the true anomaly at each time
Does this compiler support OpenMP parallelization?
Validate the username/password data against ldap directory
Validates the form by calling `validate` on each field, passing any extra `Form.validate_<fieldname>` validators to
Configures this extension with the given app. This registers an ``teardown_appcontext`` call, and attaches this
Configures this extension with a given configuration dictionary. This allows use of this extension without
Add an additional server to the server pool and return the freshly created server. Args:
Add a connection to the appcontext so it can be freed/unbound at a later time
Remove a connection from the appcontext. Args: connection (ldap3.Connection): connection to remove from the appcontext
Cleanup after a request. Close any open connections.
An abstracted authentication method. Decides whether to perform a direct bind or a search bind
Performs a direct bind, however using direct credentials. Can be used if interfacing with an
Performs a direct bind. We can do this since the RDN is the same as
Performs a search bind to authenticate a user. This is required when a the login
Gets a list of groups a user at dn is a member of Args: dn
Gets info about a user specified at dn. Args: dn (str): The dn of the
Gets info about a user at a specified username by searching the Users DN. Username
Gets an object at the specified dn and returns it. Args: dn (str): The dn
Convenience property for externally accessing an authenticated connection to the server. This connection is automatically
Make a connection to the LDAP Directory. Args: bind_user (str): User to bind with. If
Make a connection. Args: bind_user (str): User to bind with. If `None`, AUTH_ANONYMOUS is used,
Destroys a connection. Removes the connection from the appcontext, and unbinds it. Args: connection (ldap3.Connection):
Returns: str: A DN with the DN Base appended to the end. Args: prepend (str):
query a s3 endpoint for an image based on a string EXAMPLE QUERIES: [empty] list
a "show all" search that doesn't require a query Parameters ========== quiet: if quiet is
search for a specific container. If across collections is False, the query is parsed as
query a Singularity registry for a list of images. If query is None, collections are
collection search will list all containers for a specific collection. We assume query is the
search across labels
search for a specific container. If across collections is False, the query is parsed as
query a GitLab artifacts folder for a list of images. If query is None, collections
a "show all" search that doesn't require a query the user is shown URLs to
ensure that the client name is included in a list of tags. This is important
a function for the client to announce him or herself, depending on the level specified.
the client will announce itself given that a command is not in a particular predefined
The user is required to have an application secrets file in his or her environment.
get service client for the google drive API :param version: version to use (default is
dummy add simple returns an object that mimics a database entry, so the calling function
query a Singularity registry for a list of images. If query is None, collections are
a "show all" search that doesn't require a query
collection search will list all containers for a specific collection. We assume query is the
pull an image from gitlab. The image is found based on the uri that should
run will send a list of tasks, a tuple with arguments, through a function. the
get_cache will return the user's cache for singularity. :param subfolder: a subfolder in the cache
push an image to Google Cloud Storage, meaning uploading it path: should correspond to an
upload a file from a source to a destination. The client is expected to have
update headers with a token & other fields
download an image layer (.tar.gz) to a specified download folder. This task is done by
post will use requests to get a particular url
get will use requests to get a particular url
call will issue the call, and issue a refresh token given a 401 response, and
require secrets ensures that the client has the secrets file, and specifically has one or
auth flow is a function to present the user with a url to retrieve some
stream to a temporary file, rename on successful completion Parameters ========== file_name: the file name
stream is a get that will stream to file_name. Since this is a worker task,
update_token uses HTTP basic authentication to attempt to authenticate given a 401 response. We take
create a folder at the drive root. If the folder already exists, it is simply
create a folder with a particular name. Be careful, if the folder already exists you
attempt to read the detail provided by the response. If none, default to using the
get or return the s3 bucket name. If not yet defined via an environment variable
given a bucket name and a client that is initialized, get or create the bucket.
use the user provided endpoint and keys (from environment) to connect to the resource. We
update secrets will update/get the base for the server, along with the bucket name, defaulting
for push, pull, and other api interactions, the user can optionally define a custom registry.
update secrets will take a secrets credential file either located at .sregistry or the environment
init_ cliends will obtain the tranfer and access tokens, and then use them to create
load the secrets credentials file with the Globus OAuthTokenResponse
return boolean True or False if the client tokens (self._auth and self._transfer) need updating.
Present the client with authentication flow to get tokens from code. This simply updates the
return logs for a particular container. The logs file is equivalent to the name, but
return a list of logs. We return any file that ends in .log
helper function to retrieve a particular log, and print. Parameters ========== name: the name of
split an endpoint name by colon, as the user can provide an endpoint name separated
create an endpoint folder, catching the error if it exists. Parameters ========== endpoint_id: the endpoint
return the first fullpath to a folder in the endpoint based on expanding the user's
return a transfer client for the user
use a transfer client to get a specific endpoint based on an endpoint id. Parameters
use a transfer client to get endpoints. If a search term is included, we use
return a list of containers. Since Google Drive definitely has other kinds of files, we
a "list all" search that doesn't require a query. Here we return to the user
search for a specific container. This function is the same as the search all, but
print the status for all or one of the backends.
add the variable to the config
remove a variable from the config, if found.
activate a backend by adding it to the .sregistry configuration file.
delete a backend, and update the secrets file
return a list of backends installed for the user, which is based on the config
pull an image from a dropbox. The image is found based on the storage uri
push an image to your Dropbox Parameters ========== path: should correspond to an absolute image
update a base based on an image name, meaning detecting a particular registry and if
set the API base or default to use Docker Hub. The user is able to
update secrets will take a secrets credential file either located at .sregistry or the environment
share will use the client to get an image based on a query, and then
pull an image from google drive, based on a query (uri or id) Parameters ==========
generate a base64 encoded header to ask for a token. This means base64 encoding a
use an endpoint specific payload and client secret to generate a signature for the request
basic_auth_header will return a base64 encoded header object to :param username: the username
Authorize a client based on encrypting the payload with the client secret, timestamp, and other
delete request, use with caution
head request, typically used for status code retrieval, etc.
determine if a resource is healthy based on an accepted response (200) or redirect (301)
post will use requests to get a particular url
get will use requests to get a particular url
paginate_call is a wrapper for get to paginate results
verify will return a True or False to determine to verify the requests call or
call will issue the call, and issue a refresh token given a 401 response, and
pull an image from a singularity registry Parameters ========== images: refers to the uri given
pull an image from a s3 storage Parameters ========== images: refers to the uri given
delete an image to Singularity Registry
get version by way of sregistry.version, returns a lookup dictionary with several global variables without
get requirements, mean reading in requirements and versions from the lookup obtained with get_lookup
get_singularity_version will determine the singularity version for a build first, an environmental variable is looked
check_install will attempt to run the singularity command, and return True if installed. The command
get_installdir returns the installation directory of the application
return the robot.png thumbnail from the database folder. if the user has exported a different
run_command uses subprocess to send a command to the terminal. Parameters ========== cmd: the command
if you want to add an extra print (of a parameter, for example) for the
this is a wrapper around the main client.get_metadata to first parse a Dropbox FileMetadata into
update secrets will look for a dropbox token in the environment at SREGISTRY_DROPBOX_TOKEN and if
print the output to the console for the user. If the user wants the content
kill is a helper function to call the "kill" function of the client, meaning we
list a specific template (if a name is provided) or all templates available. Parameters ==========
list a specific log for a builder, or the latest log if none provided Parameters
get a listing of collections that the user has access to.
get or create a collection, meaning that if the get returns None, create and return
update secrets will look for a user and token in the environment If we find
The user is required to have an application secrets file in his or her environment.
init client will check if the user has defined a bucket that differs from the
get a bucket based on a bucket name. If it doesn't exist, create it. Parameters
get the correct client depending on the driver of interest. The selected client can be
pull an image from an endpoint Parameters ========== images: refers to the uri given by
give the user an ipython shell, optionally with an endpoint of choice.
update_token uses HTTP basic authentication to get a token for Docker registry API V2 operations.
get_manifests calls get_manifest for each of the schema versions, including v2 and v1. Version 1
get a selfLink for the manifest, for use by the client get_manifest function, along with
get_manifest should return an image manifest for a particular repo and tag. The image details
download layers is a wrapper to do the following for a client loaded with a
determine the user preference for atomic download of layers. If the user has set a
return a list of layers from a manifest. The function is intended to work with
download an image layer (.tar.gz) to a specified download folder. Parameters ========== download_folder: download to
get_size will return the image size (must use v.2.0 manifest) Parameters ========== add_padding: if true,
get_config returns a particular key (default is Entrypoint) from a VERSION 1 manifest obtained with
return the environment.tar generated with the Singularity software. We first try the Linux Filesystem expected
create a metadata tar (runscript and environment) to add to the downloaded image. This function
extract the environment from the manifest, or return None. Used by functions env_extract_image, and env_extract_tar
extract the runscript (EntryPoint) as first priority, unless the user has specified to use the
update the base, including the URL for GitLab and the API endpoint.
update secrets will update metadata needed for pull and search
since the user needs a job id and other parameters, save this for them.
starting with an image string in either of the following formats: job_id|collection job_id|collection|job_name Parse the
get all settings, either for a particular client if a name is provided, or across
return a setting from the environment (first priority) and then secrets (second priority) if one
Look for a setting in the environment (first priority) and then the settings file (second).
a wrapper to get_and_update, but if not successful, will print an error and exit.
Just update a setting, doesn't need to be returned.
use a parsed names dictionary from get_image_name (above) to return the path in storage based
Authorize a client based on encrypting the payload with the client token, which should be
push an image to your Storage. If the collection doesn't exist, it is created. Parameters
trigger a build on Google Cloud (storage then compute) given a name recipe, and Github
list builders, or instances for the project. They should start with sregistry-builder Parameters ========== project:
list templates in the builder bundle library. If a name is provided, look it up
list templates in the builder bundle library. If a name is provided, look it up
load a particular template based on a name. We look for a name IN data,
get instances will return the (unparsed) list of instances, for functions for the user. This
get the ip_address of an inserted instance. Will try three times with delay to give
load a google compute config, meaning that we have the following cases: 1. the user
setup the build based on the selected configuration file, meaning producing the configuration file filled
setconfig will update a lookup to give priority based on the following: 1. If both
run a build, meaning inserting an instance. Retry if there is failure Parameters ========== config:
a "show all" search that doesn't require a query
search for a specific container. This function would likely be similar to the above, but
return a list of containers, determined by finding the metadata field "type" with value "container."
a "list all" search that doesn't require a query. Here we return to the user
search for a specific container. This function would likely be similar to the above, but
a "show all" search that doesn't require a query
the list command corresponds with listing images for an external resource. This is different from
pull an image from google storage, based on the identifier Parameters ========== images: refers to
sharing an image means sending a remote share from an image you control to a
initialize the database, with the default database path or custom of the format sqlite:////scif/data/expfactory.db The
generate a uri on the fly from database parameters if one is not saved with
get default build template.
query will show images determined by the extension of img or simg. Parameters ========== query:
list all endpoints, providing a list of endpoints to the user to better filter the
An endpoint is required here to list files within. Optionally, we can take a path
share will use the client to get a shareable link for an image of choice.
set the API base or default to use Docker Hub. The user is able to
update secrets will take a secrets credential file either located at .sregistry or the environment
pull an image from a Globus endpoint. The user must have the default local endpoint
if the user has specified settings to provide a cache for credentials files, initialize it.
update client secrets will update the data structure for a particular authentication. This should only
for private or protected registries, a client secrets file is required to be located at
init client will check if the user has defined a bucket that differs from the
get version 1 of the google compute and storage service Parameters ========== version: version to
get a bucket based on a bucket name. If it doesn't exist, create it.
delete object will delete a file from a bucket Parameters ========== storage_service: the service obtained
delete an image from Google Storage. Parameters ========== name: the name of the file (or
destroy an instance, meaning take down the instance and stop the build. Parameters ========== name:
get_subparser will get a dictionary of subparsers, to help with printing help
main is the entrypoint to the sregistry client. The flow works to first to determine
Generate a robot name. Inspiration from Haikunator, but much more poorly implemented ;) Parameters ==========
mkdir_p attempts to get the same functionality as mkdir -p :param path: the path to
get a temporary file with an optional prefix. By default will be created in /tmp
get a temporary directory for an operation. If SREGISTRY_TMPDIR is set, return that. Otherwise, return
extract a tar archive to a specified output folder Parameters ========== archive: the archive file
use blob2oci to handle whiteout files for extraction. Credit for this script goes to docker2oci
create_memory_tar will take a list of files (each a dictionary with name, permission, and content)
get_content_hash will return a hash for a list of content (bytes/other)
find the SHA256 hash string of a file
write_json will (optionally,pretty print) a json object to file Parameters ========== json_obj: the dict to
write_file will open a file, "filename" and write content, "content" and properly close the file
read_json reads in a json file and returns the data structure as dict.
clean up will delete a list of files, only if they exist
pull an image from a docker hub. This is a (less than ideal) workaround that
pull an image from a singularity registry Parameters ========== images: refers to the uri given
push an image to an S3 endpoint
get a collection if it exists. If it doesn't exist, create it first. Parameters ==========
get a collection, if it exists, otherwise return None.
get a container, otherwise return None.
Do a get for a container, and then a collection, and then return None if
List local images in the database, optionally with a query. Paramters ========= query: a string
Inspect a local image in the database, which typically includes the basic fields in the
rename performs a move, but ensures the path is maintained in storage Parameters ========== image_name:
Move an image from it's current location to a new path. Removing the image from
_cp is the shared function between mv (move) and rename, and performs the move, and
Remove an image from the database and filesystem.
Remove an image from the database, akin to untagging the image. This does not delete
get or create a container, including the collection to add it to. This function can
push an image to Singularity Registry
take a recipe, and return the complete header, line. If remove_header is True, only return
find recipes will use a list of base folders, files, or patterns over a subset
find folder recipes will find recipes based on a particular pattern. Parameters ========== base_folder: the
find_single_recipe will parse a single file, and if valid, return an updated manifest Parameters ==========
trigger a build on Google Cloud (builder then storage) given a name recipe, and Github
given a list of files, copy them to a temporary folder, compress into a .tar.gz,
load a google compute config, meaning that we start with a template, and mimic the
run a build, meaning creating a build. Retry if there is failure
a specific function to take a blob, along with a SUCCESS response from Google build,
query a Singularity registry for a list of images. If query is None, collections are
a "show all" search that doesn't require a query
return a collection and repo name and tag for an image file. Parameters ========= image_name:
format_container_name will take a name supplied by the user, remove all special characters (except for
get the uri for an image, if within acceptable Parameters ========== image: the image uri,
pull an image from storage using Swift. The image is found based on the storage
push an image to Google Cloud Drive, meaning uploading it path: should correspond to an
set the API base or default to use Docker Hub. The user is able to
update secrets will take a secrets credential file either located at .sregistry or the environment
get_logging_level will configure a logging to standard out based on the user's selected level, which
useColor will determine if color should be added to a print. Will check if being
addColor to the prompt (usually prefix) if terminal supports, and specified to do so
determine if a level should print to stderr, includes all levels but INFO and QUIET
emit is the main function to print the message optionally with a prefix :param level:
write will write a message to a stream, first checking the encoding
get_logs will return the complete history, joined by newline (default) or as is.
create a terminal progress bar, default bar shows for verbose+ Parameters ========== iteration: current iteration
table will print a table of entries. If the rows is a dictionary, the keys
push an image to Singularity Registry path: should correspond to an absolte image path (or
push an image to Globus endpoint. In this case, the name is the globus endpoint
return a default template for some function in sregistry If there is no template, None
update_token uses HTTP basic authentication to get a token for Docker registry API V2 operations.
download layers is a wrapper to do the following for a client loaded with a
return the image manifest via the aws client, saved in self.manifest
return a list of layers from a manifest. The function is intended to work with
prepare a key/value list of metadata for the request. The metadata object that comes in
get a particular build template, by default we return templates that are based on package
extract metadata using Singularity inspect, if the executable is found. If not, return a reasonable
pull an image from a docker hub. This is a (less than ideal) workaround that
update secrets will take a secrets credential file either located at .sregistry or the environment
Generate a repr string. Positional arguments should be the positional arguments used to construct the
Translate S3 errors to FSErrors.
Create a S3File backed with a temporary file.
Builds a gravatar url from an user or email
Builds an gravatar <img> tag from an user or email
Builds a url to a gravatar from an email address. :param email: The email to
Returns True if the user has a gravatar, False if otherwise
Builds a url to a gravatar profile from an email address. :param email: The email
the QUBO for k-coloring a graph A is as follows: variables: x_{v,c} = 1 if
Generator for blocks for a chimera block quotient
Extract the blocks from a graph, and returns a block-quotient graph according to the acceptability
Produce an embedding in target_graph suitable to check if source_graph is 4-colorable. More generally, if
Return a set of resonance forms as SMILES strings, given a SMILES string. :param smiles:
Enumerate all possible resonance forms and return them as a list. :param mol: The input
Apply a series of Normalization transforms to correct functional groups and recombine charges. A series
Repeatedly apply normalization transform to molecule until no changes occur. It is possible for multiple
Return a canonical tautomer by enumerating and scoring all possible tautomers. :param mol: The input
Enumerate all possible tautomers and return them as a list. :param mol: The input molecule.
Return log messages for a given SMILES string using the default validations. Note: This is
Break covalent bonds between metals and organic atoms under certain conditions. The algorithm works as
Return a standardized canonical SMILES string given a SMILES string. Note: This is a convenience
Return a set of tautomers as SMILES strings, given a SMILES string. :param smiles: A
Return a standardized canonical tautomer SMILES string given a SMILES string. Note: This is a
Return a standardized version the given molecule. The standardization process consists of the following stages:
Return the tautomer parent of a given molecule. :param mol: The input molecule. :type mol:
Return the fragment parent of a given molecule. The fragment parent is the largest organic
Return the stereo parent of a given molecule. The stereo parent has all stereochemistry information
Return the isotope parent of a given molecule. The isotope parent has all atoms replaced
Return the charge parent of a given molecule. The charge parent is the uncharged version
Return the super parent of a given molecule. THe super parent is fragment, charge, isotope,
:returns: A callable :class:`~molvs.tautomer.TautomerCanonicalizer` instance.
Main function for molvs command line interface.
Enforce charges on certain atoms, then perform competitive reionization. First, charge corrections are applied to
Neutralize molecule by adding/removing hydrogens. :param mol: The molecule to uncharge. :type mol: rdkit.Chem.rdchem.Mol :return:
Get negatively charged atoms to skip (up to pos_count).
Return the molecule with specified fragments removed. :param mol: The molecule to remove fragments from.
Return the largest covalent unit. The largest fragment is determined by number of atoms (including
Example program integrating an IVP problem of van der Pol oscillator
Integrates a system of ordinary differential equations. Solves the initial value problem (IVP) defined by
Integrates a system of ordinary differential equations. Solves the initial value problem (IVP) defined by
Retrieves the statistics from the given organization with the given credentials. Will not retreive data
Retrieves the number of members of the organization.
Retrieves the number of teams of the organization.
Retrieves info about the repos of the current organization.
Retrieves the number of contributors to a repo in the organization. Also adds to unique
Retrieves the number of pull requests on a repo in the organization.
Retrieves the number of closed issues.
Retrieves the languages used in the repo and increments the respective counts of those languages.
Checks to see if the given repo has a ReadMe. MD means it has a
Checks to see if the given repo has a top level LICENSE file.
Retrieves the number of commits to a repo in the organization. If it is the
Writes stats from the organization to JSON.
#Writes repo specific data to JSON.
Writes the current organization information to file (csv).
Updates the total.csv file with current data.
Updates languages.csv file with current data.
Checks if a directory exists. If not, it creates one with the specified file_path.
Removes all rows of the associated date from the given csv file. Defaults to today.
The following code was modified from http://stackoverflow.com/a/10289740 & http://stackoverflow.com/a/17309010 It essentially will check if the
Returns a list of the names of US Government GitHub organizations Based on: https://government.github.com/community/ Exmample
Create a github3.py session connected to GitHub.com If token is not provided, will attempt to
Create a github3.py session for a GitHub Enterprise instance If token is not provided, will
Simplified check for API limits If necessary, spin in place waiting for API to reset
Create a GitHub session for making requests
Yields GitHub3.py repo objects for provided orgs and repo names If orgs and repos are
Retrieves the traffic for the users of the given organization. Requires organization admin credentials token
Retrieves an organization via given org name. If given empty string, prompts user for an
Gets the repos for the organization and builds the URL/headers for getting timestamps of stargazers.
Return a list of the stargazers of a GitHub repo Includes both the 'starred_at' and
Writes stargazers data to file.
Create CodeGovProject object from github3 Repository object
Create CodeGovProject object from GitLab Repository
Handles crafting Code.gov Project for Bitbucket Server repositories
Create CodeGovProject object from DOE CODE record Handles crafting Code.gov Project
Creates CodeGovProject object from TFS/VSTS/AzureDevOps Instance
Master function to process a Scraper config file Returns a Code.gov Metadata file
Forces certain fields in the Code.gov Metadata json
A helper function to look up license object information Use names from: https://api.github.com/licenses
Retrieves the traffic for the users of the given organization. Requires organization admin credentials token
Retrieves the traffic for the repositories of the given organization.
Retrieves the releases for the given repo in JSON.
Retrieves the total referrers and unique referrers of all repos in json and then stores
Retrieves data from json and stores it in the supplied dict. Accepts 'clones' or 'views'
Writes all traffic data to file in JSON form.
Writes all traffic data to file.
Checks the given csv file against the json data scraped for the given dict. It
Writes given dict to file.
Writes the referrers data to file.
Converts a DOE CODE .json file into DOE CODE projects Yields DOE CODE records from
Yields DOE CODE records from a DOE CODE .json URL response Converts a DOE CODE
Yeilds DOE CODE records based on provided input sources param: filename (str): Path to a
Performs a login and sets the Github object via given credentials. If credentials are empty
Retrieves the emails of the members of the organization. Note this Only gets public emails.
Writes the user emails to file.
Return a connected Bitbucket session
Return a list of the stargazers of a GitHub repo Includes both the 'starred_at' and
Return a connected GitLab session ``token`` should be a ``private_token`` from Gitlab
Yields Gitlab project objects for all projects in Bitbucket
Given a Git repository URL, returns number of lines of code based on cloc Reference:
Compute the labor hours, given a count of source lines of code The intention is
Prune the "None" or emptry string values from dictionary items
Read a 'pretty' formatted GraphQL query file into a one-line string. Removes line breaks and
Submit a GitHub GraphQL query from a file. Can only be used with GraphQL queries.
Submit a GitHub query. Args: gitquery (str): The query or endpoint itself. Examples: query: 'query
Send a curl request to GitHub. Args: gitquery (str): The query or endpoint itself. Examples:
Wait until the given UTC timestamp. Args: utcTimeStamp (int): A UTC format timestamp. verbose (Optional[bool]):
Makes a pretty countdown. Args: gitquery (str): The query or endpoint itself. Examples: query: 'query
Load a JSON data file into the internal JSON data dictionary. Current internal data will
Write the internal JSON data dictionary to a JSON data file. If no file path
Creates the TFS Connection Context
Create a project_analysis_client.py client for a Team Foundation Server Enterprise connection instance. This is helpful
Create a core_client.py client for a Team Foundation Server Enterprise connection instance If token is
Creates a TFS Git Client to pull Git repo info
Creates a TFS TFVC Client to pull TFVC repo info
Returns a list of all projects with their collection info from the server. Currently limited
Returns a list of all git repos for the supplied project within the supplied collection
Returns a list of all tfvc branches for the supplied project within the supplied collection
Does setup such as login, printing API info, and waiting for GitHub to build the
Retrieves the last year of commits for the organization and stores them in weeks (UNIX
Uses the weekly commits and traverses back through the last year, each week subtracting the
Writes the weeks with associated commits to file.
Instantiate and configures backends. :arg list-of-dicts backends: the backend configuration as a list of dicts
Return MetricsInterface instance with specified name. The name is used as the prefix for all
Record a timing value. Record the length of time of something to be added to
Contextmanager for easily computing timings. :arg string stat: A period delimited alphanumeric key. :arg list-of-strings
Timer decorator for easily computing timings. :arg string stat: A period delimited alphanumeric key. :arg
Increment a counter.
Measure a timing for statistical distribution.
Increment a counter.
Set a gauge.
Measure a timing for statistical distribution.
Measure a value for statistical distribution.
Generate a tag for use with the tag backends. The key and value (if there
Increment a counter.
Set a gauge.
Report a timing.
Report a histogram.
Roll up stats and log them.
Increment a counter.
Set a gauge.
Measure a timing for statistical distribution. Note: timing is a special case of histogram.
Measure a value for statistical distribution.
Make an annotation value that can be used to sort by an enum field. ``field``
Convert a string from the database into an Enum value
Convert a string from a form into an Enum value.
Convert an Enum value into a string for the database
0 -> no terms idd 1 -> most term idd are shared in root morphem
0 -> no terms idd 1 -> most term idd are shared in root morphem
Parses the input string, and returns a reference to the created AST's root
path : additive_path
path_sum : ctx_path | path_sum PLUS ctx_path
ctx_path : ctx_coords
ctx_coords : multiplicative_path | ctx_coords COLON multiplicative_path
product : additive_path_p | coordinate | product additive_path_p | product coordinate
coordinate : COORD_KIND | COORD_KIND COORD_INDEX
Display the terms added and removed between two versions :param version0: :param version1: :return:
Download the dictionary version and cache the retrieved file. :return: None
s.-S:.U:.-'l.-S:.O:.-'n.-S:.U:.-',+M:.-'M:.-'n.-S:.U:.-', => n.-S:.U:.-'s.-S:.U:.-'l.-S:.O:.-',+n.-S:.U:.-‘M:.-‘M:.-‘,
E:F:.O:M:.t.- => E:.-F:.O:M:.-t.-‘ E:F:.M:M:.l.- => E:.-F:.M:M:.-l.-‘
E:O:.-M:O:.-t.o.-' => E:.-O:.M:O:.-t.o.-‘
O:O:.O:O:.- => O:O:.O:O:.t.-
i.B:.-+u.M:.-O:.-' => i.f.B:.-+u.f.M:.-O:.-
M:.-O:.-'M:.-wa.e.-'t.x.-s.y.-', => M:.-O:.-'M:.-wa.e.-'t.-x.-s.y.-',
translate the root paradigms in key in argument, with the function in value :param to_translate:
i.f.B:.-+u.f.M:.-O:.-' -> i.B:.-+u.M:.-O:.-
M:.-O:.-'M:.-wa.e.-'t.-x.-s.y.-', => t.-x.-s.y.-' wa.e.-', M:M:.-',O:.-',_
M:.O:.-O:.O:.-B:.T:.n.-' => s.M:O:.O:O:.-
O:M:.-O:M:.-we.h.-' => O:M:.-'O:M:.-'s.o.-k.o.-',
s.u.-'O:M:.-'O:.-',+s.u.-'M:O:.-O:.-'M:.-', => b.-S:.U:.-'O:M:.-'O:.-', + b.-S:.U:.-'M:O:.-O:.-'M:.-',
O:.M:.- => s.o.-k.o.-'M:O:.-',
O:.M:.-M:.-' => s.o.-k.o.-‘M:O:.-‘,M:.-',_
Parses the input string, and returns a reference to the created AST's root
literal_list : literal_list LITERAL | LITERAL
word : TERM | LBRACKET TERM RBRACKET | LBRACKET TERM RBRACKET literal_list
word_sum : word_sum PLUS word | word clauses_sum : clauses_sum PLUS clause | clause superclauses_sum
topic : LBRACKET morpheme RBRACKET | LBRACKET morpheme RBRACKET literal_list | LBRACKET morpheme TIMES morpheme
fact : LBRACKET clauses_sum RBRACKET | LBRACKET clauses_sum RBRACKET literal_list
theory : LBRACKET superclauses_sum RBRACKET | LBRACKET superclauses_sum RBRACKET literal_list
closed_proposition_list : closed_proposition_list SLASH SLASH closed_proposition | closed_proposition
:param facto_list: list of parser or tuple of factorisation :return:
A boolean matrix, m[i, j] == True if there is a relation term(i) -> term(j)
path is a mul of coord or a coord
Resolve the context of the rules (the type of this element), and building the ieml
`usls` is an iterable of usl. return a mapping term -> usl list
usls_data: usl => data[] :param usls_data: :return:
script_lvl_0 : PRIMITIVE LAYER0_MARK | REMARKABLE_ADDITION LAYER0_MARK
sum_lvl_0 : script_lvl_0 | script_lvl_0 PLUS sum_lvl_0
script_lvl_1 : additive_script_lvl_0 LAYER1_MARK | additive_script_lvl_0 additive_script_lvl_0 LAYER1_MARK | additive_script_lvl_0 additive_script_lvl_0 additive_script_lvl_0 LAYER1_MARK | REMARKABLE_MULTIPLICATION
sum_lvl_1 : script_lvl_1 | script_lvl_1 PLUS sum_lvl_1
Compute the ordering of a list of usls from each usl and return the matrix
True when the term is a subset of this term tables. If the parent of
Slow method, retrieve all the terms from the database. :return:
Returns the mean value.
Returns variance
Record an event with the meter. By default it will record one event. :param value:
Returns the mean rate of the events since the start of the process.
Record an event with the derive. :param value: counter value to record
Wrapper to make map() behave the same on Py2 and Py3.
Send metric and its snapshot.
Serialize and send available measures of a metric.
Compose a statsd compatible string for a metric's measurement.
Add a metric to the buffer.
Get method that raises MissingSetting if the value was unset. This differs from the SafeConfigParser
Set method that (1) auto-saves if possible and (2) auto-creates sections.
json.loads wants an unistr in Python3. Convert it.
Shortcut for urlopen (POST) + read. We'll probably want to add a nice timeout here
Shortcut for urlopen (PUT) + read. We'll probably want to add a nice timeout here
Connect to a host on a given (SSL) port.
Base method to fetch values and to set defaults in case they don't exist.
Convert set of human codes and to a dict of code to exactonline guid mappings.
Get VATCode (up to three digit number) for the specified ledger line. Can be as
Get the "current" division and return a dictionary of divisions so the user can select
Select the "current" division that we'll be working on/with.
Optionally supply a list of ExactOnline invoice numbers. Returns a dictionary of ExactOnline invoice numbers
Optionally supply a list of foreign (your) invoice numbers. Returns a dictionary of your invoice
A common query would be duedate__lt=date(2015, 1, 1) to get all Receivables that are due
Create the (11745) Sudoku clauses, and return them as a list. Note that these clauses
solve a Sudoku grid inplace
Create Django class-based view from injector class.
Create Django form processing class-based view from injector class.
Create Flask method based dispatching view from injector class.
Create DRF class-based API view from injector class.
Create DRF generic class-based API view from injector class.
Create DRF model view set from injector class.
Recieve a streamer for a given file descriptor.
Called by the event loop whenever the fd is ready for reading.
Public API: pause reading the transport.
Public API: resume transport reading.
Actual closing code, both from manual close and errors.
Finalize closing.
Add a new watching rule.
Stop watching a given rule.
Actual rule setup.
Start the watcher, registering new watches if any.
Fetch an event. This coroutine will swallow events for removed watches.
Respond to ``nsqd`` that you've processed this message successfully (or would like to silently discard
Respond to ``nsqd`` that you've failed to process this message successfully (and would like it
Respond to ``nsqd`` that you need more time to process the message.
Starts any instantiated :class:`nsq.Reader` or :class:`nsq.Writer`
Update the timer to reflect a successfull call
Update the timer to reflect a failed call
encode a dictionary of URL parameters (including iterables) as utf-8
Closes all connections stops all periodic callbacks
Used to identify when buffered messages should be processed and responded to. When max_in_flight >
Adds a connection to ``nsqd`` at the specified address. :param host: the address to connect
Trigger a query of the configured ``nsq_lookupd_http_addresses``.
Dynamically adjust the reader max_in_flight. Set to 0 to immediately disable a Reader
Called when a message has been received where ``msg.attempts > max_tries`` This is useful to
Listen for the named event with the specified callback. :param name: the name of the
Stop listening for the named event via the specified callback. :param name: the name of
Execute the callbacks for the listeners on the specified event with the supplied arguments. All
publish a message to nsq :param topic: nsq topic :param msg: message body (bytes) :param
publish multiple messages in one command (efficiently) :param topic: nsq topic :param msg: list of
publish multiple messages in one command (efficiently) :param topic: nsq topic :param delay_ms: tell nsqd
Score function to calculate score
Score function to calculate score
Train Pocket Perceptron Learning Algorithm From f(x) = WX Find best h(x) = WX similar
original_X = self.svm_processor.train_X[:, 1:] score = 0 for i in range(len(self.svm_processor.sv_alpha)): score += self.svm_processor.sv_alpha[i] *
Train Linear Regression Algorithm From f(x) = WX Find best h(x) = WX similar to
Score function to calculate score
Train Perceptron Learning Algorithm From f(x) = WX Find best h(x) = WX similar to
load file
K = np.zeros((svm_model.data_num, svm_model.data_num)) for i in range(svm_model.data_num): for j in range(svm_model.data_num): if (svm_model.svm_kernel ==
K = np.zeros((svm_model.data_num, svm_model.data_num)) for i in range(svm_model.data_num): for j in range(svm_model.data_num): if (svm_model.svm_kernel ==
Transform data feature to high level
Make prediction input test data output the prediction
Theta sigmoid function
Score function to calculate score
Error function to calculate error: cross entropy error
Retrieves some statistics from a single Trimmomatic log file. This function parses Trimmomatic's log file
Cleans the working directory of unwanted temporary files
Merges the default adapters file in the trimmomatic adapters directory Returns ------- str Path with
Main executor of the trimmomatic template. Parameters ---------- sample_id : str Sample Identification string. fastq_pair
Function that parse samtools depth file and creates 3 dictionaries that will be useful to
Function that handles the inputs required to parse depth files from bowtie and dumps a
Sets the path to the appropriate jinja template file When a Process instance is initialized,
Sets the main channel names based on the provide input and output channel suffixes. This
Returns the main raw channel for the process Provided with at least a channel name,
Wrapper to the jinja2 render method from a template file Parameters ---------- template : str
Class property that returns a populated template string This property allows the template of a
General purpose method that sets the main channels This method will take a variable number
Updates the forks attribute with the sink channel destination Parameters ---------- sink : str Channel
General purpose method for setting a secondary channel This method allows a given source channel
Updates the directives attribute from a dictionary object. This will only update the directives for
General method for setting the input channels for the status process Given a list of
Sets the main input channels of the pipeline and their forks. The ``raw_input`` dictionary input
Adds secondary inputs to the start of the pipeline. This channels are inserted into the
Sets the initial definition of the extra input channels. The ``channel_dict`` argument should contain the
Main executor of the process_mapping template. Parameters ---------- sample_id : str Sample Identification string. assembly:
Attempts to retrieve the coverage value from the header string. It splits the header by
Parse an assembly fasta file. This is a Fasta parsing method that populates the :py:attr:`~Assembly.contigs`
Inserts data from a single contig into\ :py:attr:`~Assembly.contigs`. By providing a contig id, the original
Get GC content and proportions. Parameters ---------- sequence : str The complete sequence of the
Filters the contigs of the assembly according to user provided\ comparisons. The comparisons must be
Returns the length of the assembly, without the filtered contigs. Returns ------- x : int
Writes the assembly to a new file. The ``filtered`` option controls whether the new assembly
Writes a report with the test results for the current assembly Parameters ---------- output_file :
Function to guess processes based on strings that are not available in process_map. If the
Recursively removes nested brackets This function is used to remove nested brackets from fork strings
This function performs a check for different number of '(' and ')' characters, which indicates
This function checks if the pipeline string contains a process between the fork start token
This function performs two sanity checks in the pipeline string. The first check, assures that
Wrapper that performs all sanity checks on the pipeline string Parameters ---------- pipeline_str : str
Parses a pipeline string into a list of dictionaries with the connections between processes Parameters
Returns the lane of the last process that matches fork_process Parameters ---------- fork_process : list
From a raw pipeline string, get a list of lanes from the start of the
Connects a linear list of processes into a list of dictionaries Parameters ---------- plist :
Makes the connection between a process and the first processes in the lanes to which
Returns the pipeline string with unique identifiers and a dictionary with references between the unique
Removes unique identifiers and add the original process names to the already parsed pipelines Parameters
This function is bound to the SIGINT signal (like ctrl+c) to graciously exit the program
Checks whetner the trace and log files are available
Parses the trace file header and retrieves the positions of each column key. Parameters ----------
Expands the hash string of a process (ae/1dasjdm) into a full working directory Parameters ----------
Converts a hms string into seconds. Parameters ---------- s : str The hms string can
Converts size string into megabytes Parameters ---------- s : str The size string can be
Parses the .nextflow.log file and retrieves the complete list of processes This method searches for
Clears inspect attributes when re-executing a pipeline
Parses the .nextflow.log file for signatures of pipeline status. It sets the :attr:`status_info` attribute.
Updates the 'submitted', 'finished', 'failed' and 'retry' status of each process/tag combination. Process/tag combinations provided
Checks whether the channels to each process have been closed.
Method used to retrieve the contents of a log file into a list. Parameters ----------
Parses a trace line and updates the :attr:`status_info` attribute. Parameters ---------- fields : list List
Updates the resources info in :attr:`processes` dictionary.
Parses the cpu load from the number of cpus and its usage percentage and returnsde
Assess whether the cpu load or memory usage is above the allocation Parameters ---------- process
Updates the process stats with the information from the processes This method is called at
Method that parses the trace file once and updates the :attr:`status_info` attribute with the new
Method that parses the nextflow log file once and updates the submitted number of samples
Wrapper method that calls the appropriate main updating methods of the inspection. It is meant
Displays the default pipeline inspection overview
Provides curses scroll functionality.
Provides curses horizontal padding
Displays the default overview of the pipeline execution from the :attr:`status_info`, :attr:`processes` and :attr:`run_status` attributes
Returns a list with the last ``n`` lines of the nextflow log file Parameters ----------
Prepares the first batch of information, containing static information such as the pipeline file, and
Function that opens the dotfile named .treeDag.json in the current working directory Returns ------- Returns
Gets the hash of the nextflow file
Gets the nextflow file path from the nextflow log file. It searches for the nextflow
Main executor of the split_fasta template. Parameters ---------- sample_id : str Sample Identification string. assembly
Parses a nextflow trace file, searches for processes with a specific tag and sends a
Brews a given list of processes according to the recipe Parameters ---------- args : argparse.Namespace
Returns a pipeline string from a recipe name. Parameters ---------- recipe_name : str Name of
Method that iterates over all available recipes and prints their information to the standard output
Validate pipeline string Validates the pipeline string by searching for forbidden characters Parameters ---------- pipeline_string
Builds the upstream pipeline of the current process Checks for the upstream processes to the
Builds the downstream pipeline of the current process Checks for the downstream processes to the
Builds the possible forks and connections between the provided processes This method loops through all
Parses, filters and merge all possible pipeline forks into the final pipeline string This method
Main method to run the automatic pipeline creation This method aggregates the functions required to
Generates a component string based on the provided parameters and directives Parameters ---------- component :
Writes a report from multiple samples. Parameters ---------- storage_dic : dict or :py:class:`OrderedDict` Storage containing
Main executor of the trimmomatic_report template. Parameters ---------- log_files : list List of paths to
Removes whitespace from the assembly contig names Parameters ---------- asseembly_path : path to assembly file
Cleans the temporary fastq files. If they are symlinks, the link source is removed Parameters
Public method for parsing abricate output files. This method is called at at class instantiation
Parser for a single abricate output file. This parser will scan a single Abricate output
General purpose filter iterator. This general filter iterator allows the filtering of entries based on
Tries to retrieve contig id. Returns the original string if it is unable to retrieve
Generates the JSON report to plot the gene boxes Following the convention of the reports
Writes the JSON report to a json file
Main executor of the assembly_report template. Parameters ---------- sample_id : str Sample Identification string. assembly_file
Parse an assembly file in fasta format. This is a Fasta parsing method that populates
Generates a CSV report with summary statistics about the assembly The calculated statistics are: -
Returns the mapping between sliding window points and their contigs, and the x-axis position of
Get proportion of GC from a string Parameters ---------- s : str Arbitrary string Returns
Calculates a sliding window of the GC content for the assembly Returns ------- gc_res :
Main executor of the skesa template. Parameters ---------- sample_id : str Sample Identification string. fastq_pair
Writes the report Parameters ---------- data1 data2 Returns -------
Returns the trim index from a ``bool`` list Provided with a list of ``bool`` elements
Assess the optimal trim range for a given FastQC data file. This function will parse
Get the optimal read trim range from data files of paired FastQ reads. Given the
Parses a FastQC summary report file and returns it as a dictionary. This function parses
Checks the health of a sample from the FastQC summary file. Parses the FastQC summary
Main executor of the fastqc_report template. If the "--ignore-tests" option is present in the ``opts``
Main executor of the process_mapping template. Parameters ---------- sample_id : str Sample Identification string. boetie_log:
Parse a bowtie log file. This is a bowtie log parsing method that populates the
Parses the process string and returns the process name and its directives Process strings my
Parses the process connections dictionaries into a process list This method is called upon instantiation
Returns the input/output process names and output process directives Parameters ---------- con : dict Dictionary
Automatically Adds a dependency of a process. This method adds a template to the process
Searches the process tree backwards in search of a provided process The search takes into
Adds the header template to the master template string
Adds the footer template to the master template string
Given a process, this method updates the :attr:`~Process.main_raw_inputs` attribute with the corresponding raw input channel
Given a process, this method updates the :attr:`~Process.extra_inputs` attribute with the corresponding extra inputs of
Given a process, this method updates the :attr:`~Process.secondary_channels` attribute with the corresponding secondary inputs of
Sets the main channels for the pipeline This method will parse de the :attr:`~Process.processes` attribute
Sets the main raw inputs and secondary inputs on the init process This method will
Sets the secondary channels for the pipeline This will iterate over the :py:attr:`NextflowGenerator.secondary_channels` dictionary that
Adds compiler channels to the :attr:`processes` attribute. This method will iterate over the pipeline's processes
Compiles all status channels for the status compiler process
Returns the nextflow resources string from a dictionary object If the dictionary has at least
Returns the nextflow containers string from a dictionary object If the dictionary has at least
Returns the nextflow params string from a dictionary object. The params dict should be a
Returns the merged nextflow params string from a dictionary object. The params dict should be
Returns the nextflow manifest config string to include in the config file from the information
This method will iterate over all process in the pipeline and populate the nextflow configuration
Writes dag to output file Parameters ---------- dict_viz: dict Tree like dictionary that is used
Write pipeline attributes to json This function writes the pipeline and their attributes to a
Wrapper method that writes all configuration files to the pipeline directory
Export pipeline params as a JSON to stdout This run mode iterates over the pipeline
Export pipeline directives as a JSON to stdout
Export all dockerhub tags associated with each component given by the -t flag.
Main pipeline builder This method is responsible for building the :py:attr:`NextflowGenerator.template` attribute that will contain
Returns a kmer list based on the provided kmer option and max read len. Parameters
Main executor of the spades template. Parameters ---------- sample_id : str Sample Identification string. fastq_pair
Returns a hash of the reports JSON file
Parses the .nextflow.log file for signatures of pipeline status and sets the :attr:`status_info` attribute.
Parses the nextflow trace file and retrieves the path of report JSON files that have
Parses nextflow log file and updates the run status
Sends a PUT request with the report JSON files currently in the report_queue attribute. Parameters
Sends a POST request to initialize the live reports Parameters ---------- report_id : str Hash
Sends a delete request for the report JSON hash Parameters ---------- report_id : str Hash
Generates an adapter file for FastQC from a fasta file. The provided adapters file is
Main executor of the fastq template. Parameters ---------- fastq_pair : list Two element list containing
Send dictionary to output json file This function sends master_dict dictionary to a json file
Main function that allows to dump a mash dist txt file to a json file
Writes versions JSON for a template file This method creates the JSON file ``.versions`` based
converts top results from mash screen txt output to json format Parameters ---------- mash_output: str
This function enables users to add a color to the print. It also enables to
This function handles the dictionary of attributes of each Process class to print to stdout
Function that collects all processes available and stores a dictionary of the required arguments of
Guesses the compression of an input file. This function guesses the compression of a given
Get range of the Unicode encode range for a given string of characters. The encoding
Returns the valid encodings for a given encoding range. The encoding ranges are stored in
Main executor of the integrity_coverage template. Parameters ---------- sample_id : str Sample Identification string. fastq_pair
Parses a file with coverage information into objects. This function parses a TSV file containing
Generates a filtered assembly file. This function generates a filtered assembly file based on an
Uses Samtools to filter a BAM file according to minimum coverage Provided with a minimum
Checks whether a filtered assembly passes a size threshold Given a minimum coverage threshold, this
Evaluates the minimum coverage threshold from the value provided in the coverage_opt. Parameters ---------- coverage_opt
Returns the number of nucleotides and the size per contig for the provided assembly file
Main executor of the process_assembly_mapping template. Parameters ---------- sample_id : str Sample Identification string. assembly_file
Main executor of the process_spades template. Parameters ---------- sample_id : str Sample Identification string. assembly_file
Convers a CamelCase string into a snake_case one Parameters ---------- name : str An arbitrary
Collects Process classes and return dict mapping templates to classes This function crawls through the
Main executor of the process_newick template. Parameters ---------- newick : str path to the newick
Factorize s.t. CUR = data Updated Values -------------- .C : updated values for C. .U
Factorize s.t. CUR = data Updated Values -------------- .C : updated values for C. .U
Find data points on the convex hull of a supplied data set Args: sample: data
Return data points that are most similar to basis vectors W
compute new W
Factorize s.t. WH = data Parameters ---------- show_progress : bool print some extra information to
compute new W
Factorize s.t. WH = data Parameters ---------- show_progress : bool print some extra information to
Main process. Returns ------- est_idxs : np.array(N) or list Estimated times for the segment boundaries
Main process.for flat segmentation. Returns ------- est_idxs : np.array(N) Estimated times for the segment boundaries
Main process.for hierarchial segmentation. Returns ------- est_idxs : list List with np.arrays for each layer
Median filter along the first axis of the feature matrix X.
Creates a gaussian kernel following Foote's paper.
Computes the self-similarity matrix of X.
Computes the novelty curve from the self-similarity matrix X and the gaussian kernel G.
Obtain peaks from a novelty curve using an adaptive threshold.
Main process. Returns ------- est_idxs : np.array(N) Estimated indeces the segment boundaries in frames. est_labels
Factorize s.t. WH = data Parameters ---------- show_progress : bool print some extra information to
Gaussian filter along the first axis of the feature matrix X.
Computes the novelty curve from the structural features.
Obtain peaks from a novelty curve using an adaptive threshold.
Shifts circularly the X squre matrix in order to get a time-lag matrix.
Time-delay embedding with m dimensions and tau delays.
Main process. Returns ------- est_idxs : np.array(N) Estimated times for the segment boundaries in frame
Formats the plot with the correct axis labels, title, ticks, and so on.
Plots all the boundaries. Parameters ---------- all_boundaries: list A list of np.arrays containing the times
Plots all the labels. Parameters ---------- all_labels: list A list of np.arrays containing the labels
Plots the results of one track, with ground truth if it exists.
Plots a given tree, containing hierarchical segmentation. Parameters ---------- T: mir_eval.segment.tree A tree object containing
Returns a set of segments defined by the bound_idxs. Parameters ---------- F: np.ndarray Matrix containing
From a list of feature segments, return a list of 2D-Fourier Magnitude Coefs using the
Main function to compute the segment similarity of file file_struct. Parameters ---------- F: np.ndarray Matrix
Main process. Returns ------- est_idx : np.array(N) Estimated indeces for the segment boundaries in frames.
Fit the OLDA model Parameters ---------- X : array-like, shape [n_samples] Training data: each example
Partial-fit the OLDA model Parameters ---------- X : array-like, shape [n_samples] Training data: each example
Actual implementation of the features. Returns ------- cqt: np.array(N, F) The features, each row representing
Actual implementation of the features. Returns ------- mfcc: np.array(N, F) The features, each row representing
Actual implementation of the features. Returns ------- pcp: np.array(N, F) The features, each row representing
Actual implementation of the features. Returns ------- tonnetz: np.array(N, F) The features, each row representing
Actual implementation of the features. Returns ------- tempogram: np.array(N, F) The features, each row representing
Reads the estimations (boundaries and/or labels) from a jams file containing the estimations of an
Reads the boundary times and the labels. Parameters ---------- audio_path : str Path to the
Aligns the times to the closest frame times (e.g. beats). Parameters ---------- times: np.ndarray Times
Finds the correct estimation from all the estimations contained in a JAMS file given the
Saves the segment estimations in a JAMS file. Parameters ---------- file_struct : FileStruct Object with
Gets all the possible boundary algorithms in MSAF. Returns ------- algo_ids : list List of
Gets all the possible label (structural grouping) algorithms in MSAF. Returns ------- algo_ids : list
Gets the configuration dictionary from the current parameters of the algorithms to be evaluated.
Gets the files of the given dataset.
Reads hierarchical references from a jams file. Parameters ---------- jams_file : str Path to the
Reads the duration of a given features file. Parameters ---------- features_file: str Path to the
Writes results to file using the standard MIREX format. Parameters ---------- times: np.array Times in
Gets the desired dataset file.
Main process. Returns ------- est_idxs : np.array(N) Estimated indeces the segment boundaries in frame indeces.
Load a ground-truth segmentation, and align times to the nearest detected beats. Arguments: beat_times --
Estimates the beats using librosa. Returns ------- times: np.array Times of estimated beats in seconds.
Reads the annotated beats if available. Returns ------- times: np.array Times of annotated beats in
Make the features beat-synchronous. Parameters ---------- beat_frames: np.array The frame indeces of the beat positions.
Reads the features from a file and stores them in the current object. Parameters ----------
Saves features to file.
Returns the parameter names for these features, avoiding the global parameters.
Computes the framesync times based on the framesync features.
Computes all the features (beatsync, framesync) from the audio.
This getter returns the frame times, for the corresponding type of features.
This getter will compute the actual features if they haven't been computed yet. Returns -------
Selects the features from the given parameters. Parameters ---------- features_id: str The identifier of the
This method obtains the actual features.
Post processes the estimations from the algorithm, removing empty segments and making sure the lenghts
Sweeps parameters across the specified algorithm.
Main function to sweep parameters of a certain algorithm.
Main function to parse the arguments and call the main process.
Print all the results. Parameters ---------- results: pd.DataFrame Dataframe with all the results
Compute the results using all the available evaluations. Parameters ---------- ann_inter : np.array Annotated intervals
Computes the results by using the ground truth dataset identified by the annotator parameter. Return
Computes the information gain of the est_file from the annotated intervals and the estimated intervals.
Processes a single track. Parameters ---------- file_struct : object (FileStruct) or str File struct or
Based on the config and the dataset, get the file name to store the results.
Main process to evaluate algorithms' results. Parameters ---------- in_path : str Path to the dataset
Parses a config string (comma-separated key=value components) into a dict.
Return the overriding config value for a key. A successful search returns a string value.
Add a new variable to msaf.config Parameters ---------- name: str String of the form "[section0.[section1.[etc]]]option",
Main process. Returns ------- est_idxs : np.array(N) Estimated indeces the segment boundaries in frame indeces.
Main process.for hierarchial segmentation. Returns ------- est_idxs : list List with np.arrays for each layer
Frobenius norm (||data - WH||) of a data matrix and a low rank approximation given
Computes all features for the given file.
Computes the features for the selected dataset or file.
Main function to parse the arguments and call the main process.
Feature-extraction for audio segmentation Arguments: file_struct -- msaf.io.FileStruct paths to the input files in the
Return the average log-likelihood of data under a standard normal
Main process for flat segmentation. Returns ------- est_idxs : np.array(N) Estimated times for the segment
Main process for hierarchical segmentation. Returns ------- est_idxs : list List containing estimated times for
Log-normalizes features such that each vector is between min_db to 0.
Normalizes features such that each vector is between floor to 1.
Normalizes the given matrix of features. Parameters ---------- X: np.array Each row represents a feature
Gets the time frames and puts them in a numpy array.
Removes empty segments if needed.
Sonifies the estimated times into the output file. Parameters ---------- audio: np.array Audio samples of
Synchronizes the labels from the old_bound_idxs to the new_bound_idxs. Parameters ---------- new_bound_idxs: np.array New indeces
Processes a level of segmentation, and converts it into times. Parameters ---------- est_idxs: np.array Estimated
Align the end of the hierarchies such that they end at the same exact second
compute distances of a specific data point to all other samples
compute new W
Estimates K running X-means algorithm (Pelleg & Moore, 2000).
Estimates the K using K-means and BIC, by sweeping various K and choosing the optimal
Returns the data with a specific label_index, using the previously learned labels.
Runs k-means and returns the labels assigned to the data.
Computes the Bayesian Information Criterion.
Generates N*K 2D data points with K means and N data points for each mean.
Do factorization s.t. data = dot(dot(data,beta),H), under the convexity constraint beta >=0, sum(beta)=1, H >=0,
Y = resample_mx(X, incolpos, outcolpos) X is taken as a set of columns, each starting
Magnitude of a complex matrix.
Extracts the boundaries from a json file and puts them into an np array.
Extracts the boundaries from a bounds json file and puts them into an np array.
Extracts the labels from a json file and puts them into an np array.
Extracts the beats from the beats_json_file and puts them into an np array.
Computes the 2D-Fourier Magnitude Coefficients.
Frobenius norm (||data - USV||) for a data matrix and a low rank approximation given
Factorize s.t. WH = data Parameters ---------- niter : int number of iterations. show_progress :
(Convex) Non-Negative Matrix Factorization. Parameters ---------- S: np.array(p, N) Features matrix. p row features and
Computes the labels using the bounds.
Filters the activation matrix G, and returns a flattened copy.
Gets the segmentation (boundaries and labels) from the factorization matrices. Parameters ---------- X: np.array() Features
Main process. Returns ------- est_idxs : np.array(N) Estimated indeces for the segment boundaries in frames.
Obtains the boundaries module given a boundary algorithm identificator. Parameters ---------- boundaries_id: str Boundary algorithm
Obtains the label module given a label algorithm identificator. Parameters ---------- labels_id: str Label algorithm
Runs hierarchical algorithms with the specified identifiers on the audio_file. See run_algorithm for more information.
Runs the flat algorithms with the specified identifiers on the audio_file. See run_algorithm for more
Runs the algorithms with the specified identifiers on the audio_file. Parameters ---------- file_struct: `msaf.io.FileStruct` Object
Prepares the parameters, runs the algorithms, and saves results. Parameters ---------- file_struct: `msaf.io.FileStruct` FileStruct containing
Main process to segment a file or a collection of files. Parameters ---------- in_path: str
alternating least squares step, update W under the convexity constraint
Main Entry point for translator and argument parser
Initializes coroutine essentially priming it to the yield statement. Used as a decorator over functions
Generic accumulator function. .. code-block:: python # Simplest Form >>> a = 'this' + '
:param script: Translated Text :type script: Iterable :param output: Output Type (either 'trans' or 'translit')
Task Setter Coroutine End point destination coroutine of a purely consumer type. Delegates Text IO
Consumes text streams and spools them together for more io efficient processes. :param iterable: Sends
Coroutine starting point. Produces text stream and forwards to consumers :param target: Target coroutine consumer
Decorates a function returning the url of translation API. Creates and maintains HTTP connection state
Returns the url encoded string that will be pushed to the translation server for parsing.
Opens up file located under the etc directory containing language codes and prints them out.
Generates a formatted table of language codes
Create DataFrames of nodes and edges that do not include specified nodes. Parameters ---------- network
Save a Network's data to a Pandas HDFStore. Parameters ---------- network : pandana.Network filename :
Build a Network from data in a Pandas HDFStore. Parameters ---------- cls : class Class
The bounding box for nodes in this network [xmin, ymin, xmax, ymax]
Characterize urban space with a variable that is related to nodes in the network. Parameters
Aggregate information for every source node in the network - this is really the main
Assign node_ids to data specified by x_col and y_col Parameters ---------- x_col : Pandas series
Plot an array of data on a map using matplotlib and Basemap, automatically matching the
Set the location of all the pois of this category. The pois are connected to
Find the distance to the nearest pois from each source node. The bigger values in
Identify nodes that are connected to fewer than some threshold of other nodes within a
Make a Pandana network from a bounding lat/lon box request to the Overpass API. Distance
Process a node element entry into a dict suitable for going into a Pandas DataFrame.
Make a request to OSM and return the parsed JSON. Parameters ---------- query : str
Build the string for a node-based OSM query. Parameters ---------- lat_min, lng_min, lat_max, lng_max :
Search for OSM nodes within a bounding box that match given tags. Parameters ---------- lat_min,
Shortcut function for ``unittest.TestCase.assertEqual()``. Arguments: x (mixed) y (mixed) Raises: AssertionError: in case of assertion
Tries to match a regular expression value ``x`` against ``y``. Aliast``unittest.TestCase.assertEqual()`` Arguments: x (regex|str): regular
Returns ``True`` is the given expression value is a regular expression like string with prefix
Returns ``True`` if the input argument object is a native regular expression object, otherwise ``False``.
Compares two values with regular expression matching support. Arguments: value (mixed): value to compare. expectation
Simple function decorator allowing easy method chaining. Arguments: fn (function): target function to decorate.
Compares an string or regular expression againast a given value. Arguments: expr (str|regex): string or
Triggers specific class methods using a simple reflection mechanism based on the given input dictionary
Match the given HTTP request instance against the registered matcher functions in the current engine.
Returns a matcher instance by class or alias name. Arguments: name (str): matcher class name
Initializes a matcher instance passing variadic arguments to its constructor. Acts as a delegator proxy.
Defines a new response header. Alias to ``Response.header()``. Arguments: header (str): header name. value (str):
Defines response body data. Arguments: body (str|bytes): response body to use. Returns: self: ``pook.Response`` current
Defines the mock response JSON body. Arguments: data (dict|list|str): JSON body data. Returns: self: ``pook.Response``
Sets a header field with the given value, removing previous values. Usage:: headers = HTTPHeaderDict(foo='bar')
Helper function to append functions into a given list. Arguments: target (list): receptor list to
Triggers request mock definition methods dynamically based on input keyword arguments passed to `pook.Mock` constructor.
Defines the mock URL to match. It can be a full URL with path and
Defines the HTTP method to match. Use ``*`` to match any method. Arguments: method (str):
Defines a URL path to match. Only call this method if the URL has no
Defines a URL path to match. Only call this method if the URL has no
Defines a dictionary of arguments. Header keys are case insensitive. Arguments: headers (dict): headers to
Defines a new header matcher expectation that must be present in the outgoing request in
Defines a list of headers that must be present in the outgoing request in order
Defines the ``Content-Type`` outgoing header value to match. You can pass one of the following
Defines a set of URL query params to match. Arguments: params (dict): set of params
Defines the body data to match. ``body`` argument can be a ``str``, ``binary`` or a
Defines the JSON body to match. ``json`` argument can be an JSON string, a JSON
Defines a XML body value to match. Arguments: xml (str|regex): body XML to match. Returns:
Reads the body to match from a disk file. Arguments: path (str): relative or absolute
Enables persistent mode for the current mock. Returns: self: current Mock instance.
Defines a simulated exception error that will be raised. Arguments: error (str|Exception): error to raise.
Defines the mock response. Arguments: status (int, optional): response status code. Defaults to ``200``. **kw
Matches an outgoing HTTP request against the current mock matchers. This method acts like a
Async version of activate decorator Arguments: fn (function): function that be wrapped by decorator. _engine
Sets a custom mock engine, replacing the built-in one. This is particularly useful if you
Enables real networking mode, optionally passing one or multiple hostnames that would be used as
Creates and registers a new HTTP mock in the current engine. Arguments: url (str): request
Removes a specific mock instance by object reference. Arguments: mock (pook.Mock): mock instance to remove.
Activates the registered interceptors in the mocking engine. This means any HTTP traffic captures by
Disables interceptors and stops intercepting any outgoing HTTP traffic.
Verifies if real networking mode should be used for the given request, passing it to
Matches a given Request instance contract against the registered mocks. If a mock passes all
Copies the current Request object instance for side-effects purposes. Returns: pook.Request: copy of the current
Enables the HTTP traffic interceptors. This function can be used as decorator. Arguments: fn (function|coroutinefunction):
Creates a new isolated mock engine to be used via context manager. Example:: with pook.use()
Convenient shortcut to ``re.compile()`` for fast, easy to use regular expression compilation without an extra
Adds one or multiple HTTP traffic interceptors to the current mocking engine. Interceptors are typically
Removes a specific interceptor by name. Arguments: name (str): interceptor name to disable. Returns: bool:
Get key from connection or default to settings.
Build SQL with decryption and casting.
Save the original_value.
Tell postgres to encrypt this field with a hashing function. The `value` string is checked
Get the decryption for col.
Tell postgres to encrypt this field using PGP.
Parses yaml and returns a list of repeated variables and the line on which they
this function calculates the regression coefficients for a given vector containing the averages of tip
calculate the covariance matrix of the tips assuming variance has accumulated along branches of the
Inverse of the covariance matrix Returns ------- H : (np.array) inverse of the covariance matrix.
recursion to calculate inverse covariance matrix Parameters ---------- full_matrix : bool, optional if True, the
calculate the weighted sums of the tip and branch values and their second moments.
This function implements the propagation of the means, variance, and covariances along a branch. It
calculate standard explained variance Returns ------- float r-value of the root-to-tip distance and time. independent
regress tip values against branch values Parameters ---------- slope : None, optional if given, the
determine the position on the tree that minimizes the bilinear product of the inverse covariance
determine the best root and reroot the tree to this value. Note that this can
Plot root-to-tip distance vs time as a basic time-tree diagnostic Parameters ---------- add_internal : bool,
Jukes-Cantor 1969 model. This model assumes equal concentrations of the nucleotides and equal transition rates
Kimura 1980 model. Assumes equal concentrations across nucleotides, but allows different rates between transitions and
Felsenstein 1981 model. Assumes non-equal concentrations across nucleotides, but the transition rate between all states
Hasegawa, Kishino and Yano 1985 model. Allows different concentrations of the nucleotides (as in F81)
Tamura 1992 model. Extending Kimura (1980) model for the case where a G+C-content bias exists.
Tamura and Nei 1993. The model distinguishes between the two different types of transition: (A
Alphabet = [A, C, G, T]
initialize the merger model with a coalescent time Args: - Tc: a float or an
calculates an interpolation object that maps time to the number of concurrent branches in the
calculates the integral int_0^t (k(t')-1)/2Tc(t') dt' and stores it as self.integral_merger_rate. This differences of this
returns the cost associated with a branch starting at t_node t_node is time before present,
attaches the the merger cost to each branch length interpolator in the tree.
determines the coalescent time scale that optimizes the coalescent likelihood of the tree
optimize the trajectory of the merger rate 1./T_c to maximize the coalescent likelihood. parameters: n_points
returns the skyline, i.e., an estimate of the inverse rate of coalesence. Here, the skyline
return the skyline, i.e., an estimate of the inverse rate of coalesence. This function merely
Take the raw sequence, substitute the "overhanging" gaps with 'N' (missequenced), and convert the sequence
Convert profile to sequence and normalize profile across sites. Parameters ---------- profile : numpy 2D
return a normalized version of a profile matrix Parameters ---------- in_profile : np.array shape Lxq,
Print log message *msg* to stdout. Parameters ----------- msg : str String to print on
Set a new GTR object Parameters ----------- value : GTR the new GTR object
Create new GTR model if needed, and set the model as an attribute of the
assigns a tree to the internal self._tree variable. The tree is either loaded from file
Reads in the alignment (from a dict, MultipleSeqAlignment, or file, as necessary), sets tree-related parameters,
set the length of the uncompressed sequence. its inverse 'one_mutation' is frequently used as a
For each node of the tree, check whether there is a sequence available in the
Create the reduced alignment from the full sequences attached to (some) tree nodes. The methods
prepare the dictionary specifying differences from a reference sequence to construct the reduced alignment with
Set link to parent and calculate distance to root for all tree nodes. Should be
Set auxilliary parameters to every node of the tree.
For each node in the tree, set its root-to-node distance as dist2root attribute
Calculates a GTR model given the multiple sequence alignment and the tree. It performs ancestral
Reconstruct ancestral sequences Parameters ---------- method : str Method to use. Supported values are "fitch"
Recalculates mutations using the original compressed sequence for terminal nodes which will recover ambiguous bases
Get the mutations on a tree branch. Take compressed sequences from both sides of the
uses results from marginal ancestral inference to return a joint distribution of the sequence states
Expand a nodes compressed sequence into the real sequence Parameters ---------- node : PhyloTree.Clade Tree
For VCF-based TreeAnc objects, we do not want to store the entire sequence on every
Reconstruct ancestral states using Fitch's algorithm. The method requires sequences to be assigned to leaves.
Determine the Fitch profile for a single character of the node's sequence. The profile is
Find the intersection of any number of 1D arrays. Return the sorted, unique values that
return the likelihood of the observed sequences given the tree Parameters ---------- pos : int,
Calculate the likelihood of the given realization of the sequences in the tree Returns -------
Set branch lengths to either mutation lengths of given branch lengths. The assigend values are
Perform marginal ML reconstruction of the ancestral states. In contrast to joint reconstructions, this needs
Perform joint ML reconstruction of the ancestral states. In contrast to marginal reconstructions, this only
make a compressed representation of a pair of sequences only counting the number of times
Traverse the tree, and for each node store the compressed sequence pair. **Note** sequence reconstruction
Perform optimization for the branch lengths of the entire tree. This method only does a
EXPERIMENTAL GLOBAL OPTIMIZATION
Calculate optimal branch length given the sequences of node and parent Parameters ---------- node :
calculate the marginal distribution of sequence states on both ends of the branch leading to
calculate the marginal distribution of sequence states on both ends of the branch leading to
If the branch length is less than the minimal value, remove the branch from the
Iteratively set branch lengths and reconstruct ancestral sequences until the values of either former or
Get the multiple sequence alignment, including reconstructed sequences for the internal nodes. Returns ------- new_aln
For VCF-based objects, returns a nested dict with all the information required to reconstruct sequences
function that return the product of the transition matrix and the equilibrium frequencies to obtain
Overwrite the GTR model given the provided data Parameters ---------- mu : float Substitution rate
Creates a random GTR model Parameters ---------- mu : float Substitution rate alphabet : str
Create a GTR model by specifying the matrix explicitly Parameters ---------- mu : float Substitution
Infer a GTR model by specifying the number of transitions and time spent in each
Compute the probability to observe seq_ch (child sequence) after time t starting from seq_p (parent
Overwrite the GTR model given the provided data Parameters ---------- mu : float Substitution rate
Create standard model of molecular evolution. Parameters ---------- model : str Model to create. See
Creates a random GTR model Parameters ---------- mu : float Substitution rate alphabet : str
Infer a GTR model by specifying the number of transitions and time spent in each
Check the main diagonal of Q and fix it in case it does not corresond
Perform eigendecompositon of the rate matrix and stores the left- and right- matrices to convert
Perform eigendecompositon of the rate matrix and stores the left- and right- matrices to convert
Make a compressed representation of a pair of sequences, only counting the number of times
Calculate the probability of observing a sequence pair at a distance t, for compressed sequences
Compute the probability to observe seq_ch (child sequence) after time t starting from seq_p (parent
Find the optimal distance between the two sequences Parameters ---------- seq_p : character array Parent
Find the optimal distance between the two sequences, for compressed sequences Parameters ---------- seq_pair :
Calculate the probability of observing a node pair at a distance t Parameters ---------- profile_pair:
Compute the probability of the sequence state of the parent at time (t+t0, backwards), given
Compute the probability of the sequence state of the child at time t later, given
Parameters ---------- t : float time to propagate Returns -------- exp_lt : numpy.array Array of
Parameters ---------- t : float Time to propagate Returns -------- expQt : numpy.array Matrix exponential
Returns ------- Qtds : Returns 2 V_{ij} \lambda_j s e^{\lambda_j s**2 } V^{-1}_{jk} This is
Returns ------- Qtdtdt : Returns V_{ij} \lambda_j^2 e^{\lambda_j s**2} V^{-1}_{jk} This is the second derivative
Returns the log-likelihood of sampling a sequence from equilibrium frequency. Expects a sequence as numpy
Converts branch length to years and plots the time tree on a time axis. Parameters
Run TreeTime reconstruction. Based on the input parameters, it divides the analysis into semi-independent jobs
if branch_length mode is not explicitly set, set according to empirical branch length distribution in
Labels outlier branches that don't seem to follow a molecular clock and excludes them from
Plot root-to-tip regression Parameters ---------- add_internal : bool If true, plot inte`rnal node positions label
Find best root and re-root the tree to the new root Parameters ---------- root :
Resolve the polytomies on the tree. The function scans the tree, resolves polytomies if present,
Function to resolve polytomies for a given parent node. If the number of the direct
Print the total likelihood of the tree given the constrained leaves Parameters ---------- joint :
Add a coalescent model to the tree and optionally optimze Parameters ---------- Tc : float,str
Allow the mutation rate to vary on the tree (relaxed molecular clock). Changes of the
Determine the node that, when the tree is rooted on this node, results in the
Function that attempts to load a tree and build it from the alignment if no
parse the arguments referring to the GTR model and return a GTR structure
Checks if input is VCF and reads in appropriately if it is
the function implementing treetime homoplasies
implementeing treetime tree
implementing treetime ancestral
implementing treetime mugration
implementing treetime clock
Assess the width of the probability distribution. This returns full-width-half-max
Create delta function distribution.
multiplies a list of Distribution objects
assign dates to nodes Returns ------- str success/error code
function that sets precision to an (hopfully) reasonable guess based on the length of the
instantiate a TreeRegression object and set its tip_value and branch_value function to defaults that are
Get the conversion coefficients between the dates and the branch lengths as they are used
Use the date constraints to calculate the most likely positions of unconstrained nodes. Parameters ----------
Compute the joint maximum likelihood assignment of the internal nodes positions by propagating from the
Return the likelihood of the data given the current branch length in the tree
Compute the marginal probability distribution of the internal nodes positions by propagating from the tree
This function converts the estimated "time_before_present" properties of all nodes to numerical dates stored in
This function sets branch length to reflect the date differences between parent and child nodes
return the time tree estimation of evolutionary rates +/- one standard deviation form the ML
use previously calculated variation of the rate to estimate the uncertainty in a particular numdate
If temporal reconstruction was done using the marginal ML mode, the entire distribution of times
If temporal reconstruction was done using the marginal ML mode, the entire distribution of times
Reads in a vcf/vcf.gz file and associated reference sequence fasta (to which the VCF file
Writes out a VCF-style file (which seems to be minimally handleable by vcftools and pyvcf)
Evaluates int_tau f(t+tau)*g(tau) or int_tau f(t-tau)g(tau) if inverse time is TRUE Parameters ----------- t_val :
Evaluates max_tau f(t+tau)*g(tau) or max_tau f(t-tau)g(tau) if inverse time is TRUE Parameters ----------- t_val :
Calculate convolution F(t) = int { f(tau)g(t-tau) } dtau
calculate H(t) = \int_tau f(t-tau)g(tau) if inverse_time=True H(t) = \int_tau f(t+tau)g(tau) if inverse_time=False This function
Find the global minimum of a function represented as an interpolation object.
Find the median of the function represented as an interpolation object.
Convert datetime object to the numeric date. The numeric date format is YYYY.F, where F
parse dates from the arguments and return a dictionary mapping taxon names to numerical dates.
parse an abiguous date such as 2017-XX-XX to [2017,2017.999] Parameters ---------- mydate : str date
Create the conversion object automatically from the tree Parameters ---------- clock_model : dict dictionary as
Socket connection.
Terminate connection with Guacamole guacd server.
Receive instructions from Guacamole guacd server.
Send encoded instructions to Guacamole guacd server.
Send instruction after encoding.
Establish connection with Guacamole guacd server via handshake.
Return a utf-8 encoded string from a valid unicode string. :param unicode_str: Unicode string. :return:
Loads a new GuacamoleInstruction from encoded instruction string. :param instruction: Instruction string. :return: GuacamoleInstruction()
Decode whole instruction and return list of args. Usually, returned arg[0] is the instruction opcode.
Encode argument to be sent in a valid GuacamoleInstruction. example: >> arg = encode_arg('size') >>
Prepare the instruction to be sent over the wire. :return: str
Returns a versioned URI string for this class
Get instance URL by ID
Returns a versioned URI string for this class, and don't pluralize the class name.
Download the file to the specified directory or file path. Downloads to a temporary directory
Get the commit objects parent Import or Migration
Asks the user for their email and password.
Prompt user for login information (domain/email/password). Domain, email and password are used to get the
Force an interactive login via the command line. Sets the global API key and updates
Prints information about the current user. Assumes the user is already logged-in.
Prints information about the current user.
Handles UCSC-style range queries (chr1:100-200)
Returns this Query instance with the query args combined with existing set with AND. kwargs
Shortcut to do range filters on genomic datasets.
Shortcut to do a single position filter on genomic datasets.
Returns a dictionary with the requested facets. The facets function supports string args, and keyword
Takes a list of filters and returns JSON :Parameters: - `filters`: List of Filters, (key,
Allows the Query object to be an iterable. This method will iterate through a cached
Executes a query. Additional query parameters can be passed as keyword arguments. Returns: The request
Migrate the data from the Query to a target dataset. Valid optional kwargs include: *
Sets up the auth credentials using the provided key/token, or checks the credentials file (if
Main entry point for SolveBio CLI
The _add_subcommands method must be separate from the __init__ method, as infinite recursion will occur
Try to parse the args first, and then add the subparsers. We want to do
Recursively downloads a folder in a vault to a local directory. Only downloads files, not
Used to create a new object from an HTTP response
Revoke the token and remove the cookie.
Open the SolveBio shell (IPython wrapper)
Open the SolveBio shell (IPython wrapper) with IPython 5+
Open the SolveBio shell (IPython wrapper) for older IPython versions
Issues an HTTP GET across the wire via the Python requests library. See *request()* for
Issues an HTTP DELETE across the wire via the Python requests library. See *request* for
Issues an HTTP Request across the wire via the Python requests library. Parameters ---------- method
Get Task child object class
Cancel a task
Specialized INFO field parser for SnpEff ANN fields. Requires self._snpeff_ann_fields to be set.
Expands multiple alleles into one record each using an internal buffer (_next).
Return a parsed dictionary for JSON.
Returns the user's stored API key if a valid credentials file is found. Raises CredentialsError
Dump the class data in the format of a .netrc file.
>>> _isint("123") True >>> _isint("123.45") False
[string] -> [padded_string] >>> list(map(str,_align_column( \ ["12.345", "-1234.5", "1.23", "1234.5", \ "1e+234", "1.0e234"], "decimal"))) ['
Format a value accoding to its type. Unicode is supported: >>> hrow = ['\u0431\u0443\u043a\u0432\u0430', \
Transform a supported data type to a list of lists, and a list of headers.
Return a string which represents a row of data cells.
Return a string which represents a horizontal line.
Prefix every cell in a row with an HTML alignment attribute.
Return a segment of a horizontal line with optional colons which indicate column's alignment (as
Produce a plain-text representation of the table.
This is a shortcut to creating a DatasetImport. Can't use "import()" because of Python.
Migrate the data from this dataset to a target dataset. Valid optional kwargs include: *
Helper method to parse a full or partial path and return a full path as
Attempt to create a new dataset given the following params: * template_id * template_file *
Given a folder or file, upload all the folders and files contained within it, skipping
Given a dataset and a local path, upload and import the file(s). Command arguments (args):
Helper method to return a full path from a full or partial path. If no
Validate SolveBio API host url. Valid urls must not be empty and must contain either
Add one or more files or URLs to the manifest. If files contains a glob,
Annotate a set of records with stored fields. Args: records: A list or iterator (can
Evaluates the expression with the provided context and format.
Format output using *format_name*. This is a wrapper around the :class:`TabularOutputFormatter` class. :param iterable data:
Set the default format name. :param str format_name: The display format name. :raises ValueError: if
Register a new output formatter. :param str format_name: The name of the format. :param callable
Format the headers and data using a specific formatter. *format_name* must be a supported formatter
Get a list of the data types for each column in *data*.
Get the most generic data type for iterable *column*.
Get the data type for *value*.
Wrap tabulate inside a function for TabularOutputFormatter.
Returns the config folder for the application. The default behavior is to return whatever is
r"""Returns a list of system-wide config folders for the application. For an example application called
Read the default config file. :raises DefaultConfigValidationError: There was a validation error with the *default*
Read the default, additional, system, and user config files. :raises DefaultConfigValidationError: There was a validation
Get the absolute path to the user config file.
Get a list of absolute paths to the system config files.
Get a list of absolute paths to the additional config files.
Write the default config to the user's config file. :param bool overwrite: Write over an
Write the current config to a file (defaults to user config). :param str outfile: The
Read a config file *f*. :param str f: The path to a file to read.
Read a list of config files. :param iterable files: An iterable (e.g. list) of files
Convert bytes *b* to a string. Hexlify bytes that can't be decoded.
Truncate string values.
Filter the dict *d* to remove keys not in *keys*.
Return the unique items from iterable *seq* (in order).
Replace multiple values in a string
Wrap the formatting inside a function for TabularOutputFormatter.
Run the *cmd* and exit with the proper exit code.
Run multiple commmands in a row, exiting if one fails.
Apply command-line options.
Apply a command-line option.
Set the default options.
Run the linter.
Generate and view the documentation.
Truncate very long strings. Only needed for tabular representation, because trying to tabulate very long
Convert all *data* and *headers* to strings. Binary data that cannot be decoded is converted
Override missing values in the *data* with *missing_value*. A missing value is any value that
Override tab values in the *data* with *new_value*. :param iterable data: An :term:`iterable` (e.g. list)
Convert all *data* and *headers* bytes to strings. Binary data that cannot be decoded is
Align numbers in *data* on their decimal points. Whitespace padding is added before a number
Quote leading/trailing whitespace in *data*. When outputing data with leading or trailing whitespace, it can
Style the *data* and *headers* (e.g. bold, italic, and colors) .. NOTE:: This requires the
Format numbers according to a format specification. This uses Python's format specification to format numbers
Get a row separator for row *num*.
Format a row.
Format *data* and *headers* as an vertical table. The values in *data* and *headers* must
Wrap vertical table in a function for TabularOutputFormatter.
Wrap the formatting inside a function for TabularOutputFormatter.
Wrap terminaltables inside a function for TabularOutputFormatter.
Copy template and substitute template strings File `template_file` is copied to `dst_file`. Then, each template
convert the fields of the object into a dictionnary
parse the `self.flags` field and create a list of `CKF_*` strings corresponding to bits set
convert the fields of the object into a dictionnary
load a PKCS#11 library :type pkcs11dll_filename: string :param pkcs11dll_filename: the library name. If this parameter
C_InitToken :param slot: slot number returned by :func:`getSlotList` :type slot: integer :param pin: Security Officer's
C_GetInfo :return: a :class:`CK_INFO` object
C_GetSlotList :param tokenPresent: `False` (default) to list all slots, `True` to list only slots with
C_GetSlotInfo :param slot: slot number returned by :func:`getSlotList` :type slot: integer :return: a :class:`CK_SLOT_INFO` object
C_GetTokenInfo :param slot: slot number returned by :func:`getSlotList` :type slot: integer :return: a :class:`CK_TOKEN_INFO` object
C_OpenSession :param slot: slot number returned by :func:`getSlotList` :type slot: integer :param flags: 0 (default),
C_CloseAllSessions :param slot: slot number :type slot: integer
C_GetMechanismList :param slot: slot number returned by :func:`getSlotList` :type slot: integer :return: the list of
C_GetMechanismInfo :param slot: slot number returned by :func:`getSlotList` :type slot: integer :param type: a `CKM_*`
C_WaitForSlotEvent :param flags: 0 (default) or `CKF_DONT_BLOCK` :type flags: integer :return: slot :rtype: integer
C_DigestUpdate :param data: data to add to the digest :type data: bytes or string
C_DigestKey :param handle: key handle :type handle: CK_OBJECT_HANDLE
C_DigestFinal :return: the digest :rtype: ckbytelist
C_CloseSession
C_GetSessionInfo :return: a :class:`CK_SESSION_INFO` object
C_Login :param pin: the user's PIN or None for CKF_PROTECTED_AUTHENTICATION_PATH :type pin: string :param user_type:
C_Logout
C_InitPIN :param pin: new PIN
C_SetPIN :param old_pin: old PIN :param new_pin: new PIN
C_CreateObject :param template: object template
C_DestroyObject :param obj: object ID
C_DigestInit/C_DigestUpdate/C_DigestKey/C_DigestFinal :param mecha: the digesting mechanism to be used (use `MechanismSHA1` for `CKM_SHA_1`) :type mecha:
C_DigestInit/C_Digest :param data: the data to be digested :type data: (binary) sring or list/tuple of
C_SignInit/C_Sign :param key: a key handle, obtained calling :func:`findObjects`. :type key: integer :param data: the
C_VerifyInit/C_Verify :param key: a key handle, obtained calling :func:`findObjects`. :type key: integer :param data: the
C_EncryptInit/C_Encrypt :param key: a key handle, obtained calling :func:`findObjects`. :type key: integer :param data: the
C_DecryptInit/C_Decrypt :param key: a key handle, obtained calling :func:`findObjects`. :type key: integer :param data: the
C_WrapKey :param wrappingKey: a wrapping key handle :type wrappingKey: integer :param key: a handle of
C_UnwrapKey :param unwrappingKey: the unwrapping key handle :type unwrappingKey: integer :param wrappedKey: the bytes of
is the type a numerical value? :param type: PKCS#11 type like `CKA_CERTIFICATE_TYPE` :rtype: bool
is the type a boolean value? :param type: PKCS#11 type like `CKA_ALWAYS_SENSITIVE` :rtype: bool
is the type a byte array value? :param type: PKCS#11 type like `CKA_MODULUS` :rtype: bool
generate a secret key :param template: template for the secret key :param mecha: mechanism to
generate a key pair :param templatePub: template for the public key :param templatePriv: template for
find the objects matching the template pattern :param template: list of attributes tuples (attribute,value). The
C_GetAttributeValue :param obj_id: object ID returned by :func:`findObjects` :type obj_id: integer :param attr: list of
C_SeedRandom :param seed: seed material :type seed: iterable
C_GenerateRandom :param size: number of random bytes to get :type size: integer :note: the returned
Makes qr image using qrcode as qrc. See documentation for qrcode (https://pypi.python.org/pypi/qrcode) package for more
Inserts a small icon to QR Code image
Export gene panels to .bed like format. Specify any number of panels on the command
Given a weekday and a date, will increment the date until it's weekday matches that
If a repeating chunk event exists in a particular month, but didn't start that month,
Add 'num' to the day and count that day until we reach end_repeat, or until
Like self.repeat(), but used to repeat every weekday.
Starts from 'start' day and counts backwards until 'end' day. 'start' should be >= 'end'.
This function is unique b/c it creates an empty defaultdict, adds in the event occurrences
Events that repeat every year should be shown every year on the same date they
Events that repeat every month should be shown every month on the same date they
Created to take some of the load off of _handle_weekly_repeat_out
Handles repeating an event weekly (or biweekly) if the current year and month are outside
Handles repeating both weekly and biweekly events, if the current year and month are inside
This handles either a non-repeating event chunk, or the first month of a repeating event
Load a manually curated gene panel into scout Args: panel_path(str): path to gene panel file
Load PanelApp panels into scout database If no panel_id load all PanelApp panels Args: adapter(scout.adapter.MongoAdapter)
Export causative variants for a collaborator Args: adapter(MongoAdapter) collaborator(str) document_id(str): Search for a specific variant
Create the lines for an excel file with verified variants for an institute Args: aggregate_variants(list):
Export mitochondrial variants for a case to create a MT excel report Args: variants(list): all
Update a user in the database
Display a list of SNV variants.
Display a specific SNV variant.
Display a list of STR variants.
Display a list of structural variants.
Display a specific structural variant.
Display a specific STR variant.
Update user-defined information about a variant: manual rank & ACMG.
Start procedure to validate variant using other techniques.
Build a clinVar submission form for a variant.
Show cancer variants overview.
ACMG classification form.
Show or delete an ACMG evaluation.
Calculate an ACMG classification from submitted criteria.
Parse gene panel file and fill in HGNC symbols for filter.
Download all verified variants for user's cases
Return a dictionary with hgnc symbols as keys Value of the dictionaries are information about
Add the coordinates from ensembl Args: genes(dict): Dictionary with all genes ensembl_lines(iteable): Iteable with raw
Add information from the exac genes Currently we only add the pLi score on gene
Add omim information We collect information on what phenotypes that are associated with a gene,
Add information of incomplete penetrance
Try to get the correct gene based on hgnc_symbol The HGNC symbol is unfortunately not
Gather information from different sources and return a gene dict Extract information collected from a
Send a request to MatchMaker and return its response Args: url(str): url to send request
Return the available MatchMaker nodes Args: mme_base_url(str): base URL of MME service token(str): MME server
Get the cytoband coordinate for a position Args: chrom(str) pos(int) Returns: coordinate(str)
Get the subcategory for a VCF variant The sub categories are: 'snv', 'indel', 'del', 'ins',
Return the length of a variant Args: alt_len(int) ref_len(int) category(str) svtype(str) svlen(int)
Return the end coordinate for a variant Args: pos(int) alt(str) category(str) snvend(str) svend(int) svlen(int) Returns:
Find out the coordinates for a variant Args: variant(cyvcf2.Variant) Returns: coordinates(dict): A dictionary on the
Parse iterable with cytoband coordinates Args: lines(iterable): Strings on format "chr1\t2300000\t5400000\tp36.32\tgpos25" Returns: cytobands(dict): Dictionary with
docstring for cli
Update a gene panel in the database We need to update the actual gene panel
scout: manage interactions with a scout instance.
Parse an exac formated line Args: line(list): A list with exac gene info header(list): A
Parse lines with exac formated genes This is designed to take a dump with genes
Show all panels for a case.
Display (and add pending updates to) a specific gene panel.
Update panel to a new version.
Export panel to PDF file
Edit additional information about a panel gene.
Add delivery report to an existing case.
Parse a peddy.ped file Args: lines(iterable(str)) Returns: peddy_ped(list(dict))
Parse a .ped_check.csv file Args: lines(iterable(str)) Returns: ped_check(list(dict))
Parse a .ped_check.csv file Args: lines(iterable(str)) Returns: sex_check(list(dict))
Retrieves a list of HPO terms from scout database Args: store (obj): an adapter to
Show all objects in the whitelist collection
Build a small phenotype object Build a dictionary with phenotype_id and description Args: phenotype_id (str):
Build a case object that is to be inserted to the database Args: case_data (dict):
Parse information about a gene.
Fetch matching genes and convert to JSON.
Display the Scout dashboard.
Simple tag - returns the weekday of the given (year, month, day) or of given
Return a requests response from url Args: url(str) Returns: decoded_data(str): Decoded response
Fetch a resource and return the resulting lines in a list Send file_name to get
Fetch the necessary mim files using a api key Args: api_key(str): A api key necessary
Fetch the ensembl genes Args: build(str): ['37', '38']
Fetch the ensembl genes Args: build(str): ['37', '38']
Fetch the hgnc genes file from ftp://ftp.ebi.ac.uk/pub/databases/genenames/new/tsv/hgnc_complete_set.txt Returns: hgnc_gene_lines(list(str))
Fetch the file with exac constraint scores Returns: exac_lines(iterable(str))
Fetch the necessary mim files using a api key Args: api_key(str): A api key necessary
Show all transcripts in the database
Adds an occurrence key to the event object w/ a list of occurrences and adds
A function that returns an html calendar for the given month in the given year,
Returns the events that occur on the given day. Works by getting all occurrences for
Pre-process list of variants.
Pre-process list of SV variants.
Pre-process list of STR variants.
Pre-process an STR variant entry for detail page. Adds information to display variant Args: store(scout.adapter.MongoAdapter)
Pre-process an SV variant entry for detail page. Adds information to display variant Args: store(scout.adapter.MongoAdapter)
Parse information about variants. - Adds information about compounds - Updates the information about compounds
Get variants info to be exported to file, one list (line) per variant. Args: store(scout.adapter.MongoAdapter)
Returns a header for the CSV file with the filtered variants to be exported. Args:
Get variant information
Get sift predictions from genes.
Pre-process case for the variant view. Adds information about files from case obj to variant
Find out BAI file by extension given the BAM file.
Pre-process a single variant for the detailed variant view. Adds information from case and institute
Query observations for a variant.
Parse variant genes.
Parse variant gene transcript (VEP).
Generate amino acid change as a string.
Calculate end position for a variant.
Returns a judgement on the overall frequency of the variant. Combines multiple metrics into a
Convert to human readable version of CLINSIG evaluation.
Compose link to 1000G page for detailed information.
Compose link to COSMIC Database. Args: variant_obj(scout.models.Variant) Returns: url_template(str): Link to COSMIIC database if cosmic
Compose link to Beacon Network.
Compose link to UCSC.
Translate SPIDEX annotation to human readable string.
Gather information from common gene information.
Return info about callers.
Sand a verification email and register the verification in the database Args: store(scout.adapter.MongoAdapter) mail(scout.server.extensions.mail): an
Builds the html code for the variant verification emails (order verification and cancel verification) Args:
Fetch data related to cancer variants for a case.
Gather the required data for creating the clinvar submission form Args: store(scout.adapter.MongoAdapter) institute_id(str): Institute ID
Collects all variants from the clinvar submission collection with a specific submission_id Args: store(scout.adapter.MongoAdapter) institute_id(str):
Collect data relevant for rendering ACMG classification form.
Calculate an ACMG classification based on a list of criteria.
Fetch and fill-in evaluation object.
Parse out HGNC symbols from a stream.
Collect all verified variants in a list on institutes and save them to file Args:
Build a hpo_term object Check that the information is correct and add the correct hgnc
Export all genes from the database
Get the clnsig information Args: acc(str): The clnsig accession number, raw from vcf sig(str): The
Show all indexes in the database
Update the phenotype for a institute. If --add the groups will be added to the
Get a list with compounds objects for this variant. Arguments: compound_info(str): A Variant dictionary case_id
Export all genes from a build
Build a Individual object Args: ind (dict): A dictionary with individual information Returns: ind_obj (dict):
Upload variants to a case Note that the files has to be linked with the
Return a variant.
Display a specific SNV variant.
Show all collections in the database
Create a new institute and add it to the database
Update an institute
Return a opened file
Increments the day by converting to a datetime.date().
Get the net of any 'next' and 'prev' querystrings.
Group events that occur on the same day, then sort them alphabetically by title, then
Returns what the next and prev querystrings should be.
Checks that the year is within 50 years from now.
If 'month_orig', which is the month given in the url BEFORE any next/prev query strings
Make sure any event day we send back for weekday repeating events is not a
Parse all data necessary for loading a case into scout This can be done either
Add information from peddy outfiles to the individuals
Parse individual information Args: sample (dict) Returns: { 'individual_id': str, 'father': str, 'mother': str, 'display_name':
Parse the individual information Reformat sample information to proper individuals Args: samples(list(dict)) Returns: individuals(list(dict))
Parse case information from config or PED files. Args: config (dict): case config with detailed
Parse out minimal family information from a PED file. Args: ped_stream(iterable(str)) family_type(str): Format of the
Build a evaluation object ready to be inserted to database Args: variant_specific(str): md5 string for
Export all mitochondrial variants for each sample of a case and write them to an
Build a genotype call Args: gt_call(dict) Returns: gt_obj(dict) gt_call = dict( sample_id = str, display_name
Check if the criterias for Pathogenic is fullfilled The following are descriptions of Pathogenic clasification
Check if the criterias for Likely Pathogenic is fullfilled The following are descriptions of Likely
Check if criterias for Likely Benign are fullfilled The following are descriptions of Likely Benign
Use the algorithm described in ACMG paper to get a ACMG calssification Args: acmg_terms(set(str)): A
Add extra information about genes from gene panels Args: variant_obj(dict): A variant from the database
Returns variants specified in question for a specific case. If skip not equal to 0
Return all variants with sanger information Args: institute_id(str) case_id(str) Returns: res(pymongo.Cursor): A Cursor with all
Returns the specified variant. Arguments: document_id : A md5 key that represents the variant or
Return all variants seen in a given gene. If skip not equal to 0 skip
Return all verified variants for a given institute Args: institute_id(str): institute id Returns: res(list): a
Return all causative variants for an institute Args: institute_id(str) case_id(str) Yields: str: variant document id
Check if there are any variants that are previously marked causative Loop through all variants
Find the same variant in other cases marked causative. Args: case_obj(dict) variant_obj(dict) Yields: other_variant(dict)
Delete variants of one type for a case This is used when a case is
Return overlapping variants. Look at the genes that a variant overlaps to. Then return all
Returns variants that has been evaluated Return all variants, snvs/indels and svs from case case_id
Produce a reduced vcf with variants from the specified coordinates This is used for the
Given a list of variants get variant objects found in a specific patient Args: variants(list):
Get a client to the mongo database host(str): Host of database port(int): Port of database
Creates a list of submission objects (variant and case-data) from the clinvar submission form in
Extract the objects to be saved in the clinvar database collection. object_type param specifies if
Extracts a list of variant ids from the clinvar submission form in blueprints/variants/clinvar.html (creation of
Determine which fields to include in csv header by checking a list of submission objects
Create the lines to include in a Clinvar submission csv file from a list of
Load all the transcripts Transcript information is from ensembl. Args: adapter(MongoAdapter) transcripts_lines(iterable): iterable with ensembl
Add a gene panel to the database.
Build a Exon object object Args: exon_info(dict): Exon information Returns: exon_obj(Exon) "exon_id": str, # str(chrom-start-end)
Delete a version of a gene panel or all versions of a gene panel
Delete all indexes in the database
Delete a user from the database
Delete all genes in the database
Delete all exons in the database
Delete a case and it's variants from the database
Show all individuals from all cases in the database
Extract all phenotype-associated terms for a case. Drawback of this method is that it returns
Extract all OMIM phenotypes available for the case Args: case_obj(dict): a scout case object Returns:
Extract and parse matchmaker-like genomic features from pinned variants of a patient Args: store(MongoAdapter) :
Parse a list of matchmaker matches objects and returns a readable list of matches to
Display cases from the database
Returns the currently active user as an object.
Login a user if they have access.
Updates a case after a submission to MatchMaker Exchange Args: case_obj(dict): a scout case object
Delete a MatchMaker submission from a case record and creates the related event. Args: case_obj(dict):
Build a institute object Args: internal_id(str) display_name(str) sanger_recipients(list(str)): List with email addresses Returns: institute_obj(scout.models.Institute)
Delete a event Arguments: event_id (str): The database key for the event
Create a Event with the parameters given. Arguments: institute (dict): A institute case (dict): A
Fetch events from the database. Args: institute (dict): A institute case (dict): A case variant_id
Fetch all events by a specific user.
Add a new phenotype term to a case Create a phenotype term and event with
Remove an existing phenotype from a case Args: institute (dict): A Institute object case (dict):
Add a comment to a variant or a case. This function will create an Event
Parse the genotype calls for a variant Args: variant(cyvcf2.Variant) individuals: List[dict] individual_positions(dict) Returns: genotypes(list(dict)): A
Get the genotype information in the proper format Sv specific format fields: ##FORMAT=<ID=DV,Number=1,Type=Integer, Description="Number of
Check if a variant is in the Pseudo Autosomal Region or not Args: chromosome(str) position(int)
Check if the variant is in the interval given by the coordinates Args: chromosome(str): Variant
Export all genes in gene panels Exports the union of genes in one or several
Export the genes of a gene panel Takes a list of gene panel names and
Render search box and view for HPO phenotype terms
Export all transcripts to .bed like format
Load exons into the scout database
Show all indexes in the database
Load all variants in a region to a existing case
Helper function for getting category/tag kwargs.
Returns two datetimes: first day and last day of given year&month
Returns all events that have an occurrence within the given month & year.
Returns a queryset of events that will occur again after 'now'. Used to help generate
Build a user object Args: user_info(dict): A dictionary with user information Returns: user_obj(scout.models.User)
Recursively parse requirements from nested pip files.
Check if gene is already added to a panel.
Update an existing gene panel with genes. Args: store(scout.adapter.MongoAdapter) panel_name(str) csv_lines(iterable(str)): Stream with genes option(str):
Create a new gene panel. Args: store(scout.adapter.MongoAdapter) institute_id(str) panel_name(str) display_name(str) csv_lines(iterable(str)): Stream with genes Returns:
Preprocess a panel of genes.
Get information about a case from archive.
Migrate case information from archive.
Update all information that was manually annotated from a old instance.
Upload research variants to cases If a case is specified, all variants found for that
Load Genes and transcripts into the database If no resources are provided the correct ones
Load genes into the database link_genes will collect information from all the different sources and
Show all hpo terms in the database
Build a gene object Has to build the transcripts for the genes to Args: gene(dict):
Flask app factory function.
Configure Flask extensions.
Register Flask blueprints.
Setup logging of error/exceptions to email.
Setup coverage related extensions.
Show all alias symbols and how they map to ids
Build a panel_gene object Args: gene_info(dict) Returns: gene_obj(dict) panel_gene = dict( hgnc_id = int, #
Build a gene_panel object Args: panel_info(dict): A dictionary with panel information adapter (scout.adapter.MongoAdapter) Returns: panel_obj(dict)
Export variants which have been verified for an institute and write them to an excel
Export causatives for a collaborator in .vcf format
Get vcf entry from variant object Args: variant_obj(dict) Returns: variant_string(str): string representing variant in vcf
Start the web server.
Generate an md5-key from a list of arguments. Args: list_of_arguments: A list of strings Returns:
Setup via Flask.
Setup connection to database.
Create indexes for the database
Setup a scout database.
Setup a scout demo instance. This instance will be populated with a case, a gene
Setup scout instances.
Show all institutes in the database
Parse the genetic models entry of a vcf Args: models_info(str): The raw vcf information case_id(str)
Show all gene panels in the database
Add a institute to the database Args: institute_obj(Institute)
Update the information for an institute Args: internal_id(str): The internal institute id sanger_recipient(str): Email adress
Featch a single institute from the backend Args: institute_id(str) Returns: Institute object
Fetch all institutes. Args: institute_ids(list(str)) Returns: res(pymongo.Cursor)
Check if a string is a valid date Args: date(str) Returns: bool
Return a datetime object if there is a valid date Raise exception if date is
Export a list of genes based on hpo terms
Parse transcript information and get the gene information from there. Use hgnc_id as identifier for
Parse the rank score Args: rank_score_entry(str): The raw rank score entry case_id(str) Returns: rank_score(float)
Add a user to the database.
Parse transcript information from VCF variants Args: raw_transcripts(iterable(dict)): An iterable with raw transcript information Yields:
Check if a connection could be made to the mongo process specified Args: host(str) port(int)
Initialize from flask
Display a list of all user institutes.
Load a delivery report into a case in the database If the report already exists
Build a transcript object These represents the transcripts that are parsed from the VCF, not
Update an existing user. Args: user_obj(dict) Returns: updated_user(dict)
Add a user object to the database Args: user_obj(scout.models.User): A dictionary with user information Returns:
Return all users from the database Args: institute(str): A institute_id Returns: res(pymongo.Cursor): A cursor with
Fetch a user from the database. Args: email(str) Returns: user_obj(dict)
Delete a user from the database Args: email(str) Returns: user_obj(dict)
Build a compound Args: compound(dict) Returns: compound_obj(dict) dict( # This must be the document_id for
Stream *large* static files with special requirements.
Visualize BAM alignments.
Visualize BAM alignments using igv.js (https://github.com/igvteam/igv.js)
Build a disease phenotype object Args: disease_info(dict): Dictionary with phenotype information alias_genes(dict): { <alias_symbol>: {
Load all the exons Transcript information is from ensembl. Check that the transcript that the
Return a parsed variant Get all the necessary information to build a variant object Args:
Update all compounds for a case
Update a gene object with links Args: gene_obj(dict) build(int) Returns: gene_obj(dict): gene_obj updated with many
Query the hgnc aliases
Parse an hgnc formated line Args: line(list): A list with hgnc gene info header(list): A
Parse lines with hgnc formated genes This is designed to take a dump with genes
Create an open clinvar submission for a user and an institute Args: user_id(str): a user
Deletes a Clinvar submission object, along with all associated clinvar objects (variants and casedata) Args:
Retrieve the database id of an open clinvar submission for a user and institute, if
saves an official clinvar submission ID in a clinvar submission object Args: clinvar_id(str): a string
Returns the official Clinvar submission ID for a submission object Args: submission_id(str): submission_id(str) : id
Adds submission_objects to clinvar collection and update the coresponding submission object with their id Args:
Set a clinvar submission ID to 'closed' Args: submission_id(str): the ID of the clinvar submission
Collect all open and closed clinvar submission created by a user for an institute Args:
Collects a list of objects from the clinvar collection (variants of case data) as specified
Remove a variant object from clinvar database and update the relative submission object Args: object_id(str)
Get all variants included in clinvar submissions for a case Args: case_id(str): a case _id
Parse hpo phenotype Args: hpo_line(str): A iterable with hpo phenotype lines Yields: hpo_info(dict)
Parse hpo gene information Args: hpo_line(str): A iterable with hpo phenotype lines Yields: hpo_info(dict)
Parse hpo disease line Args: hpo_line(str)
Parse hpo phenotypes Group the genes that a phenotype is associated to in 'genes' Args:
Parse hpo disease phenotypes Args: hpo_lines(iterable(str)) Returns: diseases(dict): A dictionary with mim numbers as keys
Parse the map from hpo term to hgnc symbol Args: lines(iterable(str)): Yields: hpo_to_gene(dict): A dictionary
Parse HPO gene information Args: hpo_lines(iterable(str)) Returns: diseases(dict): A dictionary with hgnc symbols as keys
Get a set with all genes that have incomplete penetrance according to HPO Args: hpo_lines(iterable(str))
Parse a .obo formated hpo line
Render seach box for genes.
Render information about a gene.
Return JSON data about genes.
Make sure that the gene panels exist in the database Also check if the default
Load all variants in a region defined by a HGNC id Args: adapter (MongoAdapter) case_id
Load a new case from a Scout config. Args: adapter(MongoAdapter) config(dict): loading info ped(Iterable(str)): Pedigree
Template decorator. Ref: http://flask.pocoo.org/docs/patterns/viewdecorators/
Fetch insitiute and case objects.
Preprocess institute objects.
Get the hgnc id for a gene The proprity order will be 1. if there
Update a panel in the database
Update disease terms in mongo database.
Load the hpo terms and hpo diseases into database Args: adapter(MongoAdapter) disease_lines(iterable(str)): These are the
Load the hpo terms into the database Parse the hpo lines, build the objects and
Load the omim phenotypes into the database Parse the phenotypes from genemap2.txt and find the
Add the frequencies to a variant Frequencies are parsed either directly from keys in info
Parse any frequency from the info dict Args: variant(cyvcf2.Variant) info_key(str) Returns: frequency(float): or None if
Parsing of some custom sv frequencies These are very specific at the moment, this will
Show all users in the database
Load a case into the database If the case already exists the function will exit.
Build a hgnc_gene object Args: gene_info(dict): Gene information Returns: gene_obj(dict) { '_id': ObjectId(), # This
Load a gene panel based on the info sent A panel object is built and
Create and load the OMIM-AUTO panel
Check if the latest version of OMIM differs from the most recent in database Return
Set the correct version for each gene Loop over the genes in the new panel
Add a gene panel to the database Args: panel_obj(dict)
Fetch a gene panel by '_id'. Args: panel_id (str, ObjectId): str or ObjectId of document
Delete a panel by '_id'. Args: panel_obj(dict) Returns: res(pymongo.DeleteResult)
Fetch a gene panel. If no panel is sent return all panels Args: panel_id (str):
Return all gene panels If panel_id return all versions of panels by that panel name
Fetch all gene panels and group them by gene Args: case_obj(scout.models.Case) Returns: gene_dict(dict): A dictionary
Replace a existing gene panel with a new one Keeps the object id Args: panel_obj(dict)
Add a pending action to a gene panel Store the pending actions in panel.pending Args:
Apply the pending changes to an existing gene panel or create a new version of
Return all the clinical gene symbols for a case.
Interact with cases existing in the database.
Emit a record. Format the record and send it to the specified addressees.
Return a list with the current indexes Skip the mandatory _id_ indexes Args: collection(str) Returns:
Add the proper indexes to the scout instance. All indexes are specified in scout/constants/indexes.py If
Update the indexes If there are any indexes that are not added to the database,
Delete all indexes for the database
Build a mongo query across multiple cases. Translate query options from a form into a
Build a mongo query These are the different query options: { 'genetic_models': list, 'chrom': str,
Add clinsig filter values to the mongo query object Args: query(dict): a dictionary of query
Adds genomic coordinated-related filters to the query object Args: query(dict): a dictionary of query filters
Adds gene-related filters to the query object Args: query(dict): a dictionary of query filters specified
Creates a secondary query object based on secondary parameters specified by user Args: query(dict): a
Drop the mongo database given.
Parse user submitted panel.
docstring for build_clnsig
Load a bulk of hgnc gene objects Raises IntegrityError if there are any write concerns
Load a bulk of transcript objects to the database Arguments: transcript_objs(iterable(scout.models.hgnc_transcript))
Load a bulk of exon objects to the database Arguments: exon_objs(iterable(scout.models.hgnc_exon))
Fetch a hgnc gene Args: hgnc_identifier(int) Returns: gene_obj(HgncGene)
Query the genes with a hgnc symbol and return the hgnc id Args: hgnc_symbol(str) build(str)
Fetch all hgnc genes that match a hgnc symbol Check both hgnc_symbol and aliases Args:
Fetch all hgnc genes Returns: result()
Return the number of hgnc genes in collection If build is used, return the number
Delete the genes collection
Delete the transcripts collection
Delete the exons collection
Return a dictionary with ensembl ids as keys and transcripts as value. Args: build(str) Returns:
Return a dictionary with hgnc_symbol as key and gene_obj as value The result will have
Return a iterable with hgnc_genes. If the gene symbol is listed as primary the iterable
Return a dictionary with hgnc symbols as keys and a list of hgnc ids as
Return a set with identifier transcript(s) Choose all refseq transcripts with NM symbols, if none
Return a dictionary with hgnc_id as keys and a list of transcripts as value Args:
Return a dictionary with hgnc_id as keys and a set of id transcripts as value
Return a dictionary with ensembl ids as keys and gene objects as value. Args: build(str)
Return all transcripts. If a gene is specified return all transcripts for the gene Args:
Check if a hgnc symbol is an alias Return the correct hgnc symbol, if not
Add the correct hgnc id to a set of genes with hgnc symbols Args: genes(list(dict)):
Return a dictionary with chromosomes as keys and interval trees as values Each interval represents
Create exon objects and insert them into the database Args: exons(iterable(dict))
Return all exons Args: hgnc_id(int) transcript_id(str) build(str) Returns: exons(iterable(dict))
Update the automate generated omim gene panel in the database.
Display a list of all user institutes.
Display a list of cases for an institute.
Display one case.
Show all MatchMaker matches for a given case
Starts an internal match or a match against one or all MME external nodes
Add or update a case in MatchMaker
Remove a case from MatchMaker
Display a list of SNV variants.
Update (PUT) synopsis of a specific case.
Visualize case report
Download a pdf report for a case
Add or remove a diagnosis for a case.
Handle phenotypes.
Perform actions on multiple phenotypes.
Handle events.
Update status of a specific case.
Assign and unassign a user from a case.
Search for HPO terms.
Pin and unpin variants to/from the list of suspects.
Mark a variant as sanger validated.
Mark a variant as confirmed causative.
Mark a case that is has been checked. This means to set case['needs_check'] to False
Display delivery report.
Share a case with a different institute.
Request a case to be rerun.
Open the research list for a case.
Add/remove institute tags.
Update default panels for a case.
Download vcf2cytosure file for individual.
Load multiqc report for the case.
scout: manage interactions with a scout instance.
Preprocess case objects. Add the necessary information to display the 'cases' view Args: store(adapter.MongoAdapter) case_query(pymongo.Cursor)
Preprocess a single case. Prepare the case to be displayed in the case view. Args:
Gather contents to be visualized in a case report Args: store(adapter.MongoAdapter) institute_obj(models.Institute) case_obj(models.Case) Returns: data(dict)
Posts a request to chanjo-report and capture the body of the returned response to include
Get all Clinvar submissions for a user and an institute
Collect MT variants and format line of a MT variant report to be exported in
Update synopsis.
Return the list of HGNC symbols that match annotated HPO terms. Args: username (str): username
Request a rerun by email.
Update default panels for a case.
vcf2cytosure CGH file for inidividual.
Pre-process list of variants.
Find MultiQC report for the case.
Get all variants for an institute having Sanger validations ordered but still not evaluated Args:
Add a patient to MatchMaker server Args: store(adapter.MongoAdapter) user_obj(dict) a scout user object (to be
Delete all affected samples for a case from MatchMaker Args: case_obj(dict) a scout case object
Show Matchmaker submission data for a sample and eventual matches. Args: case_obj(dict): a scout case
Initiate a MatchMaker match against either other Scout patients or external nodes Args: case_obj(dict): a
Build a variant object based on parsed information Args: variant(dict) institute_id(str) gene_to_panels(dict): A dictionary with
Load the hgnc aliases to the mongo database.
Parse how the different variant callers have performed Args: variant (cyvcf2.Variant): A variant object Returns:
Get the format from a vcf header line description If format begins with white space
Return a list with the VEP header The vep header is collected from CSQ in
Build a hgnc_transcript object Args: transcript_info(dict): Transcript information Returns: transcript_obj(HgncTranscript) { transcript_id: str, required hgnc_id:
Load a institute into the database Args: adapter(MongoAdapter) internal_id(str) display_name(str) sanger_recipients(list(email))
Check if the cadd phred score is annotated
Load a case into the database. A case can be loaded without specifying vcf files
Update one variant document in the database. This means that the variant in the database
Updates the manual rank for all variants in a case Add a variant rank based
Update compounds for a variant. This will add all the necessary information of a variant
Update the compounds for a set of variants. Args: variants(dict): A dictionary with _ids as
Update the compound information for a bulk of variants in the database Args: bulk(dict): {'_id':
Update the compounds for a case Loop over all coding intervals to get coordinates for
Load a variant object Args: variant_obj(dict) Returns: inserted_id
Load a variant object, if the object already exists update compounds. Args: variant_obj(dict) Returns: result
Load a bulk of variants Args: variants(iterable(scout.models.Variant)) Returns: object_ids
Perform the loading of variants This is the function that loops over the variants, parse
Load variants for a case into scout. Load the variants for a specific analysis type
Assign a user to a case. This function will create an Event to log that
Share a case with a new institute. Arguments: institute (dict): A Institute object case (dict):
Diagnose a case using OMIM ids. Arguments: institute (dict): A Institute object case (dict): Case
Mark a case as checked from an analysis point of view. Arguments: institute (dict): A
Update default panels for a case. Arguments: institute_obj (dict): A Institute object case_obj (dict): Case
Create an event for a variant verification for a variant and an event for a
Get all variants with validations ever ordered. Args: institute_id(str) : The id of an institute
Mark validation status for a variant. Arguments: institute (dict): A Institute object case (dict): Case
Create an event for marking a variant causative. Arguments: institute (dict): A Institute object case
Create an event for updating the manual dismiss variant entry This function will create a
Create an event for updating the ACMG classification of a variant. Arguments: institute_obj (dict): A
Construct the necessary ids for a variant Args: chrom(str): Variant chromosome pos(int): Variant position ref(str):
Parse the simple id for a variant Simple id is used as a human readable
Parse the variant id for a variant variant_id is used to identify variants within a
Parse the variant id for a variant This is used to display the variant in
Parse the unique document id for a variant. This will always be unique in the
Convert a gene panel with hgnc symbols to a new one with hgnc ids.
Create a new variant id. Args: variant_obj(dict) family_id(str) Returns: new_id(str): The new variant id
Fetches all cases from the backend. Args: collaborator(str): If collaborator should be considered owner(str): Query
Return the number of cases This function will change when we migrate to 3.7.1 Args:
Update the dynamic gene list for a case Adds a list of dictionaries to case['dynamic_gene_list']
Fetches a single case from database Use either the _id or combination of institute_id and
Delete a single case from database Args: institute_id(str) case_id(str) Returns: case_obj(dict): The case that was
Load a case into the database Check if the owner and the institute exists. Args:
Add a case to the database If the case already exists exception is raised Args:
Update a case in the database The following will be updated: - collaborators: If new
Replace a existing case with a new one Keeps the object id Args: case_obj(dict) Returns:
Update case id for a case across the database. This function is used when a
Submit an evaluation to the database Get all the relevant information, build a evaluation_obj Args:
Return all evaluations for a certain variant. Args: variant_obj (dict): variant dict from the database
Parse and massage the transcript information There could be multiple lines with information about the
Parse a dataframe with ensembl gene information Args: res(pandas.DataFrame) Yields: gene_info(dict)
Parse a dataframe with ensembl transcript information Args: res(pandas.DataFrame) Yields: transcript_info(dict)
Parse an ensembl formated line Args: line(list): A list with ensembl gene info header(list): A
Parse lines with ensembl formated genes This is designed to take a biomart dump with
Parse lines with ensembl formated exons This is designed to take a biomart dump with
Parse a dataframe with ensembl exon information Args: res(pandas.DataFrame) Yields: gene_info(dict)
Initializes the log file in the proper format. Arguments: filename (str): Path to a file.
docstring for parse_omim_2_line
Parse the omim source file called genemap2.txt Explanation of Phenotype field: Brackets, "[ ]", indicate
Parse the file called mim2gene This file describes what type(s) the different mim numbers have.
docstring for parse_omim_morbid
Parse the mimTitles.txt file This file hold information about the description for each entry in
Get a dictionary with genes and their omim information Args: genemap_lines(iterable(str)) mim2gene_lines(iterable(str)) Returns. hgnc_genes(dict): A
Get a dictionary with phenotypes Use the mim numbers for phenotypes as keys and phenotype
Parse the omim files
Convert a string to number If int convert to int otherwise float If not possible
Update a case in the database
docstring for setup_scout
Export all transcripts from the database Args: adapter(scout.adapter.MongoAdapter) build(str) Yields: transcript(scout.models.Transcript)
Return a formatted month as a table.
Return a day as a table cell.
Return a day as a table cell.
Set some commonly used variables.
Change colspan to "5", add "today" button, and return a month name as a table
Populate variables used to build popovers.
Return a day as a table cell.
Return a day as a table cell.
Parse metadata for a gene panel For historical reasons it is possible to include all
Parse a gene line with information from a panel file Args: gene_info(dict): dictionary with gene
Parse a file with genes and return the hgnc ids Args: gene_lines(iterable(str)): Stream with genes
Parse the panel info and return a gene panel Args: path(str): Path to panel file
Parse a panel app formated gene Args: app_gene(dict): Dict with panel app info hgnc_map(dict): Map
Parse a PanelApp panel Args: panel_info(dict) hgnc_map(dict): Map from symbol to hgnc ids institute(str) panel_type(str)
Return all genes that should be included in the OMIM-AUTO panel Return the hgnc symbols
Show all diseases in the database
Update the hpo terms in the database. Fetch the latest release and update terms.
Repeats an event and returns 'num' (or fewer) upcoming events from 'now'.
Checks 'start' to see if we should stop collecting upcoming events. 'start' should be a
Display a list of all users and which institutes they belong to.
Parse the conservation predictors Args: variant(dict): A variant dictionary Returns: conservations(dict): A dictionary with the
Get the conservation prediction Args: variant(dict): A variant dictionary info_key(str) Returns: conservations(list): List of censervation
Returns the next occurrence of a given event, relative to 'now'. The 'event' arg should
Returns cases with phenotype If phenotypes are provided search for only those Args: adapter(adapter.MongoAdapter) institute_id(str):
Return general information about cases Args: adapter(adapter.MongoAdapter) institute_id(str) slice_query(str): Query to filter cases to obtain
Return the information about case groups Args: store(adapter.MongoAdapter) total_cases(int): Total number of cases slice_query(str): Query
Return information about analysis types. Group cases based on analysis type for the individuals. Args:
Returns a JSON response, transforming 'context' to make the payload.
Get what we want out of the context dict and convert that to a JSON
Get the year and month. First tries from kwargs, then from querystrings. If none, or
Check if any events are cancelled on the given date 'd'.
Add a hpo object Arguments: hpo_obj(dict)
Add a hpo object Arguments: hpo_bulk(list(scout.models.HpoTerm)) Returns: result: pymongo bulkwrite result
Fetch a hpo term Args: hpo_id(str) Returns: hpo_obj(dict)
Return all HPO terms If a query is sent hpo_terms will try to match with
Return a disease term Checks if the identifier is a disease number or a id
Return all disease terms that overlaps a gene If no gene, return all disease terms
Load a disease term into the database Args: disease_obj(dict)
Generate a sorted list with namedtuples of hpogenes Each namedtuple of the list looks like
Command line tool for plotting and viewing info on filterbank files
Populate Filterbank instance with data from HDF5 file Note: This is to be deprecated in
Setup frequency axis
Setup time axis.
Populate Filterbank instance with data from Filterbank file Note: This is to be deprecated in
Compute LST for observation
Computes the LSR in km/s uses the MJD, RA and DEC of observation to compute
Blank DC bins in coarse channels. Note: currently only works if entire file is read
Print header information
returns frequency array [f_start...f_stop]
Setup ploting edges.
Plot frequency spectrum of a given file Args: t (int): integration number to plot (0
Plot frequency spectrum of a given file Args: logged (bool): Plot in linear (False) or
Plot waterfall of data Args: f_start (float): start frequency, in MHz f_stop (float): stop frequency,
Plot the time series. Args: f_start (float): start frequency, in MHz f_stop (float): stop frequency,
Plot kurtosis Args: f_start (float): start frequency, in MHz f_stop (float): stop frequency, in MHz
Plot waterfall of data as well as spectrum; also, placeholder to make even more complicated
Write data to blimpy file. Args: filename_out (str): Name of output file
Write data to HDF5 file. Args: filename_out (str): Name of output file
One way to calibrate the band pass is to take the median value for every
Output stokes parameters (I,Q,U,V) for a rawspec cross polarization filterbank file
Converts a data array with length n_chans to an array of length n_coarse_chans by averaging
Calculates phase difference between X and Y feeds given U and V (U and Q
Determines relative gain error in the X and Y feeds for an observation given I
Returns calibrated Stokes parameters for an observation given an array of differential gains and phase
Write Stokes-calibrated filterbank file for a given observation with a calibrator noise diode measurement on
Output fractional linear and circular polarizations for a rawspec cross polarization .fil file. NOT STANDARD
Writes up to 5 new filterbank files corresponding to each Stokes parameter (and total linear
Writes two new filterbank files containing fractional linear and circular polarization data
Return the index of the closest in xarr to value val
Rebin data by averaging bins together Args: d (np.array): data n_x (int): number of bins
upgrade data from nbits to 8bits Notes: Pretty sure this function is a little broken!
Promote 2-bit unisgned data into 8-bit unsigned data. Args: data: Numpy array with dtype ==
Promote 2-bit unisgned data into 8-bit unsigned data. Args: data: Numpy array with dtype ==
Returns ON-OFF for all Stokes parameters given a cross_pols noise diode measurement
Plots the uncalibrated full stokes spectrum of the noise diode. Use diff=False to plot both
Plots the corrected noise diode spectrum for a given noise diode measurement after application of
Plots the calculated phase offsets of each coarse channel along with the UV (or QU)
Plots the calculated gain offsets of each coarse channel along with the time averaged power
Plots the calculated average power and time sampling of ON (red) and OFF (blue) for
Generates and shows five plots: Uncalibrated diode, calibrated diode, fold information, phase offsets, and gain
Plots the full-band Stokes I spectrum of the noise diode (ON-OFF)
Read input and output frequency, and output file name
Command line utility for creating HDF5 blimpy files.
Open a HDF5 or filterbank file Returns instance of a Reader to read data from
Making sure the selection if time and frequency are within the file limits. Args: init
Calculating dtype
Calculate size of data of interest.
Calculate shape of data of interest.
Setup channel borders
Updating frequency borders from channel values
Populate time axis. IF update_header then only return tstart
Populate frequency axis
This makes an attempt to calculate the number of coarse channels in a given file.
Given the blob dimensions, calculate how many fit in the data selection.
Check if the current selection is too large.
Read header and return a Python dictionary of key:value pairs
Find first blob from selection.
Read data
Read blob from a selection.
Read blimpy header and return a Python dictionary of key:value pairs Args: filename (str): name
Read data.
Find first blob from selection.
Read blob from a selection.
read all the data. If reverse=True the x axis is flipped.
Read a block of data. The number of samples per row is set in self.channels
Command line tool for plotting and viewing info on blimpy files
Reads data selection if small enough.
Updates the header information from the original file to the selection.
Print header information and other derived information.
Write data to .fil file. It check the file size then decides how to write
Write data to .fil file. Args: filename_out (str): Name of output file
Write data to .fil file. Args: filename_out (str): Name of output file
Write data to HDF5 file. It check the file size then decides how to write
Write data to HDF5 file. Args: filename_out (str): Name of output file
Write data to HDF5 file in one go. Args: filename_out (str): Name of output file
Sets the blob dimmentions, trying to read around 1024 MiB at a time. This is
Sets the chunking dimmentions depending on the file type.
Extract a portion of data by frequency range. Args: f_start (float): start frequency in MHz
Command line tool for plotting and viewing info on guppi raw files
Read next header (multiple headers in file) Returns: (header, data_idx) - a dictionary of keyword:value
Read first header in file Returns: header (dict): keyword:value pairs of header metadata
returns a generator object that reads data a block at a time; the generator prints
Read the next block of data and its header Returns: (header, data) header (dict): dictionary
Read the next block of data and its header Returns: (header, data) header (dict): dictionary
Read the next block of data and its header Returns: (header, data) header (dict): dictionary
Seek through the file to find how many data blocks there are in the file
Compute some basic stats on the next block of data
Plot a histogram of data values
Do a (slow) numpy FFT and take power of data
Generate a blimpy header dictionary
Script to find the header size of a filterbank file
Command line tool to make a md5sum comparison of two .fil files.
Converts file to HDF5 (.h5) format. Default saves output in current dir.
Command line tool for converting guppi raw into HDF5 versions of guppi raw
Returns time-averaged spectra of the ON and OFF measurements in a calibrator measurement with flickering
Integrates over each core channel of a given spectrum. Important for calibrating data with frequency/time
Folds Stokes I noise diode data and integrates along coarse channels Parameters ---------- name :
Given properties of the calibrator source, calculate fluxes of the source in a particular frequency
Returns central frequency of each coarse channel Parameters ---------- freqs : 1D Array (float) Frequency
Calculate f_ON, and f_OFF as defined in van Straten et al. 2012 equations 2 and
Calculate the coarse channel spectrum and system temperature of the noise diode in Jy given
Returns frequency dependent system temperature given observations on and off a calibrator source Parameters ----------
Produce calibrated Stokes I for an observation given a noise diode measurement on the source
Return the length of the blimpy header, in bytes Args: filename (str): name of file
Open file and confirm if it is a filterbank file or not.
Read blimpy header and return a Python dictionary of key:value pairs Args: filename (str): name
Apply a quick patch-up to a Filterbank header by overwriting a header value Args: filename
Reads a little-endian double in ddmmss.s (or hhmmss.s) format and then converts to Float degrees
Generate a serialized string for a sigproc keyword:value pair If value=None, just the keyword will
Generate a serialzed sigproc header which can be written to disk. Args: f (Filterbank object):
Convert an astropy.Angle to the ridiculous sigproc angle format string.
Calculate number of integrations in a given file
Converts file to Sigproc filterbank (.fil) format. Default saves output in current dir.
Convert a Traceback into a dictionary representation
Make a subparser for a given type of DNS record
Make an ArgumentParser that accepts DNS RRs
Tokenize a line: * split tokens on whitespace * treat quoted strings as a single
Serialize tokens: * quote whitespace-containing tokens * escape semicolons
Remove comments from a zonefile
Flatten the text: * make sure each record is on one line. * remove parenthesis
Remove the CLASS from each DNS record, if present. The only class that gets used
Go through each line of the text and ensure that a name is defined. Use
Given the parser, capitalized list of a line's tokens, and the current set of records
Parse a zonefile into a dict. @text must be flattened--each record must be on one
Parse a zonefile into a dict
Generate the DNS zonefile, given a json-encoded description of the zone file (@json_zone_file) and the
Replace {$origin} in template with a serialized $ORIGIN record
Replace {$ttl} in template with a serialized $TTL record
Replace {SOA} in template with a set of serialized SOA records
Quote a field in a list of DNS records. Return the new data records.
Meta method: Replace $field in template with the serialized $record_type records, using @record_key from each
Replace {txt} in template with the serialized TXT records
Load and return a PySchema class from an avsc string
This function can be used to build a python package representation of pyschema classes. One
Generate Python source code for one specific class Doesn't include or take into account any
Temporarily disable automatic registration of records in the auto_store Decorator factory. This is _NOT_ thread
Dump record in json-encodable object format
Load from json-encodable
Create a Record instance from a json-compatible dictionary The dictionary values should have types that
Create a Record instance from a json serialized dictionary :param s: String with a json-serialized
Add record class to record store for retrieval at record load time. Can be used
Will return a matching record or raise KeyError is no record is found. If the
Return a dictionary the field definition Should contain all fields that are required for the
Decorator for mixing in additional functionality into field type Example: >>> @Integer.mixin ... class IntegerPostgresExtensions:
Create proper PySchema class from cls Any methods and attributes will be transferred to the
Return a python dict representing the jsonschema of a record Any references to sub-schemas will
Return a root jsonschema for a given record A root schema includes the $schema attribute
Load from json-encodable
Converts a file object with json serialised pyschema records to a stream of pyschema objects
Writes a stream of json serialised pyschema Records to a file object Can be used
Set a value at the front of an OrderedDict The original dict isn't modified, instead
Generates a single filter expression for ``filter[]``.
Creates a query (AND and =) from a dictionary.
Specify query string to use with the collection. Returns: :py:class:`SearchResult`
Sends all filters to the API. No fancy, just a wrapper. Any advanced functionality shall
Returns all entities present in the collection with ``attributes`` included.
Returns entity in correct collection. If the "href" value in result doesn't match the current
When you pass a quote character, returns you an another one if possible
Tries to escape the values that are passed to filter as correctly as possible. No
Make the plot with parallax performance predictions. :argument args: command line arguments
Plot the bright limit of Gaia in V as a function of (V-I). Parameters ----------
Convert spherical to Cartesian coordinates. The input can be scalars or 1-dimensional numpy arrays. Note
Convert Cartesian to spherical coordinates. The input can be scalars or 1-dimensional numpy arrays. Note
Calculate the so-called normal triad [p, q, r] which is associated with a spherical coordinate
Construct an elementary rotation matrix describing a rotation around the x, y, or z-axis. Parameters
From the given phase space coordinates calculate the astrometric observables, including the radial velocity, which
From the input astrometric parameters calculate the phase space coordinates. The output phase space coordinates
Make the plot with proper motion performance predictions. The predictions are for the TOTAL proper
Set up command line parsing.
Create a new enumeration type. Code is copyright (c) Gabriel Genellina, 2010, MIT License. Parameters
Take the astrometric parameter standard uncertainties and the uncertainty correlations as quoted in the Gaia
Make a plot of a Mv vs (V-I) colour magnitude diagram containing lines of constant
Calculate radial velocity error from V and the spectral type. The value of the error
This code takes care of ordering the points (x,y), calculated for a sky map parallel
Produce a sky-plot in a given coordinate system with the meridians and paralles for another
Calculate the parallax error for the given input source magnitude and colour. :argument args: command
Set up command line parsing.
Calculate the single-field-of-view-transit photometric standard error in the G band as a function of G.
Calculate the end of mission photometric standard error in the G band as a function
Calculate the single-field-of-view-transit photometric standard error in the BP band as a function of G
Calculate the end-of-mission photometric standard error in the BP band as a function of G
Calculate the end-of-mission photometric standard error in the RP band as a function of G
Make the plot with photometry performance predictions. :argument args: command line arguments
Calculate the value for the parameter z in the formula for parallax and G magnitude
Calculate the value for the parameter z in the formula for the BP and RP
Calculate the value of z in the formula for the parallax errors. In this case
Returns the number of transits across the Gaia focal plane averaged over ecliptic longitude. Parameters
Calculate the angular distance between pairs of sky coordinates. Parameters ---------- phi1 : float Longitude
Rotates Cartesian coordinates from one reference system to another using the rotation matrix with which
Converts sky coordinates from one reference system to another, making use of the rotation matrix
Converts proper motions from one reference system to another, using the prescriptions in section 1.5.3
Converts the sky coordinate errors from one reference system to another, including the covariance term.
Converts the proper motion errors from one reference system to another, including the covariance term.
Transform the astrometric covariance matrix to its representation in the new coordinate system. Parameters ----------
Calculates the Jacobian for the transformation of the position errors and proper motion errors between
Propagate the position of a source from the reference epoch t0 to the new epoch
Propagate the position of a source from the reference epoch t0 to the new epoch
Propagate the covariance matrix of the astrometric parameters and radial proper motion of a source
Make the plot with parallax horizons. The plot shows V-band magnitude vs distance for a
Look up the numerical factors to apply to the sky averaged parallax error in order
Calculate the sky averaged parallax error from G and (V-I). Parameters ---------- G - Value(s)
Calculate the minimum parallax error from G and (V-I). This correspond to the sky regions
Calculate the maximum parallax error from G and (V-I). This correspond to the sky regions
Calculate the sky averaged parallax error from G and (V-I). In this case assume gating
Calculate the sky averaged position errors from G and (V-I). NOTE! THE ERRORS ARE FOR
Calculate the minimum position errors from G and (V-I). These correspond to the sky regions
Calculate the maximum position errors from G and (V-I). These correspond to the sky regions
Calculate the position errors from G and (V-I) and the Ecliptic latitude beta of the
Calculate the minimum proper motion errors from G and (V-I). These correspond to the sky
Calculate the maximum proper motion errors from G and (V-I). These correspond to the sky
Calculate the proper motion errors from G and (V-I) and the Ecliptic latitude beta of
Calculate the sky averaged total proper motion error from G and (V-I). This refers to
Make the plot with parallax horizons. The plot shows V-band magnitude vs distance for a
Obtain (V-I) for the input spectral type. Parameters ---------- spt - String representing the spectral
Obtain M_V (absolute magnitude in V-band) for the input spectral type. Parameters ---------- spt -
Obtain M_G (absolute magnitude in G-band) for the input spectral type. Parameters ---------- spt -
Plot relative parallax errors as a function of distance for stars of a given spectral
Make the plot with radial velocity performance predictions. :argument args: command line arguments
A utility function for selecting the first non-null query. Parameters: funcs: One or more functions
Decorator for eval_ that prints a helpful error message if an exception is generated in
Convert to unicode, and add quotes if initially a string
Call `func` on each element in the collection. If multiple functions are provided, each item
Return a new Collection excluding some items Parameters: func : function(Node) -> Scalar A function
Return a new Collection with some items removed. Parameters: func : function(Node) -> Scalar A
Return a new Collection with the last few items removed. Parameters: func : function(Node) ->
Return a new Collection with the first few items removed. Parameters: func : function(Node) ->
Build a list of dicts, by calling :meth:`Node.dump` on each item. Each keyword provides a
Zip the items of this collection with one or more other sequences, and wrap the
Turn this collection into a Scalar(dict), by zipping keys and items. Parameters: keys: list or
Find a single Node among this Node's descendants. Returns :class:`NullNode` if nothing matches. This inputs
Like :meth:`find`, but searches through :attr:`next_siblings`
Like :meth:`find`, but searches through :attr:`parents`
Like :meth:`find`, but searches through :attr:`previous_siblings`
Like :meth:`find`, but selects all matches (not just the first one). Returns a :class:`Collection`. If
Like :meth:`find_all`, but searches through :attr:`next_siblings`
Like :meth:`find_all`, but searches through :attr:`parents`
Like :meth:`find_all`, but searches through :attr:`previous_siblings`
Like :meth:`find_all`, but takes a CSS selector string as input.
Return potential locations of IACA installation.
Return (hopefully) valid installation of IACA.
Yild all groups of simple regex-like expression. The only special character is a dash (-),
Very reduced regular expressions for describing a group of registers. Only groups in square bracktes
Return a LIKWID event string from an event tuple or keyword arguments. *event_tuple* may have
Compile list of minimal runs for given events.
Apply cache prediction to generate cache access behaviour.
Run analysis.
Convert performance (FLOP/s) to other units, such as It/s or cy/CL.
Report analysis outcome in human readable form.
Run complete analysis.
Print human readable report of model.
Apply layer condition model to calculate cache accesses.
Run complete analysis.
Report generated model in human readable form.
Naive comment and macro striping from source code :param comments: If True, all comments are
Replace all matching ID nodes in ast (in-place), with replacement. :param id_name: name of ID
Round float to next multiple of base.
Split list of integers into blocks of block_size and return block indices. First block element
Dispatch to cache predictor to get cache stats.
Calculate performance model cycles from cache stats. calculate_cache_access() needs to have been execute before.
Run complete anaylysis and return results.
Print generated model data in human readable format.
Run complete analysis and return results.
Convert cycles (cy/CL) to other units, such as FLOP/s or It/s.
Print generated model data in human readable format.
Run complete analysis.
Print generated model data in human readable format.
Plot visualization of model prediction.
Strip whitespaces and comments from asm lines.
Strip all labels, which are never referenced.
Find blocks probably corresponding to loops in assembly.
Return best block selected based on simple heuristic.
Let user interactively select byte increment.
Let user interactively select block.
Insert IACA marker into list of ASM instructions at given indices.
Add IACA markers to an assembly file. If instrumentation fails because loop increment could not
Run IACA analysis on an instrumented binary. :param instrumented_binary_file: path of binary that was built
Execute command line interface.
Setup and execute model with given blocking length
returns the largest prefix where the relative error is bellow *max_error* although rounded by *round_length*
Return list of evenly spaced integers over an interval. Numbers can either be evenly distributed
Return datetime object of latest change in kerncraft module directory.
Return argparse parser.
Check arguments passed by user that are not checked by argparse itself.
Run command line interface.
Initialize and run command line interface.
Comand line interface of picklemerge.
Create a sympy.Symbol with positive and integer assumptions.
Prefix and indent all lines in *textblock*. *prefix* is a prefix string *later_prefix* is used
Transform ast of multidimensional declaration to a single dimension declaration. In-place operation! Returns name and
Transform ast of multidimensional reference to a single dimension reference. In-place operation!
Transform ast of "type var_name[N]" to "type* var_name = aligned_malloc(sizeof(type)*N, 32)" In-place operation. :param with_init:
Return list of array references in AST.
Will make any functions return an iterable objects by wrapping its result in a list.
Reduce absolute path to relative (if shorter) for easier readability.
Check that information about kernel makes sens and is valid.
Set constant of name to value. :param name: may be a str or a sympy.Symbol
Register variable of name and type_, with a (multidimensional) size. :param name: variable name as
Substitute constants in expression unless it is already a number.
Return a dictionary with all arrays sizes. :param in_bytes: If True, output will be in
Return the offset from the iteration center in number of elements. The order of indices
Remove duplicate source and destination accesses
Transform a (multidimensional) variable access to a flattend sympy expression. Also works with flat array
Return the number of global loop iterations that are performed. If dimension is not None,
Yield loop stack dictionaries in order from outer to inner.
Return the order of indices as they appear in array references. Use *source* and *destination*
Return a dictionary of lists of sympy accesses, for each variable. Use *source* and *destination*
Return load and store distances between accesses. :param sympy_accesses: optionally restrict accesses, default from compile_sympy_accesses()
Return sympy expressions translating global_iterator to loop indices. If global_iterator is given, an integer is
Return global iterator sympy expression
Transform a dictionary of indices to a global iterator integer. Inverse of global_iterator_to_indices().
Return global iterator with last iteration number
Return load and store offsets on a virtual address space. :param iteration: controls the inner
Consecutive bytes written out per high-level iterations (as counted by loop stack). Is used to
Print kernel information in human readble format.
Print variables information in human readble format.
Print constants information in human readble format.
Create or open intermediate file (may be used for caching). Will replace files older than
Print source code of kernel.
Convert mathematical expressions to a sympy representation. May only contain paranthesis, addition, subtraction and multiplication
Return a tuple of offsets of an ArrayRef object in all dimensions. The index order
Return base name of ArrayRef object. e.g. c[i+1][j-2] -> 'c'
Return index type used in loop nest. If index type between loops differ, an exception
Generate constants declarations :return: list of declarations
Return array declarations.
Return kernel loop nest including any preceding pragmas and following swaps.
Generate declaration statements for arrays. Also transforming multi-dim to 1d arrays and initializing with malloc.
Return inner most for loop in loop nest
Generate initialization statements for arrays. :param array_dimensions: dictionary of array dimensions :return: list of nodes
Generate false if branch with dummy calls Requires kerncraft.h to be included, which defines dummy(...)
Build and return kernel function declaration
Build and return scalar variable declarations
Generate and return compilable source code with kernel function from AST. :param openmp: if true,
Generate and return kernel call ast.
Generate and return compilable source code from AST.
Assemble *in_filename* assembly into *out_filename* object. If *iaca_marked* is set to true, markers are inserted
Compile source (from as_code(type_)) to assembly or object and return (fileptr, filename). Output can be
Run an IACA analysis and return its outcome. *asm_block* controls how the to-be-marked block is
Compile source to executable with likwid capabilities and return the executable name.
Convert any string to a sympy object or None.
Return identifier which is either the machine file name or sha256 checksum of data.
Return datetime object of modified time of machine file. Return now if not a file.
Return a cachesim.CacheSimulator object based on the machine description. :param cores: core count (default: 1)
Return best fitting bandwidth according to number of threads, read and write streams. :param cache_level:
Return tuple of compiler and compiler flags. Selects compiler and flags from machine description file,
Parse events in machine description to tuple representation used in Benchmark module. Examples: >>> parse_perfctr_event('PERF_EVENT:REG[0-3]')
Return (sympy expressions, event names and symbols dict) from performance metric str.
Enforce that no ranges overlap in internal storage.
Return local folder path of header files.
Align iteration with cacheline boundary.
Return a list with number of loaded cache lines per memory hierarchy level.
Return a list with number of hit cache lines per memory hierarchy level.
Return a list with number of missed cache lines per memory hierarchy level.
Return a list with number of stored cache lines per memory hierarchy level.
Return a list with number of evicted cache lines per memory hierarchy level.
Return verbose information about the predictor.
*size* is given in kilo bytes
Fix environment variable to a value within context. Unset if value is None.
Configure argument parser.
Run *cmd* with likwid-perfctr and returns result as dict. *group* may be a performance group
Run analysis.
Report gathered analysis data in human readable form.
Parse the description in the README file CommandLine: python -c "import setup; print(setup.parse_description())"
Schedule a retry
Build and return Sailthru purchase item object
Record a purchase in Sailthru Arguments: sailthru_client (object): SailthruClient email (str): user's email address item
Get course information using the Sailthru content api or from cache. If there is an
Get course information using the Ecommerce course api. In case of error returns empty response.
Maintain a list of courses the user has unenrolled from in the Sailthru user record
Adds/updates Sailthru when a user adds to cart/purchases/upgrades a course Args: email(str): The user's email
Sends the course refund email. Args: self: Ignore. email (str): Recipient's email address. refund_id (int):
Sends the offer assignment email. Args: self: Ignore. user_email (str): Recipient's email address. offer_assignment_id (str):
Handles sending offer assignment notification emails and retrying failed emails when appropriate.
Update the offer_assignment and offer_assignment_email model using the Ecommerce assignmentemail api. Arguments: offer_assignment_id (str): Key
Sends the offer emails after assignment, either for revoking or reminding. Args: self: Ignore. user_email
Returns a dictionary containing logging configuration. If dev_env is True, logging will not be done
Retry with exponential backoff until fulfillment succeeds or the retry limit is reached. If the
Fulfills an order. Arguments: order_number (str): Order number indicating which order to fulfill. Returns: None
Returns a Sailthru client for the specified site. Args: site_code (str): Site for which the
Get an object from the cache Arguments: key (str): Cache key Returns: Cached object
Save an object in the cache Arguments: key (str): Cache key value (object): object to
Get a value from configuration. Retrieves the value corresponding to the given variable from the
Get client for fetching data from ecommerce API. Arguments: site_code (str): (Optional) The SITE_OVERRIDES key
Get the name of the file containing configuration overrides from the provided environment variable.
Parameters ---------- output_category: str inputs: epw, idf table: summary table other: other
Finds the value depending in current eplus version. Parameters ---------- d: dict {(0, 0): value,
works inplace
if _eplus_version is defined => _eplus_version else most recent eplus available version
Parameters ---------- df Returns ------- sanitized df
Returns ------- (start, end) Datetime instants of beginning and end of data. If no data,
Parameters ---------- buffer_or_path: buffer or path containing epw format. Returns ------- WeatherData instance.
Parameters ---------- buffer_or_path: buffer or path, default None Buffer or path to write into. If
Records are created from string. They are not attached to idf yet. in idf: header
Parameters ---------- epm_or_idf_path: weather_data_or_epw_path simulation_dir_path stdout: default sys.stdout stderr: default sys.stderr beat_freq: if not none,
Parameters ---------- epm_or_path weather_data_or_path base_dir_path: simulation dir path simulation_name: str, default None if provided, simulation
Defined here so that we can use the class variables, in order to subclass in
Parameters ---------- file_ref: str reference of file. Available references: 'idf', 'epw', 'eio', 'eso', 'mtr', 'mtd',
Parameters ---------- file_ref: str reference of file. Available references: 'idf', 'epw', 'eio', 'eso', 'mtr', 'mtd',
Parameters ---------- model_name: with or without extension
!! Must only be called once, when empty !!
An external file manages file paths.
All fields of Epm with a default value and that are null will be set
Parameters ---------- json_data: dict Dictionary of serialized data (text, floats, ints, ...). For more information
Parameters ---------- buffer_or_path: idf buffer or path check_required: boolean, default True If True, will raise
Parameters ---------- buffer_or_path: json buffer or path check_required: boolean, default True If True, will raise
Returns ------- A dictionary of serialized data.
Parameters ---------- buffer_or_path: buffer or path, default None output to write into. If None, will
Parameters ---------- buffer_or_path: buffer or path, default None output to write into. If None, will
Parameters ---------- filter_by: callable, default None Callable must take one argument (a record of queryset),
Parameters ---------- filter_by: callable, default None Callable must take one argument (a record of table),
Returns ------- None if epw can be anywhere
This function finishes initialization, must be called once all field descriptors and tag have been
reduced index: modulo of extensible has been applied
manages extensible names
index is used for extensible fields error messages (if given)
Uses EPlus double approach of type ('type' tag, and/or 'key', 'object-list', 'external-list', 'reference' tags) to
we calculate on the fly to avoid managing registrations and un-registrations Returns ------- {ref: short_ref,
Returns first occurrence of value of filter column matching filter criterion.
is only called by _update_inert
Parameters ---------- ref_or_index external_files_mode: str, default 'path' 'path', 'pointer' model_file_path: str, default None if external
Returns ------- List of ExternalFiles instances contained by record.
Updates simultaneously all given fields. Parameters ---------- data: dictionary containing field lowercase names or index
Parameters ---------- new_name: str, default None record's new name (if table has a name). If
sets all empty fields for which a default value is defined to default value
This method only works for extensible fields. It allows to add values without precising their
This method only works for extensible fields. It allows to remove a value and shift
This method only works for extensible fields. It allows to insert a value, and shifts
Returns ------- list of cleared fields (serialized)
Deletes record, and removes it from database.
Parameters ---------- ref_or_index: str or int field lowercase name, or field position Returns ------- Field
Parameters ---------- model_name: str, default None if given, will be used as external file directory
Parameters ---------- model_name: str, default None if given, will be used as external file directory
Tested under EPlus 8.1.0 on Windows (Geoffroy).
Parameters ---------- environment_title_or_num frequency: 'str', default None 'timestep', 'hourly', 'daily', 'monthly', 'annual', 'run_period' If None,
this hack is used to document add function a methods __doc__ attribute is read-only (or
inert: hooks and links are not activated
Parameters ---------- filter_by: callable, default None Callable must take one argument (a record of table),
Parameters ---------- filter_by: callable, default None Callable must take one argument (a record of table),
Parameters ---------- records_data: list of dictionaries containing records data. Keys of dictionary may be field
target record must have been set
source record and index must have been set
Parameters ---------- command: command cwd: current working directory stdout: output info stream (must have 'write'
path_or_content: path or content_str or content_bts or string_io or bytes_io Returns ------- string_buffer, path path
Parameters ---------- simulation_step: if not given, returns a raw report error_category: if only one argument
Create regex and return. If error occurs returns None.
Convert status (id) to its string name.
Returns the remaining duration for a recording.
Serialize this object as dictionary usable for conversion to JSON. :return: Dictionary representing this object.
Make an HTTP request to a given URL with optional parameters.
Get available service endpoints for a given service type from the Opencast ServiceRegistry.
Convert datetime into a unix timestamp. This is the equivalent to Python 3's int(datetime.timestamp()). :param
Try to create a directory. Pass without error if it already exists.
Get the location of a given service from Opencast and add it to the current
Register this capture agent at the Matterhorn admin server so that it shows up in
Send the state of the current recording to the Matterhorn core. :param recording_id: ID of
Update the status of a particular event in the database.
Update the status of a particular service in the database.
Update the status of a particular service in the database.
Update the current agent state in opencast.
Find the best match for the configuration file.
Update configuration from file. :param cfgfile: Configuration file to load.
Check configuration for sanity.
Initialize logger based on configuration
Serve the status page of the capture agent.
Serve the preview image with the given id
Intercept sigterm and terminate all processes.
Start all services.
Parse Opencast schedule iCalendar file and return events as dict
Try to load schedule from the Matterhorn core. Returns a valid schedule or None on
Main loop, retrieving the schedule.
Main loop, updating the capture agent state.
Return a response with a jsonapi error object
Return a response with a list of jsonapi data objects
Serve a json representation of internal agentstate as meta data
Serve a JSON representation of events
Return a specific events JSON
Delete a specific event identified by its uid. Note that only recorded events can be
Modify an event specified by its uid. The modifications for the event are expected as
Extract the set of configuration parameters from the properties attached to the schedule
Ingest a finished recording to the Opencast server.
Start a capture process but make sure to catch any errors during this process, log
Main loop of the capture agent, retrieving and checking the schedule as well as starting
Intercept sigterm and terminate all processes.
Start the capture process, creating all necessary files and directories as well as ingesting the
Start a capture process but make sure to catch any errors during this process, log
Run the actual command to record the a/v material.
Main loop of the capture agent, retrieving and checking the schedule as well as starting
Returns a simple fragment
Returns list of unique `FragmentResource`s by order of first appearance.
Returns the fragment in a dictionary representation.
Returns a new Fragment from a dictionary representation.
Add content to this fragment. `content` is a Unicode string, HTML to append to the
Add a resource needed by this Fragment. Other helpers, such as :func:`add_css` or :func:`add_javascript` are
Add a resource by URL needed by this Fragment. Other helpers, such as :func:`add_css_url` or
Register a Javascript function to initialize the Javascript resources. `js_func` is the name of a
Get some resource HTML for this Fragment. `placement` is "head" or "foot". Returns a unicode
Returns `resource` wrapped in the appropriate html tag for it's mimetype.
Render a fragment to HTML or return JSON describing it, based on the request.
Renders a standalone page as a response for the specified fragment.
Render the specified fragment to HTML for a standalone page.
meaning pvalues presorted i descending order
You can not call methods with multiprocessing, but free functions, If you want to call
Converts list or flattens n-dim array to 1-dim array if possible
Find matching q-value for each score in 'scores'
Compute posterior probabilities for each chromatogram For each chromatogram (each group_id / peptide precursor), all
[P(X>pi, mu, sigma) for pi in pvalues] for normal distributed stat with expectation value mu
Computes empirical values identically to bioconductor/qvalue empPvals
Estimate pi0 according to bioconductor/qvalue
Estimate local FDR / posterior error probability from p-values according to bioconductor/qvalue
Create artificial cutoff sample points from given range of cutoff values in df, number of
Summary error table for some typical q-values
Takes list of decoy and target scores and creates error statistics for target values
Finds cut off target score for specified false discovery rate fdr
Conduct semi-supervised learning and error-rate estimation for MS1, MS2 and transition-level data.
Infer peptidoforms after scoring of MS1, MS2 and transition-level data.
Infer peptides and conduct error-rate estimation in different contexts.
Infer proteins and conduct error-rate estimation in different contexts.
Subsample OpenSWATH file to minimum for integrated scoring
Reduce scored PyProphet file to minimum for global scoring
Merge multiple OSW files and (for large experiments, it is recommended to subsample first).
Backpropagate multi-run peptide and protein scores to single files
Export TSV/CSV tables
Export Compound TSV/CSV tables
Filter sqMass files
Returns a list of restclients.GroupReference objects matching the passed parameters. Valid parameters are: name: parts_of_name
Returns a restclients.Group object for the group identified by the passed group ID.
Creates a group from the passed restclients.Group object.
Deletes the group identified by the passed group ID.
Returns a list of restclients.GroupMember objects for the group identified by the passed group ID.
Updates the membership of the group represented by the passed group id. Returns a list
Returns a count of effective members for the group identified by the passed group ID.
Returns True if the netid is in the group, False otherwise.
pip install redbaron
Statically parse the version number from __init__.py
Create 3 datasets in a group to represent the sparse array. Parameters ---------- sparse_format:
Decrypts context.io_manager's stdin and sends that to context.io_manager's stdout. See :py:mod:`swiftly.cli.decrypt` for context usage information.
Returns immediately to the caller and begins executing the func in the background. Use get_results
Returns a dict of the results currently available. The keys are the ident values given
Converts a client path into the operating system's path by replacing instances of '/' with
Converts an operating system path into a client path by replacing instances of os.path.sep with
Returns a stdin-suitable file-like object based on the optional os_path and optionally skipping any configured
Returns a stdout-suitable file-like object based on the optional os_path and optionally skipping any configured
Returns a stderr-suitable file-like object based on the optional os_path and optionally skipping any configured
Returns a debug-output-suitable file-like object based on the optional os_path and optionally skipping any configured
A context manager yielding a stdin-suitable file-like object based on the optional os_path and optionally
A context manager yielding a stdout-suitable file-like object based on the optional os_path and optionally
A context manager yielding a stderr-suitable file-like object based on the optional os_path and optionally
A context manager yielding a debug-output-suitable file-like object based on the optional os_path and optionally
Deletes all objects and containers in the account. You must set yes_empty_account to True to
Deletes all objects in the container. By default, this will perform one pass at deleting
Deletes the item (account, container, or object) at the path. See :py:mod:`swiftly.cli.delete` for context usage
Instance method decorator to convert an optional file keyword argument into an actual value, whether
Instance method decorator to convert an optional file keyword argument into an actual value, whether
Outputs the error msg to the file if specified, or to the io_manager's stderr if
Immediately exits Python with the given status (or 0) as the exit code and optionally
Outputs help information to the file if specified, or to the io_manager's stdout if available,
Outputs usage information to the file if specified, or to the io_manager's stdout if available,
Outputs version information to the file if specified, or to the io_manager's stdout if available,
Helper method that will parse the args into options and remaining args as well as
Helper function that will convert an options list into a dict of key/values. This is
Performs a direct HTTP request to the Swift service. :param method: The request method ('GET',
HEADs the account and returns the results. Useful headers returned are: =========================== ================================= x-account-bytes-used Object
GETs the account and returns the results. This is done to list the containers for
PUTs the account and returns the results. This is usually done with the extract-archive bulk
POSTs the account and returns the results. This is usually done to set X-Account-Meta-xxx headers.
Sends a DELETE request to the account and returns the results. With ``query['bulk-delete'] = ''``
HEADs the container and returns the results. Useful headers returned are: =========================== ================================= x-container-bytes-used Object
GETs the container and returns the results. This is done to list the objects for
PUTs the container and returns the results. This is usually done to create new containers
HEADs the object and returns the results. :param container: The name of the container. :param
GETs the object and returns the results. :param container: The name of the container. :param
PUTs the object and returns the results. This is used to create or overwrite objects.
POSTs the object and returns the results. This is used to update the object's header
Performs a ping test. See :py:mod:`swiftly.cli.ping` for context usage information. See :py:class:`CLIPing` for more information.
Performs a GET on the account as a listing request. See :py:mod:`swiftly.cli.get` for context usage
Performs a GET on the container as a listing request. See :py:mod:`swiftly.cli.get` for context usage
Performs a GET on the item (account, container, or object). See :py:mod:`swiftly.cli.get` for context usage
See :py:func:`swiftly.client.client.Client.request`
Resolves an option value into options. Sets options.<option_name> to a resolved value. Any value already
Performs a POST on the item (account, container, or object). See :py:mod:`swiftly.cli.post` for context usage
Returns a new CLIContext instance that is a shallow copy of the original, much like
Convenience function to output headers in a formatted fashion to a file-like fp, optionally muting
See :py:func:`swiftly.client.client.Client.request`
Authenticates and then outputs the resulting information. See :py:mod:`swiftly.cli.auth` for context usage information. See :py:class:`CLIAuth`
Returns a TempURL good for the given request method, url, and number of seconds from
Much like parse.quote in that it returns a URL encoded string for the given value,
Converts a sequence of (name, value) tuples into a dict where if a given name
Issues commands for each item in an account or container listing. See :py:mod:`swiftly.cli.fordo` for context
Obtains a client for use, whether an existing unused client or a brand new one
Performs a HEAD on the item (account, container, or object). See :py:mod:`swiftly.cli.head` for context usage
Generator that encrypts a content stream using AES 256 in CBC mode. :param key: Any
Generator that decrypts a content stream using AES 256 in CBC mode. :param key: Any
Performs PUTs rooted at the path using a directory structure pointed to by context.input\_. See
Performs a PUT on the account. See :py:mod:`swiftly.cli.put` for context usage information. See :py:class:`CLIPut` for
Performs a PUT on the container. See :py:mod:`swiftly.cli.put` for context usage information. See :py:class:`CLIPut` for
Performs a PUT on the object. See :py:mod:`swiftly.cli.put` for context usage information. See :py:class:`CLIPut` for
Performs a PUT on the item (account, container, or object). See :py:mod:`swiftly.cli.put` for context usage
Returns body for manifest file and modifies put_headers. path2info is a dict like {"path": (size,
Creates container for segments of file with `path`
Generates a TempURL and sends that to the context.io_manager's stdout. See :py:mod:`swiftly.cli.tempurl` for context usage
See :py:func:`swiftly.client.client.Client.auth`
See :py:func:`swiftly.client.client.Client.request`
See :py:func:`swiftly.client.client.Client.reset`
See :py:func:`swiftly.client.client.Client.get_account_hash`
Translates any information that can be determined from the x_trans_id and sends that to the
Outputs help information. See :py:mod:`swiftly.cli.help` for context usage information. See :py:class:`CLIHelp` for more information. :param
read([size]) -> read at most size bytes, returned as a string. If the size argument
readline([size]) -> next line from the file, as a string. Retain newline. A non-negative size
readlines([size]) -> list of strings, each a line from the file. Call readline() repeatedly and
Check whether the "file" is empty reading the single byte.
Encrypts context.io_manager's stdin and sends that to context.io_manager's stdout. This can be useful to encrypt
Determine the value for BUILD_COMMITS from the app and repository config. Resolves the previous BUILD_ALL_COMMITS
Gets the status of a commit. .. note:: ``repo_name`` might not ever be anything other
Data for a given pull request. :param app: Flask app :param repo_config: dict with ``github_repo``
Last 30 pull requests from a repository. :param app: Flask app :param repo_config: dict with
Write obj in elasticsearch. :param obj: value to be written in elasticsearch. :param resource_id: id
Read object in elasticsearch using the resource_id. :param resource_id: id of the object to be
Update object in elasticsearch using the resource_id. :param metadata: new metadata for the transaction. :param
Delete an object from elasticsearch. :param resource_id: id of the object to be deleted. :return:
List all the objects saved elasticsearch. :param search_from: start offset of objects to return. :param
Query elasticsearch for objects. :param search_model: object of QueryModel. :return: list of objects that match
Query elasticsearch for objects. :param search_model: object of FullTextModel :return: list of objects that match
Write your forwards methods here.
Returns the published slider items.
Renders the hero slider.
Acquire the lock to read
Release the lock after reading
Acquire the lock to write
Add a task to the registry. This method adds task using `task_id` as identifier. If
Remove a task from the registry. To remove it, pass its identifier with `taks_id` parameter.
Get a task from the registry. Retrieve a task from the registry using its task
Get the list of tasks
Returns a dict with the representation of this task configuration object.
Create an configuration object from a dictionary. Key,value pairs will be used to initialize a
Add metadata to an item. Decorator that adds metadata to Perceval items such as the
Execute a Perceval job on RQ. The items fetched during the process will be stored
Initialize the archive manager. :param archive_path: path where the archive manager is located
Run the backend with the given parameters. The method will run the backend assigned to
Execute a backend of Perceval. Run the backend of Perceval assigned to this job using
Configure the index to work with
Create a mapping
Custom JSON encoder handler
Write items to the queue :param writer: the writer object :param items_generator: items to be
Add tasks
Remove tasks
List tasks
Add and schedule a task. :param task_id: id of the task :param backend: name of
Remove and cancel a task. :param task_id: id of the task to be removed
Get the items fetched by the jobs.
Check that the task arguments received are valid
Parse the archive arguments of a task
Custom method to execute a job and notify of its result :param job: Job object
Schedule a job in the given queue.
Cancel the job related to the given task.
Run thread to listen for jobs and reschedule successful ones.
Listen for completed jobs and reschedule successful ones.
Start scheduling jobs.
Schedule a task. :param task_id: identifier of the task to schedule :raises NotFoundError: raised when
Cancel or 'un-schedule' a task. :param task_id: identifier of the task to cancel :raises NotFoundError:
Handle successufl jobs
Handle failed jobs
Build the set of arguments required for running a job
Gets contents of secret file :param secret_name: The name of the secret present in BANANAS_SECRETS_DIR
Register the API view class in the bananas router. :param BananasAPI view:
Register a generic class based view wrapped with ModelAdmin and fake model :param view: The
Extended DRF with fallback to requested namespace if request.version is missing
Get full namespaced url name to use for reverse()
Get or generate human readable view name. Extended version from DRF to support usage from
Derives a PEP386-compliant version number from VERSION.
Compat: drf-yasg 1.12+
Compat: drf-yasg 1.11
Prefix viewname with full namespace bananas:vX.Y:
Get engine or raise exception, resolves Alias-instances to a sibling target. :param cursor: The object
Perform a lookup in _ENGINE_MAPPING using engine_string. :param scheme: '+'-separated string Maximum of 2 parts,
Get database name and database schema from path. :param path: "/"-delimited path, parsed as "/<database
Return a django-style database configuration based on ``url``. :param url: Database URL :return: Django-style database
Parse a database URL and return a DatabaseInfo named tuple. :param url: Database URL :return:
Log in django staff user
Retrieve logged in user info
Change password for logged in django staff user
This is needed due to DRF's model serializer uses the queryset to build url name
Parse string to bool. :param str value: String value to parse as bool :return bool:
Parse numeric string to int. Supports oct formatted string. :param str value: String value to
Return appropriate parser for given type. :param typ: Type to get parser for. :return function:
Get and parse prefixed django settings from env. TODO: Implement support for complex settings DATABASES
Work-in-progress constructor, consuming fields and values from django model instance.
Implementation of Y64 non-standard URL-safe base64 variant. See http://en.wikipedia.org/wiki/Base64#Variants_summary_table :return: base64-encoded result with substituted ``{"+",
Create a field by field info dict.
create a Validator instance from data_struct_dict :param data_struct_dict: a dict describe validator's fields, like the
Generates a Cartesian product of the input parameter dictionary. For example: >>> print cartesian_product({'param1':[1,2,3], 'param2':[42.0,
Takes a list of explored parameters and finds unique parameter combinations. If parameter ranges are
Helper function to turn the simple logging kwargs into a `log_config`.
Decorator to allow a simple logging configuration. This encompasses giving a `log_folder`, `logger_names` as well
Tries to make directories for a given `filename`. Ignores any error but notifies via stderr.
Returns all valid python strings inside a given argument string.
Renames a given `filename` with valid wildcard placements. :const:`~pypet.pypetconstants.LOG_ENV` ($env) is replaces by the name
Adds a logger with a given `name`. If no name is given, name is constructed
Extracts the wildcards and file replacements from the `trajectory`
Displays a progressbar
Searches for parser settings that define filenames. If such settings are found, they are renamed
Turns a ConfigParser into a StringIO stream.
Searches for multiprocessing options within a ConfigParser. If such options are found, they are copied
Searches for multiprocessing options in a given `dictionary`. If found they are copied (without the
Checks and converts all settings if necessary passed to the Manager. Searches for multiprocessing options
Checks for filenames within a config file and translates them. Moreover, directories for the files
Recursively walks and copies the `log_config` dict and searches for filenames. Translates filenames and creates
Creates logging handlers and redirects stdout.
Finalizes the manager, closes and removes all handlers if desired.
Starts redirection of `stdout`
Writes data from buffer to logger
Disables redirection
Compares two result instances Checks full name and all data. Does not consider the comment.
Compares two parameter instances Checks full name, data, and ranges. Does not consider the comment.
Returns an attribute value dictionary much like `__dict__` but incorporates `__slots__`
Compares two objects recursively by their elements. Also handles numpy arrays, pandas data and sparse
Can be used to decorate a function as a manual run function. This can be
This is a decorator which can be used to mark functions as deprecated. It will
Decorator: Copy the docstring of `fromfunc` If the doc contains a line with the keyword
If there exist mutually exclusive parameters checks for them and maps param2 to 1.
This is a decorator which can be used if a kwarg has changed its name
This is a decorator that signaling that a function is not available during a single
This is a decorator that signaling that a function is only available if the storage
This is a decorator that retries a function. Tries `n` times and catches a given
Replacement of __getattr__
Replacement of __setattr__
Decorate that adds the prefix naming scheme
Adds all necessary parameters to `traj`.
Creates and runs BRIAN network based on the parameters in `traj`.
Simulation function for Euler integration. :param traj: Container for parameters and results :param diff_func: The
Adds all necessary parameters to the `traj` container
The Lorenz attractor differential equation :param value_array: 3d array containing the x,y, and z component
Creates a service from a constructor and checks which kwargs are not used
Creates a storage service, to be extended if new storage services are added :param storage_service:
Example of a sophisticated simulation that involves multiplying two values. :param traj: Trajectory containing the
Adds all necessary parameters to the `traj` container. You can choose between two parameter sets.
The Roessler attractor differential equation :param value_array: 3d array containing the x,y, and z component
Can compress an HDF5 to reduce file size. The properties on how to compress the
Checks if one the parameters in `group_node` is explored. :param traj: Trajectory container :param group_node:
Adds all neuron group parameters to `traj`.
Computes model equations for the excitatory and inhibitory population. Equation objects are created by fusing
Pre-builds the neuron groups. Pre-build is only performed if none of the relevant parameters is
Builds the neuron groups. Build is only performed if neuron group was not pre-build before.
Builds the neuron groups from `traj`. Adds the neuron groups to `brian_list` and `network_dict`.
Adds all neuron group parameters to `traj`.
Pre-builds the connections. Pre-build is only performed if none of the relevant parameters is explored
Builds the connections. Build is only performed if connections have not been pre-build. :param traj:
Connects neuron groups `neurons_i` and `neurons_e`. Adds all connections to `brian_list` and adds a list
Adds all necessary parameters to `traj` container.
Computes Fano Factor for one neuron. :param spike_res: Result containing the spiketimes of all neurons
Computes average Fano Factor over many neurons. :param neuron_ids: List of neuron indices to average
Calculates average Fano Factor of a network. :param traj: Trajectory container Expects: `results.monitors.spikes_e`: Data from
Adds monitors to the network if the measurement run is carried out. :param traj: Trajectory
Adds monitors to the network
Makes a subfolder for plots. :return: Path name to print folder
Plots a state variable graph for several neurons into one figure
Makes some plots and stores them into subfolders
Extracts monitor data and plots. Data extraction is done if all subruns have been completed,
Function that parses the batch id from the command line arguments
Chooses exploration according to `batch`
Alternative naming, you can use `node.vars.name` instead of `node.v_name`
Alternative naming, you can use `node.func.name` instead of `node.f_func`
Renames the tree node
Sets some details for internal handling.
Maps a an instance type representation string (e.g. 'RESULT') to the corresponding dictionary in root.
Method used by f_store/load/remove_items to find a corresponding item in the tree. :param store_load: String
Method used by f_store/load/remove_items to find a corresponding item in the tree. :param store_load: String
Method used by f_store/load/remove_items to find a corresponding item in the tree. The input to
Maps a given node and a store_load constant to the message that is understood by
Method used by f_store/load/remove_items to find corresponding items in the tree. :param store_load: String constant
Removes a subtree from the trajectory tree. Does not delete stuff from disk only from
Deletes a single node from the tree. Removes all references to the node. Note that
Removes a single node from the tree. Only from RAM not from hdf5 file! :param
Removes a given node from the tree. Starts from a given node and walks recursively
Maps a given shortcut to corresponding name * 'run_X' or 'r_X' to 'run_XXXXXXXXX' * 'crun'
Adds the correct sub branch prefix to a given name. Usually the prefix is the
Determines types for generic additions
Adds a given item to the tree irrespective of the subtree. Infers the subtree from
Replaces the $ wildcards and returns True/False in case it was replaced
Adds a new item to the tree. The item can be an already given instance
Creates a link and checks if names are appropriate
Checks if a list contains strings with invalid names. Returns a description of the name
Generically creates a new group inferring from the `type_name`.
Generically creates a novel parameter or result instance inferring from the `type_name`. If the instance
Renames a given `instance` based on `parent_node` and `name`. Adds meta information like depth as
Returns an iterator over nodes hanging below a given start node. :param node: Start node
Returns a dictionary with pairings of (full) names as keys and instances as values. :param
Returns an iterator over a node's children. In case of using a trajectory as a
Iterator function traversing the tree below `node` in breadth first search manner. If `run_name` is
Fast search for a node in the tree. The tree is not traversed but the
Searches for an item in the tree below `node` :param node: The parent node below
Performs a backwards search from the terminal node back to the start node :param start_node:
Searches for all occurrences of `name` under `node`. :param node: Start node :param name: Name
Searches for an item (parameter/result/group node) with the given `name`. :param node: The node below
Searches for an item (parameter/result/group node) with the given `name`. :param node: The node below
Alternative naming, you can use `node.kids.name` instead of `node.name` for easier tab completion.
Can be called from storage service to create a new group to bypass name checking
Can be called from storage service to create a new leaf to bypass name checking
Returns a list of all children names
Creates a dummy object containing the whole tree to make unfolding easier. This method is
Returns the parent of the node. Raises a TypeError if current node is root.
Adds an empty generic group under the current node. You can add to a generic
Adds a link to an existing node. Can be called as ``node.f_add_link(other_node)`` this will add
Removes a link from from the current group node with a given name. Does not
Adds an empty generic leaf under the current node. You can add to a generic
Recursively removes the group and all it's children. :param recursive: If removal should be applied
Removes a child of the group. Note that groups and leaves are only removed from
Checks if the node contains a specific parameter or result. It is checked if the
Iterates recursively (default) over nodes hanging below this group. :param recursive: Whether to iterate the
Iterates (recursively) over all leaves hanging below the current group. :param with_links: If links should
Searches for all occurrences of `name` under `node`. Links are NOT considered since nodes are
Similar to `f_get`, but returns the default value if `name` is not found in the
Searches and returns an item (parameter/result/group node) with the given `name`. :param name: Name of
Returns a children dictionary. :param copy: Whether the group's original dictionary or a shallow copy
Returns a dictionary of groups hanging immediately below this group. :param copy: Whether the group's
Returns a dictionary of all leaves hanging immediately below this group. :param copy: Whether the
Returns a link dictionary. :param copy: Whether the group's original dictionary or a shallow copy
Stores a child or recursively a subtree to disk. :param name: Name of child to
Stores a group node to disk :param recursive: Whether recursively all children should be stored
Loads a child or recursively a subtree from disk. :param name: Name of child to
Loads a group from disk. :param recursive: Default is ``True``. Whether recursively all nodes below
Adds an empty parameter group under the current node. Can be called with ``f_add_parameter_group('MyName', 'this
Adds a parameter under the current node. There are two ways to add a new
Adds an empty result group under the current node. Adds the full name of the
Adds a result under the current node. There are two ways to add a new
Adds an empty derived parameter group under the current node. Adds the full name of
Adds a derived parameter under the current group. Similar to :func:`~pypet.naturalnaming.ParameterGroup.f_add_parameter` Naming prefixes are added
Adds an empty config group under the current node. Adds the full name of the
Adds a config parameter under the current group. Similar to :func:`~pypet.naturalnaming.ParameterGroup.f_add_parameter`. If current group is
The fitness function
Takes a unit string like ``'1. * volt'`` and returns the BRIAN2 unit.
Simply checks if data is supported
Simply checks if data is supported
To add a monitor use `f_set_single('monitor', brian_monitor)`. Otherwise `f_set_single` works similar to :func:`~pypet.parameter.Result.f_set_single`.
Adds commit information to the trajectory.
Makes a commit and returns if a new commit was triggered and the SHA_1 code
Flattens a nested dictionary. New keys are concatenations of nested keys with the `separator` in
Nests a given flat dictionary. Nested keys are created by splitting given keys around the
Plots a progress bar to the given `logger` for large for loops. To be used
Helper function to support both Python versions
Takes a function and keyword arguments and returns the ones that can be passed.
Sorts a list of results in O(n) in place (since every run is unique) :param
Formats timestamp to human readable format
Returns local tcp address for a given `port`, automatic port if `None`
Like os.makedirs but takes care about race conditions
Resets to the progressbar to start a new one
Calculates remaining time as a string
Returns annotations as dictionary. :param copy: Whether to return a shallow copy or the real
Returns annotations If len(args)>1, then returns a list of annotations. `f_get(X)` with *X* integer will
Sets annotations Items in args are added as `annotation` and `annotation_X` where 'X' is the
Removes `key` from annotations
Returns all annotations lexicographically sorted as a concatenated string.
Turns a given shared data item into a an ordinary one. :param result: Result container
Turns an ordinary data item into a shared one. Removes the old result from the
Creates shared data on disk with a StorageService on disk. Needs to be called before
Interface with the underlying storage. Passes request to the StorageService that performs the appropriate action.
Returns the actula node of the underlying data. In case one uses HDF5 this will
Checks if outer data structure is supported.
Calls the corresponding function of the shared data item
Target function that manipulates the trajectory. Stores the current name of the process into the
Example of a sophisticated simulation that involves multiplying two values. This time we will store
Hanldes locking of locks If a lock is already locked sends a WAIT command, else
Handles unlocking Complains if a non-existent lock should be released or if a lock should
Runs server
Handles locking Locking time is stored to determine time out. If a lock is timed
Handles unlocking
Notifies the Server to shutdown
Closes socket and terminates context NO-OP if already closed.
Starts connection to server if not existent. NO-OP if connection is already established. Makes ping-pong
Returns response and number of retries
Acquires lock and returns `True` Blocks until lock is available.
Releases lock
Handles listening requests from the client. There are 4 types of requests: 1- Check space
If there is space it sends data to server If no space in the queue
Detects if lock client was forked. Forking is detected by comparing the PID of the
Checks for forking and starts/restarts if desired
Puts data on queue
Puts data on queue
Handles data and returns `True` or `False` if everything is done.
Starts listening to the queue.
Gets data from queue
Gets data from pipe
Acquires a lock before storage and releases it afterwards.
Simply keeps a reference to the stored data
Stores references to disk and may collect garbage.
Decorator wrapping the environment to use a config file
Collects all settings within a section
Collects all info from three sections
Copies parsed arguments into the kwargs passed to the environment
Adds parameters and config from the `.ini` file to the trajectory
Converts a rule given as an integer into a binary list representation. It reads from
Creates an initial state for the automaton. :param name: Either ``'single'`` for a single live
Plots an automaton ``pattern`` and stores the image under a given ``filename``. For axes labels
Simulates a 1 dimensional cellular automaton. :param initial_state: The initial state of *dead* and *alive*
Main simulation function
Iterates through a class' (`cls`) mro to get all slots as a set.
Signals the process timer. If more time than the display time has passed a message
Direct link to the overview group
Makes filters Pops filter arguments from `kwargs` such that they are not passed on to
Sets a config value to the Trajectory or changes it if the trajectory was loaded
Loads a particular item from disk. The storage service always accepts these parameters: :param trajectory_name:
Stores a particular item to disk. The storage service always accepts these parameters: :param trajectory_name:
Loads several items from an iterable Iterables are supposed to be of a format like
Reads out the properties for storing new data into the hdf5file :param traj: The trajectory
Stores several items from an iterable Iterables are supposed to be of a format like
Opens an hdf5 file for reading or writing The file is only opened if it
Routine to close an hdf5 file The file is closed only when `closing=True`. `closing=True` means
Extracts file information from kwargs. Note that `kwargs` is not passed as `**kwargs` in order
Backs up a trajectory. :param traj: Trajectory that should be backed up :param backup_filename: Path
Reads out a row and returns a dictionary containing the row content. :param colnames: List
Merges another trajectory into the current trajectory (as in self._trajectory_name). :param other_trajectory_name: Name of other
Prepares a trajectory for merging. This function will already store extended parameters. :param traj: Target
Loads a single trajectory from a given file. :param traj: The trajectory :param as_new: Whether
Loads meta information about the trajectory Checks if the version number does not differ from
Loads data starting from a node along a branch and starts recursively loading all data
Checks for version mismatch Raises a VersionMismatchError if version of loaded trajectory and current pypet
Fills the `run` overview table with information. Will also update new information.
Stores general information about the trajectory in the hdf5file. The `info` table will contain the
Recalls names of all explored parameters
Stores a all explored parameter names for internal recall
Creates the overview tables in overview group
Stores a trajectory to an hdf5 file Stores all groups, parameters and results
Stores data starting from a node along a branch and starts recursively loading all data
Creates a new pypet leaf instance. Returns the leaf and if it is an explored
Loads a node from hdf5 file and if desired recursively everything below :param parent_traj_node: The
Loads a link :param new_traj_node: Node in traj containing link :param load_data: How to load
Stores a node to hdf5 and if desired stores recursively everything below it. :param parent_traj_node:
Creates a soft link. :param node_in_traj: parental node :param store_data: how to store data :param
Stores a single run instance to disk (only meta data)
Summarizes the parameter settings. :param run_name: Name of the single run :param paramlist: List of
Stores a single row into an overview table :param instance: A parameter or result instance
Creates a new table, or if the table already exists, returns it.
Returns an HDF5 node by the path specified in `name`
Stores original data type to hdf5 node attributes for preserving the data type. :param data:
Checks if loaded data has the type it was stored in. If not converts it.
Adds or changes a row in a pytable. :param item_name: Name of item, the row
Copies data from `insert_dict` into a pytables `row`.
Extracts information from a given item to be stored into a pytable row. Items can
Cuts string data to the maximum length allowed in a pytables column if string is
Creates or returns a group
Creates new or follows existing group nodes along a given colon separated `key`. :param key:
Stores annotations into an hdf5 file.
Loads annotations from disk.
Stores a group node. For group nodes only annotations and comments need to be stored.
Loads a group node and potentially everything recursively below
Reloads skeleton data of a tree node
Extracts storage flags for data in `data_dict` if they were not specified in `flags_dict`. See
Adds data to the summary tables and returns if `instance`s comment has to be stored.
Adds information to overview tables and meta information to the `instance`s hdf5 `group`. :param instance:
Stores a `store_dict`
Stores a parameter or result to hdf5. :param instance: The instance to be stored :param
Reads a DataFrame from dis. :param pd_node: hdf5 node storing the pandas DataFrame :param full_name:
Creates and array that can be used with an HDF5 array object
Creates a new empty table
Stores a python dictionary as pytable :param key: Name of data item to store :param
Stores a pandas DataFrame into hdf5. :param key: Name of data item to store :param
Stores data as carray, earray or vlarray depending on `flag`. :param key: Name of data
Stores data as array. :param key: Name of data item to store :param data: Data
Removes a link from disk
Removes a parameter or result or group from the hdf5 file. :param instance: Instance to
Stores data as pytable. :param tablename: Name of the data table :param data: Data to
Returns a description dictionary for pytables table creation
Creates a pytables column instance. The type of column depends on the type of `column[0]`.
Returns the longest string size for a string entry across data.
Loads into dictionary
Loads a parameter or result from disk. :param instance: Empty parameter or result instance :param
Loads data that was originally a dictionary when stored :param leaf: PyTables table containing the
Reads shared data and constructs the appropraite class. :param shared_node: hdf5 node storing the pandas
Reads a DataFrame from dis. :param pd_node: hdf5 node storing the pandas DataFrame :param full_name:
Reads a non-nested PyTables table column by column and created a new ObjectTable for the
Reads data from an array or carray :param array: PyTables array or carray to read
Helper function that creates a novel trajectory and loads it from disk. For the parameters
Creates a run set name based on ``idx``
#TODO
#TODO
Sets full copy mode of trajectory and (!) ALL explored parameters!
Sets properties like ``v_fast_access``. For example: ``traj.f_set_properties(v_fast_access=True, v_auto_load=False)``
Adds classes or paths to classes to the trajectory to create custom parameters. :param dynamic_imports:
Can make the trajectory behave as during a particular single run. It allows easier data
Makes the trajectory iterate over all runs. :param start: Start index of run :param stop:
Shrinks the trajectory and removes all exploration ranges from the parameters. Only possible if the
Generic preset function, marks a parameter or config for presetting.
Similar to func:`~pypet.trajectory.Trajectory.f_preset_parameter`
Presets parameter value before a parameter is added. Can be called before parameters are added
Called by the environment to make some initial configurations before performing the individual runs. Checks
Searches for all occurrences of `name` in each run. Generates an ordered dictionary with the
Private function such that it can still be called by the environment during a single
Similar to :func:`~pypet.trajectory.Trajectory.f_explore`, but can be used to enlarge already completed trajectories. Please ensure before
Called if trajectory is expanded, deletes all explored parameters from disk
Returns a *shallow* copy of a trajectory. :param copy_leaves: If leaves should be **shallow** copied
Pass a ``node`` to insert the full tree to the trajectory. Considers all links in
Prepares the trajectory to explore the parameter space. To explore the parameter space you need
Overwrites the run information of a particular run
Adds a new run to the `_run_information` dict.
Locks all non-empty parameters
Locks all non-empty derived parameters
Final rollback initiated by the environment Restores the trajectory as root of the tree, and
Loads the full skeleton from the storage service. This needs to be done after a
Loads a trajectory via the storage service. If you want to load individual results or
Checks if two trajectories live in the same space and can be merged.
Backs up the trajectory with the given storage service. Arguments of ``kwargs`` are directly passed
Creates a full mapping from all wildcard translations to the corresponding wildcards
Can be used to merge several `other_trajectories` into your current one. IMPORTANT `backup=True` only backs
Merges another trajectory into the current trajectory. Both trajectories must live in the same space.
Updates the `run_information` of the current trajectory.
Renames a full name based on the wildcards and a particular run
Merges derived parameters that have the `run_ALL` in a name. Creates a new parameter with
Merges all links
Merges meta data about previous merges, git commits, and environment settings of the other trajectory
Merges trajectories by loading iteratively items of the other trajectory and store it into the
Merges all results. :param rename_dict: Dictionary that is filled with the names of results in
Merges parameters from the other trajectory into the current one. The explored parameters in the
Can be called to rename and relocate the trajectory. :param new_name: New name of the
Stores the trajectory to disk and recursively all data in the tree. :param only_init: If
Whether no results nor parameters have been added yet to the trajectory (ignores config).
Restores the default value in all explored parameters and sets the v_idx property back to
Notifies the explored parameters what current point in the parameter space they should represent.
Modifies the trajectory for single runs executed by the environment
Returns a list of run names. ONLY useful for a single run during multiprocessing if
Returns a dictionary containing information about a single run. ONLY useful during a single run
Finds a single run index given a particular condition on parameters. ONLY useful for a
Can be used to manually allow running of an experiment without using an environment. :param
Can be called to finish a run if manually started. Does NOT reset the index
Sets the start timestamp and formatted time to the current time.
Summarizes the parameter settings. :param run_name: Name of the single run :param paramlist: List of
Sets the finish time and computes the runtime in human readable format
Creates a new node. Checks if the new node needs to know the trajectory. :param
Returns a dictionary containing either all parameters, all explored parameters, all config, all derived parameters,
Called by the environment after storing to perform some rollback operations. All results and derived
Returns a dictionary with pairings of (full) names as keys and instances/values. :param fast_access: If
Returns a dictionary containing the full config names as keys and the config parameters or
Returns a dictionary containing the full parameter names as keys and the parameters or the
Returns a dictionary containing the full parameter names as keys and the parameters or the
Returns a dictionary containing the full parameter names as keys and the parameters or the
Returns a dictionary containing the full result names as keys and the corresponding result objects
Stores a single item, see also :func:`~pypet.trajectory.Trajectory.f_store_items`.
Stores individual items to disk. This function is useful if you calculated very large results
Loads a single item, see also :func:`~pypet.trajectory.Trajectory.f_load_items`
Loads parameters and results specified in `iterator`. You can directly list the Parameter objects or
Removes a single item, see :func:`~pypet.trajectory.Trajectory.f_remove_items`
Removes parameters, results or groups from the trajectory. This function ONLY removes items from your
Deletes several links from the hard disk. Links can be passed as a string ``'groupA.groupB.linkA'``
Recursively removes all children of the trajectory :param recursive: Only here for consistency with signature
Deletes a single item, see :func:`~pypet.trajectory.Trajectory.f_delete_items`
Deletes items from storage on disk. Per default the item is NOT removed from the
Starts a pool single run and passes the storage service
Single run wrapper for the frozen pool, makes a single run and passes kwargs
Configures the pool and keeps the storage service
Configures the frozen pool and keeps all kwargs
Wrapper function that first configures logging and starts a single run afterwards.
Wrapper function that configures a frozen SCOOP set up. Deletes of data if necessary.
Wrapper function for scoop, that does not configure logging
Requests the logging manager to configure logging. :param extract: If naming data should be extracted
Sets niceness of a process
Wrapper that allow graceful exits of single runs
Performs a single run of the experiment. :param kwargs: Dict of arguments traj: The trajectory
Starts running a queue handler and creates a log file for the queue.
Loads a class from a string naming the module and class name. For example: >>>
Dynamically creates a class. It is tried if the class can be created by the
Returns the length of the parameter range. Raises TypeError if the parameter has no range.
String summary of the value handled by the parameter. Note that representing the parameter as
Checks if the parameter considers two values as equal. This is important for the trajectory
Checks if two values agree in type. For example, two 32 bit integers would be
Checks if input data is supported by the parameter.
Checks if two values agree in type. Raises a TypeError if both values are not
Returns a python iterable containing the exploration range. :param copy: If the range should be
Explores the parameter according to the iterable. Raises ParameterLockedException if the parameter is locked. Raises
Explores the parameter according to the iterable and appends to the exploration range. Raises ParameterLockedException
Checks if data values are valid. Checks if the data values are supported by the
Returns a dictionary of formatted data understood by the storage service. The data is put
Loads the data and exploration range from the `load_dict`. The `load_dict` needs to be in
Creates a storage dictionary for the storage service. If the data is not a numpy
Reconstructs the data and exploration array. Checks if it can find the array identifier in
Checks if two values agree in type. The array parameter is less restrictive than the
Checks if input data is supported by the parameter.
Checks if two values agree in type. The sparse parameter is less restrictive than the
Matrices are equal if they hash to the same value.
Checks if a data is csr, csc, bsr, or dia Scipy sparse matrix
Sparse matrices support Scipy csr, csc, bsr and dia matrices and everything their parent class
Extracts data from a sparse matrix to make it serializable in a human readable format.
Creates a storage dictionary for the storage service. If the data is not a supported
Formats a name for storage :return: A tuple of names with the following format: `xspm__spsp__XXXX__spsp__XXXXXXXX`
Reconstructs a matrix from a list containing sparse matrix extracted properties `data_list` needs to be
Reconstructs the data and exploration array Checks if it can find the array identifier in
Returns a dictionary for storage. Every element in the dictionary except for 'explored_data' is a
Reconstructs objects from the pickle dumps in `load_dict`. The 'explored_data' entry in `load_dict` is used
Translates integer indices into the appropriate names
Summarizes data handled by the result as a string. Calls `__repr__` on all handled data.
Returns all handled data as a dictionary. :param copy: Whether the original dictionary or a
Method to put data into the result. :param args: The first positional argument is stored
Returns items handled by the result. If only a single name is given, a single
Sets a single data item of the result. Raises TypeError if the type of the
Removes `*args` from the result
Supports everything of parent class and csr, csc, bsr, and dia sparse matrices.
Returns a storage dictionary understood by the storage service. Sparse matrices are extracted similar to
Loads data from `load_dict` Reconstruction of sparse matrices similar to the :class:`~pypet.parameter.SparseParameter`.
Adds a single data item to the pickle result. Note that it is NOT checked
Returns a dictionary containing pickle dumps
Reconstructs all items from the pickle dumps in `load_dict`. Sets the `v_protocol` property to the
Simply merge all trajectories in the working directory
Uploads a file
Downloads a file
Creates and returns a new SAGA session
Merges all trajectories found in the working directory
Starts all jobs and runs `the_task.py` in batches.
Sophisticated simulation of multiplication
Main function to protect the *entry point* of the program. If you want to use
Runs a simulation of a model neuron. :param traj: Container with all parameters. :return: An
Postprocessing, sorts computed firing rates into a table :param traj: Container for results and parameters
Adds all parameters to `traj`
Explores different values of `I` and `tau_ref`.
Runs a network before the actual experiment. Called by a :class:`~pypet.brian2.network.NetworkManager`. Similar to :func:`~pypet.brian2.network.NetworkRunner.run_network`. Subruns
Runs a network in an experimental run. Called by a :class:`~pypet.brian2.network.NetworkManager`. A network run is
Extracts subruns from the trajectory. :param traj: Trajectory container :param pre_run: Boolean whether current run
Generic `execute_network_run` function, handles experimental runs as well as pre-runs. See also :func:`~pypet.brian2.network.NetworkRunner.execute_network_run` and :func:`~pypet.brian2.network.NetworkRunner.execute_network_pre_run`.
Adds parameters for a network simulation. Calls :func:`~pypet.brian2.network.NetworkComponent.add_parameters` for all components, analyser, and the network
Pre-builds network components. Calls :func:`~pypet.brian2.network.NetworkComponent.pre_build` for all components, analysers, and the network runner. `pre_build` is
Pre-builds network components. Calls :func:`~pypet.brian2.network.NetworkComponent.build` for all components, analysers and the network runner. `build` does
Starts a network run before the individual run. Useful if a network needs an initial
Top-level simulation function, pass this to the environment Performs an individual network run during parameter
Starts a single run carried out by a NetworkRunner. Called from the public function :func:`~pypet.brian2.network.NetworkManger.run_network`.
Function to create generic filenames based on what has been explored
Simple wrapper function for compatibility with *pypet*. We will call the original simulation functions with
Main *boilerplate* function to start simulation
Returns next element from chain. More precisely, it returns the next element of the foremost
Merges all files in a given folder. IMPORTANT: Does not check if there are more
Handler of SIGINT Does nothing if SIGINT is encountered once but raises a KeyboardInterrupt in
Small configuration file management function
Method to request a PIN from ecobee for authorization
Method to request API tokens from ecobee
Method to refresh API tokens from ecobee
Set self.thermostats to a json list of thermostats from ecobee
Write api tokens to a file
possible hvac modes are auto, auxHeatOnly, cool, heat, off
The minimum time, in minutes, to run the fan each hour. Value from 1 to
Set fan mode. Values: auto, minontime, on
Set a hold
Set a climate hold - ie away, home, sleep
Delete the vacation with name vacation
Resume currently scheduled program
Send a message to the thermostat
Set humidity level
Enable/disable Alexa mic (only for Ecobee 4) Values: True, False
Enable/disable Smart Home/Away and Follow Me modes Values: True, False
Enable/disable daylight savings Values: True, False
.
Generate the delay in seconds in which the DISCOVER will be sent. [:rfc:`2131#section-4.4.1`]:: The client
Generate the time in seconds in which DHCPDISCOVER wil be retransmited. [:rfc:`2131#section-3.1`]:: might retransmit the
Generate time in seconds to retransmit DHCPREQUEST. [:rfc:`2131#section-4..4.5`]:: In both RENEWING and REBINDING states, if
.
Generate RENEWING time. [:rfc:`2131#section-4.4.5`]:: T1 defaults to (0.5 * duration_of_lease). T2 defaults to (0.875 *
.
Return the self object attributes not inherited as dict.
Reset object attributes when state is INIT.
Workaround to get timeout in the ATMT.timeout class method.
Workaround to change timeout values in the ATMT.timeout class method. self.timeout format is:: {'STATE': [
Send discover.
Select an offer from the offers received. [:rfc:`2131#section-4.2`]:: DHCP clients are free to use any
Send request. [:rfc:`2131#section-3.1`]:: a client retransmitting as described in section 4.1 might retransmit the DHCPREQUEST
Set renewal, rebinding times.
Process a received ACK packet. Not specifiyed in [:rfc:`7844`]. Probe the offered IP in [:rfc:`2131#section-2.2.`]::
Process a received NAK packet.
INIT state. [:rfc:`2131#section-4.4.1`]:: The client SHOULD wait a random time between one and ten seconds
BOUND state.
RENEWING state.
REBINDING state.
END state.
ERROR state.
Timeout of selecting on SELECTING state. Not specifiyed in [:rfc:`7844`]. See comments in :func:`dhcpcapfsm.DHCPCAPFSM.timeout_request`.
Timeout requesting in REQUESTING state. Not specifiyed in [:rfc:`7844`] [:rfc:`2131#section-3.1`]:: might retransmit the DHCPREQUEST message
Timeout of renewing on RENEWING state. Same comments as in :func:`dhcpcapfsm.DHCPCAPFSM.timeout_requesting`.
Timeout of request rebinding on REBINDING state. Same comments as in :func:`dhcpcapfsm.DHCPCAPFSM.timeout_requesting`.
Receive offer on SELECTING state.
Receive ACK in REQUESTING state.
Receive NAK in REQUESTING state.
Receive ACK in RENEWING state.
Receive NAK in RENEWING state.
Receive ACK in REBINDING state.
Receive NAK in REBINDING state.
Action on renewing on RENEWING state. Not recording lease, but restarting timers.
.
Assign a value, remove if it's None
Append a value to multiple value parameter.
Remove a value from multiple value parameter.
Increment value
Commandline options arguments parsing. :return: parsed commandline arguments. :rtype: optparse.Values.
Get programs statuses. :param options: parsed commandline arguments. :type options: optparse.Values. :return: supervisord XML-RPC call
Create Nagios and human readable supervisord statuses. :param data: supervisord XML-RPC call result. :type data:
Program main.
Validate a decoded SNS message. Parameters: message: Decoded SNS message. get_certificate: Function that receives a
Write numpy data to an .fcs file (FCS3.0 file format) Parameters ---------- filename: str or
Read tdms file and return channel names and data
From circularity, compute the deformation This method is useful for RT-DC data sets that contain
Creates an fcs file for a given tdms file
Returns bytes
Returns True if left and right are equal
Adds a new patch with patchname to the queue The new patch will be added
Delete next unapplied patch If remove is True the patch file will also be removed.
Delete specified patch from the series If remove is True the patch file will also
Checks if a backup file of the filename in the current patch exists
Creates a backup of file
Add file to the patch with patch_name. If patch_name is None or empty the topmost
Run command as a subprocess and wait until it is finished. The command should be
Creates the directory and all its parent directories if it does not exist yet
Copy to destination directory recursively. If symlinks is true, symbolic links in the source tree
Create hard link as link to this file
Copy file to destination
Returns the directory where the file is placed in or None if the path to
Backup file in dest_dir Directory. The return value is a File object pointing to the
Refresh patch with patch_name or applied top patch if patch_name is None
Unapply patches up to patch_name. patch_name will end up as top patch
Unapply top patch
Unapply all patches
Apply all patches up to patch_name
Apply next patch in series file
Apply all patches in series file
Reads all patches from the series file
Saves current patches list in the series file
Add a patch to the patches list
Insert list of patches at the front of the curent patches list
Add a list of patches to the patches list
Remove a patch from the patches list
Returns a list of patches after patch from the patches list
Returns a list of patches before patch from the patches list
Returns a list of patches before patch from the patches list including the provided patch
Replace old_patch with new_patch The method only replaces the patch and doesn't change any comments.
Creates the dirname and inserts a .version file
Checks if the .version file in dirname has the correct supported version number
Adds the group and its arguments to a argparse.ArgumentParser instance @param parser A argparse.ArgumentParser instance
Adds the argument to an argparse.ArgumentParser instance @param parser An argparse.ArgumentParser instance
Adds this SubParser to the subparsers created by argparse.ArgumentParser.add_subparsers method. @param subparsers Normally a _SubParsersAction
Sets args and kwargs that are passed when creating a subparsers group in an argparse.ArgumentParser
Adds the subparsers to an argparse.ArgumentParser @param parser An argparse.ArgumentParser instance
Checks if a backup file of the filename in the current patch exists and raises
Checks if a backup file of the filename in the applied patches after patch exists
Revert not added changes of filename. If patch_name is None or empty the topmost patch
Import patch into the patch queue The patch is inserted as the next unapplied patch.
Import several patches into the patch queue
Process each way.
Get a list of nodes not found in OSM data.
Process each node.
Extract information of one route.
Create a meaningful route name.
Construct an id for agency using its tags.
Process the files and collect necessary data.
Process each relation.
Create `calendar`, `stop_times`, `trips` and `shapes`. :return: DummyData namedtuple
Fill the fields that are necessary for passing transitfeed checks.
Create station stop times for each trip.
Write the GTFS feed in the given file.
Write GTFS text files in the given path.
Extract agency information.
Extract stops in a relation.
Extract shape of one route.
Gets a list of supported U2F versions from the device.
Sends an APDU to the device, and waits for a response.
Interactively authenticates a AuthenticateRequest using an attached U2F device.
Register a U2F device data = { "version": "U2F_V2", "challenge": string, //b64 encoded challenge "appId":
Signs an authentication challenge data = { 'version': "U2F_V2", 'challenge': websafe_encode(self.challenge), 'appId': self.binding.app_id, 'keyHandle': websafe_encode(self.binding.key_handle)
Interactively registers a single U2F device, given the RegistrationRequest.
Recursively converts unicode objects to UTF-8 encoded byte strings.
Wraps a function with reporting to errors backend
Wraps a class with reporting to errors backend by decorating each function of the class.
Figures out which line in traceback is to blame for the error. Returns a 3-tuple
Given a filepath, and a list of regex patterns, this function returns true if filepath
Given an email address, check the email_remapping table to see if the email should be
Helper function for retrieving a particular entry from the prefix trees
This is not a general purpose converter. Only converts this readme
This method starts the server. There are two processes, one is an HTTP server that
Helper function to record errors to the flawless backend
Helper function that can be called when serializing/deserializing thrift objects whose definitions have changed, we
Fetch an image from url and convert it into a Pillow Image object
Convert string datas into a Pillow Image object
Return a decorator that validates arguments with provided `validator` function. This will also store the
Check that the image's size superior to `size`
Check that the image width is superior to `width`
Check that the image height is superior to `height`
Crop the image with a centered rectangle of the specified size image: a Pillow image
Resize image according to size. image: a Pillow image instance size: a list of two
Resize image according to size. image: a Pillow image instance size: a list of two
Resize image according to size. image: a Pillow image instance size: an integer or a
Resize image according to size. image: a Pillow image instance size: an integer or a
Resize image according to size. image: a Pillow image instance size: a list of two
Helper function to access one of the resize function. method: one among 'crop', 'cover', 'contain',
Converts the text category to a tasks.Category instance.
Converts the date in the format: Thu 03. As only the day is provided, tries
Parse numeric fields.
Iterator of the list of items in the XML source.
This method receives an item from the source and a source name, and returns the
Saves an error in the error list.
Parses all data from the source, saving model instances.
Receives an item and returns a dictionary of field values.
Get an item from the database or an empty one if not found.
Feeds a model instance using parsed data (usually from `parse_item`).
Saves a model instance to the database.
Downloads a HTTP resource from `url` and save to `dest`. Capable of dealing with Gzip
Opens the source file.
Iterator to read the rows of the CSV file.
This method receives an item from the source and a source name, and returns the
Return value of variable set in the package where said variable is named in the
Raises ValueError if this sandbox instance is currently running.
Runs a command inside the sandbox and returns the results. :param args: A list of
Copies the specified files into the working directory of this sandbox. The filenames specified can
Copies the specified file into the working directory of this sandbox and renames it to
Return a list of all enrollments for the passed course_id. https://canvas.instructure.com/doc/api/enrollments.html#method.enrollments_api.index
Return a list of all enrollments for the passed course sis id.
Return a list of all enrollments for the passed section_id. https://canvas.instructure.com/doc/api/enrollments.html#method.enrollments_api.index
Return a list of all enrollments for the passed section sis id.
Return a list of enrollments for the passed user regid. https://canvas.instructure.com/doc/api/enrollments.html#method.enrollments_api.index
Enroll a user into a course. https://canvas.instructure.com/doc/api/enrollments.html#method.enrollments_api.create
Calculates the foundation capacity according Vesics(1975) #Gunaratne, Manjriker. 2006. "Spread Footings: Analysis and Design." Ref:
Calculates the foundation capacity according Terzaghi (1943) Ref: http://geo.cv.nctu.edu.tw/foundation/ download/BearingCapacityOfFoundations.pdf :param sl: Soil object :param
Calculates the foundation capacity according Hansen (1970) Ref: http://bestengineeringprojects.com/civil-projects/ hansens-bearing-capacity-theory/ :param sl: Soil object :param
Calculates the foundation capacity according Meyerhoff (1963) http://www.engs-comp.com/meyerhof/index.shtml :param sl: Soil object :param fd: Foundation
calculates the capacity according to Appendix B verification method 4 of the NZ building code
calculates the capacity according to THe Engineering of Foundations textbook by Salgado ISBN: 0072500581 :param
Determine the size of a footing given an aspect ratio and a load :param sl:
Calculates the bearing capacity of a foundation on soil using the specified method. :param sl:
Calculates the two-layered foundation capacity according Meyerhof and Hanna (1978) :param sl_0: Top Soil object
Calculates the two-layered foundation capacity according Meyerhof and Hanna (1978) :param sl_0: Top Soil object
Calculates the two-layered foundation capacity according Meyerhof and Hanna (1978) :param sp: Soil profile object
List the roles for an account, for the passed Canvas account ID. https://canvas.instructure.com/doc/api/roles.html#method.role_overrides.api_index
List the roles for an account, for the passed account SIS ID.
List all course roles available to an account, for the passed Canvas account ID, including
Get information about a single role, for the passed Canvas account ID. https://canvas.instructure.com/doc/api/roles.html#method.role_overrides.show
Get information about a single role, for the passed account SIS ID.
Return course resource for given canvas course id. https://canvas.instructure.com/doc/api/courses.html#method.courses.show
Return course resource for given sis id.
Returns a list of courses for the passed account ID. https://canvas.instructure.com/doc/api/accounts.html#method.accounts.courses_api
Return a list of courses for the passed account SIS ID.
Return a list of published courses for the passed account ID.
Return a list of published courses for the passed account SIS ID.
Return a list of courses for the passed regid. https://canvas.instructure.com/doc/api/courses.html#method.courses.index
Create a canvas course with the given subaccount id and course name. https://canvas.instructure.com/doc/api/courses.html#method.courses.create
Updates the SIS ID for the course identified by the passed course ID. https://canvas.instructure.com/doc/api/courses.html#method.courses.update
Returns participation data for the given account_id and term_id. https://canvas.instructure.com/doc/api/analytics.html#method.analytics_api.department_participation
Returns grade data for the given account_id and term_id. https://canvas.instructure.com/doc/api/analytics.html#method.analytics_api.department_grades
Returns statistics for the given account_id and term_id. https://canvas.instructure.com/doc/api/analytics.html#method.analytics_api.department_statistics
Returns participation data for the given sis_course_id. https://canvas.instructure.com/doc/api/analytics.html#method.analytics_api.course_participation
Returns assignment data for the given course_id. https://canvas.instructure.com/doc/api/analytics.html#method.analytics_api.course_assignments
Returns per-student data for the given course_id. https://canvas.instructure.com/doc/api/analytics.html#method.analytics_api.course_student_summaries
Returns student activity data for the given user_id and course_id. https://canvas.instructure.com/doc/api/analytics.html#method.analytics_api.student_in_course_participation
Returns student assignment data for the given user_id and course_id. https://canvas.instructure.com/doc/api/analytics.html#method.analytics_api.student_in_course_assignments
Returns student assignment data for the given user_id and course_id. https://canvas.instructure.com/doc/api/analytics.html#method.analytics_api.student_in_course_assignments
Returns student messaging data for the given user_id and course_id. https://canvas.instructure.com/doc/api/analytics.html#method.analytics_api.student_in_course_messaging
https://canvas.instructure.com/doc/api/submissions.html#method.submissions_api.index
List submissions for multiple assignments by course/section sis id and optionally student https://canvas.instructure.com/doc/api/submissions.html#method.submissions_api.for_students
List submissions for multiple assignments by course/section id and optionally student https://canvas.instructure.com/doc/api/submissions.html#method.submissions_api.for_students
Rotation stiffness of foundation. :param fd: Foundation object :param sl: Soil Object. :param axis: The
Return external tools for the passed canvas account id. https://canvas.instructure.com/doc/api/external_tools.html#method.external_tools.index
Return external tools for the passed canvas course id. https://canvas.instructure.com/doc/api/external_tools.html#method.external_tools.index
Create an external tool using the passed json_data. context is either COURSES_API or ACCOUNTS_API. context_id
Update the external tool identified by external_tool_id with the passed json data. context is either
Delete the external tool identified by external_tool_id. context is either COURSES_API or ACCOUNTS_API. context_id is
Get a sessionless launch url for an external tool. https://canvas.instructure.com/doc/api/external_tools.html#method.external_tools.generate_sessionless_launch
Get a sessionless launch url for an external tool. https://canvas.instructure.com/doc/api/external_tools.html#method.external_tools.generate_sessionless_launch
Get a sessionless launch url for an external tool. https://canvas.instructure.com/doc/api/external_tools.html#method.external_tools.generate_sessionless_launch
Can define a Foundation Object from dimensions. :param length: Foundation length :param width: Foundation width
Can define a Soil object. :param phi: Internal friction angle :param cohesion: Cohesion of soil
Check if a parameter is available on an object :param obj: Object :param required_parameters: list
Returns user profile data. https://canvas.instructure.com/doc/api/users.html#method.profile.settings
Returns a list of users for the given course id.
Returns a list of users for the given sis course id.
Create and return a new user and pseudonym for an account. https://canvas.instructure.com/doc/api/users.html#method.users.create
Return a user's logins for the given user_id. https://canvas.instructure.com/doc/api/logins.html#method.pseudonyms.index
Update an existing login for a user in the given account. https://canvas.instructure.com/doc/api/logins.html#method.pseudonyms.update
return url path to next page of paginated data
Canvas GET method on a full url. Return representation of the requested resource, chasing pagination
Canvas GET method. Return representation of the requested paged resource, either the requested page, or
Canvas GET method. Return representation of the requested resource.
Canvas PUT method.
Canvas POST method.
Canvas DELETE method.
Return a list of the admins in the account. https://canvas.instructure.com/doc/api/admins.html#method.admins.index
Flag an existing user as an admin within the account. https://canvas.instructure.com/doc/api/admins.html#method.admins.create
Flag an existing user as an admin within the account sis id.
Remove an account admin role from a user. https://canvas.instructure.com/doc/api/admins.html#method.admins.destroy
Remove an account admin role from a user for the account sis id.
List the grading standards available to a course https://canvas.instructure.com/doc/api/grading_standards.html#method.grading_standards_api.context_index
Create a new grading standard for the passed course. https://canvas.instructure.com/doc/api/grading_standards.html#method.grading_standards_api.create
Return section resource for given canvas section id. https://canvas.instructure.com/doc/api/sections.html#method.sections.show
Return section resource for given sis id.
Return list of sections for the passed course ID. https://canvas.instructure.com/doc/api/sections.html#method.sections.index
Return list of sections for the passed course SIS ID.
Return list of sections including students for the passed course ID.
Return list of sections including students for the passed sis ID.
Create a canvas section in the given course id. https://canvas.instructure.com/doc/api/sections.html#method.sections.create
Update a canvas section with the given section id. https://canvas.instructure.com/doc/api/sections.html#method.sections.update
List quizzes for a given course https://canvas.instructure.com/doc/api/quizzes.html#method.quizzes_api.index
Return account resource for given canvas account id. https://canvas.instructure.com/doc/api/accounts.html#method.accounts.show
Return list of subaccounts within the account with the passed canvas id. https://canvas.instructure.com/doc/api/accounts.html#method.accounts.sub_accounts
Update the passed account. Returns the updated account. https://canvas.instructure.com/doc/api/accounts.html#method.accounts.update
Updates the SIS ID for the account identified by the passed account ID. https://canvas.instructure.com/doc/api/accounts.html#method.accounts.update
Return the authentication settings for the passed account_id. https://canvas.instructure.com/doc/api/authentication_providers.html#method.account_authorization_configs.show_sso_settings
Update the authentication settings for the passed account_id. https://canvas.instructure.com/doc/api/authentication_providers.html#method.account_authorization_configs.update_sso_settings
Calculates the settlement of a shallow foundation (Schmertmann, 19XX). :param sp: Soil Profile object :param
Return all of the terms in the account. https://canvas.instructure.com/doc/api/enrollment_terms.html#method.terms_api.index
Return a term resource for the passed SIS ID.
Update an existing enrollment term for the passed SIS ID. https://canvas.instructure.com/doc/api/enrollment_terms.html#method.terms.update
Produces console output. :param out_str: Output string :param o2: Additional output string :param o3: Additional
Imports a CSV string. https://canvas.instructure.com/doc/api/sis_imports.html#method.sis_imports_api.create
Imports a directory of CSV files. https://canvas.instructure.com/doc/api/sis_imports.html#method.sis_imports_api.create
Get the status of an already created SIS import. https://canvas.instructure.com/doc/api/sis_imports.html#method.sis_imports_api.show
Creates a zip archive from files in path.
List assignments for a given course https://canvas.instructure.com/doc/api/assignments.html#method.assignments_api.index
Modify an existing assignment. https://canvas.instructure.com/doc/api/assignments.html#method.assignments_api.update
Returns the list of reports for the canvas account id. https://canvas.instructure.com/doc/api/account_reports.html#method.account_reports.available_reports
Shows all reports of the passed report_type that have been run for the canvas account
Generates a report instance for the canvas account id. https://canvas.instructure.com/doc/api/account_reports.html#method.account_reports.create
Convenience method for create_report, for creating a course provisioning report.
Convenience method for create_report, for creating a course sis export report.
Convenience method for create_report, for creating an unused courses report.
Returns a completed report as a list of csv strings.
Returns the status of a report. https://canvas.instructure.com/doc/api/account_reports.html#method.account_reports.show
Deletes a generated report instance. https://canvas.instructure.com/doc/api/account_reports.html#method.account_reports.destroy
Crop an image given the top left corner. :param img: The image :param start_y: The
Move detections in direction dx, dy. :param label: The label dict containing all detection lists.
Horizontally flip detections according to an image flip. :param label: The label dict containing all
Augment the detection dataset. In your hyper_parameters.problem.augmentation add configurations to enable features. Supports "enable_horizontal_flip", "enable_micro_translation",
Edit to get the dict even when the object is a GenericRelatedObjectManager. Added the try
Get the arguments given to the template tag element and complete these with the ones
Get the text to display when the field is empty.
Usage: {% eval %}1 + 1{% endeval %}
Parse uniformly args and kwargs from a templatetag Usage:: For parsing a template like this:
Create and register metrics from a list of MetricConfigs.
Setup logging for the application and aiohttp.
Configure the MetricRegistry.
Return a :class:`PrometheusExporter` configured with args.
Create Prometheus metrics from a list of MetricConfigs.
Return a metric, optionally configured with labels.
Run the :class:`aiohttp.web.Application` for the exporter.
Setup an :class:`aiohttp.web.Application`.
Home page request handler.
Handler for metrics.
A free-text query resolver by Wolfram|Alpha. Returns the first result, if available.
Python 2 uses a deprecated method signature and doesn't provide the forward compatibility. Add it.
Query Wolfram|Alpha using the v2.0 API Allows for arbitrary parameters to be passed in the
The pods, assumptions, and warnings of this result.
The pods that hold the response to a simple, discrete query.
Add request content data to request body, set Content-type header. Should be overridden by subclasses
Call API. This returns object containing data, with error details if applicable. Args: method (str):
Call the API with a GET request. Args: url (str): Resource location relative to the
Call the API with a DELETE request. Args: url (str): Resource location relative to the
Call the API with a PUT request. Args: url (str): Resource location relative to the
Call the API with a POST request. Args: url (str): Resource location relative to the
Process query recursively, if the text is too long, it is split and processed bit
Split sentences in groups, given a specific group length. Args: total_nb_sentences (int): Total available sentences.
Call the disambiguation service in order to process a pdf file . Args: pdf (file):
Call the disambiguation service in order to get meanings. Args: terms (obj): list of objects
Call the disambiguation service in order to get meanings. Args: text (str): Text to be
Call the disambiguation service in order to disambiguate a search query. Args: text (str): Query
Call the segmenter in order to split text in sentences. Args: text (str): Text to
Recognise the language of the text in input Args: id (str): The text whose the
Fetch the concept from the Knowledge base Args: id (str): The concept id to be
Constructs the MDR ensemble from the provided training data Parameters ---------- features: array-like {n_samples, n_features}
Estimates the accuracy of the predictions from the MDR ensemble Parameters ---------- features: array-like {n_samples,
Constructs the MDR feature map from the provided training data. Parameters ---------- features: array-like {n_samples,
Convenience function that fits the provided data then constructs a new feature from the provided
Convenience function that fits the provided data then constructs predictions from the provided features. Parameters
Estimates the accuracy of the predictions from the constructed feature. Parameters ---------- features: array-like {n_samples,
Constructs the Continuous MDR feature map from the provided training data. Parameters ---------- features: array-like
Uses the Continuous MDR feature map to construct a new feature from the provided features.
Convenience function that fits the provided data then constructs a new feature from the provided
Estimates the quality of the ContinuousMDR model using a t-statistic. Parameters ---------- features: array-like {n_samples,
Calculates the entropy, H(X), in the given base Parameters ---------- X: array-like (# samples) An
Calculates the joint entropy, H(X,Y), in the given base Parameters ---------- X: array-like (# samples)
Calculates the conditional entropy, H(X|Y), in the given base Parameters ---------- X: array-like (# samples)
Calculates the mutual information between two variables, I(X;Y), in the given base Parameters ---------- X:
Calculates the two-way information gain between three variables, I(X;Y;Z), in the given base IG(X;Y;Z) indicates
Calculates the three-way information gain between three variables, I(W;X;Y;Z), in the given base IG(W;X;Y;Z) indicates
Fits a MDR model to variables X and Y with the given labels, then returns
Calculates the MDR entropy, H(XY), in the given base MDR entropy is calculated by combining
Calculates the MDR conditional entropy, H(XY|labels), in the given base MDR conditional entropy is calculated
Calculates the MDR mutual information, I(XY;labels), in the given base MDR mutual information is calculated
Fits a MDR model to all n-way combinations of the features in X. Note that
Visualizes the MDR grid of a given fitted MDR instance. Only works for 2-way MDR
等价于 django makemigrations 操作
等价于 django migrate 操作
编译全新依赖文件
启动队列服务[开发中]
尝试对数据库做初始化操作
如果存在migration且指定为primary_node则执行migrate操作
尝试使用内置方式构建账户
装载任务，解决celery无法自动装载的问题
App Factory 工具 策略是： - 初始化app - 根据app_name,装载指定的模块 - 尝试装载app.run_app - 如果指定了`FANTASY_PRIMARY_NODE`，则尝试进行migrate操作 - 装载error handler
Conveniently get the security configuration for the specified application without the annoying 'SECURITY_' prefix. :param
Get a Flask-Security configuration value. :param key: The configuration key without the prefix `SECURITY_` :param
生成随机字符串 :return:
Creates a new vector.
Creates a new vector from members.
Evaluate a file with the given name into a Python module AST node.
Evaluate the forms in stdin into a Python module AST node.
Evaluate the forms in a string into a Python module AST node.
Bootstrap the REPL with a few useful vars and returned the bootstrapped module so it's
Run a Basilisp script or a line of code, if it is provided.
Decorator function which can be used to make Python multi functions.
Swap the methods atom to include method with key.
Add a new method to this function which will respond for key returned from the
Return the method which would handle this dispatch key or None if no method defined
Swap the methods atom to remove method with key.
Remove the method defined for this key and return it.
Return True if the meta contains :async keyword.
Return True if the Var holds a macro function.
Fetch the location of the form in the original filename from the input form, if
Attach any available location information from the input form to the node environment returned from
Remove reader metadata from the form's meta map.
Wraps the node generated by gen_node in a :with-meta AST node if the original form
Roll up deftype* declared bases and method implementations.
Assert that `recur` forms do not appear in any position of this or child AST
Assert that `recur` forms only appear in the tail position of this or child AST
Resolve a namespaced symbol into a Python name or Basilisp Var.
Resolve a non-namespaced symbol into a Python name or a local Basilisp Var.
Resolve a Basilisp symbol as a Var or Python name.
Take a Lisp form as an argument and produce a Basilisp syntax tree matching the
If True, warn when a def'ed Var name is shadowed in an inner scope. Implied
Add a new symbol to the symbol table. This function allows individual warnings to be
Produce a Lisp representation of an associative collection, bookended with the start and end string
Produce a Lisp representation of a sequential collection, bookended with the start and end string
Return a string representation of a Lisp object. Permissible keyword arguments are: - human_readable: if
Fallback function for lrepr for subclasses of standard types. The singledispatch used for standard lrepr
Visit all immediate children of this node, calling f(child, *args, **kwargs) on each child.
Return a transformed copy of this node with location in this node's environment updated to
Emit the generated Python AST string either to standard out or to the *generated-python* dynamic
Compile and execute the given form. This function will be most useful for the REPL
Incrementally compile a stream of AST nodes in module mod. The source_filename will be passed
Bootstrap a new module with imports and other boilerplate.
Compile an entire Basilisp module into Python bytecode which can be executed as a Python
Compile cached bytecode into the given module. The Basilisp import hook attempts to cache bytecode
Create a Sequence from Iterable s.
Replace characters which are not valid in Python symbols with valid replacement strings.
Replace munged string components with their original representation.
Create a Fraction from a numerator and denominator.
Get the default logging handler for Basilisp.
Creates a new map.
Time the execution of code in the with-block, calling the function f (if it is
Partition coll into groups of size n.
Wrap a reader function in a decorator to supply line and column information along with
Read a namespaced token from the input stream.
Read a collection from the input stream and create the collection using f.
Read a list element from the input stream.
Read a vector element from the input stream.
Return a set from the input stream.
Return a map from the input stream.
Return a numeric (complex, Decimal, float, int, Fraction) from the input stream.
Return a string from the input stream. If allow_arbitrary_escapes is True, do not throw a
Return a symbol from the input stream. If a symbol appears in a syntax quoted
Return a keyword from the input stream.
Read metadata and apply that to the next object in the input stream.
Read a function reader macro from the input stream.
Read a quoted form from the input stream.
Expand syntax quoted forms to handle unquoting and unquote-splicing. The unquoted form (unquote x) becomes:
Post-process syntax quoted forms to generate forms that can be assembled into the correct types
Read a syntax-quote and set the syntax-quoting state in the reader.
Read an unquoted form and handle any special logic of unquoting. Unquoted forms can take
Read a derefed form from the input stream.
Read a character literal from the input stream. Character literals may appear as: - \\a
Read a regex reader macro from the input stream.
Return a data structure evaluated as a reader macro from the input stream.
Read (and ignore) a single-line comment from the input stream. Return the next form after
Read the next full form from the input stream, consuming any reader comments completely.
Read the next full form from the input stream.
Read the contents of a stream as a Lisp expression. Callers may optionally specify a
Read the contents of a string as a Lisp expression. Keyword arguments to this function
Read the contents of a file as a Lisp expression. Keyword arguments to this function
Update the internal line and column buffers after a new character is added. The column
Push one character back onto the stream, allowing it to be read again.
Advance the stream forward by one character and return the next token in the stream.
Return the bytes for a Basilisp bytecode cache file.
Unmarshal the bytes from a Basilisp bytecode cache file, validating the file header prior to
Return the path to the cached file for the given path. The original path does
Hook into Python's import machinery with a custom Basilisp code importer. Once this is called,
Find the ModuleSpec for the specified Basilisp module. Returns None if the module is not
Load and execute a cached Basilisp module.
Load and execute a non-cached Basilisp module.
Compile the Basilisp module into Python code. Basilisp is fundamentally a form-at-a-time compilation, meaning that
Create a new symbol.
Return an iterable of possible completions for the given text.
Private swap function used to either get the interned keyword instance from the input string.
Create a new keyword.
Chain a sequence of generated Python ASTs into a tuple of dependency nodes
Generate recursive Python Attribute AST nodes for resolving nested names.
Wrap simpler AST generators to return a GeneratedPyAST.
Turn a collection of Lisp forms into Python AST nodes.
Remove reader metadata from the form's meta map.
Hydrate Generated Python AST nodes with line numbers and column offsets if they exist in
Wrap a generator function in a decorator to supply line and column information to the
Wrap a generator function in a decorator to supply line and column information to the
Return True if the Var holds a value which should be compiled to a dynamic
Return True if the Var can be redefined.
Transform non-statements into ast.Expr nodes so they can stand alone as statements.
Given a series of expression AST nodes, create a function AST node with the given
Return True if the compiler should emit a warning about this name being redefined.
Return a Python AST Node for a `def` expression.
Return a Python AST Node for a `deftype*` expression.
Return a Python AST Node for a `do` expression.
Return AST elements generated from reducing a synthetic Lisp :do node (e.g. a :do node
Generate a safe Python function name from a function name symbol. If no symbol is
Generate a list of Python AST nodes from function method parameters.
Return a Python AST node for a function with a single arity.
Return the Python AST nodes for a argument-length dispatch function for multi-arity functions. def fn(*args):
Return a Python AST node for a function with multiple arities.
Return a Python AST Node for a `fn` expression.
Generate custom `if` nodes to handle `recur` bodies. Recur nodes can appear in the then
Generate an intermediate if statement which assigns to a temporary variable, which is returned as
Return a Python AST node for a Basilisp `import*` expression.
Return a Python AST Node for a Basilisp function invocation.
Return a Python AST Node for a `let*` expression.
Return a Python AST Node for a `loop*` expression.
Return a Python AST Node for a `quote` expression.
Return a Python AST node for `recur` occurring inside a `fn*`.
Return a Python AST node for `recur` occurring inside a `deftype*` method.
Return a Python AST node for `recur` occurring inside a `loop`.
Return a Python AST Node for a `recur` expression. Note that `recur` nodes can only
Return a Python AST Node for a `set!` expression.
Return a Python AST Node for a `throw` expression.
Return a Python AST Node for a `try` expression.
Generate a Python AST node for accessing a locally defined Python variable.
Generate Var.find calls for the named symbol.
Generate a Python AST node for accessing a Var. If the Var is marked as
Generate a Python AST node for Python interop method calls.
Generate a Python AST node for Python interop property access.
Generate a Python AST node for accessing a potential Python module variable name.
Generate a Python AST node for accessing a potential Python module variable name with a
Generate a Python AST node for Python interop method calls.
Generate Python AST nodes for constant Lisp forms. Nested values in collections for :const nodes
Turn a quoted collection literal of Lisp forms into Python AST nodes. This function can
Generate Python AST nodes for a :const Lisp AST node. Nested values in collections for
Take a Lisp AST node as an argument and produce zero or more Python AST
Generate the Python Import AST node for importing all required language support modules.
Generate the Python From ... Import AST node for importing language support modules.
Assign a Python variable named `ns_var` to the value of the current namespace.
Bootstrap a new module with imports and other boilerplate.
If True, warn when a Var reference cannot be direct linked (iff use_var_indirection is False)..
Creates a new set.
Creates a new set from members.
Return a list of body nodes, trimming out unreachable code (any statements appearing after `break`,
Eliminate dead code from except handler bodies.
Eliminate no-op constant expressions which are in the tree as standalone statements.
Eliminate dead code from function bodies.
Eliminate dead code from if/elif bodies.
Eliminate dead code from while bodies.
Eliminate dead code from except try bodies.
Create a new empty Basilisp Python module. Modules are created for each Namespace when it
If o is a ISeq, return the first element from o. If o is None,
If o is a ISeq, return the elements after the first in o. If o
Returns the nth rest sequence of coll, or coll if i is 0.
Returns the nth next sequence of coll.
Creates a new sequence where o is the first element and seq is the rest.
Coerce the argument o to a ISeq. If o is None, return None.
Concatenate the sequences given by seqs into a single ISeq.
Apply function f to the arguments provided. The last argument must always be coercible to
Apply function f to the arguments provided. The last argument must always be coercible to
Returns the ith element of coll (0-indexed), if it exists. None otherwise. If i is
Associate keys to values in associative data structure m. If m is None, returns a
Updates the value for key k in associative data structure m with the return value
Conjoin xs to collection. New elements may be added in different positions depending on the
Return a function which is the partial application of f with args.
Dereference a Deref object and return its contents. If o is an object implementing IBlockingDeref
Compare two objects by value. Unlike the standard Python equality operator, this function does not
Division reducer. If both arguments are integers, return a Fraction. Otherwise, return the true division
Return a sorted sequence of the elements in coll. If a comparator function f is
Return true if o contains the key k.
Return the value of k in m. Return default if k not found in m.
Recursively convert Python collections into Lisp collections.
Recursively convert Lisp collections into Python collections.
Produce a string representation of an object. If human_readable is False, the string representation of
Completer function for Python's readline/libedit implementation.
Collect Python starred arguments into a Basilisp list.
Trampoline a function repeatedly until it is finished recurring to help avoid stack growth.
Decorator to set attributes on a function. Returns the original function after setting the attributes
Return a new function with the given meta. If the function f already has a
Create a Basilisp function, setting meta and supplying a with_meta method implementation.
Initialize the dynamic `*ns*` variable in the Namespace `which_ns`.
Set the value of the dynamic variable `*ns*` in the current thread.
Context manager for temporarily changing the value of basilisp.core/*ns*.
Context manager to pop the most recent bindings for basilisp.core/*ns* after completion of the code
Get the value of the dynamic variable `*ns*` in the current thread.
Resolve the aliased symbol in the current namespace.
Resolve the aliased symbol to a Var from the specified namespace, or the current namespace
Add generated Python code to a dynamic variable in which_ns.
Return the value of the `*print-generated-python*` dynamic variable.
Bootstrap the environment with functions that are are difficult to express with the very minimal
Intern the value bound to the symbol `name` in namespace `ns`.
Create a new unbound `Var` instance to the symbol `name` in namespace `ns`.
Return the value current bound to the name `name_sym` in the namespace specified by `ns_sym`.
Return the value currently bound to the name in the namespace specified by `ns_qualified_sym`.
Return the Var currently bound to the name in the namespace specified by `ns_qualified_sym`. If
Add a gated default import to the default imports. In particular, we need to avoid
Add a Symbol alias for the given Namespace.
Intern the Var given in this namespace mapped by the given Symbol. If the Symbol
Swap function used by intern to atomically intern a new variable in the symbol mapping
Find Vars mapped by the given Symbol input or None if no Vars are mapped
Add the Symbol as an imported Symbol in this Namespace. If aliases are given, the
Return the module if a moduled named by sym has been imported into this Namespace,
Refer var in this namespace under the name sym.
Get the Var referred by Symbol or None if it does not exist.
Refer all _public_ interns from another namespace.
Refer all the Vars in the other namespace.
Private swap function used by `get_or_create` to atomically swap the new namespace map into the
Get the namespace bound to the symbol `name` in the global namespace cache, creating it
Get the namespace bound to the symbol `name` in the global namespace cache. Return the
Remove the namespace bound to the symbol `name` in the global namespace cache and return
Return a function which matches any symbol keys from map entries against the given text.
Return an iterable of possible completions matching the given prefix from the list of aliased
Return an iterable of possible completions matching the given prefix from the list of imports
Return an iterable of possible completions matching the given prefix from the list of interned
Return an iterable of possible completions matching the given prefix from the list of referred
Return an iterable of possible completions for the given text in this namespace.
Return the arguments for a trampolined function. If the function that is being trampolined has
Creates a new list.
Creates a new list from members.
This function is used to format the key value as a multi-line string maintaining the
Loads a public key from the file system and adds it to a dict of
Loads a private key from the file system and adds it to a dict of
Decrypts JWE token with supplied key :param encrypted_token: :param key: A (:class:`jwcrypto.jwk.JWK`) decryption key or
This decrypts the provided jwe token, then decodes resulting jwt token and returns the payload.
This encrypts the supplied json and returns a jwe token. :param str json: The json
Gets a list of keys that match the purpose and key_type, and returns the first
returns a dictionary of arg_name:default_values for the input function
:param kwargs: kwargs used to call the multiget function :param objects: objects returned from the
Remove the key from the request cache and from memcache.
:param object_key: the names of the attributes on the result object that are meant to
Returns the current version/module in -dot- notation which is used by `target:` parameters.
Returns the current version/module in -dot- notation which is used by `target:` parameters. If there
Return a dictionary of key/values from os.environ.
This helper function attempts to resolve the dot-colon import path for a given object. Specifically
Deconstruct the ``Constraint`` instance to a tuple. Returns: tuple: The deconstructed ``Constraint``.
Connect to LASAF through a CAM-socket.
Send commands to LASAF through CAM-socket. Parameters ---------- commands : list of tuples or bytes
Receive message from socket interface as list of OrderedDict.
Hang until command is received. If value is supplied, it will hang until ``cmd:value`` is
Close stream.
Lazily load and cache an object reference upon dereferencing. Assign the result of calling this
Iterate through the FIQL string. Yield a tuple containing the following FIQL components for each
Parse a FIQL formatted string into an ``Expression``. Args: fiql_str (string): The FIQL formatted string
Encode objects like ndb.Model which have a `.to_dict()` method.
Custom json dump using the custom encoder above.
Handles decoding of nested date strings.
Tries to decode strings that look like dates into datetime objects.
Override of the default decode method that also uses decode_date.
Overriding the default JSONEncoder.default for NDB support.
Traverse down an object, using getattr or getitem. If ``executable`` is ``True`` any executable function
This helper function loads an object identified by a dotted-notation string. For example:: # Load
Run client.
Validate version before release.
Generate changelog.
Find the strongly connected components in a graph using Tarjan's algorithm. The `graph` argument should
Identify strongly connected components then perform a topological sort of those components.
Set parent ``Expression`` for this object. Args: parent (Expression): The ``Expression`` which contains this object.
Get the parent ``Expression`` for this object. Returns: Expression: The ``Expression`` which contains this object.
Add an ``Operator`` to the ``Expression``. The ``Operator`` may result in a new ``Expression`` if
Add an element of type ``Operator``, ``Constraint``, or ``Expression`` to the ``Expression``. Args: element: ``Constraint``,
Update the ``Expression`` by joining the specified additional ``elements`` using an "AND" ``Operator`` Args: *elements
Update the ``Expression`` by joining the specified additional ``elements`` using an "OR" ``Operator`` Args: *elements
Deconstruct the ``Expression`` instance to a list or tuple (If ``Expression`` contains only one ``Constraint``).
Run client.
Decorate passed in function and log message to module logger.
Parse received response. Parameters ---------- incomming : bytes string Incomming bytes from socket server. Returns
Format list of tuples to CAM message with format /key:val. Parameters ---------- cmds : list
Translate a list of tuples to OrderedDict with key and val as strings. Parameters ----------
Parse CAM message to OrderedDict based on format /key:val. Parameters ---------- msg : bytes Sequence
Check if specific message is present. Parameters ---------- cmd : string Command to check for
Prepare message to be sent. Parameters ---------- commands : list of tuples or bytes string
Connect to LASAF through a CAM-socket.
Flush incomming socket messages.
Send commands to LASAF through CAM-socket. Parameters ---------- commands : list of tuples or bytes
Receive message from socket interface as list of OrderedDict.
Hang until command is received. If value is supplied, it will hang until ``cmd:value`` is
Enable a given scan field.
Save scanning template to filename.
Load scanning template from filename. Template needs to exist in database, otherwise it will not
Get information about given keyword. Defaults to stage.
r""" Include a Python source file in a docstring formatted in reStructuredText. :param fname: File
Find and return the location of package.json.
Extract the JSPM configuration from package.json.
Figure out where `jspm_packages/system.js` will be put by JSPM.
Handle YOURLS API errors. requests' raise_for_status doesn't show the user the YOURLS json response, so
Validate response from YOURLS server.
Generate combined independent variable vector. The combination is from two waveforms and the (possibly interpolated)
Create new dependent variable vector.
Create new independent variable vector.
Verify that two waveforms can be combined with various mathematical functions.
Load the existing systemjs manifest and remove any entries that no longer exist on the
Define trace parameters.
Run module tracing.
Shorten URL with optional keyword and title. Parameters: url: URL to shorten. keyword: Optionally choose
Expand short URL or keyword to long URL. Parameters: short: Short URL (``http://example.com/abc``) or keyword
Get stats for short URL or keyword. Parameters: short: Short URL (http://example.com/abc) or keyword (abc).
Get stats about links. Parameters: filter: 'top', 'bottom', 'rand', or 'last'. limit: Number of links
Get database statistics. Returns: DBStats: Total clicks and links statistics. Raises: requests.exceptions.HTTPError: Generic HTTP Error
r""" Echo terminal output. Print STDOUT resulting from a given Bash shell command (relative to
Print STDOUT resulting from a Bash shell command formatted in reStructuredText. :param command: Bash shell
Small log helper
alternative to reify and property decorators. caches the value when it's generated. It cashes it
break an iterable into chunks and yield those chunks as lists until there's nothing left
take a function that taks an iterable as the first argument. return a wrapper that
recursively flatten nested objects
update one dictionary from another recursively. Only individual values will be overwritten--not entire branches of
add a handler for SIGINT that optionally prints a given message. For stopping scripts without
stupidly print an iterable of iterables in TSV format
Make a placeholder object that uses its own name for its repr
pipe(value, f, g, h) == h(g(f(value)))
like pipe, but curried: pipline(f, g, h)(*args, **kwargs) == h(g(f(*args, **kwargs)))
returns the size of size as a tuple of: (number, single-letter-unit) If the decimal flag
attempt to parse a size in bytes from a human-readable string.
Command line interface for YOURLS. Configuration parameters can be passed as switches or stored in
Trace eng wave module exceptions.
Define Sphinx requirements links.
Generate Python interpreter version entries for 2.x or 3.x series.
Generate Python interpreter version entries.
Translate >=, ==, <= to words.
Translate requirement specification to words.
Get requirements in reStructuredText format.
Generate version string from tuple (almost entirely from coveragepy).
Chunk input noise data into valid Touchstone file rows.
Chunk input data into valid Touchstone file rows.
r""" Read a `Touchstone <https://ibis.org/connector/touchstone_spec11.pdf>`_ file. According to the specification a data line can have
r""" Write a `Touchstone`_ file. Parameter data is first resized to an :code:`points` x :code:`nports`
Add independent variable vector bounds if they are not in vector.
Build unit math operations.
Perform generic operation on a waveform object.
Calculate running area under curve.
Validate min and max bounds are within waveform's independent variable vector.
r""" Return the arc cosine of a waveform's dependent variable vector. :param wave: Waveform :type
r""" Return the hyperbolic arc cosine of a waveform's dependent variable vector. :param wave: Waveform
r""" Return the arc sine of a waveform's dependent variable vector. :param wave: Waveform :type
r""" Return the hyperbolic arc tangent of a waveform's dependent variable vector. :param wave: Waveform
r""" Return the running average of a waveform's dependent variable vector. :param wave: Waveform :type
r""" Return a waveform's dependent variable vector expressed in decibels. :param wave: Waveform :type wave:
r""" Return the numerical derivative of a waveform's dependent variable vector. The method used is
r""" Return the Fast Fourier Transform of a waveform. :param wave: Waveform :type wave: :py:class:`peng.eng.Waveform`
r""" Return the Fast Fourier Transform of a waveform. The dependent variable vector of the
r""" Return the imaginary part of the Fast Fourier Transform of a waveform. :param wave:
r""" Return the magnitude of the Fast Fourier Transform of a waveform. :param wave: Waveform
r""" Return the phase of the Fast Fourier Transform of a waveform. :param wave: Waveform
r""" Return the real part of the Fast Fourier Transform of a waveform. :param wave:
r""" Return the independent variable point associated with a dependent variable point. If the dependent
r""" Return the inverse Fast Fourier Transform of a waveform. The dependent variable vector of
r""" Return the imaginary part of the inverse Fast Fourier Transform of a waveform. :param
r""" Return the magnitude of the inverse Fast Fourier Transform of a waveform. :param wave:
r""" Return the phase of the inverse Fast Fourier Transform of a waveform. :param wave:
r""" Return the real part of the inverse Fast Fourier Transform of a waveform. :param
r""" Return the running integral of a waveform's dependent variable vector. The method used is
r""" Return the group delay of a waveform. :param wave: Waveform :type wave: :py:class:`peng.eng.Waveform` :rtype:
r""" Return the natural logarithm of a waveform's dependent variable vector. :param wave: Waveform :type
r""" Return the numerical average of a waveform's dependent variable vector. :param wave: Waveform :type
r""" Return the numerical integral of a waveform's dependent variable vector. The method used is
r""" Return the maximum of a waveform's dependent variable vector. :param wave: Waveform :type wave:
r""" Return the minimum of a waveform's dependent variable vector. :param wave: Waveform :type wave:
r""" Return the phase of a waveform's dependent variable vector. :param wave: Waveform :type wave:
r""" Round a waveform's dependent variable vector to a given number of decimal places. :param
r""" Return the square root of a waveform's dependent variable vector. :param wave: Waveform :type
r""" Return a waveform that is a sub-set of a waveform, potentially re-sampled. :param wave:
r""" Convert a waveform's dependent variable vector to complex. :param wave: Waveform :type wave: :py:class:`peng.eng.Waveform`
r""" Convert a waveform's dependent variable vector to float. :param wave: Waveform :type wave: :py:class:`peng.eng.Waveform`
r""" Convert a waveform's dependent variable vector to integer. :param wave: Waveform :type wave: :py:class:`peng.eng.Waveform`
r""" Return the dependent variable value at a given independent variable point. If the independent
Only allow lookups for jspm_packages. # TODO: figure out the 'jspm_packages' dir from packag.json.
Get first sentence of first paragraph of long description.
Crawls the (specified) template files and extracts the apps. If `templates` is specified, the template
Build the filepath by appending the extension.
r""" Validate if an object is an :ref:`EngineeringNotationNumber` pseudo-type object. :param obj: Object :type obj:
r""" Validate if an object is an :ref:`TouchstoneData` pseudo-type object. :param obj: Object :type obj:
r""" Validate if an object is an :ref:`TouchstoneNoiseData` pseudo-type object. :param obj: Object :type obj:
r""" Validate if an object is an :ref:`TouchstoneOptions` pseudo-type object. :param obj: Object :type obj:
r""" Validate if an object is a :ref:`WaveInterpOption` pseudo-type object. :param obj: Object :type obj:
r""" Validate if an object is a :ref:`WaveVectors` pseudo-type object. :param obj: Object :type obj:
Build mathematical expression from hierarchical list.
Return position of next matching closing delimiter.
Parse function calls.
Pair delimiters.
Parse mathematical expression using PyParsing.
Remove consecutive delimiters.
Remove unnecessary delimiters (parenthesis, brackets, etc.). Internal function that can be recursed
Return list of the words in the string, using count of a separator as delimiter.
Return tuple with mantissa and exponent of number formatted in engineering notation. :param number: Number
r""" Convert number to string guaranteeing result is not in scientific notation. :param number: Number
r""" Convert a number to engineering notation. The absolute value of the number (if it
r""" Return floating point equivalent of a number represented in engineering notation. :param snum: Number
r""" Return the fractional part of a number represented in engineering notation. :param snum: Number
r""" Return the mantissa of a number represented in engineering notation. :param snum: Number :type
r""" Return engineering suffix and its floating point equivalent of a number. :py:func:`peng.peng` lists the
r""" Return engineering suffix from a starting suffix and an number of suffixes offset. :param
r""" Remove unnecessary delimiters in mathematical expressions. Delimiters (parenthesis, brackets, etc.) may be removed either
Round floating point number(s) mantissa to given number of digits. Integers are not altered. The
r""" Format a list of numbers (vector) or a Numpy vector for printing. If the
Convert number or number string to a number string in scientific notation. Full precision is
Return mantissa and exponent of a number in scientific notation. Full precision is maintained if
Seeks and removes the sourcemap comment. If found, the sourcemap line is returned. Bundled output
Return a tuple with the absolute path and relative path (relative to STATIC_URL)
Check whether `self.app` is missing the '.js' extension and if it needs it.
Bundle the app and return the static url to the bundle.
Trace the dependencies for app. A tracer-instance is shortlived, and re-tracing the same app should
Compares the app deptree file hashes with the hashes stored in the cache.
Convert the bytes object to a hexdump. The output format will be: <offset, 4-byte> <16-bytes
Parse a docstring into ParameterInfo and ReturnInfo objects.
Get a list of all valid identifiers for the current context. Returns: list(str): A list
Lazily load a callable. Perform a lazy import of a context so that we don't
Split a line into arguments using shlex and a dequoting routine.
Check if our context matches something that we have initialization commands for. If so, run
Return help information for a context or function.
Find a function in the given context by name. This function will first search the
Return a listing of all of the functions in this context including builtins. Args: context
Check if an argument is a flag. A flag starts with - or -- and
Process arguments from the command line into positional and kw args. Arguments are consumed until
Try to find the value for a keyword argument.
Invoke a function given a list of arguments with the function listed first. The function
Invoke a one or more function given a list of arguments. The functions are searched
Parse and invoke a string line. Args: line (str): The line that we want to
Parse a single typed parameter statement.
Parse a single return statement declaration. The valid types of return declarion are a Returns:
Attempt to find the canonical name of this section.
Classify a line into a type of object.
Join adjacent lines together into paragraphs using either a blank line or indent as separator.
Wrap, format and print this docstring for a specific width. Args: width (int): The number
Convert value to type 'typename' If the conversion routine takes various kwargs to modify the
Convert binary data to type 'type'. 'type' must have a convert_binary function. If 'type' supports
Get the size of this type for converting a hex string to the type. Return
Convert value to type and format it as a string type must be a known
Validate that all required type methods are implemented. At minimum a type must have: -
Check if type is known to the type system. Returns: bool: True if the type
Given a potentially complex type, split it into its base type and specializers
Instantiate a complex type.
Return the type object corresponding to a type name. If type_name is not found, this
Check if format is known for given type. Returns boolean indicating if format is valid
Given a module-like object that defines a type, add it to our type system so
Given a module that contains a list of some types find all symbols in the
Given a path to a python package or module, load that module, search for all
Check if we have enough arguments to call this function. Args: pos_args (list): A list
Add type information for a parameter by name. Args: name (str): The name of the
Add type information to the return value of this function. Args: type_name (str): The name
Use a custom function to print the return value. Args: printer (callable): A function that
Try to convert a prefix into a parameter name. If the result could be ambiguous
Get the parameter type information by name. Args: name (str): The full name of a
Return our function signature as a string. By default this function uses the annotated name
Format the return value of this function as a string. Args: value (object): The return
Convert and validate a positional argument. Args: index (int): The positional index of the argument
Check if there are any missing or duplicate arguments. Args: pos_args (list): A list of
Given a parameter with type information, convert and validate it. Args: arg_name (str): The name
Format this exception as a string including class name. Args: exclude_class (bool): Whether to exclude
Convert this exception to a dictionary. Returns: dist: A dictionary of information about this exception,
Check the type of all parameters with type information, converting as appropriate and then execute
Parse a list of validator names or n-tuples, checking for errors. Returns: list((func_name, [args...])): A
Find all annotated function inside of a container. Annotated functions are identified as those that:
Given a module, create a context from all of the top level annotated symbols in
Return usage information about a context or function. For contexts, just return the context name
Decorate a function to give type information about its parameters. This function stores a type
Specify how the return value of this function should be handled. Args: desc (str): A
Specify that this function returns a typed value. Args: type_name (str): A type name known
Declare that a class defines a context. Contexts are for use with HierarchicalShell for discovering
Annotate a function using information from its docstring. The annotation actually happens at the time
Mark a function as callable from the command line. This function is meant to be
Given an object with a docstring, return the first line of the docstring
Load ``cron`` modules for applications listed in ``INSTALLED_APPS``.
Register tasks with cron.
Print the tasks that would be installed in the crontab, for debugging purposes.
Uninstall tasks from cron.
Create a project handler Args: uri (str): schema://something formatted uri local_path (str): the project configs
Load the projects config data from local path Returns: Dict: project_name -> project_data
Save the projects configs to local path Args: projects (dict): project_name -> project_data
Creates a property with the given name, but the cls will created only with the
Get the dependencies of the Project Args: recursive (bool): add the dependant project's dependencies too
Calls the project handler same named function Note: the project handler may add some extra
REFACTOR status to project init result ENUM jelenleg ha a project init False, akkor torlunk
Takes an object, a key, and a value and produces a new object that is
Takes an object, a string, and a value and produces a new object that is
Takes a collection and an item and returns a new collection of the same type
Takes a collection and an item and returns a new collection of the same type
Takes an object and an iterable and produces a new object that is a copy
Set the focus to `newvalue`. >>> from lenses import lens >>> set_item_one_to_four = lens[1].set(4) >>>
Set many foci to values taken by iterating over `new_values`. >>> from lenses import lens
Apply a function to the focus. >>> from lenses import lens >>> convert_item_one_to_string = lens[1].modify(str)
Applies `func` to the data inside the `args` functors incrementally. `func` must be a curried
Returns a function that can be called `n` times with a single argument before returning
Intended to be overridden by subclasses. Raises NotImplementedError.
Runs the lens over the `state` applying `f` to all the foci collecting the results
Previews a potentially non-existant focus within `state`. Returns `Just(focus)` if it exists, Nothing otherwise. Requires
Returns the focus within `state`. If multiple items are focused then it will attempt to
Returns a list of all the foci within `state`. Requires kind Fold. This method will
Applies a function `fn` to all the foci within `state`. Requires kind Setter. This method
Sets all the foci within `state` to `value`. Requires kind Setter. This method will raise
Sets all the foci within `state` to values taken from `iterable`. Requires kind Setter. This
Returns a class representing the 'kind' of optic.
The main function. Instantiates a GameState object and then enters a REPL-like main loop, waiting
returns the vector moved one step in the direction of the other, potentially diagonally.
Takes a single character string as input and alters the game state according to that
Produces a new game state in which the robots have advanced towards the player by
Checks for the game's win/lose conditions and 'alters' the game state to reflect the condition
Returns a completed game state object, setting an optional message to display after the game
Shows the board to the player on the console and asks them to make a
Play a game of naughts and crosses against the computer.
Return a board with a cell filled in by the current player. If the cell
The winner of this board if one exists.
Generates all the combinations of board positions that need to be checked for a win.
Process single item. Add item to items and then upload to S3 if size of
Callback function when spider is open.
Do upload items to S3.
Build file object from items.
To be used under python2.4 because functools.update_wrapper() is available only from python2.5+
Returns the account state information associated with a specific address. :param address: a 34-bit length
Returns the asset information associated with a specific asset ID. :param asset_id: an asset identifier
Returns the block information associated with a specific hash value or block index. :param block_hash:
Returns the hash value associated with a specific block index. :param block_index: a block index
Returns the system fees associated with a specific block index. :param block_index: a block index
Returns the contract information associated with a specific script hash. :param script_hash: contract script hash
Returns detailed information associated with a specific transaction hash. :param tx_hash: transaction hash :param verbose:
Returns the value stored in the storage of a contract script hash for a given
Returns the transaction output information corresponding to a hash and index. :param tx_hash: transaction hash
Invokes a contract with given parameters and returns the result. It should be noted that
Invokes a contract's function with given parameters and returns the result. :param script_hash: contract script
Invokes a script on the VM and returns the result. :param script: script runnable by
Broadcasts a transaction over the NEO network and returns the result. :param hextx: hexadecimal string
Validates if the considered string is a valid NEO address. :param hex: string containing a
Calls the JSON-RPC endpoint.
Returns True if the considered string is a valid SHA256 hash.
Returns True if the considered string is a valid RIPEMD160 hash.
Returns a list of paramaters meant to be passed to JSON-RPC endpoints.
Tries to decode the values embedded in an invocation result dictionary.
Emulates keyword-only arguments under python2. Works with both python2 and python3. With this decorator you
called when a file is uploaded to a private stage for a projectname/version. link.entry.file_exists() may
Args: instruction (string): a string that encodes 0 to n transformations of a time, i.e.
This function handles timezone aware datetimes. Sometimes it is necessary to keep daylight saving time
We make sure that after truncating we use the correct timezone, even if we 'jump'
Renders the barcode and saves it in `filename`. :parameters: filename : String Filename to save
Renders the barcode using `self.writer`. :parameters: writer_options : Dict Options for `self.writer`, see writer docs
Calculates the checksum for EAN13-Code. :returns: The checksum for `self.ean`. :rtype: Integer
Renders the barcode to whatever the inheriting writer provides, using the registered callbacks. :parameters: code
[pandas.read_sql] Arguments: Query {[type]} -- [description] Returns: [pd.DataFrame or generate] -- [description]
Call that method in the pyramid configuration phase.
Simple command line tool to help manage environment variables stored in a S3-like system. Facilitates
Reads the file defined by the S3CONF variable and output its contents to stdout. Logs
Sets the process environemnt and executes the [COMMAND] in the same context. Does not modify
Download a file or folder from the S3-like service. If REMOTE_PATH has a trailing slash
Upload a file or folder to the S3-like service. If LOCAL_PATH is a folder, the
For each section defined in the local config file, creates a folder inside the local
For each section defined in the local config file, look up for a folder inside
Set value of a variable in an environment file for the given section. If the
Unset a variable in an environment file for the given section. The value is given
Creates the .s3conf config folder and .s3conf/config config file with the provided section name and
[update table] Arguments: t_obj {[objs of DeclarativeMeta]} -- [update the table]
[insert bulk data] Arguments: table {[DeclarativeMeta cls]} -- [reflection of table] insert_obj {[pd.DataFrame or list
Split a env var text like ENV_VAR_NAME=env_var_value into a tuple ('ENV_VAR_NAME', 'env_var_value')
Add basic authentication to the requests of the clients.
Authenticate via an api key.
yield objects from json files in the folder and subfolders.
Return a dict of schema names mapping to a Schema. The schema is of type
Return the schema.
Return a jsonschema.RefResolver for the schemas. All schemas returned be get_schemas() are resolved locally.
Validate an object against the schema. This function just passes if the schema matches the
Return a list of valid examples for the given schema.
Return a list of examples which violate the schema.
Make synchronous HTTP request. Can be overidden to use different http module (e.g. urllib2, twisted,
Build authorization URL for User Agent.
Process tokens and errors from redirect_uri.
Refresh or acquire access_token.
Returns "id" of a OneDrive user.
Get OneDrive object representing list of objects in a folder.
Download and return a file object or a specified byte_range from it. See HTTP Range
Upload a file (object), possibly overwriting (default behavior) a file with the same "name" attribute,
Upload a file (object) using BITS API (via several http requests), possibly overwriting (default behavior)
Create a folder with a specified "name" attribute. folder_id allows to specify a parent folder.
Update metadata with of a specified object. See http://msdn.microsoft.com/en-us/library/live/hh243648.aspx for the list of RW keys
Return a preauthenticated (usable by anyone) link to a specified object. Object will be considered
Copy specified file (object) to a folder with a given ID. Well-known folder names (like
Move specified file (object) to a folder. Note that folders cannot be moved, this is
Add comment message to a specified object.
Return id (or metadata) of an object, specified by chain (iterable or fs-style path string)
Return a list of objects in the specified folder_id. limit is passed to the API,
Copy specified file (object) to a folder. Note that folders cannot be copied, this is
Initialize instance from YAML configuration file, writing updates (only to keys, specified by "conf_update_keys") back
Convert or dump object to unicode.
Recursively create and set the drop target for obj and childs
Event handler tool selection (just add to default handler)
Event handler for drag&drop functionality
track default top level window for toolbox menu default action
Return a copy of the drop target (to avoid wx problems on rebuild)
Open the inspector windows for a given object
Open a shell
Take a pythoncard background resource and convert to a gui2py window
Take a pythoncard background resource and convert to a gui2py window
Convert PythonCard font description to gui2py style
Loads HTML page from location and then displays it
Programatically select a (default) property to start editing it
Select a property (and start the editor)
Convenience function for accessing tag parameters
Process an outgoing communication
Basic save functionality: just replaces the gui code
Show a tip message
Get the selected object and store start position
Move the selected object
Called by SelectionTag
Release the selected object (pass a wx_obj if the event was captured)
support cursor keys to move components one pixel at a time
delete all of the selected objects
create a copy of each selected object
Adjust facade with the dimensions of the original object (and repaint)
Capture the new control superficial image after an update
When dealing with a Top-Level window position it absolute lower-right
Returns the pyth item data associated with the item
Set the python item data associated wit the wx item
Do a reverse look up for an item containing the requested data
Remove the item from the list and unset the related data
Remove all the item from the list and unset the related data
Set item (row) count -useful only in virtual mode-
Deletes the item at the zero-based index 'n' from the control.
Remove all items and column headings
Associate the header to the control (it could be recreated)
Remove all items and reset internal structures
Returns the index of the selected item (list for multiselect) or None
Sets the item at index 'n' to be the selected item.
Returns the label of the selected item or an empty string if none
Clear and set the strings (and data if any) in the control from a list
Associate the given client data with the item at position n.
Adds the item to the control, associating the given data if not None.
Deletes the item at the zero-based index 'n' from the control.
Construct a string representing the object
Find an object already created
Recreate (if needed) the wx_obj and apply new properties
Remove event references and destroy wx object (and children)
Create a new object exactly similar to self
Raises/lower the component in the window hierarchy (Z-order/tab order)
Store the gui/wx object parent for this component
Return parent window name (used in __repr__ parent spec)
return full parents name + self name (useful as key)
Capture the screen appearance of the control (to be used as facade)
called when adding a control to the window
Re-parent a child control with the new wx_obj parent
Calculate final pos and size (auto, absolute in pixels & relativa)
automatically adjust relative pos and size of children controls
make several copies of the background bitmap
Draw the image as background
Associate the component to the control (it could be recreated)
Update a property value with (used by the designer)
Custom draws the label when transparent background is needed
Look for every file in the directory tree and return a dict Hacked from sphinx.autodoc
Return a list of children sub-components that are column headings
Set the row label format string (empty to hide)
Update the grid if rows and columns have been added or deleted
Update all displayed values
update the column attributes to add the appropriate renderer
col -> sort the data based on the column indexed by col
Associate the header to the control (it could be recreated)
Insert a number of rows into the grid (and associated table)
Insert a number of rows into the grid (and associated table)
Remove all rows and reset internal structures
Called to create the control, which must derive from wxControl.
Called to position/size the edit control within the cell rectangle.
Fetch the value from the table and prepare the edit control
Complete the editing of the current cell. Returns True if changed
Return True to allow the given key to start editing
This will be called to let the editor do something with the first key
A metaclass generator. Returns a metaclass which will register it's class as the class that
enable or disable all menu items
check if all menu items are enabled
Recursively find a menu item by its id (useful for event handlers)
enable or disable all top menus
check if all top menus are enabled
Helper method to remove a menu avoiding using its position
Recursively find a menu item by its id (useful for event handlers)
Process form submission
Construct a sequence of name/value pairs from controls
Add a tag attribute to the wx window
Insert items described in autosummary:: to the TOC tree, but do not generate the toctree::
Make the first column of the table non-breaking.
Get an autodoc.Documenter class suitable for documenting the given object. *obj* is the Python object
Reformat a function signature to a more compact form.
Join a number of strings to one, limiting the length to *max_chars*. If the string
Obtain current Python import prefixes (for `import_by_name`) from ``document.env``
Import a Python object that has the given *name*, under one of the *prefixes*. The
Import a Python object given its full name.
Smart linking role. Expands to ':obj:`text`' if `text` is an object that can be imported;
Try to import the given names, and return a list of ``[(name, signature, summary_string, real_name),
Generate a proper list of table nodes for autosummary:: directive. *items* is a list produced
Show a simple pop-up modal dialog
Modal dialog asking for an input, returns string or None if cancelled
Ask for confirmation (yes/no or ok and cancel), returns True or False
Show a dialog to select a font
Show a dialog to pick a color
Show a dialog to select files to open, return path(s) if accepted
Show a dialog to select file to save, return path(s) if accepted
Show a dialog to choose a directory
Shows a find text dialog
Remove all items and reset internal structures
Force appearance of the button next to the item
Get the type of an image from the file's extension ( .jpg, etc. )
Get the type of an image from the file's extension ( .jpg, etc. )
Set icon based on resource values
Display or hide the window, optionally disabling all other windows
Draws an arc of a circle, centered on (xc, yc), with starting point (x1, y1)
automatically adjust relative pos and size of children controls
Open, read and eval the resource from the source file
Save the resource to the source file
Create the GUI objects defined in the resource (filename or python struct)
Create a gui2py window based on the python resource
Create a gui2py control based on the python resource
Recursive convert a live GUI object to a resource list/dict
Associate event handlers
translate gui2py attribute name from pythoncard legacy code
Read from the clipboard content, return a suitable object (string or bitmap)
Write content to the clipboard, data can be either a string or a bitmap
Find out what items are documented in source/*.rst. See `find_autosummary_in_lines`.
Find out what items are documented in the given object's docstring. See `find_autosummary_in_lines`.
Find out what items appear in autosummary:: directives in the given lines. Returns a list
Add the object and all their childs
Select the object and show its properties
load the selected item in the property editor
Update the tree item when the object name changes
Open a popup menu with options regarding the selected object
Re-parent a child control with the new wx_obj parent (owner)
Perform the actual serialization. Args: value: the image to transform Returns: a url pointing at
Builds and registers a :class:`Selector` object with the given name and configuration. Args: name (str):
Dict[str, ExpressionFilter]: Returns the expression filters for this selector.
Dict[str, NodeFilter]: Returns the node filters for this selector.
Returns a decorator function for adding an expression filter. Args: name (str): The name of
Returns a decorator function for adding a node filter. Args: name (str): The name of
Adds filters from a particular global :class:`FilterSet`. Args: name (str): The name of the set
Selector: Returns a new :class:`Selector` instance with the current configuration.
Resolves this query relative to the given node. Args: node (node.Base): The node to be
str: A message describing the query failure.
Asserts that the page has the given path. By default this will compare against the
Asserts that the page doesn't have the given path. Args: path (str | RegexObject): The
Checks if the page has the given path. Args: path (str | RegexObject): The string
Checks if the page doesn't have the given path. Args: path (str | RegexObject): The
Retrieve the text of the element. If :data:`capybara.ignore_hidden_elements` is ``True``, which it is by default,
Select this node if it is an option element inside a select tag.
Returns the given expression filtered by the given value. Args: expr (xpath.expression.AbstractExpression): The expression to
Returns an instance of the given browser with the given capabilities. Args: browser_name (str): The
Dict[str, Any]: The keyword arguments with which this query was initialized.
str: A long description of this query.
str: The desired element visibility.
Returns the XPath query for this selector. Args: exact (bool, optional): Whether to exactly match
Resolves this query relative to the given node. Args: node (node.Base): The node relative to
Returns whether the given node matches all filters. Args: node (Element): The node to evaluate.
node.Base: The current node relative to which all interaction will be scoped.
str: Path of the current page, without any domain information.
str: Host of the current page.
Navigate to the given URL. The URL can either be a relative URL or an
Executes the wrapped code within the context of a node. ``scope`` takes the same options
Execute the wrapped code within the given iframe using the given frame or frame name/id.
Switch to the given frame. If you use this method you are responsible for making
If ``window`` is a lambda, it switches to the first window for which ``window`` returns
This method does the following: 1. Switches to the given window (it can be located
Get the window that has been opened by the passed lambda. It will wait for
Execute the given script, not returning a result. This is useful for scripts that return
Evaluate the given JavaScript and return the result. Be careful when using this with scripts
Execute the wrapped code, accepting an alert. Args: text (str | RegexObject, optional): Text to
Execute the wrapped code, accepting a confirm. Args: text (str | RegexObject, optional): Text to
Execute the wrapped code, dismissing a confirm. Args: text (str | RegexObject, optional): Text to
Execute the wrapped code, accepting a prompt, optionally responding to the prompt. Args: text (str
Execute the wrapped code, dismissing a prompt. Args: text (str | RegexObject, optional): Text to
Save a snapshot of the page. If invoked without arguments, it will save a file
Save a screenshot of the page. If invoked without arguments, it will save a file
Reset the session (i.e., remove cookies and navigate to a blank page). This method does
Raise errors encountered by the server.
Returns whether the given node matches the filter rule with the given value. Args: node
str: The package version.
Resolves this query relative to the given node. Args: node (node.Document): The node to be
str: The title for the current frame.
str: The value of the form element.
Builds and registers a global :class:`FilterSet`. Args: name (str): The name of the set. Yields:
Returns the :class:`Session` for the current driver and app, instantiating one if needed. Returns: Session:
Checks if allof the provided selectors are present on the given page or descendants of
Checks if none of the provided selectors are present on the given page or descendants
Asserts that a given selector is on the page or a descendant of the current
Asserts that an element has the specified CSS styles. :: element.assert_style({"color": "rgb(0,0,255)", "font-size": re.compile(r"px")}) Args:
Asserts that all of the provided selectors are present on the given page or descendants
Asserts that none of the provided selectors are present on the given page or descendants
Asserts that a given selector is not on the page or a descendant of the
Asserts that the current node matches a given selector. :: node.assert_matches_selector("p#foo") node.assert_matches_selector("xpath", "//p[@id='foo']") It also
Checks if the page or current node has a radio button or checkbox with the
Checks if the page or current node has no radio button or checkbox with the
Checks if the page or current node has a radio button or checkbox with the
Checks if the page or current node has no radio button or checkbox with the
Asserts that the page or current node has the given text content, ignoring any HTML
Asserts that the page or current node doesn't have the given text content, ignoring any
Asserts that the page has the given title. Args: title (str | RegexObject): The string
Asserts that the page doesn't have the given title. Args: title (str | RegexObject): The
Checks if the page has the given title. Args: title (str | RegexObject): The string
Checks if the page doesn't have the given title. Args: title (str | RegexObject): The
Find all elements on the page matching the given selector and options. Both XPath and
Find the first element on the page matching the given selector and options, or None
Resolves this query relative to the given node. Args: node (node.Base): The node to be
Returns the inner content of a given XML node, including tags. Args: node (lxml.etree.Element): The
Returns the inner text of a given XML node, excluding tags. Args: node: (lxml.etree.Element): The
Returns the given URL with all query keys properly escaped. Args: url (str): The URL
Define a write-only property that, in addition to the given setter function, also provides a
bool: Whether the given value is valid.
Find a file field on the page and attach a file given its path. The
Find a check box and mark it as checked. The check box can be found
Find a radio button and mark it as checked. The radio button can be found
Locate a text field or text area and fill it in with the given text.
If the ``field`` argument is present, ``select`` finds a select box on the page and
Find a check box and uncheck it. The check box can be found via name,
Find a select box on the page and unselect a particular option from it. If
Args: selector (str): The selector for the type of element that should be checked/unchecked. checked
Decorator for :meth:`synchronize`.
This method is Capybara's primary defense against asynchronicity problems. It works by attempting to run
Returns whether to catch the given error. Args: error (Exception): The error to consider. errors
Returns how the result count compares to the query options. The return value is negative
str: A message describing the query failure.
Attempts to fill the result cache with at least the given number of results. Returns:
str: A normalized representation for a user-provided value.
Returns whether the given query options expect a possible count of zero. Args: options (Dict[str,
Returns a expectation failure message for the given query description. Args: description (str): A description
Returns whether the given count matches the given query options. If no quantity options are
Normalizes the given value to a string of text with extra whitespace removed. Byte sequences
Returns the given text with outer whitespace removed and inner whitespace collapsed. Args: text (str):
Returns a compiled regular expression for the given text. Args: text (str | RegexObject): The
Returns whether this query resolves for the given session. Args: session (Session): The session for
bool: Whether this window is the window in which commands are being executed.
Resizes the window to the given dimensions. If this method was called for a window
Boots a server for the app, if it isn't already booted. Returns: Server: This server.
bool: Whether the server for this app is up and responsive.
Descriptor to change the class wide getter on a property. :param fcget: new class-wide getter.
Descriptor to change instance method. :param imeth: New instance method. :type imeth: typing.Optional[typing.Callable] :return: SeparateClassMethod
Descriptor to change class method. :param cmeth: New class method. :type cmeth: typing.Optional[typing.Callable] :return: SeparateClassMethod
Get outer traceback text for logging.
Get object repr block.
Get logger for log calls. :param instance: Owner class instance. Filled only if instance created,
Logger instance to use as override.
Get simple (string/number/boolean and None) assigned values from source. :param src: Source code :type src:
Run. :raises BuildFailed: extension build failed and need to skip cython part.
Low-level method to call the Slack API. Args: method: {str} method name to call params:
List of channels of this slack team
List of users of this slack team
Return the channel dict given by human-readable {name}
High-level function for creating messages. Return packed bytes. Args: text: {str} channel: {str} Either name
Translate machine identifiers into human-readable
Send the payload onto the {slack.[payload['type]'} channel. The message is transalated from IDs to human-readable
Send message to Slack
Get available messages and send through to the protocol
Main interface. Instantiate the SlackAPI, connect to RTM and start the client.
Pass in raw arguments, instantiate Slack API and begin client.
Setter method for affiliation, mapped from YANG variable /universe/individual/affiliation (identityref) If this variable is read-only
Return a dict of keys that differ with another config object.
Given a string add necessary codes to format the string.
Run when a task starts.
Run when a task finishes correctly.
Display info about playbook statistics.
Run when a task is skipped.
This methid basically reads a configuration that conforms to a very poor industry standard and
Converts a CIDR formatted prefix into an address netmask representation. Argument sep specifies the separator
Setter method for keepalive_interval, mapped from YANG variable /network_instances/network_instance/protocols/protocol/bgp/peer_groups/peer_group/timers/state/keepalive_interval (decimal64) If this variable is read-only
Decorator that checks if a value passed to a Jinja filter evaluates to false and
Add a model. The model will be asssigned to a class attribute with the YANG
Returns a dictionary with the values of the model. Note that the values of the
Load a dictionary into the model. Args: data(dict): Dictionary to load overwrite(bool): Whether the data
Returns a dictionary with the values of the model. Note that the values of the
Parse native configuration and load it into the corresponding models. Only models that have been
Parse native state and load it into the corresponding models. Only models that have been
Translate the object to native configuration. In this context, merge and replace means the following:
Loads and returns all filters.
This helps parsing shit like: <protocols> <bgp> <group> <name>my_peers</name> <neighbor> <name>192.168.100.2</name> <description>adsasd</description> <peer-as>65100</peer-as> </neighbor> <neighbor>
This method tries to use the path `?my_field` to convert: a: aa: 1 ab: 2
Setter method for trunk_vlans, mapped from YANG variable /interfaces/interface/aggregation/switched_vlan/state/trunk_vlans (union) If this variable is read-only
Find the necessary file for the given test case. Args: device(napalm device connection): for which
Given a model, return a representation of the model in a dict. This is mostly
Given two models, return the difference between them. Args: f (Pybindbase): First element. s (Pybindbase):
POST to URL and get result as a response object. :param url: URL to POST.
Construct a full URL that can be used to obtain an authorization code from the
Get an access token from the provider token URI. :param code: Authorization code. :type code:
Return query parameters as a dict from the specified URL. :param url: URL. :type url:
Return a URL with the query component removed. :param url: URL to dequery. :type url:
Construct a URL based off of base containing all parameters in the query portion of
Handle an internal exception that was caught and suppressed. :param exc: Exception to process. :type
Return a response object from the given parameters. :param body: Buffer/string containing the response body.
Return a HTTP 302 redirect response object containing the error. :param redirect_uri: Client redirect URI.
Return a response object from the given JSON data. :param data: Data to JSON-encode. :type
Generate authorization code HTTP response. :param response_type: Desired response type. Must be exactly "code". :type
Generate access token HTTP response from a refresh token. :param grant_type: Desired grant type. Must
Generate access token HTTP response. :param grant_type: Desired grant type. Must be "authorization_code". :type grant_type:
Get authorization code response from a URI. This method will ignore the domain and path
Get a token response from POST data. :param data: POST data containing authorization information. :type
Get authorization object representing status of authentication.
Utility function to create and return an i2c_rdwr_ioctl_data structure populated with a list of specified
Open the smbus interface on the specified bus.
Read a single byte from the specified device.
Read many bytes from the specified device.
Read a single byte from the specified cmd register of the device.
Read a word (2 bytes) from the specified cmd register of the device. Note that
Perform a read from the specified cmd register of device. Length number of bytes (default
Write a single byte to the specified device.
Write a single byte to the specified device.
Write many bytes to the specified device. buf is a bytearray
Write a byte of data to the specified cmd register of the device.
Write a word (2 bytes) of data to the specified cmd register of the device.
Write a block of data to the specified cmd register of the device. The amount
Write a buffer of data to the specified cmd register of the device.
Perform a smbus process call by writing a word (2 byte) value to the specified
Returns file's CDN url. Usage example:: >>> file_ = File('a771f854-c2cb-408a-8c36-71af77811f3b') >>> file_.cdn_url https://ucarecdn.com/a771f854-c2cb-408a-8c36-71af77811f3b/ You can
Returns file's store aware *datetime* in UTC format. It might do API request once because
Returns file's remove aware *datetime* in UTC format. It might do API request once because
Returns file's upload aware *datetime* in UTC format. It might do API request once because
Creates a File Copy on Uploadcare or Custom Storage. File.copy method is deprecated and will
Creates a Local File Copy on Uploadcare Storage. Args: - effects: Adds CDN image effects.
Creates file copy in remote storage. Args: - target: Name of a custom storage connected
Constructs ``File`` instance from file information. For example you have result of ``/files/1921953c-5d94-4e47-ba36-c2e1dd165e1a/`` API request::
Uploads a file and returns ``File`` instance. Args: - file_obj: file object to upload to
Uploads file from given url and returns ``FileFromUrl`` instance. Args: - url (str): URL of
Uploads file from given url and returns ``File`` instance. Args: - url (str): URL of
Returns CDN urls of all files from group without API requesting. Usage example:: >>> file_group
Returns file group's create aware *datetime* in UTC format.
Constructs ``FileGroup`` instance from group information.
Creates file group and returns ``FileGroup`` instance. It expects iterable object that contains ``File`` instances,
Base method for storage operations.
Extract uuid from each item of specified ``seq``.
A common function for building methods of the "list showing".
Iterates over the "iter_content" and draws a progress bar to stdout.
Makes REST API request and returns response as ``dict``. It provides auth headers as well
Makes Uploading API request and returns response as ``dict``. It takes settings from ``conf`` module.
Set the state of Home Mode
Returns the status of Home Mode
Return a list of cameras.
Return a list of cameras matching camera_ids.
Return bytes of camera image.
Disable camera.
Return motion settings matching camera_id.
Update motion settings matching camera_id with keyword args.
Update cameras and motion settings with latest from API.
Set the state of Home Mode
>>> replace_ext('one/two/three.four.doc', '.html') 'one/two/three.four.html' >>> replace_ext('one/two/three.four.DOC', '.html') 'one/two/three.four.html' >>> replace_ext('one/two/three.four.DOC', 'html') 'one/two/three.four.html'
Determine if ``li`` is the last list item for a given list
Find consecutive li tags that have content that have the same list id.
The ilvl on an li tag tells the li tag at what level of indentation
The numId on an li tag maps to the numbering dictionary along side the ilvl
Based on the passed in list_type create a list objects (ol/ul). In the future this
vMerge is what docx uses to denote that a table cell is part of a
gridSpan is what docx uses to denote that a table cell has a colspan. This
When calculating the rowspan for a given cell it is required to find all table
For bold, italics and underline. Simply checking to see if the various tags are present
The function will return True if the r tag passed in is considered bold.
The function will return True if the r tag passed in is considered italicized.
The function will return True if the r tag passed in is considered underlined.
Certain p tags are denoted as ``Title`` tags. This function will return True if the
It turns out that r tags can contain both t tags and drawing tags. Since
Checks to see if the whole p tag will end up being bold or italics.
There is a separate file called numbering.xml that stores how lists should look (unordered, digits,
Some things that are considered lists are actually supposed to be H tags (h1, h2,
There is a separate file holds the targets to links as well as the targets
``f`` is a ``ZipFile`` that is open Extract out the document data, numbering data and
Return the list type. If numId or ilvl not in the numbering dict then default
Build the list structure and return the root list
This will return a single tr element, with all tds already populated.
This returns a table object with all rows and cells correctly populated.
Generate the string data that for this particular t tag.
P tags are made up of several runs (r tags) of text. This function takes
Remove all tags that have the tag name ``tag``
``file_path`` is a path to the file on the file system that you want to
Find the location of a dataset on disk, downloading if needed.
Load the MNIST digits dataset.
Load the CIFAR10 image dataset.
Plot an array of images. We assume that we are given a matrix of data
Create a plot of weights, visualized as "bottom-level" pixel arrays.
Create a plot of conv filters, visualized as pixel arrays.
Create a callable that generates samples from a dataset. Parameters ---------- arrays : list of
Encode a text string by replacing characters with alphabet index. Parameters ---------- txt : str
Create a callable that returns a batch of training data. Parameters ---------- steps : int
Draw a sequential sample of class labels from this network. Parameters ---------- labels : list
Add a convolutional weight array to this layer's parameters. Parameters ---------- name : str Name
Encode a dataset using the hidden layer activations of our network. Parameters ---------- x :
Decode an encoded dataset by computing the output layer activation. Parameters ---------- z : ndarray
Find a layer output name for the given layer specifier. Parameters ---------- layer : None,
Compute R^2 coefficient of determination for a given input. Parameters ---------- x : ndarray (num-examples,
Return expressions that should be computed to monitor training. Returns ------- monitors : list of
Compute a greedy classification for the given set of data. Parameters ---------- x : ndarray
Compute class posterior probabilities for the given set of data. Parameters ---------- x : ndarray
Compute the logit values that underlie the softmax output. Parameters ---------- x : ndarray (num-examples,
Compute the mean accuracy on a set of labeled data. Parameters ---------- x : ndarray
Extract a single batch of data to pass to the model being trained. Parameters ----------
Returns a callable that chooses sequences from netcdf data.
Load a saved network from a pickle file on disk. This method sets the ``network``
Create a matrix of randomly-initialized weights. Parameters ---------- rows : int Number of rows of
Create a vector of randomly-initialized values. Parameters ---------- size : int Length of vecctor to
Get the outputs from a network that match a pattern. Parameters ---------- outputs : dict
Get the parameters from a network that match a pattern. Parameters ---------- layers : list
Construct common regularizers from a set of keyword arguments. Keyword arguments not listed below will
A list of Theano variables used in this loss.
Build a Theano expression for computing the accuracy of graph output. Parameters ---------- outputs :
Helper method to create a new weight matrix. Parameters ---------- name : str Name of
Helper method for defining a basic loop in theano. Parameters ---------- inputs : sequence of
Create a rate parameter (usually for a recurrent network layer). Parameters ---------- dist : {'uniform',
Construct an activation function by name. Parameters ---------- name : str or :class:`Activation` The name
Train a model using a training and validation set. This method yields a series of
Select a random sample of n items from xs.
Train a model using a training and validation set. This method yields a series of
Train a model using a training and validation set. This method yields a series of
Train a model using a training and validation set. This method yields a series of
Add a :ref:`layer <layers>` to our network graph. Parameters ---------- layer : int, tuple, dict,
Add a :ref:`loss function <losses>` to the model. Parameters ---------- loss : str, dict, or
Clear the current loss functions from the network and add a new one. All parameters
Train our network, one batch at a time. This method yields a series of ``(train,
Train the network until the trainer converges. All arguments are passed to :func:`itertrain`. Returns -------
Construct a string key for representing a computation graph. This key will be unique for
Connect the layers in this network to form a computation graph. Parameters ---------- regularizers :
A list of Theano variables for feedforward computations.
A list of Theano variables for loss computations.
Get a parameter from a layer in the network. Parameters ---------- which : int or
Compute a forward pass of all layers from the given input. All keyword arguments are
Compute a forward pass of the inputs, returning the network output. All keyword arguments end
Compute R^2 coefficient of determination for a given labeled input. Parameters ---------- x : ndarray
Save the state of this network to a pickle file on disk. Parameters ---------- filename_or_handle
Load a saved network from disk. Parameters ---------- filename_or_handle : str or file handle Load
Return a variable representing the regularized loss for this network. The regularized loss includes both
Return expressions that should be computed to monitor training. Returns ------- monitors : list of
Return expressions to run as updates during network training. Returns ------- updates : list of
Name of layer input (for layers with one input).
Size of layer input (for layers with one input).
Number of "neurons" in this layer's default output.
Create Theano variables representing the outputs of this layer. Parameters ---------- inputs : dict of
Bind this layer into a computation graph. This method is a wrapper for performing common
Resolve the names of inputs for this layer into shape tuples. Parameters ---------- layers :
Resolve the names of outputs for this layer into shape tuples.
Log some information about this layer.
Log information about this layer's parameters.
Helper method to format our name into a string.
Given a list of layers, find the layer output with the given name. Parameters ----------
Get a shared variable for a parameter by name. Parameters ---------- key : str or
Helper method to create a new weight matrix. Parameters ---------- name : str Name of
Helper method to create a new bias vector. Parameters ---------- name : str Name of
Create a specification dictionary for this layer. Returns ------- spec : dict A dictionary specifying
Returns the ArgMax from C by returning the (x_pos, y_pos, theta, scale) tuple >>> C
The Golden Laplacian Pyramid. To represent the edges of the image at different levels, we
Returns the radial frequency envelope: Selects a preferred spatial frequency ``sf_0`` and a bandwidth ``B_sf``.
Returns the orientation envelope: We use a von-Mises distribution on the orientation: - mean orientation
Returns the envelope of a LogGabor Note that the convention for coordinates follows that of
Returns the image of a LogGabor Note that the convention for coordinates follows that of
Read textgrid from stream. :param file ifile: Stream to read from. :param str codec: Text
Sort the tiers given the key. Example key functions: Sort according to the tiername in
Add an IntervalTier or a TextTier on the specified location. :param str name: Name of
Remove a tier, when multiple tiers exist with that name only the first is removed.
Gives a tier, when multiple tiers exist with that name only the first is returned.
Write the object to a file. :param str filepath: Path of the fil. :param str
Convert the object to an pympi.Elan.Eaf object :param int pointlength: Length of respective interval from
Add a point to the TextTier :param int point: Time of the point. :param str
Add an interval to the IntervalTier. :param float begin: Start time of the interval. :param
Remove an interval, if no interval is found nothing happens. :param int time: Time of
Remove a point, if no point is found nothing happens. :param int time: Time of
Give all the intervals or points. :param bool sort: Flag for yielding the intervals or
Returns the true list of intervals including the empty intervals.
Reads a .cha file and converts it to an elan object. The functions tries to
Parse an EAF file :param str file_path: Path to read from, - for stdin. :param
Function to pretty print the xml, meaning adding tabs and newlines. :param ElementTree.Element el: Current
Write an Eaf object to file. :param str file_path: Filepath to write to, - for
Add an annotation. :param str id_tier: Name of the tier. :param int start: Start time
Add an entry to a controlled vocabulary. :param str cv_id: Name of the controlled vocabulary
Add a description to a controlled vocabulary. :param str cv_id: Name of the controlled vocabulary
Add an external reference. :param str eid: Name of the external reference. :param str etype:
Add a language. :param str lang_id: ID of the language. :param str lang_def: Definition of
Add lexicon reference. :param str lrid: Lexicon reference internal ID. :param str name: Lexicon reference
Add a linguistic type. :param str lingtype: Name of the linguistic type. :param str constraints:
Add a linked file. :param str file_path: Path of the file. :param str relpath: Relative
Add a locale. :param str language_code: The language code of the locale. :param str country_code:
Add a reference annotation. .. note:: When a timepoint matches two annotations the new reference
Add a secondary linked file. :param str file_path: Path of the file. :param str relpath:
Add a tier. When no linguistic type is given and the default linguistic type is
Clean up all unused timeslots. .. warning:: This can and will take time for larger
Copies a tier to another :class:`pympi.Elan.Eaf` object. :param pympi.Elan.Eaf eaf_obj: Target Eaf object. :param str
Create a tier with the gaps and overlaps of the annotations. For types see :func:`get_gaps_and_overlaps`
Extracts the selected time frame as a new object. :param int start: Start time. :param
Filter annotations in a tier using an exclusive and/or inclusive filter. :param str tier: Name
Generate the next annotation id, this function is mainly used internally.
Generate the next timeslot id, this function is mainly used internally :param int time: Initial
Give the annotations at the given time. When the tier contains reference annotations this will
Give the annotation before a given time. When the tier contains reference annotations this will
Give the annotation before a given time. When the tier contains reference annotations this will
Gives the annotations within the times. When the tier contains reference annotations this will be
Gives a list of annotations of the form: ``(begin, end, value)`` When the tier contains
Give all child tiers for a tier. :param str id_tier: Name of the tier. :returns:
Give the full time interval of the file. Note that the real interval can be
Give gaps and overlaps. The return types are shown in the table below. The string
Faster variant of :func:`get_gaps_and_overlaps`. Faster in this case means almost 100 times faster... :param str
Give the ref annotations at the given time of the form ``[(start, end, value, refvalue)]``
Give the ref annotation after a time. If an annotation overlaps with `ktime`` that annotation
Give the ref annotation before a time. If an annotation overlaps with ``time`` that annotation
Give the ref annotations between times of the form ``[(start, end, value, refvalue)]`` :param str
Give a list of all reference annotations of the form: ``[(start, end, value, refvalue)]`` :param
Give the aligment annotation that a reference annotation belongs to directly, or indirectly through other
Give a list of all tiers matching a linguistic type. :param str ling_type: Name of
.. deprecated:: 1.2 Use :func:`add_annotation` instead.
.. deprecated:: 1.2 Use :func:`add_ref_annotation` instead.
Merge tiers into a new tier and when the gap is lower then the threshhold
remove all annotations from a tier :param str id_tier: Name of the tier. :raises KeyError:
Remove an annotation in a tier, if you need speed the best thing is to
Remove a controlled vocabulary description. :param str cv_id: Name of the controlled vocabulary. :paarm str
Remove all licenses matching both key and value. :param str name: Name of the license.
Remove all linked files that match all the criteria, criterias that are ``None`` are ignored.
Remove all properties matching both key and value. :param str key: Key of the property.
Remove a reference annotation. :param str id_tier: Name of tier. :param int time: Time of
Remove all secondary linked files that match all the criteria, criterias that are ``None`` are
Remove a tier. :param str id_tier: Name of the tier. :param bool clean: Flag to
Remove multiple tiers, note that this is a lot faster then removing them individually because
Rename a tier. Note that this renames also the child tiers that have the tier
Shift all annotations in time. Annotations that are in the beginning and a left shift
Convert the object to a :class:`pympi.Praat.TextGrid` object. :param list filtin: Include only tiers in this
Will be used to create the console script
Display debug information for the storage
Get the paragraph base embedding level. Returns 0 for LTR, 1 for RTL. `text` a
Get the paragraph base embedding level and direction, set the storage to the array of
Apply X1 to X9 rules of the unicode algorithm. See http://unicode.org/reports/tr9/#Explicit_Levels_and_Directions
Split the storage to run of char types at the same level. Applies X10. See
Reslove weak type rules W1 - W3. See: http://unicode.org/reports/tr9/#Resolving_Weak_Types
Resolving neutral types. Implements N1 and N2 See: http://unicode.org/reports/tr9/#Resolving_Neutral_Types
Resolving implicit levels (I1, I2) See: http://unicode.org/reports/tr9/#Resolving_Implicit_Levels
L2. From the highest level found in the text to the lowest odd level on
L1 and L2 rules
Applies L4: mirroring See: http://unicode.org/reports/tr9/#L4
Accepts unicode or string. In case it's a string, `encoding` is needed as it works
Inject the current working file
Convert compiled .ui file from PySide2 to Qt.py Arguments: lines (list): Each line of of
Append to self, accessible via Qt.QtCompat
Qt.py command-line interface
Add members found in prior versions up till the next major release These members are
Setup integration Registers Pyblish for Maya plug-ins and appends an item to the File-menu Attributes:
Try showing the most desirable GUI This function cycles through the currently registered graphical user
Return the most desirable of the currently registered GUIs
Remove integration
Register supported hosts
Add Pyblish to file-menu .. note:: We're going a bit hacky here, probably due to
Helper function for the above :func:add_to_filemenu() This function is serialised into a string and passed
Maintain selection during context Example: >>> with maintained_selection(): ... # Modify selection ... cmds.select('node', replace=True)
Maintain current time during context Example: >>> with maintained_time(): ... cmds.playblast() >>> # Time restored
Popup with information about how to register a new GUI In the event of no
The Message object has a circular reference on itself, thus we have to allow Type
Get the data as it will be charted. The first set will be the actual
Return all the values for a single axis of the data.
Draw a constant line on the y-axis with the label
Cache the parameters necessary to transform x & y coordinates
For every key, value pair, return the mapping for the equivalent value, key pair >>>
For every key that has an __iter__ method, assign the values to a key for
Much like the built-in function range, but accepts floats >>> tuple(float_range(0, 9, 1.5)) (0.0, 1.5,
Add a data set to the graph >>> graph.add_data({data:[1,2,3,4]}) # doctest: +SKIP Note that a
Add svg definitions
Add data to the graph object. May be called several times to add additional data
Process the template with the data and config which has been set and return the
Calculates the margin to the left of the plot area, setting border_left.
Calculate the margin in pixels to the right of the plot area, setting border_right.
Calculate the margin in pixels above the plot area, setting border_top.
Add pop-up information to a point on the graph.
Calculate the margin in pixels below the plot area, setting border_bottom.
The central logic for drawing the graph. Sets self.graph (the 'g' element in the SVG
Add text for a datapoint
Draw the X axis labels
Draw the Y axis labels
Draw the X-axis guidelines
Draw the Y-axis guidelines
Draws the graph title and subtitle
Hard-code the styles into the SVG XML if style sheets are not used.
Take a .css file (classes only please) and parse it into a dictionary of class/style
Base SVG Document Creation
Get the stylesheets for this instance
\ Convenience function to start a bot on the given network, optionally joining some channels
\ Send raw data over the wire if connection is registered. Otherewise, save the data
\ Connect to the IRC server using the nickname
\ Multipurpose method for sending responses to channel or via message to a single user
\ Low-level dispatching of socket data based on regex matching, in general handles * In
\ Generates a new nickname based on original nickname followed by a random number
\ Respond to periodic PING messages from server
\ When the connection to the server is registered, send all pending data.
\ Main loop of the IRCConnection - reads from the socket and dispatches based on
\ Hook for registering callbacks with connection -- handled by __init__()
\ Wraps the connection object's respond() method
\ Register the worker with the boss
\ Run tasks in a greenlet, pulling from the workers' task queue and reporting results
\ Decorator to ensure that commands only can come from the boss
\ Actual messages listened for by the worker bot - note that worker-execute actually dispatches
\ Received registration acknowledgement from the BotnetBot, as well as the name of the command
\ Work on a task from the BotnetBot
\ Indicate that the worker with given nick is performing this task
Send a validation email to the user's email address.
Send a password reset to the user's email address.
Passwords should be tough. That means they should use: - mixed case letters, - numbers,
Use `token` to allow one-time access to a view. Set the user as a class
Delete the user's avatar. We set `user.avatar = None` instead of calling `user.avatar.delete()` to avoid
Throttle POST requests only.
single global executor
single global client instance
A tuple consisting of the TLS client certificate and key if they have been provided,
Service name inside the Docker Swarm service_suffix should be a numerical value unique for user
wrapper for calling docker methods to be passed to ThreadPoolExecutor
Call a docker method in a background thread returns a Future
Check for a task state like `docker service ps id`
Start the single-user server in a docker service. You can specify the params for the
Stop and remove the service Consider using stop/start when Docker adds support
Check lower-cased email is unique.
Check the old password is valid and set the new password.
Set the new password for the user.
Validate if email exists and requires a verification. `validate_email` will set a `user` attribute on
Create auth token. Differs from DRF that it always creates new token but not re-using
Delete auth token when `delete` request was issued.
Disallow users other than the user whose email is being reset.
Validate `email` and send a request to confirm it.
Since User.email is unique, this check is redundant, but it sets a nicer error message
Update token's expiration datetime on every auth action.
Email context to reset a user password.
Send a notification by email.
Password reset email handler.
Validation email handler.
Authenticate a user from a token form field Errors thrown here will be swallowed by
Custom authentication to check if auth token has expired.
Displays bokeh output inside a notebook.
Temporary fix to patch HoloViews plot comms
Returns a CustomJS callback that can be attached to send the widget state across the
Get widget for param_name
Return name,widget boxes for all parameters (i.e., a property sheet)
The default Renderer function which handles HoloViews objects.
Forces a parameter value to be text
Given a list of objects, returns a dictionary mapping from string name for the object
Returns the instance owning the supplied instancemethod or the class owning the supplied classmethod.
Take the http_auth value and split it into the attributes that carry the http auth
Returns True if the cluster is up, False otherwise.
Get the basic info from the current cluster. :rtype: dict
Coroutine. Queries cluster Health API. Returns a 2-tuple, where first element is request status, and
Adds a typed JSON document in a specific index, making it searchable. Behind the scenes
Adds or updates a typed JSON document in a specific index, making it searchable. `<http://elasticsearch.org/guide/reference/api/index_/>`_
Returns a boolean indicating whether or not given document exists in Elasticsearch. `<http://elasticsearch.org/guide/reference/api/get/>`_ :arg index:
Retrieve a specified alias. `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-aliases.html>`_ :arg index: A comma-separated list of index names to filter
Execute a search query and get back search hits that match the query. `<http://www.elasticsearch.org/guide/reference/api/search/>`_ :arg
Scroll a search request created by specifying the scroll parameter. `<http://www.elasticsearch.org/guide/reference/api/search/scroll/>`_ :arg scroll_id: The scroll
Clear the scroll request created by specifying the scroll parameter to search. `<http://www.elasticsearch.org/guide/reference/api/search/scroll/>`_ :arg scroll_id:
Retrieve mapping definition of index or index/type. `<http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-get-mapping.html>`_ :arg index: A comma-separated list of index
The suggest feature suggests similar looking terms based on a provided text by using a
Converts bytes to a human readable format
Total CPU load for Synology DSM
Total Memory Size of Synology DSM
Function to get specific network (eth0, total, etc)
Total upload speed being used
Returns all available volumes
Returns a specific volume
Total size of volume
Total used size in percentage for volume
Average temperature of all disks making up the volume
Maximum temperature of all disks making up the volume
Returns all available (internal) disks
Returns a specific disk
Build and execute login request
Function to handle sessions for a GET request
Function to execute and handle a GET request
Updates the various instanced modules
Getter for various Utilisation variables
Getter for various Storage variables
Creates the context for a specific request.
The cached token of the current tenant.
Helper function for building an attribute dictionary.
Class decorator that makes sure the passed apps are present in INSTALLED_APPS.
Class decorator that makes sure the passed apps are not present in INSTALLED_APPS.
Return a dictionary of all global_settings values.
Handle the retrieval of the code
Set the app info (id & secret) read from the config file on the Reddit
Helper method to get a value from the config
Change the value of the given key in the given file to the given value
Migrates the old config file format to the new one
Start the webserver that will receive the code
Wait until the user accepted or rejected the request
Request new access information from reddit using the built in webserver
Check whether the tokens are set and request new ones if not
Set the token on the Reddit Object again
Check if the token is still valid and requests a new if it is not
Create DynamoDB table for run manifests Arguments: dynamodb_client - boto3 DynamoDB client (not service) table_name
Return list of all run ids inside S3 folder. It does not respect S3 pagination
Return pair of bucket without protocol and path Arguments: path - valid S3 path, such
Check if prefix is archived in Glacier, by checking storage class of first object inside
Extract date part from run id Arguments: key - full key name, such as shredded-archive/run=2012-12-11-01-31-33/
Remove all keys with Nones as values >>> clean_dict({'key': None}) {} >>> clean_dict({'empty_s': ''}) {'empty_s':
Add run_id into DynamoDB manifest table Arguments: dynamodb_client - boto3 DynamoDB client (not service) table_name
Check if run_id is stored in DynamoDB table. Return True if run_id is stored or
Extracts Schema information from Iglu URI >>> extract_schema("iglu:com.acme-corporation_underscore/event_name-dash/jsonschema/1-10-1")['vendor'] 'com.acme-corporation_underscore'
Create an Elasticsearch field name from a schema string
Convert a contexts JSON to an Elasticsearch-compatible list of key-value pairs For example, the JSON
Convert an unstructured event JSON to a list containing one Elasticsearch-compatible key-value pair For example,
Convert a Snowplow enriched event TSV into a JSON
Convert a Snowplow enriched event in the form of an array of fields into a
Extract the used view from the TemplateResponse context (ContextMixin)
Get the template used in a TemplateResponse. This returns a tuple of "active choice, all
Print the entire template context
Print a set of variables
Highlight common SQL words in a string.
Dump a variable to a HTML string with sensible output for template context fields. It
Briefly print the dictionary keys.
Apply some HTML highlighting to the contents. This can't be done in the
# Instead of just printing <SomeType at 0xfoobar>, expand the fields.
Expand a _("TEST") call to something meaningful.
Call a method, but :param func: :type func: :param extra_exceptions: :type extra_exceptions: :return: :rtype:
Format an item in the result. Could be a dictionary key, value, etc..
Recursive part of the formatting
Parse the next token in the stream. Returns a `LatexToken`. Raises `LatexWalkerEndOfStream` if end of
Reads a latex expression, e.g. macro argument. This may be a single char, an escape
Attempts to parse an optional argument. Returns a tuple `(groupnode, pos, len)` if success, otherwise
Reads a latex expression enclosed in braces {...}. The first token of `s[pos:]` must be
Reads a latex expression enclosed in a \\begin{environment}...\\end{environment}. The first token in the stream must
Parses latex content `s`. Returns a tuple `(nodelist, pos, len)` where nodelist is a list
Parses the latex content given to the constructor (and stored in `self.s`), starting at position
Parses the latex content given to the constructor (and stored in `self.s`), starting at position
Parses the latex content given to the constructor (and stored in `self.s`), starting at position
Parses the latex content given to the constructor (and stored in `self.s`), starting at position
r""" Parses the latex content given to the constructor (and stored in `self.s`), starting at
Parses the latex content given to the constructor (and stored in `self.s`) into a list
Extracts text from `content` meant for database indexing. `content` is some LaTeX code. .. deprecated::
Extracts text from a node list. `nodelist` is a list of nodes as returned by
Set where to look for input files when encountering the ``\\input`` or ``\\include`` macro. Alternatively,
This method may be overridden to implement a custom lookup mechanism when encountering ``\\input`` or
Parses the given `latex` code and returns its textual representation. The `parse_flags` are the flags
Extracts text from a node list. `nodelist` is a list of nodes as returned by
Turn the node list to text representations of each node. Basically apply `node_to_text()` to each
Return the textual representation of the given `node`. If `prev_node_hint` is specified, then the current
u""" Encode a UTF-8 string to a LaTeX snippet. If `non_ascii_only` is set to `True`,
Unpack `\\uNNNN` escapes in 's' and encode the result as UTF-8 This method takes the
Get information fot this organisation. Returns a dictionary of values.
Get all the boards for this organisation. Returns a list of Board s. Returns: list(Board):
Get all members attached to this organisation. Returns a list of Member objects Returns: list(Member):
Update this organisations information. Returns a new organisation object.
Remove a member from the organisation.Returns JSON of all members if successful or raises an
Add a member to the board using the id. Membership type can be normal or
Add a member to the board. Membership type can be normal or admin. Returns JSON
Get information for this list. Returns a dictionary of values.
Create a card for this list. Returns a Card object.
Get all information for this Label. Returns a dictionary of values.
Get all the items for this label. Returns a list of dictionaries. Each dictionary has
Update the current label's name. Returns a new Label object.
Update the current label. Returns a new Label object.
Returns a URL that needs to be opened in a browser to retrieve an access
Get information for this card. Returns a dictionary of values.
Get board information for this card. Returns a Board object. Returns: Board: The board this
Get list information for this card. Returns a List object. Returns: List: The list this
Get the checklists for this card. Returns a list of Checklist objects. Returns: list(Checklist): The
Adds a comment to this card by the current user.
Adds an attachment to this card.
Add a checklist to this card. Returns a Checklist object.
Add a label to this card, from a dictionary.
Add an existing label to this card.
Add a member to this card. Returns a list of Member objects.
Encodes data to updload a file to Trello. Fields is a dictionary of api_key and
Get Information for a member. Returns a dictionary of values. Returns: dict
Get all cards this member is attached to. Return a list of Card objects. Returns:
Get all organisations this member is attached to. Return a list of Organisation objects. Returns:
Create a new board. name is required in query_params. Returns a Board object. Returns: Board:
Enable singledispatch for class methods. See http://stackoverflow.com/a/24602374/274318
Create a ChecklistItem object from JSON object
Get all information for this board. Returns a dictionary of values.
Get the lists attached to this board. Returns a list of List objects. Returns: list(List):
Get the labels attached to this board. Returns a label of Label objects. Returns: list(Label):
Get a Card for a given card id. Returns a Card object. Returns: Card: The
Get the checklists for this board. Returns a list of Checklist objects.
Get the Organisation for this board. Returns Organisation object. Returns: list(Organisation): The organisation attached to
Update this board's information. Returns a new board.
Create a list for a board. Returns a new List object.
Create a label for a board. Returns a new Label object.
Get all information for this Checklist. Returns a dictionary of values.
Get card this checklist is on.
Get the items for this checklist. Returns a list of ChecklistItem objects.
Update the current checklist. Returns a new Checklist object.
Add an item to this checklist. Returns a dictionary of values of new item.
Deletes an item from this checklist.
Rename the current checklist item. Returns a new ChecklistItem object.
Set the state of the current checklist item. Returns a new ChecklistItem object.
Adds the API key and user auth token to the query parameters
Check HTTP reponse for known errors
Build the URI for the API call.
Make a call to Trello API and capture JSON response. Raises an error when it
Create an Organisation object from a JSON object Returns: Organisation: The organisation from the given
Create Board object from a JSON object Returns: Board: The board from the given `board_json`.
Create Label object from JSON object Returns: Label: The label from the given `label_json`.
Create List object from JSON object Returns: List: The list from the given `list_json`.
Create a Card object from JSON object Returns: Card: The card from the given `card_json`.
Create a Checklist object from JSON object Returns: Checklist: The checklist from the given `checklist_json`.
Create a ChecklistItem object from JSON object
Create a Member object from JSON object Returns: Member: The member from the given `member_json`.
Get an organisation Returns: Organisation: The organisation with the given `id`
Get a board Returns: Board: The board with the given `id`
Get a list Returns: List: The list with the given `id`
Get a card Returns: Card: The card with the given `id`
Get a checklist Returns: Checklist: The checklist with the given `id`
Get a member or your current member if `id` wasn't given. Returns: Member: The member
Get root domain from url. Will prune away query strings, url paths, protocol prefix and
A generator to convert raw text segments, without xml to a list of words without
A generator to convert raw text segments, with xml, and other non-textual content to a
A generator to convert raw text segments, with xml, and other non-textual content to a
Subdivide an input list of strings (tokens) into multiple lists according to detected sentence boundaries.
Perform sentence + word tokenization on the input text using regular expressions and english/french specific
Javascript templates (jquery, handlebars.js, mustache.js) use constructs like: :: {{if condition}} print something{{/if}} This, of
Write the password in the file.
Annotate locations in a string that contain periods as being true periods or periods that
Use an integer list to split the string contained in `text`. Arguments: ---------- text :
Regex that adds a 'SHOULD_SPLIT' marker at the end location of each matching group of
Regex that adds a 'SHOULD_SPLIT' marker at the end location of each matching group of
Convert a single string into a list of substrings split along punctuation and word boundaries.
Main command line interface.
Create the cipher object to encrypt or decrypt a payload.
Return the AES mode, or a list of valid AES modes, if mode == None
Applicable for all platforms, where the schemes, that are integrated with your environment, does not
check for a valid scheme raise AttributeError if missing raise ValueError if not valid
Starts the global Twisted logger subsystem with maybe stdout and/or a file specified in the
Set a new log level for a given namespace LevelStr is: 'critical', 'error', 'warn', 'info',
Connect to MQTT broker
Callback Receiving messages from publisher
get notfied of disconnections and get a deferred for a new protocol object (next retry)
Connect to MQTT broker
Produce ids for Protocol packets, outliving their sessions
Send a CONNECT control packet.
Handles CONNACK packet from the server
Abstract ======== Send a CONNECT control packet. Description =========== After a Network Connection is established
Encode an UTF-8 string into MQTT format. Returns a bytearray
Decodes an UTF-8 string from an encoded MQTT bytearray. Returns the decoded string and renaining
Encodes a 16 bit unsigned integer into MQTT format. Returns a bytearray
Encodes value into a multibyte sequence defined by MQTT protocol. Used to encode packet length
Decodes a variable length value defined in the MQTT protocol. This value typically represents remaining
Encode and store a DISCONNECT control packet.
Encode and store a CONNECT control packet. @raise e: C{ValueError} if any encoded topic string
Decode a CONNECT control packet.
Encode and store a CONNACK control packet.
Decode a CONNACK control packet.
Decode a SUBSCRIBE control packet.
Encode and store a SUBACK control packet.
Encode and store an UNSUBCRIBE control packet @raise e: C{ValueError} if any encoded topic string
Decode a UNSUBACK control packet.
Encode and store an UNSUBACK control packet
Encode and store a PUBLISH control packet. @raise e: C{ValueError} if encoded topic string exceeds
Decode a PUBLISH control packet.
Decode a PUBREL control packet.
Return url for call method. :param method (optional): `str` method name. :returns: `str` URL.
Send request to API. :param method: `str` method name. :returns: `dict` response.
Authentication on vk.com. :param login: login on vk.com. :param password: password on vk.com. :returns: `requests.Session`
OAuth on vk.com. :param login: login on vk.com. :param password: password on vk.com. :param app_id:
create a block from array like objects The operation is well defined only if array
Refresh the list of blocks to the disk, collectively
create a block from array like objects The operation is well defined only if array
If `value` is a string type, attempts to convert it to a boolean if it
This function will take all webassets.* parameters, and call the ``Environment()`` constructor with kwargs passed
Function for converting a dict to an array suitable for sklearn. Parameters ---------- data :
Function to format data for cluster fitting. Parameters ---------- data : dict A dict of
Fit KMeans clustering algorithm to data. Parameters ---------- data : array-like A dataset formatted by
Fit MeanShift clustering algorithm to data. Parameters ---------- data : array-like A dataset formatted by
fit classifiers from large dataset. Parameters ---------- data : dict A dict of data for
Label new data with cluster identities. Parameters ---------- data : dict A data dict containing
Translate cluster identity back to original data size. Parameters ---------- size : int size of
Sort clusters by the concentration of a particular analyte. Parameters ---------- data : dict A
Return a datetime oject from a string, with optional time format. Parameters ---------- datetime :
Returns the total number of data points in values of dict. Paramters --------- d :
Returns total length of analysis.
Determines the most appropriate plotting unit for data. Parameters ---------- a : float or array-like
Returns formatted element name. Parameters ---------- s : str of format [A-Z][a-z]?[0-9]+ Returns ------- str
Converts analytes in format '27Al' to 'Al27'. Parameters ---------- s : str of format [A-z]{1,3}[0-9]{1,3}
Converts analytes in format 'Al27' to '27Al'. Parameters ---------- s : str of format [0-9]{1,3}[A-z]{1,3}
Copy all csvs in nested directroy to single directory. Function to copy all csvs from
Convert boolean array into a 2D array of (start, stop) pairs.
Consecutively numbers contiguous booleans in array. i.e. a boolean sequence, and resulting numbering T F
Generate boolean array from list of limit tuples. Parameters ---------- tuples : array_like [2, n]
Returns (win, len(a)) rolling - window array of data. Parameters ---------- a : array_like Array
Returns rolling - window smooth of a. Function to efficiently calculate the rolling mean of
Returns rolling - window gradient of a. Function to efficiently calculate the rolling gradient of
Calculate gradients of values in dat. Parameters ---------- x : array like Independent variable for
Function to find local minima. Parameters ---------- x, y : array_like 1D arrays of the
Combine elements of ddict into an array of shape (len(ddict[key]), len(keys)). Useful for preparing data
Identify clusters using Meanshift algorithm. Parameters ---------- data : array_like array of size [n_samples, n_features].
Identify clusters using K - Means algorithm. Parameters ---------- data : array_like array of size
Identify clusters using DBSCAN algorithm. Parameters ---------- data : array_like array of size [n_samples, n_features].
Returns list of SRMS defined in the SRM database
Read LAtools configuration file, and return parameters as dict.
Reads configuration, returns a ConfigParser object. Distinct from read_configuration, which returns a dict.
Prints all currently defined configurations.
Creates a copy of the default SRM table at the specified location. Parameters ---------- destination
Adds a new configuration to latools.cfg. Parameters ---------- config_name : str The name of the
Change the default configuration.
Return boolean arrays where a >= and < threshold. Parameters ---------- values : array-like Array
Exclude all data after the first excluded portion. This makes sense for spot measurements where,
'Defragment' a filter. Parameters ---------- filt : boolean array A filter threshold : int Consecutive
Remove points from the start and end of True regions. Parameters ---------- start, end :
Set the 'focus' attribute of the data file. The 'focus' attribute of the object points
Applies expdecay_despiker and noise_despiker to data. Parameters ---------- expdecay_despiker : bool Whether or not to
Automatically separates signal and background data regions. Automatically detect signal and background regions in the
Plot a detailed autorange report for this sample.
Transform boolean arrays into list of limit pairs. Gets Time limits of signal/background boolean arrays
Subtract provided background from signal (focus stage). Results is saved in new 'bkgsub' focus stage
Correct spectral interference. Subtract interference counts from target_analyte, based on the intensity of a source_analayte
Divide all analytes by a specified internal_standard analyte. Parameters ---------- internal_standard : str The analyte
Apply calibration to data. The `calib_dict` must be calculated at the `analyse` level, and passed
Calculate sample statistics Returns samples, analytes, and arrays of statistics of shape (samples, analytes). Statistics
Function for calculating the ablation time for each ablation. Returns ------- dict of times for
Apply threshold filter. Generates threshold filters for the given analytes above and below the specified
Apply gradient threshold filter. Generates threshold filters for the given analytes above and below the
Applies an n - dimensional clustering filter to the data. Available Clustering Algorithms * 'meanshift':
Calculate local correlation between two analytes. Parameters ---------- x_analyte, y_analyte : str The names of
Calculate correlation filter. Parameters ---------- x_analyte, y_analyte : str The names of the x and
Plot the local correlation between two analytes. Parameters ---------- x_analyte, y_analyte : str The names
Make new filter from combination of other filters. Parameters ---------- name : str The name
Remove points from the start and end of filter regions. Parameters ---------- start, end :
Exclude all points down-hole (after) the first excluded data. Parameters ---------- threhold : int The
Optimise data selection based on specified analytes. Identifies the longest possible contiguous data region in
Plot analytes as a function of Time. Parameters ---------- analytes : array_like list of strings
Plot analytes gradients as a function of Time. Parameters ---------- analytes : array_like list of
Plot analytes against each other. Parameters ---------- analytes : optional, array_like or str The analyte(s)
Plot the results of a group of filters in a crossplot. Parameters ---------- filter_string :
Visualise effect of data filters. Parameters ---------- filt : str Exact or partial name of
Returns paramters used to process data. Returns ------- dict dict of analysis parameters
Plot analytes as a function of Time. Parameters ---------- analytes : array_like list of strings
Plot analytes gradients as a function of Time. Parameters ---------- analytes : array_like list of
Plot analytes against each other. The number of plots is n**2 - n, where n
Plot histograms of all items in dat. Parameters ---------- dat : dict Data in {key:
Function for visualising the autorange mechanism. Parameters ---------- t : array-like Independent variable (usually time).
Plot the calibration lines between measured and known SRM values. Parameters ---------- analytes : optional,
Visualise effect of data filters. Parameters ---------- filt : str Exact or partial name of
Calculate the reproducibility of LA-ICPMS based on unique pairs of repeat analyses. Pairwise differences are
Compute comparison stats for test and LAtools data. Population-level similarity assessed by a Kolmogorov-Smirnov test.
Compute summary statistics for paired x, y data. Tests ----- Parameters ---------- x, y :
Fetch LAtools reference data from online repository. Parameters ---------- name : str< Which data to
Find an instance of the type class `TC` for type `G`. Iterates `G`'s parent classes,
Calculate padded range limits for axes.
Calculate padded range limits for axes.
Draw a Bland-Altman plot of x and y data. https://en.wikipedia.org/wiki/Bland%E2%80%93Altman_plot Parameters ---------- x, y :
Automatically separates signal and background in an on/off data stream. **Step 1: Thresholding.** The background
Returns the components underlying the autorange algorithm. Returns ------- t : array-like Time axis (independent
Loads a DataFrame of all elements and isotopes. Scraped from https://www.webelements.com/ Returns ------- pandas DataFrame
Returns molecular weight of molecule. Where molecule is in standard chemical notation, e.g. 'CO2', 'HCO3'
generate single escape sequence mapping.
Handle Resets in input stack. Breaks the input stack if a Reset operator (zero) is
Squash and reduce the input stack. Removes the elements of input that match predicate and
Remove duplicates from the stack in first-seen order.
Calculate gaussian weigted moving mean, SD and SE. Parameters ---------- x : array-like The independent
Gaussian function. Parameters ---------- x : array_like Independent variable. *p : parameters unpacked to A,
Calculate the standard error of a.
Calculate the Huber (H15) Robust mean of x. For details, see: http://www.cscjp.co.jp/fera/document/ANALYSTVol114Decpgs1693-97_1989.pdf http://www.rsc.org/images/robust-statistics-technical-brief-6_tcm18-214850.pdf
Calculate the Huber (H15) Robust standard deviation of x. For details, see: http://www.cscjp.co.jp/fera/document/ANALYSTVol114Decpgs1693-97_1989.pdf http://www.rsc.org/images/robust-statistics-technical-brief-6_tcm18-214850.pdf
Reproduce a previous analysis exported with :func:`latools.analyse.minimal_export` For normal use, supplying `log_file` and specifying a
Helper function to get sample names from subset. Parameters ---------- subset : str Subset name.
Automatically separates signal and background data regions. Automatically detect signal and background regions in the
Determines exponential decay coefficient for despike filter. Fits an exponential decay function to the washout
Despikes data with exponential decay and noise filters. Parameters ---------- expdecay_despiker : bool Whether or
Extract all background data from all samples on universal time scale. Used by both 'polynomial'
Background calculation using a gaussian weighted mean. Parameters ---------- analytes : str or iterable Which
Background calculation using a 1D interpolation. scipy.interpolate.interp1D is used for interpolation. Parameters ---------- analytes :
Subtract calculated background from data. Must run bkg_calc first! Parameters ---------- analytes : str or
Correct spectral interference. Subtract interference counts from target_analyte, based on the intensity of a source_analayte
Plot the calculated background. Parameters ---------- analytes : str or iterable Which analyte(s) to plot.
Calculates the ratio of all analytes to a single analyte. Parameters ---------- internal_standard : str
Function for automarically identifying SRMs Parameters ---------- srms_used : iterable Which SRMs have been used.
Calibrates the data to measured SRM values. Assumes that y intercept is zero. Parameters ----------
Creates a subset of samples, which can be treated independently. Parameters ---------- samples : str
Remove all points containing data below zero (which are impossible!)
Applies a threshold filter to the data. Generates two filters above and below the threshold
Applies a threshold filter to the data. Generates two filters above and below the threshold
Calculate a gradient threshold filter to the data. Generates two filters above and below the
Applies an n - dimensional clustering filter to the data. Parameters ---------- analytes : str
Create a clustering classifier based on all samples, or a subset. Parameters ---------- name :
Apply a clustering classifier based on all samples, or a subset. Parameters ---------- name :
Applies a correlation filter to the data. Calculates a rolling correlation between every `window` points
Plot the local correlation between two analytes. Parameters ---------- x_analyte, y_analyte : str The names
Turns data filters on for particular analytes and samples. Parameters ---------- filt : optional, str
Turns data filters off for particular analytes and samples. Parameters ---------- filt : optional, str
Prints the current status of filters for specified samples. Parameters ---------- sample : str Which
Clears (deletes) all data filters.
Remove 'fragments' from the calculated filter Parameters ---------- threshold : int Contiguous data regions that
Exclude all points down-hole (after) the first excluded data. Parameters ---------- threhold : int The
Remove points from the start and end of filter regions. Parameters ---------- start, end :
Report how many data are removed by the active filters.
Optimise data selection based on specified analytes. Identifies the longest possible contiguous data region in
Plot the result of signal_optimise. `signal_optimiser` must be run first, and the output stored in
Set the 'focus' attribute of the data file. The 'focus' attribute of the object points
Collect all data from all samples into a single array. Data from standards is not
Collect all data from all samples into a single array. Data from standards is not
Plot a histogram of the gradients in all samples. Parameters ---------- filt : str, dict
Plot analytes against each other. Parameters ---------- analytes : optional, array_like or str The analyte(s)
Plot analyte gradients against each other. Parameters ---------- analytes : optional, array_like or str The
Plot histograms of analytes. Parameters ---------- analytes : optional, array_like or str The analyte(s) to
Quantify the effects of the active filters. Parameters ---------- analytes : str or list Which
Plot analytes as a function of time. Parameters ---------- analytes : optional, array_like or str
Plot analyte gradients as a function of time. Parameters ---------- analytes : optional, array_like or
Plot filter reports for all filters that contain ``filt_str`` in the name.
Calculate sample statistics. Returns samples, analytes, and arrays of statistics of shape (samples, analytes). Statistics
Function for visualising per-ablation and per-sample means. Parameters ---------- analytes : str or iterable Which
Return pandas dataframe of all sample statistics.
Used for exporting minimal dataset. DON'T USE.
Function to export raw data. Parameters ---------- outdir : str directory to save toe traces.
Save analysis.lalog in specified location
Exports a analysis parameters, standard info and a minimal dataset, which can be imported by
Split one long analysis file into multiple smaller ones. Parameters ---------- file : str The
TODO: Check for existing files in savedir, don't overwrite?
map `f` over the traversable, then fold over the result using the supplied initial element
Calculates pca of d. Parameters ---------- nc : int Number of components d : np.ndarray
Plot a fitted PCA, and all components.
Apply fn to all contiguous regions in s that have at least min_points.
Apply fn to all contiguous regions in s that have at least min_points.
Remove mean and divide by standard deviation, using bayes_kvm statistics.
Remove median, divide by IQR.
Optimise data selection based on specified analytes. Identifies the longest possible contiguous data region in
Plot the result of signal_optimise. `signal_optimiser` must be run first, and the output stored in
Apply standard deviation filter to remove anomalous values. Parameters ---------- win : int The window
Apply exponential decay filter to remove physically impossible data based on instrumental washout. The filter
**f** must return the same stack type as **self.value** has. Iterates over the effects, sequences
Add filter. Parameters ---------- name : str filter name filt : array_like boolean filter array
Remove filter. Parameters ---------- name : str name of the filter to remove setn :
Clear all filters.
Remove unused filters.
Turn on specified filter(s) for specified analyte(s). Parameters ---------- analyte : optional, str or array_like
Make filter for specified analyte(s). Filter specified in filt.switches. Parameters ---------- analyte : str or
Identify a filter by fuzzy string matching. Partial ('fuzzy') matching performed by `fuzzywuzzy.fuzzy.ratio` Parameters ----------
Make filter from logical expression. Takes a logical expression as an input, and returns a
Make logical expressions describing the filter(s) for specified analyte(s). Parameters ---------- analyte : optional, str
Flexible access to specific filter using any key format. Parameters ---------- f : str, dict
Extract filter components for specific analyte(s). Parameters ---------- key : str string present in one
Get info for all filters.
Load data_file described by a dataformat dict. Parameters ---------- data_file : str Path to data
Function for plotting Test User and LAtools data comparison. Parameters ---------- df : pandas.DataFrame A
Compute comparison stats for test and LAtools data. Population-level similarity assessed by a Kolmogorov-Smirnov test.
Function for logging method calls and parameters
Write and analysis log to a file. Parameters ---------- log : list latools.analyse analysis log
Reads an latools analysis.log file, and returns dicts of arguments. Parameters ---------- log_file : str
Compresses the target directory, and saves it to ../name.zip Parameters ---------- directory : str Path
Extract contents of zip file into subfolder in parent directory. Parameters ---------- zip_file : str
Decorator that will try to login and redo an action before failing.
Example of printing the inbox.
Example of sending a message.
Example of printing the current upstream.
Example of printing the current upstream.
Parse a file-like object or string. Args: file_or_string (file, str): File-like object or string. Returns:
Return the link to the Jupyter nbviewer for the given notebook url
The string for creating the thumbnail of this example
The string for creating a code example for the gallery
The code example out of the notebook metadata
The supplementary files of this notebook
The supplementary files of this notebook
The url on jupyter nbviewer for this notebook or None if unknown
get the output file with the specified `ending`
Process the notebook and create all the pictures and files This method runs the notebook
Create the rst file from the notebook node
Create the python script from the notebook node
Create the rst string to download supplementary data
Create the thumbnail for html output
Get summary and description of this notebook
Scales an image with the same aspect ratio centered in an image with a given
Save the thumbnail image
The integer of the thumbnail figure
Create the rst files from the input directories in the :attr:`in_dir` attribute
Method to recursivly process the notebooks in the `base_dir` Parameters ---------- base_dir: str Path to
Class method to create a :class:`Gallery` instance from the configuration of a sphinx application
Return the url corresponding to the given notebook file Parameters ---------- nbfile: str The path
command execution
get only db changes fields
returns SQL needed for sync schema for a new translatable field
returns all translatable fields in a model (including superclasses ones)
When accessing to the name of the field itself, the value in the current language
Post processors are functions that receive file objects, performs necessary operations and return the results
A post processing function to optimize file size. Accepts commands to optimize JPG, PNG and
Return an attribute from a dotted path name (e.g. "path.to.func"). Copied from nvie's rq https://github.com/nvie/rq/blob/master/rq/utils.py
Returns a dictionary that contains the imported processors and kwargs. For example, passing in: processors
Process an image through its defined processors params :file: filename or file-like object params :size:
Process the source image through the defined processors.
Populate self._thumbnails.
Return all thumbnails in a dict format.
Returns a Thumbnail instance. First check whether thumbnail is already cached. If it doesn't: 1.
Creates and return a thumbnail of a given size.
Deletes a thumbnail of a given size
Creates a thumbnail file and its relevant metadata. Returns a Thumbnail instance.
Returns a Thumbnail instance, or None if thumbnail does not yet exist.
Deletes a thumbnail file and its relevant metadata.
Simulate an incoming message :type src: str :param src: Message source :type boby: str |
Register a virtual subscriber which receives messages to the matching number. :type number: str :param
Get the set of states. Mostly used for pretty printing :rtype: set :returns: Set of
Register a provider on the gateway The first provider defined becomes the default one: used
Send a message object :type message: data.OutgoingMessage :param message: The message to send :rtype: data.OutgoingMessage
Get a Flask blueprint for the named provider that handles incoming messages & status reports
Get Flask blueprints for every provider that supports it Note: this requires Flask microframework. :rtype:
Register all provider receivers on the provided Flask application under '/{prefix}/provider-name' Note: this requires Flask
Incoming message callback Calls Gateway.onReceive event hook Providers are required to: * Cast phone numbers
Incoming status callback Calls Gateway.onStatus event hook Providers are required to: * Cast phone numbers
Incoming message handler: forwarded by ForwardServerProvider
Incoming status handler: forwarded by ForwardServerProvider
Unserialize with JsonEx :rtype: dict
View wrapper for JsonEx responses. Catches exceptions as well
Parse authentication data from the URL and put it in the `headers` dict. With caching
Make a request with JsonEx :param url: URL :type url: str :param data: Data to
Send a message by forwarding it to the server :param message: Message :type message: smsframework.data.OutgoingMessage
Forward an object to client :type client: str :type obj: smsframework.data.IncomingMessage|smsframework.data.MessageStatus :rtype: smsframework.data.IncomingMessage|smsframework.data.MessageStatus :raise Exception:
Forward an object to clients. :param obj: The object to be forwarded :type obj: smsframework.data.IncomingMessage|smsframework.data.MessageStatus
Returns a dictionnary of dictionnary that contains critical informationabout the transport and protocol behavior, such
Get balance of address for `erc20_address` :param address: owner address :param erc20_address: erc20 token address
Get erc20 information (`name`, `symbol` and `decimals`) :param erc20_address: :return: Erc20_Info
Get events for erc20 transfers. At least one of `from_address`, `to_address` or `token_address` must be
Send tokens to address :param to: :param amount: :param erc20_address: :param private_key: :return: tx_hash
:param from_block: Quantity or Tag - (optional) From this block. `0` is not working, it
Get web3 provider for slow queries. Default `HTTPProvider` timeouts after 10 seconds :param provider: Configured
Send a tx using an unlocked public key in the node or a private key.
Send ether using configured account :param to: to :param gas_price: gas_price :param value: value(wei) :param
Check tx hash and make sure it has the confirmations required :param w3: Web3 instance
:return: checksum encoded address starting by 0x, for example `0x568c93675A8dEb121700A6FAdDdfE7DFAb66Ae4A` :rtype: str
Generates an address for a contract created using CREATE2. :param from_: The address which is
Get Gnosis Safe Master contract. It should be used to access Safe methods on Proxy
Get Old Gnosis Safe Master contract. It should be used to access Safe methods on
Get Paying Proxy Contract. This should be used just for contract creation/changing master_copy If you
Get ERC20 interface :param w3: Web3 instance :param address: address of the proxy contract :return:
:param signatures: signatures in form of {bytes32 r}{bytes32 s}{uint8 v} :param pos: position of the
Convert signature to bytes :param vrs: tuple of v, r, s :return: signature in form
Convert signatures to bytes :param signatures: list of tuples(v, r, s) :return: 65 bytes per
Find v and r valid values for a given s :param s: random value :return:
:param master_copy: Master Copy of Gnosis Safe already deployed :param initializer: Data initializer to send
:param master_copy: Master Copy of Gnosis Safe already deployed :param initializer: Data initializer to send
Use pyethereum `Transaction` to generate valid tx using a random signature :param tx_dict: Web3 tx
Gas estimation done using web3 and calling the node Payment cannot be estimated, as no
Signed transaction that compatible with `w3.eth.sendRawTransaction` Is not used because `pyEthereum` implementation of Transaction was
Check if proxy is valid :param address: address of the proxy :return: True if proxy
Check safe has enough funds to pay for a tx :param safe_address: Address of the
Deploy master contract. Takes deployer_account (if unlocked in the node) or the deployer private key
Deploy proxy contract. Takes deployer_account (if unlocked in the node) or the deployer private key
Deploy proxy contract using the `Proxy Factory Contract`. Takes deployer_account (if unlocked in the node)
Deploy proxy contract using `create2` withthe `Proxy Factory Contract`. Takes `deployer_account` (if unlocked in the
Deploy proxy factory contract. Takes deployer_account (if unlocked in the node) or the deployer private
Estimate tx gas using safe `requiredTxGas` method :return: int: Estimated gas :raises: CannotEstimateGas: If gas
Estimate tx gas using web3
Estimate tx gas. Use the max of calculation using safe method and web3 if operation
Estimates the gas for the verification of the signatures and other safe related tasks before
Send multisig tx to the Safe :param tx_gas: Gas for the external tx. If not,
Prepare Safe creation :param owners: Owners of the Safe :param threshold: Minimum number of users
Calculate gas manually, based on tests of previosly deployed safes :param owners: Safe owners :param
Gas estimation done using web3 and calling the node Payment cannot be estimated, as no
:return: Web3 contract tx prepared for `call`, `transact` or `buildTransaction`
:param tx_sender_address: :param tx_gas: Force a gas limit :param block_identifier: :return: `1` if everything ok
Send multisig tx to the Safe :param tx_sender_private_key: Sender private key :param tx_gas: Gas for
Appends towrite to the write queue >>> await test.write(b"HELLO") # Returns without wait time >>>
Reads a given number of bytes :param bytecount: How many bytes to read, leave it
Reads a given number of bytes :param num_bytes: How many bytes to read :returns: incoming
Reads one line >>> # Keeps waiting for a linefeed incase there is none in
Verifies and sends message. :param message: Message instance. :param envelope_from: Email address to be used
Creates a MIMEText object with the given subtype (default: 'plain') If the text is unicode,
Creates the email
Checks for bad headers i.e. newlines in subject, sender or recipients.
Adds an attachment to the message. :param filename: filename of attachment :param content_type: file mimetype
Records all messages. Use in unit tests for example:: with mail.record_messages() as outbox: response =
Register Services that can be accessed by this DAL. Upon registration, the service is set
:param middleware: Middleware in order of execution
Load a configuration module and return a Config
Register resources with the ResourceManager.
Raises an exception if value for ``key`` is empty.
Setup the context. Should only be called by __enter__'ing the context.
Teardown a Resource or Middleware.
Hook to setup this service with a specific DataManager. Will recursively setup sub-services.
The group index with respect to wavelength. Args: wavelength (float, list, None): The wavelength(s) the
The group velocity dispersion (GVD) with respect to wavelength. Args: wavelength (float, list, None): The
Helpful function to evaluate Cauchy equations. Args: wavelength (float, list, None): The wavelength(s) the Cauchy
Main function
Login on backend with username and password :return: None
Dump the data to a JSON formatted file :param data: data to be dumped :param
Get a specific resource list If name is not None, it may be a request
Get a specific resource by name
Delete a specific resource by name
Create or update a specific resource :param resource_name: backend resource endpoint (eg. host, user, ...)
Returns the response from the requested endpoint with the requested method :param method: str. one
Decodes and returns the response as JSON (dict) or raise BackendException :param response: requests.response object
Set token in authentification for next requests :param token: str. token to set in auth.
Log into the backend and get the token generate parameter may have following values: -
Connect to alignak backend and retrieve all available child endpoints of root If connection is
Get all items in the specified endpoint of alignak backend If an error occurs, a
Method to update an item The headers must include an If-Match containing the object _etag.
Method to delete an item or all items headers['If-Match'] must contain the _etag identifier of
Returns True if path1 and path2 refer to the same file.
Given a path, return a pair containing a new REPARSE_DATA_BUFFER and the length of the
Create a junction at link_name pointing to source.
Return information for the volume containing the given path. This is going to be a
Sets command name and formatting for subsequent calls to logger
Suppress default exit behavior
Recognizes and claims MuTect VCFs form the set of all input VCFs. Each defined caller
Returns a standardized column header. MuTect sample headers include the name of input alignment, which
Build a file path from *paths* and return the contents.
Recognizes and claims VarScan VCFs form the set of all input VCFs. Each defined caller
Extract (float) value of dependent tag or None if absent.
Derive mean and stdev. Adapted from online variance algorithm from Knuth, The Art of Computer
Allows each caller to claim incoming files as they are recognized. Args: unclaimed_file_readers: Usually, all
Generates parsed VcfRecord objects. Typically called in a for loop to process each vcf record
Similar to follow, but also looks up if inode of file is changed e.g. if
Split data into lines where lines are separated by LINE_TERMINATORS. :param data: Any chunk of
Read given number of bytes from file. :param read_size: Number of bytes to read. -1
Return line terminator data begins with or None.
Return line terminator data ends with or None.
Seek next line relative to the current file position. :return: Position of the line or
Seek previous line relative to the current file position. :return: Position of the line or
Return the last lines of the file.
Return the top lines of the file.
Iterator generator that returns lines as data is added to the file. None will be
Recognizes and claims Strelka VCFs form the set of all input VCFs. Each defined caller
Generates parsed VcfRecord objects. Typically called in a for loop to process each vcf record
Alternative constructor that parses VcfRecord from VCF string. Aspire to parse/represent the data such that
Creates a sample dict of tag-value dicts for a single variant record. Args: sample_names: list
Returns set of format tags.
Adds new info field (flag or key=value pair). Args: field: String flag (e.g. "SOMATIC") or
Updates info attribute from info dict.
Returns string representation of format field.
Returns string representation of sample-format values. Raises: KeyError: if requested sample is not defined.
Returns tab-delimited, newline terminated string of VcfRecord.
Appends a new format tag-value for all samples. Args: tag_name: string tag name; must not
Replaces null or blank filter or adds filter to existing list.
Returns the categories available to the user. Specify `products` if you want to restrict to
Produces an appropriate _ProductsForm subclass for the given render type.
Creates a StaffProductsForm that restricts the available products to those that are available to a
Adds an error to the given product's field
Prepares initial data for an instance of this form. product_quantities is a sequence of (product,quantity)
Yields a sequence of (product, quantity) tuples from the cleaned form data.
Decorator that stores the result of the stored function in the user's results cache until
Creates a form for specifying fields from a model to display.
Aggregates the items that this user has purchased. Arguments: cart_status (int or Iterable(int)): etc category
Returns the items that this user has purchased or has pending.
Aggregates the items that this user has purchased. Arguments: category (Optional[models.inventory.Category]): the category of items
Sends an e-mail to the given address. to: The address kind: the ID for an
Start processing an OSM changeset stream and yield one (action, primitive) tuple at a time
Start processing an OSM diff stream and yield one changeset at a time to the
Parse a file-like containing OSM XML into memory and return an object with the nodes,
Parses the global OSM Notes feed and yields as much Note information as possible.
Returns true if the condition passes the filter
Returns the number of items covered by this flag condition the user can add to
Returns True if this flag condition is met, otherwise returns False. It determines if the
returns 0 if the date range is violated, otherwise, it will return the quantity remaining
Returns all of the items from queryset where the user has a product from a
Returns all of the items from queryset where the user has a product invoking that
Returns all of the items from queryset where the date falls into any specified range,
Returns all of the items from queryset which are enabled by a user being a
Returns all of the items from conditions which are enabled by a user being member
Decorator that makes the wrapped function raise ValidationError if we're doing something that could modify
Returns the user's current cart, or creates a new cart if there isn't one ready
Updates the cart's time last updated value, which is used to determine whether the cart
Performs operations that occur occur at the end of a batch of product changes/voucher applications
Extends the reservation on this cart by the given timedelta. This can only be done
Sets the quantities on each of the products on each of the products specified. Raises
Applies the voucher with the given code to this cart.
Determines whether the status of the current cart is valid; this is normally called before
This attempts to fix the easy errors raised by ValidationError. This includes removing items from
Calculates all of the discounts available for this product.
Applies the best discounts on the given product, from the given discounts.
Decorator that converts a report view function into something that displays a Report. Arguments: title
Returns the data rows for the table.
Creates an instance of self.form_type using request.GET
Wraps the reports in a _ReportTemplateWrapper for the given content_type -- this allows data to
Renders the reports based on data.content_type's value. Arguments: data (ReportViewRequestData): The report data. data.content_type is
Lists all of the reports currently available.
Summarises the items sold and discounts granted for a given set of products, or products
Summarises paid items and payments.
Shows the history of payments into the system
Shows all of the credit notes that have been generated.
Summarises the inventory status of the given items, grouping by invoice status.
Summarises the usage of a given discount.
Shows each product line item from invoices, including their date and purchashing customer.
Shows the number of paid invoices containing given products or categories per day.
Shows all of the credit notes in the system.
Shows all of the invoices in the system.
Returns a list of all manifested attendees if no attendee is specified, else displays the
Returns a list of all attendees.
Lists attendees for a given product/category selection along with profile data.
Shows registration status for speakers with a given proposal kind.
Produces the registration manifest for people with the given product type.
Adds the categories that the user does not currently have.
Calculates the sum of unclaimed credit from this user's credit notes. Returns: Decimal: the sum
Returns the number of items purchased for this user (sum of quantities). The user will
If the current user is unregistered, returns True if there are no products in the
Usage: {% include_if_exists "head.html" %} This will fail silently if the template doesn't exist. If
Goes through the registration process in order, making sure user sees all valid categories. The
View for editing an attendee's profile The user must be logged in to edit their
Returns a profile form instance, and a boolean which is true if the form was
Form for selecting products from an individual product category. Arguments: category_id (castable to int): The
A view *just* for entering a voucher form.
Handles a products list form in the given request. Returns the form instance, the discounts
Handles a voucher form in the given request. Returns the voucher form instance, and whether
Runs the checkout process for the current cart. If the query string contains ``fix_errors=true``, Registrasion
Redirects to an invoice for the attendee that matches the given access code, if any.
Displays an invoice. This view is not authenticated, but it will only allow access to
Allows staff to make manual payments or refunds on an invoice. This form requires a
Marks an invoice as refunded and requests a credit note for the full amount paid
Displays a credit note. If ``request`` is a ``POST`` request, forms for applying or refunding
Allows staff to amend a user's current registration cart, and etc etc.
Allows staff to extend the reservation on a given user's cart.
Allows staff to send emails to users based on their invoice status.
Renders a single user's badge (SVG).
Either displays a form containing a list of users with badges to render, or returns
Renders a single user's badge.
Returns all discounts available to this user for the given categories and products. The discounts
Annotates the queryset with a usage count for that discount claus by the given user.
Returns a list of all of the products that are available per flag conditions from
Generates a credit note of the specified value and pays it against the given invoice.
Applies the total value of this credit note to the specified invoice. If this credit
Generates an invoice with a cancellation fee, and applies credit to the invoice. percentage (Decimal):
Generates an access code for users' payments as well as their fulfilment code for check-in.
Produces a callable so that functions can be lazily evaluated in templates. Arguments: function (callable):
Returns the named object. Arguments: name (str): A string of form `package.subpackage.etc.module.property`. This function will
Returns an invoice object for a given cart at its current revision. If such an
Generates an invoice for arbitrary items, not held in a user's cart. Arguments: user (User):
Generates an invoice for the given cart.
Applies the user's credit notes to the given invoice on creation.
Returns true if the accessing user is allowed to view this invoice, or if the
Refreshes the underlying invoice and cart objects.
Passes cleanly if we're allowed to pay, otherwise raise a ValidationError.
Updates the status of this invoice based upon the total payments.
Marks the invoice as paid, and updates the attached cart if necessary.
Marks the invoice as refunded, and updates the attached cart if necessary.
Marks the invoice as refunded, and updates the attached cart if necessary.
Returns true if there is no cart, or if the revision of this invoice matches
Voids this invoice if the attached cart is no longer valid because the cart revision
Voids the invoice if it is valid to do so.
Refunds the invoice by generating a CreditNote for the value of all of the payments
Sends out an e-mail notifying the user about something to do with that invoice.
Sends out all of the necessary notifications that the status of the invoice has changed
Update the object with new data.
Reduce dicts of dicts to dot separated keys.
Print annotation "key: value" pairs to standard output.
Print file fields to standard output.
Download a file. :param field: file field to download :type field: string :rtype: a file
Add arguments to the parser for collection in app.args. Args: parser: `argparse.ArgumentParser`. Parser. Arguments added
Return a list :obj:`GenProject` projects. :rtype: list of :obj:`GenProject` projects
Return a list of Data objects for given project. :param project: ObjectId or slug of
Query for Data object annotation.
Return a list of Processor objects. :param project_id: ObjectId of Genesis project :type project_id: string
Print processor input fields and types. :param processor_name: Processor object name :type processor_name: string
POST JSON data object to server
Create an object of resource: * data * project * processor * trigger * template
Upload files and data objects. :param project_id: ObjectId of Genesis project :type project_id: string :param
Upload a single file on the platform. File is uploaded in chunks of 1,024 bytes.
Download files of data objects. :param data_objects: Data object ids :type data_objects: list of UUID
Gets the subclasses of a class.
Add arguments to the parser for collection in app.args. Args: parser: `argparse.ArgumentParser`. Parser. Arguments added
Returns repository and project.
for each variant, yields evidence and associated phenotypes, both current and suggested
for each variant, yields evidence and merged phenotype from applying suggested changes to current
Search the cache for variants matching provided coordinates using the corresponding search mode. :param coordinate_query:
An interator to search the cache for variants matching the set of sorted coordinates and
Updates record and returns True if record is complete after update, else False.
Returns a unique list of seq
Connects to Github and Asana and authenticates via OAuth.
Given a list of values and names, accepts the index value or name.
Saves a issue data (tasks, etc.) to local data. Args: issue: `int`. Github issue number.
Returns issue data from local data. Args: issue: `int`. Github issue number. namespace: `str`. Namespace
Moves an issue_data from one namespace to another.
Returns task data from local data. Args: task: `int`. Asana task number.
Retrieves a task from asana.
Save data.
Applies a setting value to a key, if the value is not `None`. Returns without
Add arguments to the parser for collection in app.args. Args: parser: `argparse.ArgumentParser`. Parser. Arguments added
Decorator for retrying tasks with special cases.
Waits until queue is empty.
Creates a task
Returns formatting for the tasks section of asana.
Creates a missing task.
Applies task numbers to an issue.
Return a list of data types.
Query for Data object annotation.
Send string to module level log Args: logstr (str): string to print. priority (int): priority,
Required initialization call, wraps pyserial constructor.
Passthrough for pyserial Serial.write(). Args: output (str): Block to write to port
Optional polling loop control Args: max_waits (int): waits wait_sleep (int): ms per wait
Poll for finished block or first byte ACK. Args: context (str): internal serial call context.
Use the serial block definitions in V3 and V4 to create one field list.
Translate FieldType to portable SQL Type. Override if needful. Args: fld_type (int): :class:`~ekmmeters.FieldType` in serial
Return query portion below CREATE. Args: qry_str (str): String as built. Returns: string: Passed string
Reasonably portable SQL CREATE for defined fields. Returns: string: Portable as possible SQL Create for
Reasonably portable SQL INSERT for from combined read buffer. Args: def_buf (SerialBlock): Database only serial
Call overridden dbExec() with built insert statement. Args: def_buf (SerialBlock): Block of read buffer fields
Required override of dbExec() from MeterDB(), run query. Args: query_str (str): query to run
Sqlite callback accepting the cursor and the original row as a tuple. Simple return of
Sqlite callback accepting the cursor and the original row as a tuple. Simple return of
Simple since Time_Stamp query returned as JSON records. Args: timestamp (int): Epoch time in seconds.
Set context string for serial command. Private setter. Args: context_str (str): Command specific string.
Drop in pure python replacement for ekmcrc.c extension. Args: buf (bytes): String or byte array
Simple wrap to calc legacy PF value Args: pf: meter power factor reading Returns: int:
Serial call to set max demand period. Args: period (int): : as int. password (str):
Serial Call to set meter password. USE WITH CAUTION. Args: new_pwd (str): 8 digit numeric
Wrapper for struct.unpack with SerialBlock buffer definitionns. Args: data (str): Implicit cast bytes to str,
Move data from raw tuple into scaled and conveted values. Args: contents (tuple): Breakout of
Translate the passed serial block into string only JSON. Args: def_buf (SerialBlock): Any :class:`~ekmmeters.SerialBlock` object.
Internal read CRC wrapper. Args: raw_read (str): Bytes with implicit string cast from serial read
Break out a date from Omnimeter read. Note a corrupt date will raise an exception
Remove an observer from the meter update() chain. Args: observer (MeterObserver): Subclassed MeterObserver.
Initialize first tariff schedule :class:`~ekmmeters.SerialBlock`.
Initialize second(and last) tariff schedule :class:`~ekmmeters.SerialBlock`.
Return the requested tariff schedule :class:`~ekmmeters.SerialBlock` for meter. Args: period_group (int): A :class:`~ekmmeters.ReadSchedules` value. Returns:
Initialize holidays :class:`~ekmmeters.SerialBlock`
Initialize first month tariff :class:`~ekmmeters.SerialBlock` for meter
Initialize second (and last) month tarifff :class:`~ekmmeters.SerialBlock` for meter.
Get the months tariff SerialBlock for meter. Args: direction (int): A :class:`~ekmmeters.ReadMonths` value. Returns: SerialBlock:
Serial set time with day of week calculation. Args: yy (int): Last two digits of
Serial call to set CT ratio for attached inductive pickup. Args: new_ct (int): A :class:`~ekmmeters.CTRatio`
Assign one schedule tariff period to meter bufffer. Args: schedule (int): A :class:`~ekmmeters.Schedules` value or
Define a single season and assign a schedule Args: season (int): A :class:`~ekmmeters.Seasons` value or
Serial command to set seasons table. If no dictionary is passed, the meter object buffer
Set a singe holiday day and month in object buffer. There is no class style
Serial call to set holiday list. If a buffer dictionary is not supplied, the method
Serial call to set weekend and holiday :class:`~ekmmeters.Schedules`. Args: new_wknd (int): :class:`~ekmmeters.Schedules` value to assign.
Serial call to read schedule tariffs buffer Args: tableset (int): :class:`~ekmmeters.ReadSchedules` buffer to return. Returns:
Read a single schedule tariff from meter object buffer. Args: schedule (int): A :class:`~ekmmeters.Schedules` value
Serial call to read month tariffs block into meter object buffer. Args: months_type (int): A
Extract the tariff for a single month from the meter object buffer. Args: month (int):
Serial call to read holiday dates into meter object buffer. Returns: bool: True on completion.
Read a single holiday date from meter buffer. Args: setting_holiday (int): Holiday from 0-19 or
extract holiday and weekend :class:`~ekmmeters.Schedule` from meter object buffer. Returns: tuple: Holiday and weekend :class:`~ekmmeters.Schedule`
Recommended call to read all meter settings at once. Returns: bool: True if all subsequent
Internal method to set the command result string. Args: msg (str): Message built during command.
Password step of set commands This method is normally called within another serial command, so
Initialize :class:`~ekmmeters.SerialBlock` for V3 read.
Required request() override for v3 and standard method to read meter. Args: send_terminator (bool): Send
Strip reserved and CRC for m_req :class:`~ekmmeters.SerialBlock`.
Insert to :class:`~ekmmeters.MeterDB` subclass. Please note MeterDB subclassing is only for simplest-case. Args: meter_db (MeterDB):
Fire update method in all attached observers in order of attachment.
Return :class:`~ekmmeters.Field` content, scaled and formatted. Args: fld_name (str): A :class:`~ekmmeters.Field` value which is on
Initialize A read :class:`~ekmmeters.SerialBlock`.
Initialize B read :class:`~ekmmeters.SerialBlock`.
Initialize lookup table for string input of LCD fields
Combined A and B read for V4 meter. Args: send_terminator (bool): Send termination string at
Issue an A read on V4 meter. Returns: bool: True if CRC match at end
Issue a B read on V4 meter. Returns: bool: True if CRC match at end
Munge A and B reads into single serial block with only unique fields.
Write calculated fields for read buffer.
Single call wrapper for LCD set." Wraps :func:`~ekmmeters.V4Meter.setLcd` and associated init and add methods. Args:
Serial call to set relay. Args: seconds (int): Seconds to hold, ero is hold forever.
Send termination string to implicit current meter.
Serial call to set pulse input ratio on a line. Args: line_in (int): Member of
Serial call to zero resettable kWh registers. Args: password (str): Optional password. Returns: bool: True
Serial call to set LCD using meter object bufer. Used with :func:`~ekmmeters.V4Meter.addLcdItem`. Args: password (str):
Recursively iterate over all DictField sub-fields. :param fields: Field instance (e.g. input) :type fields: dict
Recursively iterate over all schema sub-fields. :param fields: Field instance (e.g. input) :type fields: dict
Random paragraphs.
Random text. If `length` is present the text will be exactly this chars long. Else
Add arguments to the parser for collection in app.args. Args: parser: `argparse.ArgumentParser`. Parser. Arguments added
Applies task numbers to an issue.
Creates a local map of github labels/milestones to asana tags.
Return output for the combined time and result summary statistics.
Color some text in the given ANSI color.
Write the text to the stream and flush immediately.
Return a summary of the results.
Parse some arguments using the parser.
Setup the environment for an example run.
Time to run.
Run in transform mode.
with describe(thing) as it: ... | v class TestThing(TestCase): ...
Transform a describe node into a ``TestCase``. ``node`` is the node object. ``describes`` is the
Transform the body of an ``ExampleGroup``. ``body`` is the body. ``group_var`` is the name bound
Transform an example node into a test method. Returns the unchanged node if it wasn't
Transform the body of an ``Example`` into the body of a method. Replaces instances of
Return an argument list node that takes only ``self``.
Register the path hook.
Transform the source code, then return the code object.
Apply the argument parser.
Load a spec from either a file path or a fully qualified name.
Load a spec from a given path, discovering specs if a directory is given.
Discover all of the specs recursively inside ``path``. Successively yields the (full) relative paths to
Construct a function that checks a directory for process configuration The function checks for additions
Construct a function that checks a directory for messages The function checks for new messages
Add a process. :param places: a Places instance :param name: string, the logical name of
Remove a process :params places: a Places instance :params name: string, the logical name of
Restart a process :params places: a Places instance :params name: string, the logical name of
Call results.func on the attributes of results :params result: dictionary-like object :returns: None
Return a service which monitors processes based on directory contents Construct and return a service
Return a service based on parsed command-line options :param opt: dict-like object. Relevant keys are
Adds or refreshes a particular node in the nodelist, attributing the current time with the
Detects connections that have held a reference for longer than its process_ttl without refreshing its
Removes all expired nodes from the nodelist. If a set of node_ids is passed in,
Removes a particular node from the nodelist. :param string node_id: optional, the process id of
Returns the time a particular node has been last refreshed. :param string node_id: optional, the
Returns all nodes in the hash with the time they were last refreshed as a
Update the session for this node. Specifically; lock on the reflist, then update the time
Increments the number of times this resource has been modified by all processes.
:returns: The total number of times increment_times_modified has been called for this resource by all
:returns: The total number of elements in the reference list. :rtype: int
This method should only be called while the reference is locked. Decrements the reference count
Returns a list of tokens interleaved with the delimiter.
check which processes need to be restarted :params path: a twisted.python.filepath.FilePath with configurations :params start:
Parse configuration :params opt: dict-like object with config and messages keys :returns: restarter, path
Make a service :params opt: dictionary-like object with 'freq', 'config' and 'messages' :returns: twisted.application.internet.TimerService that
Generate a basic error to include the current state. A parser can supply only a
Generate an error to indicate that infinite recursion was encountered. A parser can supply a
Generate a basic error to include the current state. A parser can supply only a
Generate an error to indicate that infinite recursion was encountered. A parser can supply a
Merge the failure message from another status into this one. Whichever status represents parsing that
Query to test if a value exists.
Query to get the value.
Produce a function that always returns a supplied value. Args: x: Any object. Returns: A
Convert a function taking multiple arguments into a function taking a single iterable argument. Args:
Convert a function taking a single iterable argument into a function taking multiple arguments. Args:
Run a process, return a deferred that fires when it is done :params args: Process
Make scheduler service :params opts: dict-like object. keys: frequency, args, timeout, grace
Consume reader and return Success only on complete consumption. This is a helper function for
Match a literal sequence. In the `TextParsers`` context, this matches the literal string provided. In
Optionally match a parser. An ``OptionalParser`` attempts to match ``parser``. If it succeeds, it returns
Match a parser one or more times repeatedly. This matches ``parser`` multiple times in a
Match a parser zero or more times repeatedly. This matches ``parser`` multiple times in a
Match a parser one or more times separated by another parser. This matches repeated sequences
Match a parser zero or more times separated by another parser. This matches repeated sequences
Check all processes
Make a service :params opt: dictionary-like object with 'freq', 'config' and 'messages' :returns: twisted.application.internet.TimerService that
Discard data and cancel all calls. Instance cannot be reused after closing.
Check the state of HTTP
Make a service :returns: an IService
Add a heart to a service collection Add a heart to a service.IServiceCollector if the
Wrap a service in a MultiService with a heart
Freeze and shrink the graph based on a checkpoint and the output node names.
Freeze and shrink the graph based on a session and the output node names.
Save a small version of the graph based on a session and the output node
Save a small version of the graph based on a checkpoint and the output node
Save the weights of the trainable variables, each one in a different file in output_path.
Save the weights of the trainable variables given a checkpoint, each one in a different
Return a TensorFlow saver from a checkpoint containing the metagraph.
Parse the tag, instantiate the class. :type parser: django.template.base.Parser :type token: django.template.base.Token
The default Django render() method for the tag. This method resolves the filter expressions, and
Render the tag, with all arguments resolved to their actual values.
Validate the syntax of the template tag.
Return the context data for the included template.
Wrap the context data in a :class:`~django.template.Context` object. :param parent_context: The context of the parent
Rendering of the tag. It either assigns the value as variable, or renders it.
Parse the "as var" syntax.
Rendering of the tag. It either assigns the value as variable, or renders it.
Return the context data for the inclusion tag. Returns ``{'value': self.get_value(parent_context, *tag_args, **tag_kwargs)}`` by default.
Create a TensorFlow Session from a Caffe model.
Freeze and shrink the graph based on a Caffe model, the input tensors and the
Save a small version of the graph based on a Caffe model, the input tensors
Save the weights of the trainable variables, each one in a different file in output_path.
Make a sequence into rows of num_columns columns. >>> tuple(make_rows(2, [1, 2, 3, 4, 5]))
Split a sequence into two sequences: the first is elements that return False for func(element)
Take a sequence and break it up into chunks of the specified size. The last
*Deprecated*: Use more_itertools.collapse instead.
Yield every other item from the iterable >>> ' '.join(every_other('abcdefg')) 'a c e g'
Given an iterable with items that may come in as sequential duplicates, remove those duplicates.
Get the next value from an iterable, but also return an iterable that will subsequently
Like takewhile, but takes a peekable iterable and doesn't consume the non-matching item. >>> items
Like pairwise, except returns n-tuples of adjacent items. s -> (s0,s1,...,sn), (s1,s2,...,s(n+1)), ...
Given an iterable, return a new iterable which yields triples of (pre, item, post), where
Given the total number of items, determine the number of items that can be added
Like grouper, but balance the rows to minimize fill per row. balanced_rows(3, 'ABCDEFG', 'x') -->
Given an object, always return an iterable. If the item is not already iterable, return
Call each callable in callables, suppressing any exceptions supplied. If no exception classes are supplied,
Yield duplicate items from any number of sorted iterables of items >>> items_a = [1,
Assert that for all items in the iterable, they're in order based on comp >>>
Given revision sets old and new, each containing a series of revisions of some set
Iterate over items in the dict, yielding the first one, but allowing it to be
Given a partition_dict result, if the partition missed, swap the before and after.
Given an ordered dictionary of items and a key in that dict, return an ordered
Run through the sequence until n queues are created and return them. If fewer are
Resets the iterator to the start. Any remaining values in the current iteration are discarded.
Parse the remainder of the token, to find a "as varname" statement. :param parser: The
Allow the template tag arguments to be like a normal Python function, with *args and
Decorator to register class tags :param library: The template tag library, typically instantiated as ``register
A descendant is a child many steps down.
Derived from code from pybitcointools (https://github.com/vbuterin/pybitcointools) by Vitalik Buterin
Derived from code from pybitcointools (https://github.com/vbuterin/pybitcointools) by Vitalik Buterin
:return: List of table names in the database. :rtype: list
Get sqlite_master table information as a list of dictionaries. :return: sqlite_master table information. :rtype: list
Yields each node of object graph in postorder.
Appy selector to obj and return matching nodes. If only one node is found, return
Accept a list of tokens. Returns matched nodes of self.obj.
Production for a full selector.
Find nodes in rhs which have parents in lhs.
Return nodes from rhs which have ancestors in lhs.
Find nodes in rhs having common parents in lhs.
Parse args and pass them to pclass_func_validator.
Apply each validator in validators to each node in obj. Return each node in obj
Sends ICMP echo requests to destination `dst` `count` times. Returns a deferred which fires when
Make an HTTP request and return the body
Expire any items in the cache older than `age` seconds
Set a key `k` to value `v`
Returns key contents, and modify time
Return True if key `k` exists
Given a record timestamp, verify the chain integrity. :param timestamp: UNIX time / POSIX time
Get the first (oldest) record available. Since the first record IS a known value in
Convert a string of JSON which represents a NIST randomness beacon value into a 'NistBeaconValue'
Convert a string of XML which represents a NIST Randomness Beacon value into a 'NistBeaconValue'
Returns a 'minified' version of the javascript content
Passes each parsed log line to `fn` This is a better idea than storing a
Returns a big list of all log lines since the last run
Create a token referencing the object id with extra data. Note random data is added
Validate secret link token. :param token: Token value. :param expected_data: A dictionary of key/values that
Load data in a token. :param token: Token to load. :param force: Load token data
Get cryptographic engine.
Create a token referencing the object id with extra data.
Load data in a token. :param token: Token to load. :param force: Load token data
Multiple algorithm-compatible token validation.
Create the secret link token.
Validate a secret link token (non-expiring + expiring).
Validate a secret link token (non-expiring + expiring).
32bit counter aggregator with wrapping
64bit counter aggregator with wrapping
Counter derivative
Method to calculate and format an average duration safely
Setup output processors
Sets up source objects from the given config
Callback that all event sources call when they have a new event or list of
Watchdog timer function. Recreates sources which have not generated events in 10*interval if they have
Converts the input format to a regular expression, as well as extracting fields Raises an
Parses a single line from the log file and returns a dictionary of it's contents.
Validate that date is in the future.
Validate that accept have not been set.
Validate that accept have not been set.
Validate message.
Verify token and save in session if it's valid.
Flask application initialization.
Return a basic meaningful name based on device type
Do not warn on external images.
Connect receivers to signals.
Receiver for request-accepted signal.
Receiver for request-accepted signal to send email notification.
Receiver for request-confirmed signal to send email notification.
Receiver for request-created signal to send email notification.
Receiver for request-rejected signal to send email notification.
Render a template and send as email.
Create a new secret link.
Validate a secret link token. Only queries the database if token is valid to determine
Load token data stored in token (ignores expiry date of tokens).
Get absolute for secret link (using https scheme). The endpoint is passed to ``url_for`` with
Revoken a secret link.
Create a new access request. :param recid: Record id (required). :param receiver: User object of
Get access request for a specific receiver.
Confirm that senders email is valid.
Accept request.
Reject request.
Create a secret link from request.
Given required properties from a NistBeaconValue, compute the SHA512Hash object. :param version: NistBeaconValue.version :param frequency:
Verify a given NIST message hash and signature for a beacon value. :param timestamp: The
Template filter to check if a record is embargoed.
Create an access request.
Confirm email address.
Creates a generic endpoint connection that doesn't finish
Get reverse direction of ordering.
Get direction (ascending/descending) of ordering.
Get column which is being order by.
Get query with correct ordering.
Open the file referenced in this object, and scrape the version. :return: The version as
Set the version for this given file. :param new_version: The new version string to set.
Load test data fixture.
Configure SSH client options
Starts the timer for this source
Called for every timer tick. Calls self.get which can be a deferred and passes that
Creates an Event object from the Source configuration
Creates an Event object from the Source configuration
List pending access requests and shared links.
Accept/reject access request.
Create a TCP connection to Riemann with automatic reconnection
Stop this client.
Clock tick called every self.inter
Remove all or self.queueDepth events from the queue
Receives a list of events and transmits them to Riemann Arguments: events -- list of
Create a UDP connection to Riemann
Sets up HTTP connector and starts queue timer
Clock tick called every self.inter
Adapts an Event object to a Riemann protobuf event Event
Encode a list of Tensor events with protobuf
Decode a protobuf message into a list of Tensor events
Send a Tensor Event to Riemann
Generate preview for URL.
Retreive preview results for ID.
If the client application has a refresh token, it can use it to send a
Send message dicts through r_q, and throw explicit errors for pickle problems
Return a list of keys that can't be pickled. Return [] if there are no
Loop through messages and execute tasks
Return True if it's time to log
Build a log message and reset the stats
If not in a hot_loop, call supervise() to start the tasks
Respawn workers / tasks upon crash
Return synchronous version of Monoprice interface :param port_url: serial port, i.e. '/dev/ttyUSB0' :return: synchronous implementation
Return asynchronous version of Monoprice interface :param port_url: serial port, i.e. '/dev/ttyUSB0' :return: asynchronous implementation
Comptaibility layer for old :class:`SASLInterface` implementations. Accepts the follwing set of :class:`SASLState` or strings and
Initiate the SASL handshake and advertise the use of the given `mechanism`. If `payload` is
Send a response to the previously received challenge, with the given `payload`. The payload is
Abort an initiated SASL authentication process. The expected result state is ``failure``.
Perform the stringprep mapping step of SASLprep. Operates in-place on a list of unicode characters
Implement the ``trace`` profile specified in :rfc:`4505`.
Calculate the byte wise exclusive of of two :class:`bytes` objects of the same length.
Template tag that renders the footer information based on the authenticated user's permissions.
Builds the parameters needed to present the user with a datatrans payment form. :param amount:
Builds the parameters needed to present the user with a datatrans form to register a
Charges money using datatrans, given a previously registered credit card alias. :param amount: The amount
Both alias registration and payments are received here. We can differentiate them by looking at
Return short application version. For example: `1.0.0`.
Return full version nr, inc. rc, beta etc tags. For example: `2.0.0a1` :rtype: str
Refunds (partially or completely) a previously authorized and settled payment. :param amount: The amount and
Construct widget.
Perform post-construction operations.
Add keyboard shortcuts to navigate the filesystem.
Handle activation of item in listing.
Handle selection of item in listing.
Handle selection of path segment.
Return list of valid *path* segments.
Set current location to *path*. *path* must be the same as root or under the
Set current location to *path*. *path* must be the same as root or under the
Finalize options to be used.
Run build.
Run clean.
Return appropriate :py:class:`Item` instance for *path*. If *path* is null then return Computer root.
Add *item* as child of this item.
Fetch and return new children. Will only fetch children whilst canFetchMore is True. .. note::
Reload children.
Fetch and return new child items.
Fetch and return new child items.
Fetch and return new child items.
Return number of children *parent* index has.
Return index for *row* and *column* under *parent*.
Return index of item with *path*.
Return parent of *index*.
Return data for *index* according to *role*.
Return label for *section* according to *orientation* and *role*.
Return if *index* has children. Optimised to avoid loading children at this stage.
Return if more data available for *index*.
Fetch additional data under *index*.
Return ordering of *left* vs *right*.
Return index of item with *path*.
Return item at *index*.
Return icon for index.
Return if *index* has children.
Return if more data available for *index*.
Fetch additional data under *index*.
Return appropriate icon for *specification*. *specification* should be either: * An instance of :py:class:`riffle.model.Item` *
Return appropriate icon type for *item*.
Run an external command in a separate process and detach it from the current process.
Return the maximum file descriptor value.
Close a file descriptor if it is open.
Close open file descriptors.
Redirect a system stream to the provided target.
Applies a given HTML attributes to each field widget of a given form. Example: set_form_widgets_attrs(my_form,
Returns a certain model as defined in a string formatted `<app_name>.<model_name>`. Example: model = get_model_class_from_string('myapp.MyModel')
Tries to get a site URL from environment and settings in the following order: 1.
Returns a module from a given app by its name. :param str app_name: :param str
Imports modules from registered apps using given module name and returns them as a list.
Similar to built-in ``include`` template tag, but allowing template variables to be used in template
Return a list of all repository objects in the repofiles in the repo folder specified
Lazy load RepoFile objects on demand. :param repo_path: :return:
Given a URL, return a package :param url: :return:
Read the contents of the rpm itself :return:
Returns Gravatar image URL for a given string or UserModel. Example: {% load gravatar %}
Returns Gravatar image HTML tag for a given string or UserModel. Example: {% load gravatar
Parses an xml_path with the inherited xml parser :param xml_path: :return:
Load the repo database from the remote source, and then parse it. :return:
Register a task for a python dict :param task_def: dict defining gbdx task
Delete a task from the platforms regoistry :param task_name: name of the task to delete
Get input string port value :param port_name: :param default: :return: :rtype:
Set output string port value :param port_name: :param value: :return: :rtype:
:param success_or_fail: string that is 'success' or 'fail' :param message:
List the ports contents by file type or all. :param extensions: string extensions, single string
Checks if the path is correct and exists, must be abs-> a dir -> and
Checks if the url contains S3. Not an accurate validation of the url
Execute the command from the arguments. :return: None or Error
Register the anonymouse task or overwrite it. :return: success or fail message.
Method for creating a new Application Template. USAGE: cloud-harness create <dir_name> [--destination=<path>]
Method for running a custom Application Templates. NOTES: * The default name of the application
Write a config file to the source bundle location to identify the entry point. :param
Import the file and inspect for subclass of TaskTemplate. :param template_file: filename to import.
Return a valid absolute path. filename can be relative or absolute.
Upload a list of files to a users account location :param source_files: list of files
download all files from a users account location :param local_port_path: the local path where the
Get a list of keys for the accounts
Build a workflow definition from the cloud_harness task.
Execute the cloud_harness task.
Monitor the workflows events and display spinner while running. :param workflow: the workflow object
:param success_or_fail: string that is 'success' or 'fail' :param message:
Iterate through the task outputs. Two scenarios: - User is running locally, check that output
Takes the workflow value for each port and does the following: * If local filesystem
Find files for the local_path and return tuples of filename and keynames :param local_path: the
Move an active project to the archive.
The equivalent of 'mkdir -p' in shell.
List the contents of the archive directory.
Restore a project from the archive.
Create new storage service client. Arguments: environment(str): The service environment to be used for the
List the entities found directly under the given path. Args: path (str): The path of
Download a file from storage service to local disk. Existing files on the target path
Check if a certain path exists in the storage service. Args: path (str): The path
Get the parent entity of the entity pointed by the given path. Args: path (str):
Create a folder in the storage service pointed by the given path. Args: path (str):
Upload local file content to a storage service destination folder. Args: local_file(str) dest_path(str): absolute Storage
Delete an entity from the storage service using its path. Args: path(str): The path of
Validate a string as a valid storage path
Check cloud-harness code is valid. task schema validation is left to the API endpoint. :param
This function computes a graph of nearest-neighbors for each sample point in 'data' and returns
For each sample point of the data-set 'data', estimate a local density in feature space
The i-th sample point of the data-set 'data' is selected by density sampling with a
Creates a new cross-service client.
Create a new storage service REST client. Arguments: environment: The service environment to be used
Remove empty (None) valued keywords and self from function parameters
Get generic entity by UUID. Args: entity_id (str): The UUID of the requested entity. Returns:
Retrieve entity by query param which can be either uuid/path/metadata. Args: uuid (str): The UUID
Set metadata for an entity. Args: entity_type (str): Type of the entity. Admitted values: ['project',
Get metadata of an entity. Args: entity_type (str): Type of the entity. Admitted values: ['project',
Update the metadata of an entity. Existing non-modified metadata will not be affected. Args: entity_type
Delete the selected metadata entries of an entity. Only deletes selected metadata keys, for a
List all the projects the user have access to. This function does not retrieve all
Get information on a given project Args: project_id (str): The UUID of the requested project.
Create a new project. Args: collab_id (int): The id of the collab the project should
Delete a project. It will recursively delete all the content. Args: project (str): The UUID
Create a new folder. Args: name (srt): The name of the folder. parent (str): The
Get information on a given folder. Args: folder (str): The UUID of the requested folder.
List files and folders (not recursively) contained in the folder. This function does not retrieve
Delete a folder. It will recursively delete all the content. Args: folder_id (str): The UUID
Upload a file content. The file entity must already exist. If an ETag is provided
Copy file content from source file to target file. Args: file_id (str): The UUID of
Download file content. Args: file_id (str): The UUID of the file whose content is requested
Get a signed unauthenticated URL. It can be used to download the file content without
Delete a file. Args: file_id (str): The UUID of the file to delete. Returns: None
pymongo expects a dict
Sets the service name and version the request should target Args: service (str): The name
Adds headers to the request Args: headers (dict): The headers to add the request headers
Adds parameters to the request params Args: params (dict): The parameters to add to the
Defines if the an exception should be thrown after the request is sent Args: exception_class
Run the command, piping stderr to stdout. Sends output to stdout. :param cmd: The list
Extract the source bundle :param bundle_path: path to the aource bundle *.tar.gz :param source_path: path
response is json or straight text. :param data: :return:
Return a sequence containing the fields to be displayed on the changelist.
Spawns a tree of jobs to avoid overloading the number of jobs spawned by a
Runs GenotypeGVCFs on one or more gVCFs generated by HaplotypeCaller. :param JobFunctionWrappingJob job: passed automatically
Uses Oncotator to add cancer relevant variant annotations to a VCF file. Oncotator can accept
Sort here works by sorting by timestamp by default
Returns just the timestamp portion of the datapoints as a list. The timestamps are in
Writes the data to the given file:: DatapointArray([{"t": unix timestamp, "d": data}]).writeJSON("myfile.json") The data can
Adds the data from a JSON file. The file is expected to be in datapoint
Adds the data from a ConnectorDB export. If it is a stream export, then the
Shifts all timestamps in the datapoint array by the given number of seconds. It is
Gets the sum of the data portions of all datapoints within
Start the event loop to collect data from the serial device.
Create a new user.
Safely quotes an IRI in a way that is resilient to unicode and incorrect arguments
Parse Visual Novel search pages. :param soup: The BS4 class object :return: A list of
Parse Releases search pages. :param soup: The BS4 class object :return: A list of dictionaries
Parse a page of producer or staff results :param soup: The BS4 class object :return:
Parse a page of character results. :param soup: The BS4 class object :return: Returns a
Parse a page of tag or trait results. Same format. :param soup: BS4 Class Object
Parse a page of user results :param soup: Bs4 Class object :return: A list of
Creates a tarball from a group of files :param str tar_name: Name of tarball :param
Applies a function to a set of files and an output directory. :param str output_dir:
Job version of move_files for one file :param JobFunctionWrappingJob job: passed automatically by Toil :param
Combine the contents of separate tarballs into one. Subdirs within the tarball will be named
Makes a Spark Submit style job submission line. :param masterIP: The Spark leader IP address.
Invokes the Conductor container to copy files between S3 and HDFS and vice versa. Find
Invokes the ADAM container. Find ADAM at https://github.com/bigdatagenomics/adam. :param toil.Job.job job: The Toil Job calling
Augment a list of "docker run" arguments with those needed to map the notional Spark
Refresh reloads data from the server. It raises an error if it fails to get
Attempts to set the given properties of the object. An example of this is setting
Calls MuTect to perform variant analysis :param JobFunctionWrappingJob job: passed automatically by Toil :param str
Calls Pindel to compute indels / deletions :param JobFunctionWrappingJob job: Passed automatically by Toil :param
Creates the device. Attempts to create private devices by default, but if public is set
Returns the list of streams that belong to the device
Exports the device to the given directory. The directory can't exist. You can later import
Imports a stream from the given directory. You export the Stream by using stream.export()
Search vndb.org for a term and return matching results from type. :param stype: type to
If term is an ID will return that specific ID. If it's a string, it
This is our parsing dispatcher :param stype: Search type category :param soup: The beautifulsoup object
Adds the given stream to the query construction. Additionally, you can choose the interpolator to
invalidates the device's current api key, and generates a new one. Resets current auth to
returns a dictionary of information about the database, including the database version, the transforms and
Returns the list of users in the database
Imports version 1 of ConnectorDB export. These exports can be generated by running user.export(dir), possibly
Use BWA to create reference index files :param JobFunctionWrappingJob job: passed automatically by Toil :param
Returns the ConnectorDB object that the logger uses. Raises an error if Logger isn't able
Adds the given stream to the logger. Requires an active connection to the ConnectorDB database.
This function adds the given stream to the logger, but does not check with a
Insert the datapoint into the logger for the given stream name. The logger caches the
Inserts data into the cache, if the data is a dict of the form {streamname:
Attempt to sync with the ConnectorDB server
Start the logger background synchronization service. This allows you to not need to worry about
Stops the background synchronization thread
The data property allows the user to save settings/data in the database, so that there
Build a file path from *paths* and return the contents.
Downloads URL, can pass in file://, http://, s3://, or ftp://, gnos://cghub/analysisID, or gnos:///analysisID If downloading
Job version of `download_url`
Uploads a file to s3 via S3AM S3AM binary must be on the PATH to
Job version of s3am_upload
Run s3am with 3 retries :param toil.job.Job job: Toil job that is calling this function
Output the names to the given file
Output the parent-child relations to the given file
Function taken from MC3 Pipeline
>>> list(partitions([], 10)) [] >>> list(partitions([1,2,3,4,5], 1)) [[1], [2], [3], [4], [5]] >>> list(partitions([1,2,3,4,5], 2))
For use with argparse's action argument. Allows setting a range for nargs. Example: nargs='+', action=required_length(2,
Returns a string that represents the container ID of the current Docker container. If this
Performs alignment of fastqs to bam via STAR --limitBAMsortRAM step added to deal with memory
Runs BWA-Kit to align single or paired-end fastq files or realign SAM/BAM files. :param JobFunctionWrappingJob
query_maker takes the optional arguments and constructs a json query for a stream's datapoints using
Creates a stream given an optional JSON schema encoded as a python dict. You can
given an array of datapoints, inserts them to the stream. This is different from insert(),
insert inserts one datapoint with the given data, and appends it to the end of
Subscribes to the stream, running the callback function each time datapoints are inserted into the
Unsubscribes from a previously subscribed stream. Note that the same values of transform and downlink
Exports the stream to the given directory. The directory can't exist. You can later import
sets the stream's schema. An empty schema is "{}". The schemas allow you to set
returns the device which owns the given stream
Iterates over the labels of terms in the ontology :param str ontology: The name of
Gets the metadata for a given ontology :param str ontology: The name of the ontology
Iterates over the parent-child relationships in an ontolog :param str ontology: The name of the
Prepares and runs the pipeline. Note this method must be invoked both from inside a
Populates an ArgumentParser object with arguments where each argument is a key from the given
Returns the config file contents as a string. The config file is generated and then
Returns the path of the mount point of the current container. If this method is
Add an argument to the given arg_parser with the given name. :param argparse.ArgumentParser arg_parser: :param
Creates and returns an ArgumentParser object prepopulated with 'no clean', 'cores' and 'restart' arguments.
Creates and returns a list that represents a command for running the pipeline.
setauth sets the authentication header for use in the session. It is for use when
Handles HTTP error codes for the given request Raises: AuthenticationError on the appropriate 4** errors
Attempts to ping the server using current credentials, and responds with the path of the
Run the given query on the connection (POST request to /query)
Send a POST CRUD API request to the given path using the given data which
Read the result at the given path (GET) from the CRUD API, using the optional
Send an update request to the given path of the CRUD API, with the given
Send a delete request to the given path of the CRUD API. This deletes the
Subscribe to the given stream with the callback
Creates the given user - using the passed in email and password. You can also
Returns the list of devices that belong to the user
Returns the list of streams that belong to the user. The list can optionally be
Exports the ConnectorDB user into the given directory. The resulting export can be imported by
Imports a device from the given directory. You export the device by using device.export() There
Adapter trimming for RNA-seq data :param JobFunctionWrappingJob job: passed automatically by Toil :param str r1_id:
Use SAMtools to create reference index file :param JobFunctionWrappingJob job: passed automatically by Toil :param
Runs SAMtools index to create a BAM index file :param JobFunctionWrappingJob job: passed automatically by
Marks reads as PCR duplicates using Sambamba :param JobFunctionWrappingJob job: passed automatically by Toil :param
Marks reads as PCR duplicates using SAMBLASTER :param JobFunctionWrappingJob job: passed automatically by Toil :param
Runs Picard MarkDuplicates on a BAM file. Requires that the BAM file be coordinate sorted.
Sorts BAM file using Picard SortSam :param JobFunctionWrappingJob job: passed automatically by Toil :param str
GATK Preprocessing Pipeline 0: Mark duplicates 1: Create INDEL realignment intervals 2: Realign INDELs 3:
Creates recalibration table for Base Quality Score Recalibration :param JobFunctionWrappingJob job: passed automatically by Toil
RNA quantification via Kallisto :param JobFunctionWrappingJob job: passed automatically by Toil :param str r1_id: FileStoreID
RNA quantification with RSEM :param JobFunctionWrappingJob job: Passed automatically by Toil :param str bam_id: FileStoreID
Parses RSEMs output to produce the separate .tab files (TPM, FPKM, counts) for both gene
Set/clear boolean field value for model object
Main fit method for SAR. Expects the dataframes to have row_id, col_id columns which are
Prepare test set for C++ SAR prediction code. Find all items the test users have
Recommend top K items for all users which are in the test set. Args: test:
setauth can be used during runtime to make sure that authentication is reset. it can
Send the given command thru the websocket
Given a stream, a callback and an optional transform, sets up the subscription
Unsubscribe from the given stream (with the optional transform)
Attempt to connect to the websocket - and returns either True or False depending on
This is called when a connection is lost - it attempts to reconnect to the
Send subscribe command for all existing subscriptions. This allows to resume a connection that was
Called when the websocket is opened
Called when the websocket is closed
Called when there is an error in the websocket
This function is called whenever there is a message received from the server
The server periodically sends us websocket ping messages to keep the connection alive. To ensure
Each time the server sends a ping message, we record the timestamp. If we haven't
Isolates a particular variant type from a VCF file using GATK SelectVariants :param JobFunctionWrappingJob job:
Filters VCF file using GATK VariantFiltration. Fixes extra pair of quotation marks in VCF header
Runs either SNP or INDEL variant quality score recalibration using GATK VariantRecalibrator. Because the VQSR
Applies variant quality score recalibration to VCF file using GATK ApplyRecalibration :param JobFunctionWrappingJob job: passed
Merges VCF files using GATK CombineVariants :param JobFunctionWrappingJob job: Toil Job instance :param dict vcfs:
Perform a quick check on a BAM via `samtools quickcheck`. This will detect obvious BAM
Given a dictionary mapping which looks like the following, import the objects based on the
Helper to write the JSON configuration to a file
Gets the configuration for this project from the default JSON file, or writes one if
Gets the metadata for a given ontology :param str ontology: The name of the ontology
Gets the data for a given term :param str ontology: The name of the ontology
Searches the OLS with the given term :param str name: :param list[str] query_fields: Fields to
Suggest terms from an optional list of ontologies :param str name: :param list[str] ontology: :rtype:
Iterates over all terms, lazily with paging :param str url: The url to query :param
Iterates over all terms, lazily with paging :param str ontology: The name of the ontology
Iterates over the descendants of a given term :param str ontology: The name of the
Iterates over the labels for the descendants of a given term :param str ontology: The
Iterates over the labels of terms in the ontology. Automatically wraps the pager returned by
Iterates over parent-child relations :param str ontology: The name of the ontology :param int size:
Run Fastqc on the input reads :param JobFunctionWrappingJob job: passed automatically by Toil :param str
Adds the given stream to the query construction. The function supports both stream names and
This needs some tidying up. To avoid circular imports we import everything here but it
:param numWorkers: The number of worker nodes to have in the cluster. \ Must be
Start spark and hdfs master containers :param job: The underlying job.
Start spark and hdfs worker containers :param job: The underlying job.
Launches the Hadoop datanode. :param job: The underlying job.
Stop spark and hdfs worker containers :param job: The underlying job.
Checks to see if Spark worker and HDFS datanode are still running.
Tokenizer. Generates tokens stream from text
This function is wrapper to normal parsers (tag_parser, block_parser, etc.). Returns mint tree.
Look up a zone ID for a zone string. Args: conn: boto.route53.Route53Connection zone: string eg.
Fetch all pieces of a Route 53 config from Amazon. Args: zone: string, hosted zone
Merge a set of fetched Route 53 config Etrees into a canonical form. Args: cfg_chunks:
Lexically sort the order of every ResourceRecord in a ResourceRecords element so we don't generate
Diff two XML configs and return an object with changes to be written. Args: old,
Validate a changeset is compatible with Amazon's API spec. Args: changeset: lxml.etree.Element (<ChangeResourceRecordSetsRequest>) Returns: [
Orders population members from lowest fitness to highest fitness Args: Members (list): list of PyGenetics
Population fitness == average member fitness score
Returns average cost function return value for all members
Returns median cost function return value for all members
Population parameter vals == average member parameter vals
Returns Member objects of population
Adds a paramber to the Population Args: name (str): name of the parameter min_val (int
Generates self.__pop_size Members with randomly initialized values for each parameter added with add_parameter(), evaluates their
Generates the next population from a previously evaluated generation Args: mut_rate (float): mutation rate for
Private, static method: mutates parameter Args: value (int or float): current value for Member's parameter
Private method: determines if any current population members have a fitness score better than the
Updates the given defaults with values from the config files and the environ. Does a
Return a config dictionary with normalized keys regardless of whether the keys were specified in
Returns a generator with all environmental vars with prefix PIP_
Return True if the callable throws the specified exception >>> throws_exception(lambda: int('3')) False >>> throws_exception(lambda:
The list from pypi is really a list of versions. We want a list of
Convert the result back into the input type.
Parses several HTML elements, returning a list of elements. The first item in the list
Parses a single HTML element; it is an error if there is more than one
Parse the html, returning a single element/document. This tries to minimally parse the chunk of
Parse a filename, URL, or file-like object into an HTML document tree. Note: this returns
Helper function to submit a form. Returns a file-like object, as from ``urllib.urlopen()``. This object
Convert all tags in an HTML tree to XHTML by moving them to the XHTML
Convert all tags in an XHTML tree to HTML by removing their XHTML namespace.
Return an HTML string representation of the document. Note: if include_meta_content_type is true this will
Open the HTML document in a web browser, saving it to a temporary file to
Get or set any <label> element associated with this element.
Removes this element from the tree, including its children and text. The tail text is
Remove the tag, but not its children or text. The children and text are merged
Find any links like ``<a rel="{rel}">...</a>``; returns a list of elements.
Get the first element in a document with the given id. If none is found,
Run the CSS expression on this element and its children, returning a list of the
Make all links in the document absolute, given the ``base_url`` for the document (the full
Find any ``<base href>`` tag in the document, and apply its values to all links
Yield (element, attribute, link, pos), where attribute may be None (indicating the link is in
Rewrite all the links in the document. For each link ``link_repl_func(link)`` will be called, and
Return a list of tuples of the field values for the form. This is suitable
Get/set the form's ``action`` attribute.
Get/set the value (which is the contents of this element)
Get/set the value of this select (the selected option). If this is a multi-select, this
All the possible values this select can have (the ``value`` attribute of all the ``<option>``
Get/set the value of this element, using the ``value`` attribute. Also, if this is a
Get/set the element this label points to. Return None if it can't be found.
given a class/instance return the full class path (eg, prefix.module.Classname) :param v: class or instance
iterate through the attributes of every logger's handler this is used to switch out stderr
return test counts that are set via pyt environment variables when pyt runs the test
Returns True if only a single class is being run or some tests within a
Returns True if only a module is being run
Validate request params.
Validate request id.
Ensure that the given path is decoded, NONE when no expected encoding works
Helper for various string-wrapped functions.
Return the python codec name corresponding to an encoding or None if the string doesn't
Attempts to detect at BOM at the start of the stream. If an encoding can
Selects the new remote addr from the given list of ips in X-Forwarded-For. By default
Substitutes symbols in CLDR number pattern.
Converts amount value from several types into Decimal.
Parse a string of HTML data into an Element tree using the BeautifulSoup parser. Returns
Parse a file into an ElemenTree using the BeautifulSoup parser. You can pass a different
Convert a BeautifulSoup tree to a list of Element trees. Returns a list instead of
Get the current exception info as `Traceback` object. Per default calling this method will reraise
String representation of the exception.
Render the traceback for the interactive console.
Like the plaintext attribute but returns a generator
Helper function that returns lines with extra information.
Render the sourcecode.
Pull the version part out of a string. :param egg_info: The string to parse. E.g.
Sort locations into "files" (archives) and "urls", and return a pair of lists (files,urls)
Function used to generate link sort key for link tuples. The greater the return value,
Bring the latest version (and wheels) to the front, but maintain the existing ordering as
Returns the locations found via self.index_urls Checks the url_name on the main (first in the
Find all available versions for project_name This checks index_urls, find_links and dependency_links All versions found
Try to find an InstallationCandidate for req Expects req, an InstallRequirement and upgrade, a boolean
Yields (page, page_url) from the given locations, skipping locations that have errors, and adding download/homepage
Returns elements of links in order, non-egg links first, egg links second, while eliminating duplicates
Return an InstallationCandidate or None
Get the Content-Type of the given url, using a HEAD request
Yields all links in the page
Returns True if this link can be verified after download, False if it cannot, and
Determines if this points to an actual artifact (e.g. a tarball) or if it points
Generate list of '(package,src_dir,build_dir,filenames)' tuples
Return filenames for package's data files in 'src_dir
Check namespace packages' __init__ for declare_namespace
Filter filenames for package's data files in 'src_dir
Parse a requirements file and yield InstallRequirement instances. :param filename: Path or url of requirements
Process a single requirements line; This can result in creating/yielding requirements, or updating the finder.
Joins a line ending in '\' with the previous line.
Strips and filters empty or commented lines.
Optionally exclude lines that match '--skip-requirements-regex'
Return compiled marker as a function accepting an environment dict.
Ensure statement only contains allowed nodes.
Flatten one level of attribute access.
coerce takes a value and attempts to convert it to a float, or int. If
A helper function that decorates a function to retain the current request context. This is
Binds the app context to the current context.
Pops the app context.
Creates a copy of this request context with the same request object. This can be
Can be overridden by a subclass to hook into the matching of the request.
Binds the request context to the current context.
Pops the request context and unbinds it by doing that. This will also trigger the
Figure out the name of a directory to back up the given dir to (adding
Returns true if all the paths have the same leading path name (i.e., everything is
Make a filename relative, where the filename path, and it is relative to rel_to >>>
Return True if given Distribution is installed in user site.
Is distribution an editable install?
Untar the file (with path `filename`) to the destination `location`. All files are written based
Registers a function that is called when the blueprint is registered on the application. This
Creates an instance of :meth:`~flask.blueprints.BlueprintSetupState` object that is later passed to the register callback functions.
Like :meth:`Flask.endpoint` but for a blueprint. This does not prefix the endpoint with the blueprint
Register a custom template filter, available application wide. Like :meth:`Flask.template_filter` but for a blueprint. :param
Register a custom template filter, available application wide. Like :meth:`Flask.add_template_filter` but for a blueprint. Works
Register a custom template global, available application wide. Like :meth:`Flask.template_global` but for a blueprint. ..
Register a custom template global, available application wide. Like :meth:`Flask.add_template_global` but for a blueprint. Works
Like :meth:`Flask.before_request` but for a blueprint. This function is only executed before each request that
Like :meth:`Flask.before_request`. Such a function is executed before each request, even if outside of a
Like :meth:`Flask.before_first_request`. Such a function is executed before the first request to the application.
Like :meth:`Flask.after_request` but for a blueprint. This function is only executed after each request that
Like :meth:`Flask.after_request` but for a blueprint. Such a function is executed after each request, even
Like :meth:`Flask.teardown_request` but for a blueprint. This function is only executed when tearing down requests
Like :meth:`Flask.teardown_request` but for a blueprint. Such a function is executed when tearing down each
Like :meth:`Flask.context_processor` but for a blueprint. This function is only executed for requests handled by
Like :meth:`Flask.context_processor` but for a blueprint. Such a function is executed each request, even if
Like :meth:`Flask.errorhandler` but for a blueprint. This handler is used for all requests, even if
Registers a function as URL value preprocessor for this blueprint. It's called before the view
Callback function for URL defaults for this blueprint. It's called with the endpoint and values
Same as :meth:`url_value_preprocessor` but application wide.
Same as :meth:`url_defaults` but application wide.
Registers an error handler that becomes active for this blueprint only. Please be aware that
Request contexts disappear when the response is started on the server. This is done for
Sometimes it is necessary to set additional headers in a view. Because views do not
Generates a URL to the given endpoint with the method provided. Variable arguments that are
Loads a macro (or variable) a template exports. This can be used to invoke a
Flashes a message to the next request. In order to remove the flashed message from
Pulls all flashed messages from the session and returns them. Further calls in the same
Sends the contents of a file to the client. This will use the most efficient
Safely join `directory` and `filename`. Example usage:: @app.route('/wiki/<path:filename>') def wiki_page(filename): filename = safe_join(app.config['WIKI_FOLDER'], filename) with
Send a file from a given directory with :func:`send_file`. This is a secure way to
Returns the path to a package or cwd if that cannot be found. This returns
Finds a package and returns the prefix (or None if the package is not installed)
The Jinja loader for this package bound object. .. versionadded:: 0.5
Opens a resource from the application's resource folder. To see how this works, consider the
Prints the completion code of the given shell
Helpful helper method that returns the cookie domain that should be used for the session
Return a directory to store cached wheels in for link. Because there are M wheels
Return (hash, length) for path using hashlib.new(algo)
Replace #!python with #!/path/to/python Return True if file was changed.
Return True if the extracted wheel in wheeldir should go into purelib.
Yield all the uninstallation paths for dist based on RECORD-without-.pyc Yield paths to all the
Raises errors or warns if called with an incompatible Wheel-Version. Pip should refuse to install
Build one wheel. :return: The filename of the built wheel, or None if the build
Build wheels. :param unpack: If True, replace the sdist we built from the with the
Yield names and strings used by `code` and its nested code objects
Decorator for Backend that ensures rates are fresh within last 5 mins
Return quotation between two currencies (origin, target)
Add paths for egg-info files for an external egg-base. The egg-info files are written to
Write the pip delete marker file into this directory.
Return True if we're running inside a virtualenv, False otherwise.
Returns the effective username of the current process.
Return a distutils install scheme
Parse the cache control headers returning a dictionary with values for the different directives.
Return a cached response if it exists in the cache, otherwise return False.
Algorithm for caching requests. This assumes a requests Response object.
Update zipimporter cache data for a given normalized path. Any sub-path entries are processed as
Load the Windows launcher (executable) suitable for launching a script. `type` should be either 'cli'
Return a pseudo-tempname base in the install directory. This code is intentionally naive; if a
Generate a legacy script wrapper and install it
There are a couple of template scripts in the package. This function loads one of
Make sure there's a site.py in the target dir, if needed
Write changed .pth file back to disk
Workaround Jython's sys.executable being a .sh (an invalid shebang line interpreter)
Make sure 'pythonw' is used for gui and and 'python' is used for console (regardless
Convert values to an appropriate type. dicts, lists and tuples are replaced by their converting
Add filters to a filterer from a list of names.
Configure a handler from a dictionary.
Add handlers to a logger from a list of names.
Perform configuration which is common to root and non-root loggers.
Loads a configuration from an environment variable pointing to a configuration file. This is basically
Updates the values in the config from a Python file. This function behaves as if
Updates the values from the given object. An object can be of one of the
Python 3 implementation of execfile.
Monkey-patch tempfile.tempdir with replacement, ensuring it exists
Run a distutils setup script, sandboxed in its directory
Always return a dumped (pickled) type and exc. If exc can't be pickled, wrap it
Check the revision options before checkout to compensate that tags and branches may need origin/
Prefixes stub URLs like 'user@hostname:user/repo.git' with 'ssh://'. That's required because although they use SSH they
Walks a traceback's frames and checks if any of the frames originated in the given
Get an item or attribute of an object but prefer the item.
Internal hook that can be overridden to hook a different generate method in. .. versionadded::
Finds all the templates the loader can find, compiles them and stores them in `target`.
Returns a list of templates for this environment. This requires that the loader supports the
Determine the default cache location This returns the ``PYTHON_EGG_CACHE`` environment variable, if set. Otherwise, on
Find eggs in zip files; possibly multiple nested eggs.
Yield distributions accessible on a sys.path directory
Declare that package 'packageName' is a namespace package
Yield non-empty/non-comment lines of a string or sequence
Get an mro for a type or classic class
Return an adapter factory for `ob` from `registry`
Ensure that the parent directory of `path` exists
Yield entry point objects from `group` matching `name` If `name` is None, yields all entry
Invoke `callback` for all distributions (including existing ones)
Is distribution `dist` acceptable for this environment? The distribution must match the platform and python
Find distribution best matching `req` and usable on `working_set` This calls the ``find(req)`` method of
Give an error message for problems extracting file(s)
Validate text as a PEP 426 environment marker; return an exception if invalid or False
Given a SyntaxError from a marker evaluation, normalize the error message: - Remove indications of
Evaluate a PEP 426 environment marker on CPython 2.4+. Return a boolean indicating the marker
Evaluate a PEP 426 environment marker using markerlib. Return a boolean indicating the marker result
Insert self.location in path before its nearest parent directory
Convert 'Foobar (1); baz' to ('Foobar ==1', 'baz') Split environment marker, add == prefix to
Calls the standard formatter, but will indent all of the log messages by our current
Return formatted currency value. >>> format_currency(1099.98, 'USD', locale='en_US') u'$1,099.98' >>> format_currency(1099.98, 'USD', locale='es_CO') u'US$\\xa01.099,98' >>>
Parse number format patterns
Return minimal quantum of a number, as defined by precision.
Return maximum precision of a decimal instance's fractional part. Precision is extracted from the fractional
Renders into a string a number following the defined pattern. Forced decimal quantization is active
Returns normalized scientific notation components of a value.
Patch functions in distutils.msvc9compiler to use the standalone compiler build for Python (Windows only). Fall
Python 2.6 compatability
Yield ``Requirement`` objects for each specification in `strs` `strs` must be a string, or a
Set up global resource manager (deliberately not state-saved)
Prepare the master working set and make the ``require()`` API available. This function has explicit
Protect against re-patching the distutils if reloaded Also ensures that no other distutils extension monkeypatched
Workaround issue #197 - Python 3 prior to 3.2.2 uses an environment-local encoding to save
Verify that extras_require mapping is valid
Verify that install_requires is a valid requirements list
Fetch an egg needed for building
Handle 'include()' for list/tuple attrs without a special handler
Roll n-sided dice and return each result and the total
Ensures that string prices are converted into Price objects.
Price field for attrs. See `help(attr.ib)` for full signature. Usage: >>> from pricing import fields
Validate JSON-RPC request. :param request: RPC request object :type request: dict
Get request method for service application.
Apply application method.
The name of the current module if the request was dispatched to an actual module.
The name of the current blueprint
Parses the incoming JSON request data and returns it. If parsing fails the :meth:`on_json_loading_failed` method
Since Flask 0.8 we're monkeypatching the files object in case a request is detected that
Factory to make an abstract dist object. Preconditions: Either an editable req with a source_dir,
Add install_req as a requirement to install. :param parent_req_name: The name of the requirement that
Call handler for all pending reqs. :param handler: Handle a single requirement. Should take a
Prepare process. Create temp directories, download and/or unpack files.
Check if req_to_install should be skipped. This will check if the req is installed, and
Prepare a single requirements files. :return: A list of addition InstallRequirements to also install.
Clean up files, remove builds.
Create the installation order. The installation order is topological - requirements are installed before the
Install everything in this set (after having downloaded and unpacked the packages)
Return sorted list of all package namespaces
Convert QuerySet objects to their list counter-parts
doclist should be ordered from oldest to newest, like:: >>> version1 = 'Hello World' >>>
Tokenize a document and add an annotation attribute to each token
Merge the annotations from tokens_old into tokens_new, when the tokens in the new document already
Copy annotations from the tokens listed in src to the tokens in dest
Combine adjacent tokens when there is no HTML between the tokens, and they share an
Merge tok into the last element of tokens (modifying the list of tokens in-place).
Serialize the list of tokens into a list of text chunks, calling markup_func around text
Do a diff of the old and new document. The documents are HTML *fragments* (str/UTF8
Does a diff on the tokens themselves, returning a list of text chunks (not tokens).
Given a list of tokens, return a generator of the chunks of text for the
doc is the already-handled document (as a list of text chunks); here we add <ins>ins_chunks</ins>
Adds the text chunks in del_chunks to the document doc (another list of text chunks)
Cleans up any DEL_START/DEL_END markers in the document, replacing them with <del></del>. To do this
Return (unbalanced_start, balanced, unbalanced_end), where each is a list of text and tag chunks. unbalanced_start
Returns (stuff_before_DEL_START, stuff_inside_DEL_START_END, stuff_after_DEL_END). Returns the first case found (there may be more DEL_STARTs in
pre_delete and post_delete implicitly point to a place in the document (where the two were
like locate_unbalanced_start, except handling end tags and possibly moving the point earlier in the document.
Parse the given HTML and returns token objects (words with attached tags). This parses only
Parses an HTML fragment, returning an lxml element. Note that the HTML will be wrapped
This 'cleans' the HTML, meaning that any page structure is removed (only the contents of
This function takes a word, such as 'test\n\n' and returns ('test','\n\n')
This function takes a list of chunks and produces a list of tokens.
Takes an lxml element el, and generates all the text chunks for that tag. Each
Splits some text into words. Includes trailing whitespace on each word when appropriate.
The text representation of the start tag for a tag.
The text representation of an end tag for a tag. Includes trailing whitespace when appropriate.
Given an html string, move any <ins> or <del> tags inside of any block-level elements,
Serialize a single lxml element as HTML. The serialized form includes the elements tail. If
fixup_ins_del_tags that works on an lxml document in-place
True if the element contains any block-level elements, like <p>, <td>, etc.
helper for _fixup_ins_del_tags; actually takes the <ins> etc tags and moves them inside any block-level
Removes an element, but merges its contents into its place, e.g., given <p>Hi <i>there!</i></p>, if
Yield '(op,arg)' pair for each operation in code object 'code
Extract the constant value of 'symbol' from 'code' If the name 'symbol' is bound to
A simplified URL to be used for caching the given query.
Turn any URLs into links. It will search for links identified by the given regular
Breaks any long words found in the body of the text (not attributes). Doesn't effect
IE conditional comments basically embed HTML that the parser doesn't normally see. We can't allow
Depending on the browser, stuff like ``e x p r e s s i o
Parse a whole document into a string.
Parses several HTML elements, returning a list of elements. The first item in the list
Parses a single HTML element; it is an error if there is more than one
Parse the html, returning a single element/document. This tries to minimally parse the chunk of
Parse a filename, URL, or file-like object into an HTML document tree. Note: this returns
Define the accept schema of an API (GET or POST). 'fields' is a dict of
Define the return schema of an API. 'return_values' is a dictionary mapping HTTP return code
Wrapper that calls @api_accepts and @api_returns in sequence. For example: @api({ 'accepts': { 'x': forms.IntegerField(min_value=0),
Return a decorator that ensures that the request passed to the view function/method has a
Get a TreeWalker class for various types of tree with built-in support treeType - the
Returns a list of header include paths (for lxml itself, libxml2 and libxslt) needed to
Export the svn repository at the url to the destination location
Return the maximum revision for all files under a given location
Wraps a method so that it performs a check in debug mode if the first
The name of the application. This is usually the import name with the difference that
Returns the value of the `PROPAGATE_EXCEPTIONS` configuration value in case it's set, otherwise a sensible
A :class:`logging.Logger` object for this application. The default configuration is to log to stderr if
Used to create the config attribute by the Flask constructor. The `instance_relative` parameter is passed
Tries to locate the instance path if it was not provided to the constructor of
Opens a resource from the application's instance folder (:attr:`instance_path`). Otherwise works like :meth:`open_resource`. Instance resources
Creates the Jinja2 environment based on :attr:`jinja_options` and :meth:`select_jinja_autoescape`. Since 0.7 this also adds the
Update the template context with some commonly used variables. This injects request, session, config and
Runs the application on a local development server. If the :attr:`debug` flag is set the
Saves the session if it needs updates. For the default implementation, check :meth:`open_session`. Instead of
Registers a module with this application. The keyword argument of this function are the same
Connects a URL rule. Works exactly like the :meth:`route` decorator. If a view_func is provided
A decorator to register a function as an endpoint. Example:: @app.endpoint('example.endpoint') def example(): return "example"
A decorator that is used to register a function give a given error code. Example::
A decorator that is used to register custom template filter. You can specify a name
Register a custom template filter. Works exactly like the :meth:`template_filter` decorator. :param name: the optional
A decorator that is used to register a custom template global function. You can specify
Register a custom template global function. Works exactly like the :meth:`template_global` decorator. .. versionadded:: 0.10
Handles an HTTP exception. By default this will invoke the registered error handlers and fall
Checks if an HTTP exception should be trapped or not. By default this will return
This method is called whenever an exception occurs that should be handled. A special case
Default exception handling that kicks in when an exception occurs that is not caught. In
Logs an exception. This is called by :meth:`handle_exception` if debugging is disabled and right before
Exceptions that are recording during routing are reraised with this method. During debug we are
Does the request dispatching. Matches the URL and returns the return value of the view
Dispatches the request and on top of that performs request pre and postprocessing as well
Called before each request and will ensure that it triggers the :attr:`before_first_request_funcs` and only exactly
This method is called to create the default `OPTIONS` response. This can be changed through
Converts the return value from a view function to a real response object that is
Creates a URL adapter for the given request. The URL adapter is created at a
Injects the URL defaults for the given endpoint directly into the values dictionary passed. This
Handle :class:`~werkzeug.routing.BuildError` on :meth:`url_for`.
Called before the actual request dispatching and will call every as :meth:`before_request` decorated function. If
Can be overridden in order to modify the response object before it's sent to the
Called after the actual request dispatching and will call every as :meth:`teardown_request` decorated function. This
Called when an application context is popped. This works pretty much the same as :meth:`do_teardown_request`
The actual WSGI application. This is not implemented in `__call__` so that middlewares can be
Yield unique values in iterable, preserving order.
Place the runtime requirements from pkg_info into metadata.
Convert PKG-INFO to a prototype Metadata 2.0 (PEP 426) dict. The description is included under
Compose the version predicates for requirement in PEP 345 fashion.
Convert .egg-info directory with PKG-INFO to the Metadata 1.3 aka old-draft Metadata 2.0 format.
break up a module path to its various parts (prefix, module, class, method) this uses
return modules that match module_name
the partial self.class_name will be used to find actual TestCase classes
return the actual test methods that matched self.method_name
check if name combined with test prefixes or postfixes is found anywhere in the list
Similar to _find_prefix_paths() but only returns the first match
Returns true if the passed in path is a test module path :param path: string,
Walk all the directories of basedir except hidden directories :param basedir: string, the directory to
given a basedir, yield all test modules paths recursively found in basedir that are test
given a filepath like /base/path/to/module.py this will convert it to path.to.module so it can be
Remove paths in ``self.paths`` with confirmation (unless ``auto_confirm`` is True).
Rollback the changes previously made by remove().
Remove temporary save dir: rollback will no longer be possible.
Inject default arguments for dump functions.
Inject default arguments for load functions.
Serialize ``obj`` to a JSON formatted ``str`` by using the application's configured encoder (:attr:`~flask.Flask.json_encoder`) if
Like :func:`dumps` but writes into a file object.
Unserialize a JSON object from a string ``s`` by using the application's configured decoder (:attr:`~flask.Flask.json_decoder`)
Like :func:`loads` but reads from a file object.
Works exactly like :func:`dumps` but is safe for use in ``<script>`` tags. It accepts the
Like :func:`htmlsafe_dumps` but writes into a file object.
Creates a :class:`~flask.Response` with the JSON representation of the given arguments with an `application/json` mimetype.
Implement this method in a subclass such that it returns a serializable object for ``o``,
Convert the characters &, <, >, ' and " in string s to HTML-safe sequences.
Sets multiple keys and values from a mapping. :param mapping: a mapping with the keys/values
Increments the value of a key by `delta`. If the key does not yet exist
Dumps an object into a string for redis. By default it serializes integers as regular
The reversal of :meth:`dump_object`. This might be callde with None.
Strip req postfix ( -dev, 0.2, etc )
This method generates a dictionary of the query string parameters contained in a given editable
Parses an editable requirement into: - a requirement name - an URL - extras -
Creates an InstallRequirement from a name, which might be a requirement, directory containing 'setup.py', filename,
Ensure that if a link can be found for this, that it is found. Note
Move self._temp_build_dir to self._ideal_build_dir/self.req.name For some requirements (e.g. a path to a directory), the name
Ensure that a source_dir is set. This will create a temporary build dir if the
Remove the source files from this requirement, if they are marked for deletion
Return a pkg_resources.Distribution built from self.egg_info_path
Extract metadata from filenames. Extracts the 4 metadataitems needed (name, version, pyversion, arch) from the
Test if the attribute given is an internal python attribute. For example this function returns
This is the same as accessing :attr:`stream` with the difference that if it finds cached
This reads the buffered incoming data from the client into one bytestring. By default this
This is automatically called right before the response is started and returns headers modified for
r"""Sometimes you get an URL by a user that just isn't a real URL because
r""" Converts any unicode based IRI to an acceptable ASCII URI. Werkzeug always uses utf-8
r""" Return full path to the user-specific cache dir for this application. "appname" is the
Return full path to the user-specific data dir for this application. "appname" is the name
Return full path to the user-specific log dir for this application. "appname" is the name
Return full path to the user-specific config dir for this application. "appname" is the name
Return a list of potential user-shared config dirs for this application. "appname" is the name
This iterates over all relevant Python files. It goes through all loaded files from modules,
Spawn a new Python interpreter with the same arguments as this one, but running the
Wrapper around six.text_type to convert None to empty string
Return an existing CA bundle path, or None
Parse a string or file-like object into a tree
Parse a HTML document into a well-formed tree stream - a filelike object or string
Parse a HTML fragment into a well-formed tree fragment container - name of the element
Generic RCDATA/RAWTEXT Parsing algorithm contentType - RCDATA or RAWTEXT
pass in a word string that you would like to see probable matches for.
this converts the readin lines from sys to useable format, returns list of token and
get all probable matches and then initialize t(f|e)
Iterate through all transmissions of english to foreign words. keep count of repeated occurences do
Bind and activate HTTP server.
Report startup info to stdout.
Creates an SSL key for development. This should be used instead of the ``'adhoc'`` key
Loads bytecode from a file or file like object.
Convert keyword args to a dictionary of stylesheet parameters. XSL stylesheet parameters must be XPath
Return a copy of paramsDict, updated with kwargsDict entries, wrapped as stylesheet arguments. kwargsDict entries
Extract embedded schematron schema from non-schematron host schema. This method will only be called by
Return the name of the version control backend if found at given location, e.g. vcs.get_backend_name('/path/to/vcs/checkout')
posix absolute paths start with os.path.sep, win32 ones ones start with drive (like c:\\folder)
Returns (url, revision), where both are strings
Clean up current location and download the url repository (and vcs infos) into location
Run a VCS subcommand This is simply a wrapper around call_subprocess that adds the VCS
Return implementation version.
Return a list of supported tags for each version specified in `versions`. :param versions: a
Return the real host for the given WSGI environment. This first checks the `X-Forwarded-Host` header,
Yield egg or source distribution objects based on basename
Find rel="homepage" and rel="download" links in `page`, yielding URLs
A function compatible with Python 2.3-3.3 that will encode auth from a URL suitable for
Read a local path, with special support for directories
Construct a (possibly null) ContentChecker from a URL
Evaluate a URL as a possible download, and maybe retrieve it
Return a list of supported tags for each version specified in `versions`. :param versions: a
Remove duplicate entries from sys.path along with making them absolute
Append ./build/lib.<platform> in case we're running in the build dir (especially for Guido :-)
Return a set containing all existing directory entries from sys.path
Add a new path to known_paths by combining sitedir and 'name' or execute sitedir if
Add 'sitedir' argument to sys.path if missing and handle .pth files in 'sitedir
Add site-packages (and possibly site-python) to sys.path
Check if user site directory is safe for inclusion The function tests for the command
Add a per user site-package to sys.path Each user has its own python directory with
The OS/2 EMX port has optional extension modules that do double duty as DLLs (and
Define new built-ins 'quit' and 'exit'. These are simply strings that display a hint on
Set 'copyright' and 'credits' in __builtin__
On Windows, some default encodings are not provided by Python, while they are always available
Set the string encoding used by the Unicode implementation. The default is 'ascii', but if
Force easy_installed eggs in the global environment to get placed in sys.path after all packages
Adjust the special classpath sys.path entries for Jython. These entries should follow the base virtualenv
Open a subprocess without blocking. Return a process handle with any output streams replaced by
Return True if Cython or Pyrex can be imported.
Replace sources with .pyx extensions to sources with the target language extension. This mechanism allows
Run the application and conserve the traceback frames.
Return a static resource from the shared folder.
Return a string representing the user agent.
Gets the content of a file; it may be a filename, file: URL, or http:
Returns true if the name looks like a URL
Unpack link into location. If download_dir is provided and link points to a file, make
Download link url into temp_dir using provided session
Check download_dir for previously downloaded file with correct hash If a correct file is found
Handle currencyFormat subdirectives.
Handle exchange subdirectives.
Print the informations from installed distributions found.
Decode the data passed in and potentially flush the decoder.
Similar to :meth:`httplib.HTTPResponse.read`, but with two additional parameters: ``decode_content`` and ``cache_content``. :param amt: How much
A generator wrapper for the read() method. A call will block until ``amt`` bytes have
Similar to :meth:`HTTPResponse.read`, but with an additional parameter: ``decode_content``. :param decode_content: If True, will attempt
Default template context processor. Injects `request`, `session` and `g`.
Renders the template and fires the signal
Renders a template from the template folder with the given context. :param template_name_or_list: the name
Renders a template from the given template source string with the given context. :param source:
Use parse_version from pkg_resources or distutils as available.
Install the wheel into site-packages.
Configure the VerifyingZipFile `zipfile` by verifying its signature and setting expected hashes for every hash
Check if a name is declared in this or an outer scope.
Walk the node and check for identifiers. If the scope is hard (eg: enforce on
All assignments to names go through this function.
Handles includes.
Visit named imports.
Create a whl file from all the files under 'base_dir'. Places .dist-info at the end
Decorate a function with a reentrant lock to prevent multiple threads from calling said thread
Create service, start server. :param app: application to instantiate a service :param host: interface to
URL escapes a single bytestring or unicode string with the given charset if applicable to
List of wheels matching a requirement. :param req: The requirement to satisfy :param wheels: List
Marshal cmd line args into a requirement set.
Call the callable with the arguments and keyword arguments provided but inject the active context
Export the Bazaar repository at the url to the destination location
Check for an update for pip. Limit the frequency of checks to once per week.
Lookup an Amazon Product. :return: An instance of :class:`~.AmazonProduct` if one item was returned, or
Iterate Pages. A generator which iterates over all pages. Keep in mind that Amazon limits
Query. Query Amazon search and check for errors. :return: An lxml root element.
This browse node's immediate ancestor in the browse node tree. :return: The ancestor as an
This browse node's children in the browse node tree. :return: A list of this browse
Safe Get Element. Get a child element of root (multiple levels deep) failing silently if
Safe get element text. Get element as string or None, :param root: Lxml element. :param
Safe get elemnent date. Get element as datetime.date or None, :param root: Lxml element. :param
Get Offer Price and Currency. Return price according to the following process: * If product
List Price. :return: A tuple containing: 1. Float representation of price. 2. ISO Currency code
Send a request. Use the request information to see if it exists in the cache
Build a response by making a request or using the cache. This will end up
Returns a callable that looks up the given attribute from a passed object with the
Return a titlecased version of the value. I.e. words will start with uppercase letters, all
Sort a dict and yield (key, value) pairs. Because python dicts are unsorted you may
Sort an iterable. Per default it sorts ascending, if you pass it true as first
Group a sequence of objects by a common attribute. If you for example have a
Applies a filter on a sequence of objects or looks up an attribute. This is
Creates a logger for the given application. This logger works similar to a regular Python
Returns True if the two strings are equal, False otherwise. The time taken is independent
base64 encodes a single bytestring (and is tolerant to getting called with a unicode string).
base64 decodes a single bytestring (and is tolerant to getting called with a unicode string).
Verifies the given signature matches the expected signature
This method is called to derive the key. If you're unhappy with the default key
Returns the signature for the given value
Signs the given string.
Verifies the signature for the given value.
Unsigns the given string.
Signs the given string and also attaches a time information.
Works like the regular :meth:`~Signer.unsign` but can also validate the time. See the base docstring
Just validates the given signed value. Returns `True` if the signature exists and is valid,
Loads the encoded object. This function raises :class:`BadPayload` if the payload is not valid. The
A method that creates a new instance of the signer to be used. The default
Returns a signed string serialized with the internal serializer. The return value can be either
Like :meth:`dumps` but dumps into a file. The file handle has to be compatible with
Reverse of :meth:`dumps`, raises :exc:`BadSignature` if the signature validation fails.
Lowlevel helper function to implement :meth:`loads_unsafe` in serializer subclasses.
Like :meth:`loads_unsafe` but loads from a file. .. versionadded:: 0.15
Reverse of :meth:`dumps`, raises :exc:`BadSignature` if the signature validation fails. If a `max_age` is provided
Like :meth:`~Serializer.dumps` but creates a JSON Web Signature. It also allows for specifying additional fields
Reverse of :meth:`dumps`. If requested via `return_header` it will return a tuple of payload and
JSON-RPC server error. :param request_id: JSON-RPC request id :type request_id: int or str or None
Find all files under 'dir' and return the list of full filenames (relative to 'dir').
Return a list all Python packages found within directory 'where' 'where' should be supplied as
Exclude any apparent package that apparently doesn't include its parent. For example, exclude 'foo.bar' if
Return all dirs in base_path, relative to base_path
Verify our vary headers match and construct a real urllib3 HTTPResponse object.
Generate a public/private key pair.
Remove RECORD.jws from a wheel by truncating the zip file. RECORD.jws must be at the
Verify a wheel. The signature will be verified for internal consistency ONLY and printed. Wheel's
Unpack a wheel. Wheel content will be unpacked to {dest}/{name}-{ver}, where {name} is the package
Install wheels. :param requirements: A list of requirements or wheel files to install. :param requirements_file:
Regenerate the entry_points console_scripts for the named distribution.
Sets for the _draw_ and _ldraw_ attributes for each of the graph sub-elements by processing
Parses the Xdot attributes of all graph components and adds the components to a new
Returns a node given an ID or None if no such node exists.
Trait initialiser.
Property getter.
Sets the connection string for all edges.
Maintains each branch's list of available nodes in order that they may move themselves (InstanceEditor
Handles the list of edges for any graph changing.
Helper callback.
Trait initialiser
Handles the component being changed.
Helper callback.
Handles the left mouse button being double-clicked when the tool is in the 'normal' state.
Trait initialiser
Trait initialiser
Handles the diagram canvas being set
Removes all components from the canvas
Handles the domain model changing
Maps a domain model to the diagram
Removes listeners from a domain model
Handles mapping elements to diagram components
Styles a node
Parses xdot data and returns the associated components.
Defines xdot grammar. @see: http://graphviz.org/doc/info/output.html#d:xdot
The color traits of a Pen instance must be a string of the form (r,g,b)
Sets the font.
Returns the components of an ellipse.
Returns the components of a polygon.
Returns the components of a polyline.
Returns the components of a B-spline (Bezier curve).
Returns text components.
Returns the components of an image.
Allow direct use of GridOut GridFS file wrappers as endpoint responses.
Save to file.
Load the file.
Draws the component
Test if the point is within this ellipse
Draws the component bounds for testing purposes
Perform the action.
Convert from rectangular (x,y) to polar (r,w) r = sqrt(x^2 + y^2) w = arctan(y/x)
x^2 + ax + b = 0 (or ax^2 + bx + c = 0)
x^3 + ax^2 + bx + c = 0 (or ax^3 + bx^2 + cx
Construct the SQLAlchemy engine and session factory.
Parses the dot_code string and replaces the existing model.
Handles the new Graph action.
Handles the open action.
Handles saving the current model to the last file.
Handles saving the current model to file.
Handles display of the graph dot traits.
Handles display of the nodes editor.
Handles display of the edges editor.
Handles displaying a view about Godot.
Handles adding a Node to the graph.
Handles adding an Edge to the graph.
Handles adding a Subgraph to the main graph.
Handles adding a Cluster to the main graph.
Displays a dialog for graph selection if more than one exists. Returns None if the
Handles display of the options menu.
Handles display of the dot code in a text editor.
Handles the user attempting to exit Godot.
Components are positioned relative to their container. Use this method to position the bottom-left corner
Save the object to a given file like object in the given format.
Load the object to a given file like object with the given protocol.
Save the object to file given by filename.
Return an instance of the class that is saved in the file with the given
Draws the component
Syntactically concise alias trait but creates a pair of lambda functions for every alias you
!DEMO! Simple file parsing generator Args: filename: absolute or relative path to file on disk
!DEMO! Cached list of keys that can be used to generate sentence.
Add chain to current shelve file Args: name: chain name order: markov chain order
Remove chain from current shelve file Args: name: chain name
Build markov chain from source on top of existin chain Args: source: iterable which will
!DEMO! Demo function that shows how to generate a simple sentence starting with uppercase letter
Creates and returns a representation of the graph using the Graphviz layout program given by
Adds a node to the graph.
Removes a node from the graph.
Returns the node with the given ID or None.
Removes an edge from the graph. Returns the deleted edge or None.
Adds an edge to the graph.
Adds a subgraph to the graph.
Handles the Graphviz layout program selection changing.
Maintains each edge's list of available nodes.
Parses a DOT file and returns a Godot graph.
Return (ADD_NODE, node_name, options)
Returns a tuple of the form (ADD_EDGE, src, dest, options).
Returns a graph given a file or a filename.
Build a Godot graph instance from parsed data.
Builds a Godot graph.
Given a duration in seconds, determines the best units and multiplier to use to display
Formats a number of seconds using the best units.
Trait initialiser.
Handle the file path changing.
Creates the toolkit-specific control that represents the editor. 'parent' is the toolkit-specific control that is
Split a sequence into pieces of length n If the length of the sequence isn't
Code snippet from Python Cookbook, 2nd Edition by David Ascher, Alex Martelli and Anna Ravenscroft;
Runs Godot.
Gets the object's children.
Appends a child to the object's children.
Inserts a child into the object's children.
Deletes a child at a specified index from the object's children.
Sets up or removes a listener for children being replaced on a specified object.
Sets up or removes a listener for children being changed on a specified object.
Gets the label to display for a specified object.
Sets the label for a specified object.
Sets up or removes a listener for the label being changed on a specified object.
Finishes initialising the editor by creating the underlying toolkit widget.
Updates the editor when the object trait changes externally to the editor.
Adds the event listeners for a specified object.
Handles a list of nodes being set.
Handles addition and removal of nodes.
Adds a node to the graph for each item in 'features' using the GraphNodes from
Removes the node corresponding to each item in 'features'.
Handles a list of edges being set.
Handles addition and removal of edges.
Adds an edge to the graph for each item in 'features' using the GraphEdges from
Removes the node corresponding to each item in 'features'.
Property getter.
Arrange the components of the node using Graphviz.
Handles parsing Xdot drawing directives.
Handles the containers of drawing components being set.
Give new nodes a unique ID.
Give new edges a unique ID.
Initialize the database connection.
Attach this connection's default database to the context using our alias.
Trait initialiser.
Trait initialiser.
Arrange the components of the node using Graphviz.
Parses the drawing directive, updating the node components.
Parses the label drawing directive, updating the label components.
Handles the container of drawing components changing.
Handles the poition of the component changing.
Handles the Graphviz position attribute changing.
Handles the right mouse button being clicked when the tool is in the 'normal' state.
Outputs the CSS which can be customized for highlighted code
Draws a closed polygon
Test if a point is within this polygonal region
Draws the Bezier component
Initialize the database connection.
Broadcast an event to the database connections registered.
Method that gets run when the Worker thread is started. When there's an item in
Get the full, external URL for this page, optinally with the passed in URL scheme
Render the rel=prev and rel=next links to a Markup object for injection into a template
Render the rel=canonical, rel=prev and rel=next links to a Markup object for injection into a
:return: The last "item number", used when displaying messages to the user like "Displaying items
Is ``candidate`` an exact match or sub-type of ``pattern``?
Selects the best content type. :param requested: a sequence of :class:`.ContentType` instances :param available: a
Create a new URL from `input_url` with modifications applied. :param str input_url: the URL to
Removes the user & password and returns them along with a new url. :param str
Generate the user+password portion of a URL. :param str user: the user name or :data:`None`
Normalize a host for a URL. :param str host: the host name to normalize :keyword
:X: numpy ndarray
:data: original data as numpy matrix :noise: noise matrix as numpy matrix
将被装饰函数封装为一个 :class:`click.core.Command` 类， 此装饰器并不提供额外的复杂功能，仅提供将被装饰方法注册为一个 ``mohand`` 子命令的功能 该装饰器作为一个一般装饰器使用（如： ``@hand.general`` ） .. note:: 该装饰器会在插件系统加载外部插件前辈注册到 :data:`.hands.hand` 中。 此处的
Attempts to list all of the modules and submodules found within a given directory tree.
Attempts to list all of the modules and submodules found within a given directory tree.
Attempts to the submodules under a module recursively. This function works for modules located in
Attempts to list all of the classes within a specified module. This function works for
Attempts to list all of the classes within a given module namespace. This method, unlike
Converts an RGB color value to HSL. :param r: The red color value :param g:
:param html_colour: Colour string like FF0088 :param alpha: Alpha value (opacity) :return: RGBA semitransparent version
:param html_colour: Colour string like FF552B or #334455 :param alpha: Alpha value :return: Html colour
:X: list of dict :y: labels
:X: list of dict
Formats prices, rounding (i.e. to the nearest whole number of pounds) with commas
Turns a string like 'a\nb\nc' into 'a<br>b<br>c' and marks as Markup Note: Will remove all
Ensure that a needed directory exists, creating it if it doesn't
:param csv_data: A string with the contents of a csv file in it :param filename:
Converts a number to base 62 :param n: The number to convert :return: Base 62
Convert a base62 String back into a number :param s: The base62 encoded String :return:
Return list containing URIs with base URI.
Return list of overlay names.
Store the given key:value pair for the item associated with handle. :param handle: handle for
Store the given text contents so that they are later retrievable by the given key.
Return absolute path at which item content can be accessed. :param identifier: item identifier :returns:
Return iterator over item handles.
Return dictionary containing all metadata associated with handle. In other words all the metadata added
:param filename: The filename of the file to process :returns: The MD5 hash of the
checks to make sure that the card passes a luhn mod-10 checksum
Return the git hash as a string. Apparently someone got this from numpy's setup.py. It
加载hand扩展插件 :return: 返回hand注册字典(单例) :rtype: HandDict
:X: {array-like, sparse matrix}, shape [n_samples, n_features] The data used to compute the mean and
Loads a module's code and sets the module's expected hidden variables. For more information on
Adds a path to search through when attempting to look up a module. :param path:
Searches the paths for the required module. :param module_name: the full name of the module
:param tag: Beautiful soup tag :return: Flattened text
This is designed to work with prettified output from Beautiful Soup which indents with a
Pretty print HTML, splitting it into lines of a reasonable length (if possible). This probably
:X: list of dict :y: labels
:x: dict which contains feature names and values :return: pairs of values which shows number
:param kwargs: Pass in the arguments to the function and they will be printed too!
Call this on an lxml.etree document to remove all namespaces
Checks that the versions are consistent Parameters ---------- desired_version: str optional; the version that all
Returns ------- bool or None : None if we can't tell
Creates a new instance of a rule in relation to the config file. This updates
Merges a dictionary into the Rule object.
Iterates over the actions and executes them in order.
Creates a new instance of a rule by merging two dictionaries. This allows for independant
:param formatted_address: A string like "email@address.com" or "My Email <email@address.com>" :return: Tuple: (address, name)
:param recipient_list: List of recipients i.e. ['testing@fig14.com', 'Stephen Brown <steve@fig14.com>'] :param subject: The subject :param
Add extra details to the message. Separate so that it can be overridden
Emit a record. Format the record and send it to the specified addressees.
Ensure `image_rendition` is added to the global context.
Log an attempt against key, incrementing the number of attempts for that key and potentially
Decrease the countdowns, and remove any expired locks. Should be called once every <decrease_every> seconds.
Adds an URL to the download queue. :param str url: URL to the music service
Sets the current music service to service_name. :param str service_name: Name of the music service
Sets the current storage service to service_name and attempts to connect to it. :param str
Creates and starts the workers, as well as attaching a handler to terminate them gracefully
Add or update a key, value pair to the database
Get the value of a given key
Recursively get the tree below the given key
Get the current index of the key or the subtree. This is needed for later
Delete a given key or recursively delete the tree below it
Render an "internal error" page. The following variables will be populated when rendering the template:
Plot heatmap which shows features with classes. :param X: list of dict :param y: labels
获取打包使用的版本号，符合 PYPI 官方推荐的版本号方案 :return: PYPI 打包版本号 :rtype: str
获取终端命令版本号，若存在VERSION文件则使用其中的版本号， 否则使用 :meth:`.get_setup_version` :return: 终端命令版本号 :rtype: str
Add a number of months to a timestamp
Add a number of months to a date
Generate a unix style timestamp (in seconds)
Is this the christmas period?
Given a date or a datetime, return a datetime at 23:59:59 on that day
:param X: features.
Sets the current music service to service_name. :param str service_name: Name of the music service
Sets the current storage service to service_name and runs the connect method on the service.
Read dataset from csv.
Reads dataset from json.
Reads dataset to csv. :param X: dataset as list of dict. :param y: labels.
Select items with label from dataset. :param X: dataset :param y: labels :param ref_label: reference
Calculates average dictinary from list of dictionary for give label :param List[Dict] X: dataset :param
:param dict d: dictionary :param func key_func: func which will run on key. :param func
:param List[Dict] ds: list of dict :param func key_func: func which will run on key.
:param list y: label :param ref_label: reference label
Provide signifance for features in dataset with anova using multiple hypostesis testing :param X: List
Restore the data dict - update the flask session and this object
Recusively merge the 2 dicts. Destructive on argument 'a'.
A decorator for a function to dispatch on. The value returned by the dispatch function
A decorator for a function implementing dispatch_fn for dispatch_key. If no dispatch_key is specified, the
Auto-discover INSTALLED_APPS registered_blocks.py modules and fail silently when not present. This forces an import on
Verifies a block prior to registration.
Registers `block` to `block_type` in the registry.
Unregisters the block associated with `block_type` from the registry. If no block is registered to
Converts the file associated with the file_name passed into a MP3 file. :param str file_name:
Deletes the file associated with the file_name passed from local storage. :param str file_name: Filename
通用自动化处理工具 详情参考 `GitHub <https://github.com/littlemo/mohand>`_
判断传入的路径是否为一个 Python 模块包 :param str path: 待判断的路径 :return: 返回是，则传入 path 为一个 Python 包，否则不是 :rtype: bool
尝试定位 ``handfile`` 文件，明确指定或逐级搜索父路径 :param str names: 可选，待查找的文件名，主要用于调试，默认使用终端传入的配置 :return: ``handfile`` 文件所在的绝对路径，默认为 None :rtype: str
从传入的 ``imported`` 中获取所有 ``click.core.Command`` :param module imported: 导入的Python包 :return: 包描述文档，仅含终端命令函数的对象字典 :rtype: (str, dict(str, object))
从传入的变量列表中提取命令( ``click.core.Command`` )对象 :param dict_items imported_vars: 字典的键值条目列表 :return: 判定为终端命令的对象字典 :rtype: dict(str, object)
导入传入的 ``handfile`` 文件路径，并返回(docstring, callables) 也就是 handfile 包的 ``__doc__`` 属性 (字符串) 和一个 ``{'name': callable}`` 的字典，包含所有通过 mohand
Determine whether the desired version is a reasonable next version. Parameters ---------- desired_version: str the
Check if a route needs ssl, and redirect it if not. Also redirects back to
Initialise this library. The following config variables need to be in your Flask config: REDIS_HOST:
Use this to enable error reporting. You need to put the following in your tasks.py
Initialise Celery and set up logging :param app: Flask app :param celery: Celery instance
Add a mail to the queue to be sent. WARNING: Commits by default! :param to_addresses:
Parse an HTTP accept-like header. :param str header_value: the header value to parse :return: a
Parse a `Cache-Control`_ header, returning a dictionary of key-value pairs. Any of the ``Cache-Control`` parameters
Parse a content type like header. :param str content_type: the string to parse as a
Parse RFC7239 Forwarded header. :param str header_value: value to parse :keyword bool only_standard_parameters: if this
Parse a HTTP Link header. :param str header_value: the header value to parse :param bool
Parse a comma-separated list header. :param str value: header value to split into elements :return:
Parse a named parameter list in the "common" format. :param parameter_list: sequence of string values
Parse a header value, returning a sorted list of values based upon the quality rules
Parse a HTTP Link header. :param str header_value: the header value to parse :param bool
Resize the image to fit inside dest rectangle. Resultant image may be smaller than target
:param image: PIL.Image :param dest_w: Target width :param dest_h: Target height :return: Scaled and cropped
Resize the image and pad to the correct aspect ratio. :param image: PIL.Image :param dest_w:
Resize and image to fit the passed in width, keeping the aspect ratio the same
Add a new value to the list. :param str name: name of the value that
The name/value mapping that was parsed. :returns: a sequence of name/value pairs.
Downloads a MP4 or WebM file that is associated with the video at the URL
Downloads a MP3 file that is associated with the track at the URL passed. :param
Creates connection to the Google Drive API, sets the connection attribute to make requests, and
Uploads the file associated with the file_name passed to Google Drive in the Music folder.
Initializes the connection attribute with the path to the user home folder's Music folder, and
Moves the file associated with the file_name passed to the Music folder in the local
All of the class properties are written to a text file Each property is on
Writes the params to file that skytool_Free needs to generate the sky radiance distribution.
Write the params to file that surftool_Free needs to generate the surface facets
Write the params to file that surftool_Free needs to generate the surface facets
Does nothing currently. May not need this method
Builds the particle backscattering function :math:`X(\\frac{550}{\\lambda})^Y` :param x: function coefficient :param y: order of the
Builds the CDOM absorption function :: :math:`G \exp (-S(\lambda - 400))` :param g: function coefficient
Read the phytoplankton absorption file from a csv formatted file :param file_name: filename and path
Scale the spectra by multiplying by linear scaling factor :param scale_parameter: Linear scaling factor
Read the pure water absorption from a csv formatted file :param file_name: filename and path
Read the pure water scattering from a csv formatted file :param file_name: filename and path
Generic IOP reader that interpolates the iop to the common wavelengths defined in the constructor
Generic iop file writer :param iop numpy array to write to file :param file_name the
Calculates the total scattering from back-scattering :param scattering_fraction: the fraction of back-scattering to total scattering
Calculates the total absorption from water, phytoplankton and CDOM a = awater + acdom +
Calculates the total attenuation from the total absorption and total scattering c = a +
Meta method that calls all of the build methods in the correct order self.build_a() self.build_bb()
Distributes the work across the CPUs. It actually uses _run()
Distributed process
For all possible combinations of 'batchable' parameters. create a unique directory to story outputs Each
Takes lists for parameters and saves them as class properties :param saa: <list> Sun Azimuth
Loads a text file to a python dictionary using '=' as the delimiter :param file_name:
Pull comma separated string values out of a text file and converts them to float
Reads in a PlanarRad generated report Saves the single line reported parameters as a python
Will calcuate the directional AOP (only sub-surface rrs for now) if the direction is defined
Collect all of the batch reports and concatenate the results. The report should be :
This function creates a new file if he doesn't exist already, moves it to 'inputs/batch_file'
This function will update data that we need to display curves, from "data_processing" from "gui_mainLayout"
This function plots results of a file into the canvas. Inputs : flag_curves : A
Takes a list of signals and sets a handler for them
Pseudo handler placeholder while signal is beind processed
Default handler, a generic callback method for signal processing
Pause execution, execution will resume in X seconds or when the appropriate resume signal is
Run all abort tasks, then all exit tasks, then exit with error return status
Run all status tasks, then run all tasks in the resume queue
Tries to remove a registered event without triggering it
Register a function/method to be called on program exit, will get executed regardless of successs/failure
Register a function/method to be called when execution is aborted
Register a function/method to be called when a user or another program asks for an
Register a function/method to be called if the system needs to resume a previously halted
Fetch time series data from OpenTSDB Parameters: metric: A string representing a valid OpenTSDB metric.
Fetch and sort time series data from OpenTSDB Takes the same parameters as `fetch_metric`, but
A pointfree reduce / left fold function: Applies a function of two arguments cumulatively to
Collects and returns a list of values from the given iterable. If the n parameter
Prints an item. :param item: The item to print :param end: String to append to
Prints each item from an iterable. :param iterable: An iterable yielding values to print :param
Extract function signature, default arguments, keyword-only arguments, and whether or not variable positional or keyword
Extract function signature from an existing partial instance.
Makes a new instance of the partial application wrapper based on an existing instance, optionally
Calculate new argv and extra_argv values resulting from adding the specified positional and keyword arguments.
We do not support multiple signatures in XPI signing because the client side code makes
Sort keys for xpi files The filenames in a manifest are ordered so that files
Read one VLQ-encoded integer value from an input data stream.
Read a table structure. These are used by Blizzard to collect pieces of data together.
Parse the user data header portion of the replay.
Transform duration into a human-readable form.
Print a summary of the game details.
This function gets back data that the user typed.
This function once the file found, display data's file and the graphic associated.
This function checks if there is no problem about values given. If there is a
This function calls "gui_batch.py" with inputs values to write the batch file.
This function separates data, from the file to display curves, and will put them in
This function calls the class "MplCanvas" of "gui_matplotlibwidgetFile.py" to plot results. Inputs : num_line :
The following permits to attribute the function "display_the_graphic" to the slider. Because, to make a
This function displays information about curves. Inputs ; num_curve ; The index of the curve's
This function scales the slider for curves displayed. Input : The number of cases (curves).
This function displays an error message when a wrong value is typed.
This function hides the error message when all values are correct.
This function executes planarRad using the batch file.
This function cancels PlanarRad.
This function quits PlanarRad, checking if PlanarRad is running before.
This function programs the button to save the figure displayed and save it in a
This function programs the button to save the figure displayed and save it in a
The following opens the log file of PlanarRad.
The following opens the documentation file.
This function does all required actions at the beginning when we run the GUI.
This function intercepts the mouse's right click and its position.
The following gets back coordinates of the mouse on the canvas.
This function will open a context menu on the graphic to save it. Inputs :
The following update labels about mouse coordinates.
in order to avoid a complicated bootstrapping, we define the genesis_signing_lockset as a lockset with
Sign this with a private key
signatures are non deterministic
compute (height,round) We might have multiple rounds before we see consensus for a certain height.
we've seen +2/3 of all eligible votes voting for one block. there is a quorum.
less than 1/3 of the known votes are on the same block
either invalid or one of quorum, noquorum, quorumpossible
Convert the transient block to a :class:`ethereum.blocks.Block`
set of validators may change between heights
set of validators may change between heights
Standardized Contract API: function transfer(address _to, uint256 _value) returns (bool _success)
Standardized Contract API: function transferFrom(address _from, address _to, uint256 _value) returns (bool success)
Standardized Contract API: function approve(address _spender, uint256 _value) returns (bool success)
In the IOU fungible the supply is set by Issuer, who issue funds.
highest lock on height
the last block proposal node voted on
highest valid lockset on height
setup a timeout for waiting for a proposal
sync the missing blocks between: head highest height with signing lockset we get these locksets
called to inform about synced peers
Creates a `wait_next_block` function, that will wait `timeout` seconds (`None` = indefinitely) for a new
make privkeys that support coloring, see utils.cstr
bandwidths are inaccurate, as we don't account for parallel transfers here
deliver on edge of timeout_window
encode args for method: method_id|data
create an object which acts as a proxy for the contract on the chain
returns class._on_msg_unsafe, use x.im_self to get class
registers NativeContract classes
Consolidate (potentially hex-encoded) list of validators into list of binary address representations.
returns True if unknown
Warning: Locking proposal_lock may block incoming events which are necessary to unlock! I.e. votes /
receives rlp.decoded serialized
Decondition an image from the VGG16 model.
Condition an image for use with the VGG16 model.
Create a function for the response of a layer.
Get symbolic output of a layer.
Evaluate layer outputs for `x`
Creates a new encryption key in the path provided and sets the file permissions. Setting
Drops any existing work tables, as returned by :meth:`~giraffez.load.TeradataBulkLoad.tables`. :raises `giraffez.TeradataPTError`: if a Teradata error
Finishes the load job. Called automatically when the connection closes. :return: The exit code returned
Load from a file into the target table, handling each step of the load process.
Load a single row into the target table. :param list items: A list of values
Attempt release of target mload table. :raises `giraffez.errors.GiraffeError`: if table was not set by the
The names of the work tables used for loading. :return: A list of four tables,
Monkey-patch compiler to allow for removal of default compiler flags.
Attempts to find the Teradata install directory with the defaults for a given platform. Should
Retrieve the decrypted value of a key in a giraffez configuration file. :param str key:
Set a decrypted value by key in a giraffez configuration file. :param str key: The
Display results in table format
Sets the current encoder output to Python `dict` and returns the cursor. This makes it
Set the current encoder output to :class:`giraffez.Row` objects and returns the cursor. This is the
Execute commands using CLIv2. :param str command: The SQL command to be executed :param bool
Check that object (table or view) :code:`object_name` exists, by executing a :code:`show table object_name` query,
Return the column information for :code:`table_name` by executing a :code:`select top 1 * from table_name`
Load a text file into the specified :code:`table_name` or Insert Python :code:`list` rows into the
Return a :code:`dict` of connections from the configuration settings. :raises `giraffez.errors.ConfigurationError`: if connections are not
Retrieve a connection by the given :code:`dsn`, or the default connection. :param str dsn: The
Retrieve a value from the configuration based on its key. The key may be nested.
Return the contents of the configuration as a :code:`dict`. Depending on the structure of the
A class method to lock a connection (given by :code:`dsn`) in the specified configuration file.
Set a value within the configuration based on its key. The key may be nested,
A class method to unlock a connection (given by :code:`dsn`) in the specified configuration file.
Remove a value at the given key -- and any nested values -- from the
Save the current configuration to its file (as given by :code:`self._config_file`). Optionally, settings may be
A class method to write a default configuration file structure to a file. Note that
Retrieve a column from the list with name value :code:`column_name` :param str column_name: The name
Set the names of columns to be used when iterating through the list, retrieving names,
Serializes the columns into the giraffez archive header binary format:: 0 1 2 +------+------+------+------+------+------+------+------+ |
Deserializes giraffez Archive header. See :meth:`~giraffez.types.Columns.serialize` for more information. :param str data: data in giraffez
Represents the contents of the row as a :code:`dict` with the column names as keys,
Set the query to be run and initiate the connection with Teradata. Only necessary if
Writes export archive files in the Giraffez archive format. This takes a `giraffez.io.Writer` and writes
Sets the current encoder output to Python `str` and returns a row iterator. :param str
Convert string with optional k, M, G, T multiplier to float
Convert string with gains of individual amplification elements to dict
Convert string with SoapySDR device settings to dict
Wrap text to terminal width with default indentation
Returns detected SoapySDR devices
Returns info about selected SoapySDR device
Setup command line parser
Set center frequency and clear averaged PSD data
Return freqs and averaged PSD for given center frequency
Wait for all PSD threads to finish and return result
Compute PSD from samples and update average for given center frequency
Compute PSD from samples and update average for given center frequency (asynchronously in another thread)
Write PSD of one frequncy hop (asynchronously in another thread)
Read data from file-like object
Write data to file-like object
Write PSD of one frequency hop
Write PSD of one frequency hop
Write PSD of one frequency hop
Submits a callable to be executed with the given arguments. Count maximum reached work queue
Return nearest number of FFT bins (even or power of two)
Return nearest overlap/crop factor based on number of bins
Convert integration time to number of repeats
Returns list of frequencies for frequency hopping
Create buffer for reading samples
Prepare samples buffer and start streaming samples from device
Stop streaming samples from device and delete samples buffer
Tune to specified center frequency and compute Power Spectral Density
Sweep spectrum using frequency hopping
close() Disconnects the object from the bus.
open(bus) Connects the object to the specified SMBus.
private helper method
write_quick(addr) Perform SMBus Quick transaction.
read_byte(addr) -> result Perform SMBus Read Byte transaction.
write_byte(addr, val) Perform SMBus Write Byte transaction.
read_byte_data(addr, cmd) -> result Perform SMBus Read Byte Data transaction.
write_byte_data(addr, cmd, val) Perform SMBus Write Byte Data transaction.
read_word_data(addr, cmd) -> result Perform SMBus Read Word Data transaction.
write_word_data(addr, cmd, val) Perform SMBus Write Word Data transaction.
process_call(addr, cmd, val) Perform SMBus Process Call transaction. Note: although i2c_smbus_process_call returns a value, according
read_block_data(addr, cmd) -> results Perform SMBus Read Block Data transaction.
write_block_data(addr, cmd, vals) Perform SMBus Write Block Data transaction.
block_process_call(addr, cmd, vals) -> results Perform SMBus Block Process Call transaction.
read_i2c_block_data(addr, cmd, len=32) -> results Perform I2C Block Read transaction.
True if Packet Error Codes (PEC) are enabled
Forcing to run cmake
Return the starting datetime: ``number`` of units before ``now``.
Return a set of datetimes, after filtering ``datetimes``. The result will be the ``datetimes`` which
Return a datetime with the same value as ``dt``, to a resolution of days.
Return the starting datetime: ``number`` of weeks before ``now``. ``firstweekday`` determines when the week starts.
Return a datetime with the same value as ``dt``, to a resolution of weeks. ``firstweekday``
Return the starting datetime: ``number`` of months before ``now``.
Return the starting datetime: ``number`` of years before ``now``.
Return a set of datetimes that should be kept, out of ``datetimes``. Keeps up to
Return a set of datetimes that should be deleted, out of ``datetimes``. See ``to_keep`` for
Return a set of dates that should be kept, out of ``dates``. See ``to_keep`` for
Return a set of date that should be deleted, out of ``dates``. See ``to_keep`` for
Returns an SPI control byte. The MCP23S17 is a slave SPI device. The slave address
Returns the bit specified from the address. :param bit_num: The bit number to read from.
Writes the value given to the bit in the address specified. :param value: The value
Returns the lowest bit num from a given bit pattern. Returns None if no bits
Waits for a port event. When a port event occurs it is placed onto the
Waits for events on the event queue and calls the registered functions. :param function_maps: A
Bring the interrupt pin on the GPIO into Linux userspace.
Set the interrupt edge on the userspace GPIO pin. :param edge: The interrupt edge ('none',
Wait until a file exists. :param filename: The name of the file to wait for.
Adds events to the queue. Will ignore events that occur before the settle time for
Registers a pin number and direction to a callback function. :param pin_num: The pin pin
De-registers callback functions :param pin_num: The pin number. If None then all functions are de-registered
When deactivated the :class:`PortEventListener` will not run anything.
Enables GPIO interrupts.
Sends bytes via the SPI bus. :param bytes_to_send: The bytes to send on the SPI
Re-implement almost the same code from crispy_forms but passing ``form`` instance to item ``render_link`` method.
Find tab fields listed as invalid
Render the link for the tab-pane. It must be called after render so ``css_class`` is
Get package version from installed distribution or configuration file if not installed
Pass template pack argument
Check the status of the incoming response, raise exception if status is not 200. Args:
Used by every other method, it makes a GET request with the given params. Args:
Requests direct download link for requested file, this method makes use of the response of
Makes a request to prepare for file upload. Note: If folder_id is not provided, it
Calls upload_link request to get valid url, then it makes a post request with given
Used to make a remote file upload to openload.co Note: If folder_id is not provided,
Checks a remote file upload to status. Args: limit (:obj:`int`, optional): Maximum number of results
Request a list of files and folders in specified folder. Note: if folder_id is not
Shows running file converts by folder Note: If folder_id is not provided, ``Home`` folder will
calculates the heat index based upon temperature (in F) and humidity. http://www.srh.noaa.gov/bmx/tables/heat_index.html returns the heat
calculates the wind chill value based upon the temperature (F) and wind. returns the wind
calculates the humidity via the formula from weatherwise.org return the relative humidity
calculates the dewpoint via the formula from weatherwise.org return the dewpoint in degrees F.
Perform HTTP session to transmit defined weather values.
return CRC calc value from raw serial data
perform CRC check on raw serial data, return true if valid. a valid CRC ==
given a packed storm date field, unpack and return 'YYYY-MM-DD' string.
return True if weather station returns Rev.B archives
issue wakeup command to device to take out of standby mode.
write a single command, with variable number of arguments. after the command, the device must
reads a raw string containing data read from the device provided (in /dev/XXX) format. all
issue a command to read the archive records after a known time stamp.
returns a dictionary of fields from the newest archive record in the device. return None
calculates the derived fields (those fields that are calculated)
read and parse a set of data read from the console. after the data is
unpacks data from 'buf' and returns a dication of named fields. the fields can be
main execution loop. query weather data and post to online service.
setup system logging to desired verbosity.
use values in opts data to generate instances of publication services.
read command line options to configure program behavior.
return gust data, if above threshold value and current time is inside reporting window period
Useful for defining weather data published to the server. Parameters not set will be reset
Store keyword args to be written to output file.
Write output file.
Standalone decorator to apply requirements to routes, either function handlers or class based views:: @requires(MyRequirement())
Used to protect an entire blueprint with a set of requirements. If a route handler
Helper decorator for transitioning to user-only requirements, this aids in situations where the request may
Short cut helper to construct a combinator that uses :meth:`operator.and_` to reduce requirement results and
Short cut helper to construct a combinator that uses :meth:`operator.or_` to reduce requirement results and
Initializes the Flask-Allows object against the provided application
Checks that the provided or current identity meets each requirement passed to this method. This
Used to preform a full run of the requirements and the options given, this method
Binds an override to the current context, optionally use the current overrides in conjunction with
Pops the latest override context. If the override context was pushed by a different override
Allows temporarily pushing an override context, yields the new context into the following block.
Binds an additional to the current context, optionally use the current additionals in conjunction with
Pops the latest additional context. If the additional context was pushed by a different additional
Allows temporarily pushing an additional context, yields the new context into the following block.
Append a number to duplicate field names to make them unique.
Generates the string to be shown as updates after the execution of a Cypher query
Generates a dictionary with safe keys and values to pass onto Neo4j :param query: string
Executes a query and depending on the options of the extensions will return raw data,
Returns a Pandas DataFrame instance built from the result set.
Returns a NetworkX multi-graph instance built from the result set :param directed: boolean, optional (default=`True`).
Plot of a NetworkX multi-graph instance :param directed: boolean, optional (default=`True`). Whether to return a
Generates a pylab pie chart from the result set. ``matplotlib`` must be installed, and in
Generates a pylab plot from the result set. ``matplotlib`` must be installed, and in an
Generates a pylab bar plot from the result set. ``matplotlib`` must be installed, and in
Generates results in comma-separated form. Write to ``filename`` if given. Any other parameter will be
Re-implementation of the permission_required decorator, honors settings. If ``DASHBOARD_REQUIRE_LOGIN`` is False, this decorator will always
Adds ``is_rendered`` to the context and the widget's context data. ``is_rendered`` signals that the AJAX
Returns the widgets sorted by position.
Returns all widgets that need an update. This should be scheduled every minute via crontab.
Registers the given widget. Widgets must inherit ``DashboardWidgetBase`` and you cannot register the same widget
Unregisters the given widget.
Gets or creates the last update object for this widget.
Returns the setting for this widget from the database. :setting_name: The name of the setting.
Saves the setting value into the database.
Checks if an update is needed. Checks against ``self.update_interval`` and this widgets ``DashboardWidgetLastUpdate`` instance if
:param q: query by city name :param lat: latitude :param lon: longitude :param city_ids: comma
:param city_id: id of the city for which collections are needed :param lat: latitude :param
:param city_id: id of the city for which collections are needed :param lat: latitude :param
:param lat: latitude :param lon: longitude Get Foodie and Nightlife Index, list of popular cuisines
:param entity_id: location id obtained from locations api :param entity_type: location type obtained from locations
:param query: suggestion for location name :param lat: latitude :param lon: longitude :param count: number
:param restaurant_id: id of restaurant whose details are requested :return: json response Get daily menu
:param restaurant_id: id of restaurant whose details are requested :return: json response Get detailed restaurant
:param restaurant_id: id of restaurant whose details are requested :param start: fetch results after this
:param entity_id: location id :param entity_type: location type (city, subzone, zone, lanmark, metro , group)
Create a spark bolt array from a local array. Parameters ---------- a : array-like An
Create a spark bolt array of ones. Parameters ---------- shape : tuple The desired shape
Join two bolt arrays together, at least one of which is in spark. Parameters ----------
Check that arguments are consistent with spark array construction. Conditions are: (1) a positional argument
Format target axes given an array shape
Wrap an existing numpy constructor in a parallelized construction
Align local bolt array so that axes for iteration are in the keys. This operation
Filter array along an axis. Applies a function which should evaluate to boolean, along a
Apply a function across an axis. Array will be aligned so that the desired set
Reduce an array along an axis. Applies an associative/commutative function of two arguments cumulatively to
Join this array with another array. Paramters --------- arry : ndarray or BoltArrayLocal Another array
Converts a BoltArrayLocal into a BoltArraySpark Parameters ---------- sc : SparkContext The SparkContext which will
Converts a BoltArrayLocal into an RDD Parameters ---------- sc : SparkContext The SparkContext which will
Make an intermediate RDD where all records are combined into a list of keys and
Unstack array and return a new BoltArraySpark via flatMap().
Apply a function on each subarray. Parameters ---------- func : function This is applied to
Split values of distributed array into chunks. Transforms an underlying pair RDD of (key, value)
Convert a chunked array back into a full array with (key,value) pairs where key is
Move indices in the keys into the values. Padding on these new value-dimensions is not
Apply an array -> array function on each subarray. The function can change the shape
Apply a generic array -> object to each subarray The resulting object is a BoltArraySpark
Identify a plan for chunking values along each dimension. Generates an ndarray with the size
Remove the padding from chunks. Given a chunk and its corresponding index, use the plan
Obtain number of chunks for the given dimensions and chunk sizes. Given a plan for
Obtain slices for the given dimensions, padding, and chunks. Given a plan for the number
Obtain a binary mask by setting a subset of entries to true. Parameters ---------- inds
Repartitions the underlying RDD Parameters ---------- npartitions : int Number of partitions to repartion the
Aggregates records of a distributed array. Stacking should improve the performance of vectorized operations, but
Align spark bolt array so that axes for iteration are in the keys. This operation
Return the first element of an array
Apply a function across an axis. Array will be aligned so that the desired set
Filter array along an axis. Applies a function which should evaluate to boolean, along a
Reduce an array along an axis. Applies a commutative/associative function of two arguments cumulatively to
Compute a statistic over an axis. Can provide either a function (for use in a
Return the mean of the array over the given axis. Parameters ---------- axis : tuple
Return the variance of the array over the given axis. Parameters ---------- axis : tuple
Return the standard deviation of the array over the given axis. Parameters ---------- axis :
Return the sum of the array over the given axis. Parameters ---------- axis : tuple
Return the maximum of the array over the given axis. Parameters ---------- axis : tuple
Return the minimum of the array over the given axis. Parameters ---------- axis : tuple
Join this array with another array. Paramters --------- arry : ndarray, BoltArrayLocal, or BoltArraySpark Another
Basic indexing (for slices or ints).
Advanced indexing (for sets, lists, or ndarrays).
Mixed indexing (combines basic and advanced indexes) Assumes that only a single advanced index is
Chunks records of a distributed array. Chunking breaks arrays into subarrays, using an specified size
Swap axes from keys to values. This is the core operation underlying shape manipulation on
Return an array with the axes transposed. This operation will incur a swap unless the
Return the array with two axes interchanged. Parameters ---------- axis1 : int The first axis
Return an array with the same data but a new shape. Currently only supports reshaping
Check if the requested reshape can be broken into independant reshapes on the keys and
Remove one or more single-dimensional axes from the array. Parameters ---------- axis : tuple or
Cast the array to a specified type. Parameters ---------- dtype : str or dtype Typecode
Clip values above and below. Parameters ---------- min : scalar or array-like Minimum value. If
Returns the contents as a local array. Will likely cause memory problems for large objects.
Coerce singletons and lists and ndarrays to tuples. Parameters ---------- arg : tuple, list, ndarray,
Coerce a list of arguments to a tuple. Parameters ---------- args : tuple or nested
Checks to see if a list of axes are contained within an array shape. Parameters
Test that a and b are close and match in shape. Parameters ---------- a :
Flatten lists of indices and ensure bounded by a known dim. Parameters ---------- lst :
Force a slice to have defined start, stop, and step from a known dim. Start
Check to see if a proposed tuple of axes is a valid permutation of an
Check to see if a proposed tuple of axes is a valid reshaping of the
If an ndarray has been split into multiple chunks by splitting it along each axis
Expand dimensions by iteratively append empty axes. Parameters ---------- arry : ndarray The original array
Alternate version of Spark's zipWithIndex that eagerly returns count.
Decorator to append routed docstrings
Use arguments to route constructor. Applies a series of checks on arguments to identify constructor,
Reshape just the keys of a BoltArraySpark, returning a new BoltArraySpark. Parameters ---------- shape :
Transpose just the keys of a BoltArraySpark, returning a new BoltArraySpark. Parameters ---------- axes :
Reshape just the values of a BoltArraySpark, returning a new BoltArraySpark. Parameters ---------- shape :
Transpose just the values of a BoltArraySpark, returning a new BoltArraySpark. Parameters ---------- axes :
Create a local bolt array of ones. Parameters ---------- shape : tuple Dimensions of the
Create a local bolt array of zeros. Parameters ---------- shape : tuple Dimensions of the
Join a sequence of arrays together. Parameters ---------- arrays : tuple A sequence of array-like
Returns A and B in y=Ax^B http://mathworld.wolfram.com/LeastSquaresFittingPowerLaw.html
A Python implementation of the Matlab code http://www.santafe.edu/~aaronc/powerlaws/plfit.m from http://www.santafe.edu/~aaronc/powerlaws/ See A. Clauset, C.R. Shalizi,
Plots CDF and powerlaw
Plots PDF and powerlaw....
CDF(x) for the piecewise distribution exponential x<xmin, powerlaw x>=xmin This is the CDF version of
Inverse CDF for a piecewise PDF as defined in eqn. 3.10 of Clauset et al.
Create a mappable function alpha to apply to each xmin in a list of xmins.
A pure-Python implementation of the Matlab code http://www.santafe.edu/~aaronc/powerlaws/plfit.m from http://www.santafe.edu/~aaronc/powerlaws/ See A. Clauset, C.R. Shalizi,
Create a mappable function alpha to apply to each xmin in a list of xmins.
CDF(x) for the piecewise distribution exponential x<xmin, powerlaw x>=xmin This is the CDF version of
Inverse CDF for a piecewise PDF as defined in eqn. 3.10 of Clauset et al.
Equation B.8 in Clauset Given a data set, an xmin value, and an alpha "scaling
Compute the likelihood for all "scaling parameters" in the range (alpharange) for a given xmin.
Returns the *argument* of the max of the likelihood of the data given an input
Returns the *argument* of the max of the likelihood of the data given an input
Return the most likely alpha for the data given an xmin
Equation B.17 of Clauset et al 2009 The Maximum Likelihood Estimator of the "scaling parameter"
Use the maximum L to determine the most likely value of alpha *alpharangemults* [ 2-tuple
given a sorted data set, a minimum, and an alpha, returns the power law ks-test
A Python implementation of the Matlab code http://www.santafe.edu/~aaronc/powerlaws/plfit.m from http://www.santafe.edu/~aaronc/powerlaws/ See A. Clauset, C.R. Shalizi,
Use the maximum likelihood to determine the most likely value of alpha *alpharangemults* [ 2-tuple
Plot xmin versus the ks value for derived alpha. This plot can be used as
Plot alpha versus the ks value for derived alpha. This plot can be used as
Plots CDF and powerlaw
Plots PDF and powerlaw. kwargs is passed to pylab.hist and pylab.plot
Plots the power-law-predicted value on the Y-axis against the real values along the X-axis. Can
Use the maximum likelihood estimator for a lognormal distribution to produce the best-fit lognormal parameters
Plot the fitted lognormal distribution
Plot the fitted lognormal distribution
Sanitizes HTML, removing not allowed tags and attributes. :param str|unicode html: :param list allowed_tags: List
Configure Yandex Metrika analytics counter. :param str|unicode ident: Metrika counter ID. :param dict params: Additional
Generates a list of tags identifying those previously selected. Returns a list of tuples of
Calculate the great circle distance between two points on the earth (specified in decimal degrees)
Calculate md5 fingerprint. Shamelessly copied from http://stackoverflow.com/questions/6682815/deriving-an-ssh-fingerprint-from-a-public-key-in-python For specification, see RFC4716, section 4.
Calculate sha256 fingerprint.
Calculates sha512 fingerprint.
Returns a tuple with (location of next data field, contents of requested data field).
Calculate two's complement.
Decode base64 coded part of the key.
Parses ssh options string.
Parses ssh-rsa public keys.
Parses ssh-dsa public keys.
Parses ecdsa-sha public keys.
Parses ed25516 keys. There is no (apparent) way to validate ed25519 keys. This only checks
Validates SSH public key. Throws exception for invalid keys. Otherwise returns None. Populates key_type, bits
Creates a "friendly" error message from a GSS status code. This is used to create
Create a canonical mechanism name (MechName) from an arbitrary internal name. The canonical MechName would
Returns a representation of the Mechanism Name which is suitable for direct string comparison against
After :meth:`step` has been called, this property will be set to True if integrity protection
After :meth:`step` has been called, this property will be set to True if confidentiality (encryption)
After :meth:`step` has been called, this property will be set to True if the security
After :meth:`step` has been called, this property will be set to True if the security
Calculates a cryptographic message integrity code (MIC) over an application message, and returns that MIC
Takes a message integrity code (MIC) that has been generated by the peer application for
Wraps a message with a message integrity code, and if `conf_req` is True, encrypts the
Takes a token that has been generated by the peer application with :meth:`wrap`, verifies and
Calculates the maximum size of message that can be fed to :meth:`wrap` so that the
Provides a way to pass an asynchronous token to the security context, outside of the
This method deactivates the security context for the calling process and returns an interprocess token
This is the corresponding method to :meth:`export`, used to import a saved context token from
The lifetime of the context in seconds (only valid after :meth:`step` has been called). If
Delete a security context. This method will delete the local data structures associated with the
Performs a step to establish the context as an initiator. This method should be called
Performs a step to establish the context as an acceptor. This method should be called
The set of mechanisms supported by the credential. :type: :class:`~gssapi.oids.OIDSet`
Serializes this credential into a byte string, which can be passed to :meth:`imprt` in another
Deserializes a byte string token into a :class:`Credential` object. The token must have previously been
Stores this credential into a 'credential store'. It can either store this credential in the
Return an :class:`OIDSet` of all the mechanisms supported by the underlying GSSAPI implementation.
Takes a string form of a mechanism OID, in dot-separated: "1.2.840.113554.1.2.2" or numeric ASN.1: "{1
Factory function to create a new :class:`OIDSet` with a single member. :param single_oid: the OID
Adds another :class:`OID` to this set. :param new_oid: the OID to add. :type new_oid: :class:`OID`
Imports and runs setup function with given properties.
Imports and returns a setup function. If use_markdown_readme is set, then README.md is added to
kwargs: 'command_publish_address': in the form of `tcp://*:5555` or any other zeromq address format. IE `ipc://*:5555`
Returns a file handle which is used to record audio
if device_type == plugin.audioengine.DEVICE_TYPE_ALL: return devs else: return [device for device in devs if device_type
self._logger.debug("%s stream opened on device '%s' (%d Hz, %d " + "channel, %d bit)", "output"
Returns HTML5 Boilerplate CSS file. Included in HTML5 Boilerplate.
Returns Normalize CSS file. Included in HTML5 Boilerplate.
Returns Font Awesome CSS file. TEMPLATE_DEBUG returns full file, otherwise returns minified file.
Returns Modernizr JavaScript file according to version number. TEMPLATE_DEBUG returns full file, otherwise returns minified
Returns jQuery JavaScript file according to version number. TEMPLATE_DEBUG returns full file, otherwise returns minified
Returns the jQuery UI plugin file according to version number. TEMPLATE_DEBUG returns full file, otherwise
Returns the jQuery DataTables plugin file according to version number. TEMPLATE_DEBUG returns full file, otherwise
Returns the jQuery DataTables CSS file according to version number.
Returns the jQuery DataTables ThemeRoller CSS file according to version number.
Returns the jQuery Dynamic Formset plugin file according to version number. TEMPLATE_DEBUG returns full file,
Returns the jQuery ScrollTo plugin file according to version number. TEMPLATE_DEBUG returns full file, otherwise
Returns the jQuery Smooth Scroll plugin file according to version number. TEMPLATE_DEBUG returns full file,
Returns Twitter Bootstrap CSS file. TEMPLATE_DEBUG returns full file, otherwise returns minified file.
Returns Twitter Bootstrap JavaScript file(s). all returns concatenated file; full file for TEMPLATE_DEBUG, minified otherwise.
Returns Google Analytics asynchronous snippet. Use DJFRONTEND_GA_SETDOMAINNAME to set domain for multiple, or cross-domain tracking.
u"""Render CodeMirrorTextarea
Generate auth tokens tied to user and specified purpose. The hash expires at midnight on
Return specific time an auth_hash will expire.
Return login token info for given user.
Serialize user as per Meteor accounts serialization.
De-serialize user profile fields into concrete model fields.
Update user data.
Retrieve the current user (or None) from the database.
Update subs to send added/removed for collections with user_rel.
Consistent fail so we don't provide attackers with valuable info.
Resolve and validate auth token, returns user object.
Check request, return False if using SSL or local connection.
Retrieve username from user selector.
Register a new user account.
Login a user.
Logout a user.
Login either with resume token or password.
Authenticate using credentials supplied in params.
Login with existing resume token. Either the token is valid and the user is logged
Change password.
Request password reset email.
Reset password using a token received in email then logs user in.
Recursive dict merge. Recursively merges dict's. not just simple lft['key'] = rgt['key'], if both lft
Read encoded contents from specified path or return default.
Return HTML (or other related content) for Meteor.
Return an Alea ID for the given object.
Return Alea ID mapping for all given ids of specified model.
Return an object ID for the given meteor_id.
Return all object IDs for the given meteor_ids.
Return an object for the given meteor_id.
Generate ID if required.
Generate ID if required.
Set default value for AleaIdField.
Unset default value for AleaIdField.
Truncate tables.
Use schema_editor to apply any forward changes.
Use schema_editor to apply any reverse changes.
Set command option defaults.
Update command options.
Peform build.
Convert a UNIX-style path into platform specific directory spec.
Seed internal state from supplied values.
Return internal state, useful for testing.
Return string of `length` elements chosen from `alphabet`.
Decorator to mark a method as an API endpoint for later registration. Args: path_or_func: either
Iterator over all API endpoint names and callbacks.
Cached dict of api_path: func.
Clear out cache for api_path_map.
Call `func(*args, **kwargs)` but NEVER raise an exception. Useful in situations such as inside exception
Debug print name and val.
Validate arguments to be supplied to func.
Handle new websocket connection.
Handle closing of websocket connection.
Process a message received from remote.
Yield DDP messages from a raw WebSocket message.
Process a single DDP message.
Dispatch msg to appropriate recv_foo handler.
Send `data` (raw string or EJSON payload) to WebSocket client.
DDP connect handler.
DDP ping handler.
DDP sub handler.
DDP unsub handler.
DDP method handler.
Inform client that WebSocket service is available.
Convert a string of format host[:port] into Addr(host, port). >>> addr('0:80') Addr(host='0', port=80) >>> addr('127.0.0.1:80')
Spawn greenlets for handling websockets and PostgreSQL calls.
Main entry point for `dddp` command.
Print formatted msg if verbosity set at 1 or above.
Add WebSocketServer for each (host, port) in listen_addrs.
Setup WebSocketServer on listen_addr (host, port).
Add a backdoor (debug) server.
Stop all green threads.
Run PostgresGreenlet and web/debug servers.
Run DDP greenlets.
Initialisation for django-ddp (setup lookups and signal handlers).
Spawn sub tasks, wait for stop signal.
Stop subtasks and let run() finish.
Poll DB socket and process async tasks.
Patch threading and psycopg2 modules for green threads.
Generate a new ID, optionally using namespace of given `name`.
Import all `ddp` submodules from `settings.INSTALLED_APPS`.
Return an error dict for self.args and kwargs.
Get attribute, creating if required using specified factory.
Emit a formatted log record via DDP.
Given a request, a list of renderers, and the ``force`` configuration option, return a two-tuple
Middleware which selects a renderer for a given request then renders a handler's data to
Set up the negotiation middleware. Reads configuration from ``app['AIOHTTP_UTILS']``. :param app: Application to set up.
Context manager which yields a function for adding multiple routes from a given module. Example:
Context manager which yields a function for adding multiple resources from a given module to
Add routes by an resource instance's methods. :param path: route path. Should be started with
Run an `aiohttp.web.Application` using gunicorn. :param app: The app to run. :param str app_uri: Import
Sends a push notification to this device via GCM
Sends an APNS notification to one or more registration_ids. The registration_ids argument needs to be
Queries the APNS server for id's that are no longer active since the last fetch
Standalone method to send a single gcm notification
Standalone method to send bulk gcm notifications
Sends a text/plain GCM message
Sends a json GCM message
Sends a GCM message with the given content type
Returns the instance of the given module location.
obj: case or network
Fast forward selection algorithm Parameters ---------- scenarios : numpy.array Contain the input scenarios. The columns
Simultaneous backward reduction algorithm Parameters ---------- scenarios : numpy.array Contain the input scenarios. The columns
Shorthand for creating a Giphy api wrapper with the given api key and then calling
Shorthand for creating a Giphy api wrapper with the given api key and then calling
Shorthand for creating a Giphy api wrapper with the given api key and then calling
Shorthand for creating a Giphy api wrapper with the given api key and then calling
Shorthand for creating a Giphy api wrapper with the given api key and then calling
Shorthand for creating a Giphy api wrapper with the given api key and then calling
Takes an image dict from the giphy api and converts it to attributes. Any fields
Does a normalization of sorts on image type data so that values that should be
Wrapper for making an api request from giphy
Search for gifs with a given word or phrase. Punctuation is ignored. By default, this
Suppose you expect the `search` method to just give you a list rather than a
Retrieve a single image that represents a transalation of a term or phrase into an
Retrieve GIFs currently trending online. The data returned mirrors that used to create The Hot
Suppose you expect the `trending` method to just give you a list rather than a
Retrieves a specifc gif from giphy based on unique id :param gif_id: Unique giphy gif
Returns a random giphy image, optionally based on a search of a given tag. Note
Uploads a gif from the filesystem to Giphy. :param tags: Tags to apply to the
convert '(1,1)' to 'B2' and 'B2' to '(1,1)' auto-recongnize
Prepares the extension element for access control Extension element is the optional parameter for the
Retrieve the video feed by username Returns: gdata.youtube.YouTubeVideoFeed object
Authenticates the user and sets the GData Auth token. All params are optional, if not
Direct upload method: Uploads the video directly from your server to Youtube and creates a
Browser based upload Creates the video entry and meta data to initiate a browser upload
Checks the video upload status Newly uploaded videos may be in the processing state Authentication
Updates the video Authentication is required Params: entry: video entry fetch via 'fetch_video()' title: string
Deletes the video Authentication is required Params: entry: video entry fetch via 'fetch_video()' Return: True
Controls the availability of the video. Newly uploaded videos are in processing stage. And others
Displays a video in an embed player
list of videos of a user if username does not set, shows the currently logged
direct upload method starts with uploading video to our server then sends the video file
Displays an upload form Creates upload url and token from youtube api and uses them
The upload result page Youtube will redirect to this page after upload is finished Saves
Removes the video from youtube and from db Requires POST
Connects to Youtube Api and retrieves the video entry object Return: gdata.youtube.YouTubeVideoEntry
Syncronize the video information on db with the video on Youtube The reason that I
Deletes the video from youtube Raises: OperationError
Method for `Regenerate Key <https://m2x.att.com/developer/documentation/v2/keys#Regenerate-Key>`_ endpoint. :raises: :class:`~requests.exceptions.HTTPError` if an error occurs when sending the
Method for `List Devices from an existing Distribution <https://m2x.att.com/developer/documentation/v2/distribution#List-Devices-from-an-existing-Distribution>`_ endpoint. :param params: Query parameters passed
Method for `Add Device to an Existing Distribution <https://m2x.att.com/developer/documentation/v2/distribution#Add-Device-to-an-existing-Distribution>`_ endpoint. :param params: Query parameters passed
Method for `List Devices from an existing Collection <https://m2x.att.com/developer/documentation/v2/collections#List-Devices-from-an-existing-Collection>`_ endpoint. :param params: Query parameters passed
Method for `Add device to collection <https://m2x.att.com/developer/documentation/v2/collections#Add-device-to-collection>`_ endpoint. :param device_id: ID of the Device being
Method for `Remove device from collection <https://m2x.att.com/developer/documentation/v2/collections#Remove-device-from-collection>`_ endpoint. :param device_id: ID of the Device being
Method for `Create/Update Data Stream <https://m2x.att.com/developer/documentation/v2/device#Create-Update-Data-Stream>`_ endpoint. :param name: Name of the stream to be
Method for `Create/Update Data Stream <https://m2x.att.com/developer/documentation/v2/device#Create-Update-Data-Stream>`_ endpoint. :param name: Name of the stream to be
Create an API Key for this Device via the `Create Key <https://m2x.att.com/developer/documentation/v2/keys#Create-Key>`_ endpoint. :param params:
Method for `Read Device Location <https://m2x.att.com/developer/documentation/v2/device#Read-Device-Location>`_ endpoint. :return: Most recently logged location of the Device,
Method for `Read Device Location History <https://m2x.att.com/developer/documentation/v2/device#Read-Device-Location-History>`_ endpoint. :param params: Query parameters passed as keyword
Method for `Update Device Location <https://m2x.att.com/developer/documentation/v2/device#Update-Device-Location>`_ endpoint. :param params: Query parameters passed as keyword arguments.
Method for `Post Device Updates (Multiple Values to Multiple Streams) <https://m2x.att.com/developer/documentation/v2/device#Post-Device-Updates--Multiple-Values-to-Multiple-Streams->`_ endpoint. :param values: The
Method for `Post Device Update (Single Values to Multiple Streams) <https://m2x.att.com/developer/documentation/v2/device#Post-Device-Update--Single-Values-to-Multiple-Streams->` endpoint. :param values: The
Method for `List Data Stream Values <https://m2x.att.com/developer/documentation/v2/device#List-Data-Stream-Values>`_ endpoint. :param params: Query parameters passed as keyword
Method for `Export Values from all Data Streams of a Device <https://m2x.att.com/developer/documentation/v2/device#Export-Values-from-all-Data-Streams-of-a-Device>`_ endpoint. :param params:
Method for `Search Values from all Data Streams of a Device <https://m2x.att.com/developer/documentation/v2/device#Search-Values-from-all-Data-Streams-of-a-Device>`_ endpoint. :param params:
Method for `Device's List of Received Commands <https://m2x.att.com/developer/documentation/v2/commands#Device-s-List-of-Received-Commands>`_ endpoint. :param params: Query parameters passed as
Method for `Device Marks a Command as Processed <https://m2x.att.com/developer/documentation/v2/commands#Device-Marks-a-Command-as-Processed>`_ endpoint. :param id: ID of the
Method for `Device Marks a Command as Rejected <https://m2x.att.com/developer/documentation/v2/commands#Device-Marks-a-Command-as-Rejected>`_ endpoint. :param id: ID of the
Generic method for a resource's Update Metadata endpoint. Example endpoints: * `Update Device Metadata <https://m2x.att.com/developer/documentation/v2/device#Update-Device-Metadata>`_
Generic method for a resource's Update Metadata Field endpoint. Example endpoints: * `Update Device Metadata
Generic method for a resource's Update endpoint. Example endpoints: * `Update Device Details <https://m2x.att.com/developer/documentation/v2/device#Update-Device-Details>`_ *
Method for `Update Data Stream <https://m2x.att.com/developer/documentation/v2/device#Create-Update-Data-Stream>`_ endpoint. :param attrs: Query parameters passed as keyword arguments.
Method for `Data Stream Sampling <https://m2x.att.com/developer/documentation/v2/device#Data-Stream-Sampling>`_ endpoint. :param interval: the sampling interval, see API docs
Method for `Data Stream Stats <https://m2x.att.com/developer/documentation/v2/device#Data-Stream-Stats>`_ endpoint. :param attrs: Query parameters passed as keyword arguments.
Method for `Update Data Stream Value <https://m2x.att.com/developer/documentation/v2/device#Update-Data-Stream-Value>`_ endpoint. :param value: The updated stream value :param
Method for `Post Data Stream Values <https://m2x.att.com/developer/documentation/v2/device#Post-Data-Stream-Values>`_ endpoint. :param values: Values to post, see M2X
Method for `Delete Data Stream Values <https://m2x.att.com/developer/documentation/v2/device#Delete-Data-Stream-Values>`_ endpoint. :param start: ISO8601 timestamp for starting timerange
Load a list of trees from a Newick formatted string. :param s: Newick formatted string.
Serialize a list of trees in Newick format. :param trees: List of Node objects or
Load a list of trees from an open Newick formatted file. :param fp: open file
Load a list of trees from a Newick formatted file. :param fname: file path. :param
http://stackoverflow.com/a/26809037
Parse a Newick formatted string into a `Node` object. :param s: Newick formatted string to
Create a new `Node` object. :param name: Node label. :param length: Branch length from the
The representation of the Node in Newick format.
Return a unicode string representing a tree in ASCII art fashion. :param strict: Use ASCII
Traverses the (sub)tree rooted at self, yielding each visited Node. .. seealso:: https://en.wikipedia.org/wiki/Tree_traversal :param mode:
Apply a function to matching nodes in the (sub)tree rooted at self. :param visitor: A
Gets the specified node by name. :return: Node or None if name does not exist
Remove all those nodes in the specified list, or if inverse=True, remove all those nodes
Perform an (inverse) prune, with leaves specified by name. :param node_names: A list of leaaf
Remove all nodes which have only a single child, and attach their grandchildren to their
Insert additional nodes with length=0 into the subtree in such a way that all non-leaf
Set the name of all non-leaf nodes in the subtree to None.
Set the name of all leaf nodes in the subtree to None.
Decorator that protect methods with HTTP authentication.
Clear all comments in json_str. Clear JS-style comments like // and /**/ in json_str. Accept
Raises an exception if the given app setting is not defined.
Returns the value of the argument with the given name. If default is not provided,
Returns a list of the arguments with the given name. If the argument is not
Obsolete - catches exceptions from the wrapped function. This function is unnecessary since Tornado 1.1.
Gets the value of the cookie with the given name, else default.
Sets the given cookie name/value with the given options. Additional keyword arguments are set on
Deletes the cookie with the given name.
Returns the authentication URL for this service. After authentication, the service will redirect back to
Fetches the authenticated user data upon redirect. This method should be called by the handler
Redirects the user to obtain OAuth authorization for this service. Twitter and FriendFeed both require
Gets the OAuth authorized user and access token on callback. This method should be called
Returns the OAuth parameters as a dict for the given request. parameters should include all
Redirects the user to obtain OAuth authorization for this service. Some providers require that you
Fetches the given relative API path, e.g., "/bret/friends" If the request is a POST, post_args
Authenticates and authorizes for the given Google resource. Some of the available resources are: *
Fetches the authenticated user data upon redirect.
Makes a Facebook API REST request. We automatically include the Facebook API key and signature,
Handles the login for the Facebook user, returning a user object. Example usage:: class FacebookGraphLoginHandler(LoginHandler,
Fetches the given relative API path, e.g., "/btaylor/picture" If the request is a POST, post_args
Concatenate url and argument dictionary regardless of whether url has existing query parameters. >>> url_concat("http://example.com/foo?a=b",
Parses a multipart/form-data body. The boundary and data parameters are both byte strings. The dictionaries
Parse a Content-type like header. Return the main content-type and a dictionary of options.
Adds a new value for the given key.
Returns all values for the given header as a list.
Returns an iterable of all (name, value) pairs. If a header has multiple values, multiple
Updates the dictionary with a single header line. >>> h = HTTPHeaders() >>> h.parse_line("Content-Type: text/html")
Returns a dictionary from HTTP header text. >>> h = HTTPHeaders.parse("Content-Type: text/html\\r\\nContent-Length: 42\\r\\n") >>> sorted(h.iteritems())
Converts a name to Http-Header-Case. >>> HTTPHeaders._normalize_name("coNtent-TYPE") 'Content-Type'
Converts a string argument to a byte string. If the argument is already a byte
Converts a string argument to a unicode string. If the argument is already a unicode
Converts a string argument to a subclass of basestring. In python2, byte and unicode strings
Walks a simple data structure, converting byte strings to unicode. Supports lists, tuples, and dictionaries.
Make sure that other installed plugins don't affect the same keyword argument and check if
Generator over all subclasses of a given class, in depth-first order. >>> bool in list(iter_subclasses(int))
Based on the matching strategy and the origin and optionally the requested method a tuple
Loads Appinfo content into a Python object. :param data: A byte-like object with the contents
Serializes a dictionary into Appinfo data. :param obj: A dictionary to serialize. :return:
Loads Manifest content into a Python object. :param data: A byte-like object with the contents
Serializes a dictionary into Manifest data. :param obj: A dictionary to serialize. :return: A file
Loads ACF content into a Python object. :param data: An UTF-8 encoded content of an
Serializes a dictionary into ACF data. :param obj: A dictionary to serialize. :return: ACF data.
Does the actual serializing of data into an ACF format. :param obj: A dictionary to
Creates a subsection ready to be filled. :param data: Semi-parsed dictionary. :param sections: A list
Return a vector with the occupancy of each grid point for given array of points
Write a GRO file. Parameters ---------- outfile The stream to write in. title The title
Write a PDB file. Parameters ---------- outfile The stream to write in. title The title
Determine molecule numbers for given total, absolute and relative numbers
Adapt the size of the box to accomodate the lipids. The PBC is changed **in
Write a basic TOP file. The topology is written in *outpath*. If *outpath* is en
Return a stream for a given resource file in the module. The resource file has
Parse lipid definition from string: alhead=C P, allink=A A, altail=TCC CCCC, alname=DPSM, charge=0.0
Build/return a list of [(bead, x, y, z), ...]
Parse a string for a lipid or a solvent as given on the command line
Send a message to a particular user. :param user: User instance :param message: Message to
Send a message to a group of users. :param users: Users queryset :param message: Message
Fetch messages for given user. Returns None if no such message exists. :param user: User
Check for messages for this user and, if it exists, call the messages API with
Checks the config.json file for default settings and auth values. Args: :msg: (Message class) an
Verifies the profile name exists in the config.json file. Args: :msg: (Message class) an instance
Update msg attrs with values from the profile configuration if the msg.attr=None, else leave it
Retrieve auth from profile configuration and set in msg.auth attr. Args: :msg: (Message class) an
Updates the profile's config entry with values set in each attr by the user. This
Updates the profile's auth entry with values set by the user. This will overwrite existing
Create a profile for the given message type. Args: :msg_type: (str) message type to create
Display the required items needed to configure a profile for the given message type. Args:
Get the required 'settings' from the user and return as a dict.
Get the required 'auth' from the user and return as a dict.
Create the profile entry. Args: :msg_type: (str) message type to create config entry. :profile_name: (str)
Write the settings into the data portion of the cfg. Args: :msg_type: (str) message type
Write the settings into the auth portion of the cfg. Args: :msg_type: (str) message type
Build the message params.
Add attachments.
Send the message via HTTP POST, default is json-encoded.
Set the message token/channel, then call the bas class constructor.
Constructs a message class and sends the message. Defaults to sending synchronously. Set send_async=True to
Factory function to return the specified message instance. Args: :msg_type: (str) the type of message
A credential property factory for each message class that will set private attributes and return
A property factory that will dispatch the to a specific validator function that will validate
Base function to validate input, dispatched via message type.
Checker function all validate_* functions below will call. Raises InvalidMessageInputError if input is not valid
Twilio input validator function.
SlackPost input validator function.
WhatsApp input validator function.
Creates a running coroutine to receive message instances and send them in a futures executor.
Add a message to the futures executor.
Reads message body if specified via filepath.
Gets rid of args with value of None, as well as select keys.
Do some final preprocessing and send the message.
Lookup chat_id of username if chat_id is unknown via API call.
Build the message params.
send via HTTP Post.
Start sending the message and attachments.
Send the SMS/MMS message. Set self.sid to return code of message.
Return an SMTP servername guess from outgoing email address.
Put the parts of the email together.
Add email header info.
Add body content of email.
Add required attachments.
Start session with email server.
Get an SMTP session with SSL.
Get an SMTP session with TLS.
Send the message. First, a message is constructed, then a session with the email servers
Remove tags from a file.
Save metadata tags.
Releases renderer resources associated with this image.
Get an image that refers to the given rectangle within this image. The image data
main program loop
Instantiates and returns a :py:class:`route53.connection.Route53Connection` instance, which is how you'll start your interactions with the
Validate keys and values. Check to make sure every key used is a valid Vorbis
Clear all keys from the comment.
Return a string representation of the data. Validation is always performed, so calling this function
Read the chunks data
Removes the chunk from the file
Update the size of the chunk
Insert a new chunk at the end of the IFF file
Save ID3v2 data to the AIFF file
Completely removes the ID3 chunk from the AIFF file
Load stream and tag information from a file.
parse a C source file, and add its blocks to the processor's list
process a normal line and check whether it is the start of a new block
add the current accumulated lines and create a new block
Draw a string with the given font. :note: Text alignment and word-wrapping is not yet
Draw a prepared :class:`GlyphLayout`
Parses a standard ISO 8601 time string. The Route53 API uses these here and there.
convert a series of simple words into some HTML text
analyze a simple word to detect cross-references and styling
convert words of a paragraph into tagged HTML text, handle xrefs
convert a code sequence to HTML
convert a field's content into some valid HTML
main program loop
Parses the API responses for the :py:meth:`route53.connection.Route53Connection.get_hosted_zone_by_id` method. :param lxml.etree._Element root: The root node of
Save the metadata to the given filename.
Update all parent atoms with the new size.
Start running the game. The window is created and shown at this point, and then
Register a mapping for controllers with the given vendor and product IDs. The mapping will
Find a mapping that can apply to the given controller. Returns None if unsuccessful. :param
Register a text key. If the key you need to register is a simple one-to-one
Route53 uses AWS an HMAC-based authentication scheme, involving the signing of a date string with
Determine the headers to send along with the request. These are pretty much the same
All outbound requests go through this method. It defers to the transport's various HTTP method-specific
Sends the GET request to the Route53 endpoint. :param str path: The path to tack
Sends the POST request to the Route53 endpoint. :param str path: The path to tack
Sends the DELETE request to the Route53 endpoint. :param str path: The path to tack
APEv2 tag value factory. Use this if you need to specify the value's type manually.
Load tags from a filename.
Save changes to a file. If no filename is given, the one most recently loaded
Remove tags from a file.
Uses the HTTP transport to query the Route53 API. Runs the response through lxml's parser,
Given an API method, the arguments passed to it, and a function to hand parsing
List all hosted zones associated with this connection's account. Since this method returns a generator,
Creates and returns a new hosted zone. Once a hosted zone is created, its details
Retrieves a hosted zone, by hosted zone ID (not name). :param str id: The hosted
Deletes a hosted zone, by hosted zone ID (not name). .. tip:: For most cases,
Lists a hosted zone's resource record sets by Zone ID, if you already know it.
Given a ChangeSet, POST it to the Route53 API. .. note:: You probably shouldn't be
Draw an image. The image's top-left corner is drawn at ``(x1, y1)``, and its lower-left
Draw a rectangular region of an image. The part of the image contained by the
Total frame size.
Replace old_pages with new_pages within fileobj. old_pages must have come from reading fileobj originally. new_pages
Find the last page of the stream 'serial'. If the file is not multiplexed this
Load file information from a filename.
Remove tags from a file. If no filename is given, the one most recently loaded
Write tag data into the Theora comment packet/page.
Parses the API responses for the :py:meth:`route53.connection.Route53Connection.create_hosted_zone` method. :param lxml.etree._Element root: The root node of
set current section during parsing
add a new markup section
process a block content and return a list of DocMarkup objects corresponding to it
return the DocMarkup corresponding to a given tag in a block
Forms an XML string that we'll send to Route53 in order to create a new
Lock a file object 'safely'. That means a failure to lock because the platform doesn't
Insert size bytes of empty space starting at offset. fobj must be an open file
Delete size bytes of empty space starting at offset. fobj must be an open file
Convert a basestring to a valid UTF-8 str.
Adds a change to this change set. :param str action: Must be one of either
Parses a ChangeInfo tag. Seen in CreateHostedZone, DeleteHostedZone, and ChangeResourceRecordSetsRequest. :param lxml.etree._Element e_change_info: A ChangeInfo
Get a path to the given filename to load as a resource. All non-absolute filenames
Retrieves a :class:`Glyph` that renders the given character. :param char: the character (a string)
Calculates the width of the given string in this font. :param str: the string to
Determines whether this record set has been modified since the last retrieval or save. :rtype:
Deletes this record set.
Saves any changes to this record set.
Remove tags from a file. Keyword arguments: * delete_v1 -- delete any ID3v1 tag *
Parse an ID3v1 tag, returning a list of ID3v2.4 frames.
Return an ID3v1.1 tag string from a dict of ID3v2.4 frames.
Read a certain number of bytes from the source file.
Load tags from a filename. Keyword arguments: * filename -- filename to load tag data
Return all frames with a given name (the list may be empty). This is best
Delete all tags of a given kind; see getall.
Deprecated; use the add method.
Save changes to a file. If no filename is given, the one most recently loaded
Remove tags from a file. If no filename is given, the one most recently loaded
Updates done by both v23 and v24 update
Convert older tags into an ID3v2.4 tag. This updates old ID3v2 frames to ID3v2.4 ones
Convert older (and newer) tags into an ID3v2.3 tag. This updates incompatible ID3v2 frames to
Load stream and tag information from a file. A custom tag reader may be used
Release all resources associated with the sound.
Play the sound as a `one-shot`. The sound will be played to completion. If the
Set the loop points within the sound. The sound must have been created with ``loop=True``.
Parses the API responses for the :py:meth:`route53.connection.Route53Connection.list_hosted_zones` method. :param lxml.etree._Element root: The root node of
return the list of glyph names and their unicode values
filter `alist' by taking _out_ all glyph names that are in `filter
dump a given encoding
dumps a given encoding
main program body
checks that a given file exists
builds a list of input files from command-line arguments
This a common parser that allows the passing of any valid HostedZone tag. It will
Parses a DelegationSet tag. These often accompany HostedZone tags in responses like CreateHostedZone and GetHostedZone.
Render metadata block as a byte string.
Consolidate FLAC padding metadata blocks. The overall size of the rendered blocks does not change,
Remove Vorbis comments from a file. If no filename is given, the one most recently
Load file information from a filename.
Save metadata blocks to a file. If no filename is given, the one most recently
Parses an Alias tag beneath a ResourceRecordSet, spitting out the two values found within. This
Used to parse the various Values from the ResourceRecords tags on most rrset types. :param
This a parser that allows the passing of any valid ResourceRecordSet tag. It will spit
Parses the API responses for the :py:meth:`route53.connection.Route53Connection.list_resource_record_sets_by_zone_id` method. :param lxml.etree._Element e_root: The root node of
:rtype: list :returns: A list of nameserver strings for this hosted zone.
Deletes this hosted zone. After this method is ran, you won't be able to add
Convenience method for creating ResourceRecordSets. Most of the calls are basically the same, this saves
Creates and returns an A record attached to this hosted zone. :param str name: The
Creates an AAAA record attached to this hosted zone. :param str name: The fully qualified
Creates a CNAME record attached to this hosted zone. :param str name: The fully qualified
Creates a MX record attached to this hosted zone. :param str name: The fully qualified
Creates a NS record attached to this hosted zone. :param str name: The fully qualified
Creates a PTR record attached to this hosted zone. :param str name: The fully qualified
Creates a SPF record attached to this hosted zone. :param str name: The fully qualified
Creates a SRV record attached to this hosted zone. :param str name: The fully qualified
Creates a TXT record attached to this hosted zone. :param str name: The fully qualified
Register a user-defined text frame key. Some ID3 tags are stored in TXXX frames, which
In the case of deletions, we pull the change values for the XML request from
Creates an XML element for the change. :param tuple change: A change tuple from a
Forms an XML string that we'll send to Route53 in order to change record sets.
Initiate log file.
Check if text Entry is valid (number). I have no idea what all these arguments
Gets an item by its alias.
Freezes ``dict`` into ``tuple``. A typical usage is packing ``dict`` into hashable. e.g.:: >>> freeze_dict({'a':
Joins the map structure into HTML attributes. The return value is a 2-tuple ``(template, ordered_values)``.
Initializes an app to work with this extension. The app-context signals will be subscribed and
Calls the initializers of all bound navigation bars.
Binds a navigation bar into this extension instance.
The arguments which will be passed to ``url_for``. :type: :class:`dict`
The final url of this navigation item. By default, the value is generated by the
``True`` if current request has same endpoint with the item. The property should be used
Set lang
Set config_path
Set dictionary
current spelling settings :return: api options as number
Does basic Metric option validation.
Fetches a statistics based on the given class name. Does a look-up in the gadgets'
Calculates all of the metrics associated with the registered gadgets.
Resets the specified statistic's data (deletes it) for the given frequency/ies.
Auto-discover INSTALLED_APPS gadgets.py modules and fail silently when not present. This forces an import on
Returns a CSV dump of all of the specified metric's counts and cumulative counts.
Runs the calculator for this type of statistic.
Command handler for the "metrics" command.
Returns the GET array's contents for the specified variable.
Tries to extract a boolean variable from the specified request.
Gets the next colour in the Geckoboard colour list.
Returns the default GET parameters for a particular Geckoboard view request.
Returns a number widget for the specified metric's cumulative total.
Searches the GET variables for metric UIDs, and displays them in a RAG widget.
Shows a pie chart of the metrics in the uids[] GET variable array.
Returns the data for a line chart for the specified metric.
Returns a Geck-o-Meter control for the specified metric.
Returns a funnel chart for the metrics specified in the GET variables.
Returns all of the active statistics for the gadgets currently registered.
Registers a gadget object. If a gadget is already registered, this will raise AlreadyRegistered.
Unregisters the specified gadget(s) if it/they has/have already been registered. "gadgets" can be a single
Get the context for this view.
Print error and stop command
TODO: Need to validate model name has 2x '.' chars
Specific server side errors use: -32000 to -32099 reserved for implementation-defined server-errors
Get/decode/validate json from request
Validation data by specific validictory configuration
Run service
Python 3 input()/Python 2 raw_input()
Get input from a list of choices (q to quit)
Get a multi-line string as input
Get a list of strings as input
Get an output file name as input
Returns the roster table for the given year. :year: The year for which we want
Gets schedule information for a team-season. :year: The year for which we want the schedule.
Returns the date of the game. See Python datetime.date documentation for more. :returns: A datetime.date
Returns the day of the week on which the game occurred. :returns: String representation of
Returns home team ID. :returns: 3-character string representing home team's ID.
Returns score of the home team. :returns: int of the home score.
Returns score of the away team. :returns: int of the away score.
Returns the team ID of the winning team. Returns NaN if a tie.
Returns the week in which this game took place. 18 is WC round, 19 is
Returns the year ID of the season in which this game took place. Useful for
Returns a DataFrame where each row is an entry in the starters table from PFR.
The playing surface on which the game was played. :returns: string representing the type of
Returns the over/under for the game as a float, or np.nan if not available.
Gets information relating to the opening coin toss. Keys are: * wonToss - contains the
Returns a dictionary of weather-related info. Keys of the returned dict: * temp * windChill
Returns a dataframe of the play-by-play data from the game. Order of function calls: 1.
Gets a dictionary of ref positions and the ref IDs of the refs for that
Gets the stats for offense, defense, returning, and kicking of individual players in the game.
Gets the snap counts for both teams' players and returns them in a DataFrame. Note:
Returns PyQuery object for the main season URL. :returns: PyQuery object.
Returns PyQuery object for a given subpage URL. :subpage: The subpage of the season, e.g.
Returns a list of the team IDs for the given year. :returns: List of team
Mapping from 3-letter team IDs to full team names. :returns: Dictionary with team IDs as
Mapping from full team names to 3-letter team IDs. :returns: Dictionary with tean names as
Returns a list of BoxScore IDs for every game in the season. Only needs to
Returns a DataFrame containing standings information.
Helper function for stats tables on season pages. Returns a DataFrame.
Helper function for player season stats. :identifier: string identifying the type of stat, e.g. 'per_game'.
Returns a DataFrame containing information about ROY voting.
Returns the linescore for the game as a DataFrame.
Returns the year ID of the season in which this game took place. :returns: An
Returns a DataFrame of player stats from the game (either basic or advanced, depending on
Returns a dataframe of the play-by-play data from the game. :param dense_lineups: If True, adds
Decorator that switches to given directory before executing function, and then returning to orignal directory.
Caches the HTML returned by the specified function `func`. Caches it in the user cache
Returns a unique identifier for a class instantiation.
A decorator for memoizing functions. Only works on functions that take simple arguments - arguments
Returns the age of the player on a given date. :year: int representing the year.
Returns the player's height (in inches). :returns: An int representing a player's height in inches.
Returns the player's weight (in pounds). :returns: An int representing a player's weight in pounds.
Returns the player's handedness. :returns: 'L' for left-handed, 'R' for right-handed.
Returns when in the draft the player was picked. :returns: TODO
Gets a stats table from the player page; helper function that does the work for
Returns a DataFrame of per-game box score stats.
Returns a DataFrame of total box score statistics by season.
Returns a DataFrame of per-36-minutes stats.
Returns a DataFrame of per-100-possession stats.
Returns a DataFrame of advanced stats.
Returns a DataFrame of shooting stats.
Returns a DataFrame of play-by-play stats.
Returns a table of a player's basic game-by-game stats for a season. :param year: The
Parse play details from a play-by-play string describing a play. Assuming valid input, this function
Fixes up columns of the passed DataFrame, such as casting T/F columns to boolean and
TODO: Docstring for clean_multigame_features. :df: TODO :returns: TODO
TODO
TODO: Docstring for get_sparse_lineups. :param df: TODO :returns: TODO
Returns a new DataFrame based on the one it is passed. Specifically, it adds five
Docstring will be filled in by __init__.py
Converts kwargs given to GPF to a querystring. :returns: the querystring.
Handles scraping options for play finder form. :returns: {'name1': {'value': val, 'options': [opt1, ...] },
Please don't do this in production environments.
Expands the details column of the given dataframe and returns the resulting DataFrame. :df: The
Parses play details from play-by-play string and returns structured data. :details: detail string for play
Cleans up the features collected in parse_play_details. :struct: Pandas Series of features parsed from details
Converts a location string "{Half}, {YardLine}" into a tuple of those values, the second being
Function that adds 'team' and 'opp' columns to the features by iterating through the rows
Given a dict representing a play and the current team with the ball, returns (team,
Adds extra convenience features based on teams with and without possession, with the precondition that
Helper function for player season stats. :identifier: string identifying the type of stat, e.g. 'passing'.
Gets the initial win probability of a game given its Vegas line. :line: The Vegas
Gets the career gamelog of the given player. :kind: One of 'R', 'P', or 'B'
Gets yearly passing stats for the player. :kind: One of 'R', 'P', or 'B'. Case-insensitive;
Gets yearly rushing/receiving stats for the player. :kind: One of 'R', 'P', or 'B'. Case-insensitive;
Returns a DataFrame of plays for a given year for a given play type (like
Returns a DataFrame of advanced splits data for a player-year. Note: only go back to
Template for simple award functions that simply list years, such as pro bowls and first-team
Returns a mapping from team ID to full team name for a given season. Example
Returns a mapping from team name to team ID for a given season. Inverse mapping
Returns the real name of the franchise given the team ID. Examples: 'nwe' -> 'New
Returns the roster table for the given year. :year: The year for which we want
Gets list of BoxScore objects corresponding to the box scores from that year. :year: The
Returns a PyQuery object containing the info from the meta div at the top of
Returns head coach data by game. :year: An int representing the season in question. :returns:
Returns the # of regular season wins a team in a year. :year: The year
Returns a DataFrame with schedule information for the given year. :year: The year for the
Returns the SRS (Simple Rating System) for a team in a year. :year: The year
Returns the SOS (Strength of Schedule) for a team in a year, based on SRS.
Returns the coach ID for the team's OC in a given year. :year: An int
Returns the coach ID for the team's DC in a given year. :year: An int
Returns the ID for the stadium in which the team played in a given year.
Returns the name of the offensive scheme the team ran in the given year. :year:
Returns the name of the defensive alignment the team ran in the given year. :year:
Returns a Series (dict-like) of team stats from the team-season page. :year: Int representing the
Returns a Series (dict-like) of the team's opponent's stats from the team-season page. :year: Int
Returns a DataFrame of offensive team splits for a season. :year: int representing the season.
Gets the HTML for the given URL using a GET request. :url: the absolute URL
Parses a table from sports-reference sites into a pandas dataframe. :param table: the PyQuery object
Parses an info table, like the "Game Info" table or the "Officials" table on the
Flattens relative URLs within text of a table cell to IDs and returns the result.
Converts a relative URL to a unique ID. Here, 'ID' refers generally to the unique
Docstring will be filled in by __init__.py
Converts kwargs given to PSF to a querystring. :returns: the querystring.
Main function for the processes that read from the HDF5 file. :param self: A reference
Wait until all processes have reached the barrier.
Wait until all processes have reached the barrier.
Block until it is the turn indicated by index. :param index: :param next_index: Set the
Create a guard that requires the resource guard to be entered and exited based on
Put an unsigned integer into the queue. This method always assumes that there is space
Fetch the next item in the queue. Blocks until an item is ready. :return: The
Allows direct access to the buffer element. Blocks until there is room to write into
Allows direct access to the buffer element. Blocks until there is data that can be
Close the queue, signalling that no more data can be put into the queue.
Get a block of data from the node at path. :param path: The path to
Get the remainder elements. These elements will not be read in the direct queue access
Get a queue that allows direct access to the internal buffer. If the dataset to
Get a generator that allows convenient access to the streamed data. Elements from the dataset
Parse a stream. Args: ifp (string or file-like object): input stream. pb_cls (protobuf.message.Message.__class__): The class
Write to a stream. Args: ofp (string or file-like object): output stream. pb_objs (*protobuf.message.Message): list
Read a varint from file, parse it, and return the decoded integer.
A generator yielding all protobuf object data in the file. It is the main parser
Close the stream.
Write a group of one or more protobuf objects to the file. Multiple object groups
Write down buffer to the file.
Returns joined game directory path relative to Steamapps
Used internally by deconvolve to compute the maximum a posteriori spike train for a given
The tridiagonal matrix (Thomas) algorithm for solving tridiagonal systems of equations: a_{i}x_{i-1} + b_{i}x_{i} +
Store reference to a WebElement instance representing the element on the DOM. Use it when
Lazily locates the element on the DOM if the WebElement instance is not available already.
Works around the problem of emulating user interactions with text inputs. Emulates a key-down action
Generate 2D fake fluorescence movie Arguments: --------------------------------------------------------------------------- nframes: number of timebins to simulate mask_shape: tuple
Evaluates traits and returns a list containing the description of traits which are not true.
Waits until conditions is True or returns a non-None value. If any of the trait
Waits until all traits are present. If any of the traits is still not present
Set a list of exceptions that should be ignored inside the wait loop.
convert seconds to a pretty "d hh:mm:ss.s" format
Write a command to the receiver and read the value it returns. The receiver will
Execute Main.Volume. Returns int
Execute Main.Source. Returns int
Send a command string to the amplifier.
Return the status of the device. Returns a dictionary with keys 'volume' (int 0-200) ,
Power the device off.
Power the device on.
Set volume level of the device. Accepts integer values 0-200.
Select a source from the list of sources.
Write a command to the receiver and read the value it returns.
Deobfuscates the URL and returns HttpResponse from source view. SEO juice is mostly ignored as
Pads secret if not legal AES block size (16, 24, 32)
Generates crc32. Modulo keep the value within int range.
Encrypts plaintext with secret plaintext - content to encrypt secret - secret to encrypt plaintext
Decrypts ciphertext with secret ciphertext - encrypted content to decrypt secret - secret to decrypt
Template filter that obfuscates whatever text it is applied to. The text is supposed to
It will print the list of songs that can be downloaded
It will return all hyper links found in the mr-jatt page for download
Returns true if user entered artist or movie name
It will the resource URL if song is found, Otherwise it will return the list
It will return the google url to be searched
It will parse google html response and return the first url
song_name is a list of strings website is a string It will return the url
It will download the html page specified by url and return the html response
It will download file specified by url using requests module
It will download file specified by url using wget utility of linux
Main CLI entrypoint.
Create a read-only bloom filter with an upperbound of (num_elements, max_fp_prob) as a specification and
Create a read/write bloom filter with an upperbound of (num_elements, max_fp_prob) as a specification and
Lookup AQI database for station codes in a given city.
Lookup observations by geo coordinates.
Decode AQICN observation response JSON into python object.
Request station data for a specific station identified by code. A language parameter can also
The list of logical paths which are used to search for an asset. This property
The relative path to asset without suffix. Example:: >>> attrs = AssetAttributes(environment, 'js/app.js') >>> attrs.path_without_suffix
The logical path to asset. Example:: >>> attrs = AssetAttributes(environment, 'js/models.js.coffee') >>> attrs.logical_path 'js/models.js'
The list of asset extensions. Example:: >>> attrs = AssetAttributes(environment, 'js/models.js.coffee') >>> attrs.extensions ['.js', '.coffee']
The format extension of asset. Example:: >>> attrs = AssetAttributes(environment, 'js/models.js.coffee') >>> attrs.format_extension '.js' >>>
The list of unknown extensions, which are actually parts of asset filename. Example:: >>> attrs
The list of compiler extensions. Example:: >>> attrs = AssetAttributes(environment, 'js/lib/external.min.js.coffee') >>> attrs.compiler_extensions ['.coffee']
The list of compilers used to build asset.
The list of all processors (preprocessors, compilers, postprocessors) used to build asset.
MIME type of the asset.
Implicit MIME type of the asset by its compilers.
Implicit format extension on the asset by its compilers.
Register passed `processor` for passed `mimetype`.
Remove passed `processor` for passed `mimetype`. If processor for this MIME type does not found
Register :class:`~gears.processors.DirectivesProcessor` as a preprocessor for `text/css` and `application/javascript` MIME types.
The registry for supported suffixes of assets. It is built from MIME types and compilers
The list of search paths. It is built from registered finders, which has ``paths`` property.
Register default compilers, preprocessors and MIME types.
Allow Gears plugins to inject themselves to the environment. For example, if your plugin's package
Find files using :attr:`finders` registry. The ``item`` parameter can be an instance of :class:`~gears.asset_attributes.AssetAttributes` class,
Yield two-tuples for all files found in the directory given by ``path`` parameter. Result can
Save handled public assets to :attr:`root` directory.
+-----------------------------------------------------------------------+ | +--- splitter ------------------------------------------------------+ | | | +-- list widget--------------+ +- IdaSettingsView -------------+ |
Converts the class into an actual handler function that can be used when registering different
Runs :attr:`executable` with ``input`` as stdin. :class:`AssetHandlerError` exception is raised, if execution is failed, otherwise
Returns :class:`subprocess.Popen` instance with args from :meth:`get_args` result and piped stdin, stdout and stderr.
This nasty piece of code is here to force the loading of IDA's Qt bindings.
Get the netnode used to store settings metadata in the current IDB. Note that this
Add the given plugin name to the list of plugin names registered in the current
Remove the given plugin name to the list of plugin names registered in the current
Import settings from the given file system path to given settings instance. type settings: IDASettingsInterface
Export the given settings instance to the given file system path. type settings: IDASettingsInterface type
Fetch the IDASettings instance for the curren plugin with directory scope. rtype: IDASettingsInterface
Fetch the settings value with the highest precedence for the given key, or raise KeyError.
Enumerate the keys found at any scope for the current plugin. rtype: Generator[str]
Get the names of all plugins at the directory scope. Provide a config directory path
Returns the response that should be used for any given exception. By default we handle
Returns a given table for the given user.
Returns a list of tables for the given user.
Fetch packages and summary from Crates.io :param category: the category of items to fetch :param
Extracts the identifier from an item depending on its type.
Extracts the update time from an item. Depending on the item, the timestamp is extracted
Init client
Fetch summary
Fetch crates
Get crate team owner
Get crate user owners
Get crate versions data
Get crate version downloads
Get crate data
Get Crates.io summary
Get crates in alphabetical order
Get a crate by its ID
Get crate attribute
Return the items from Crates.io API using pagination
Return the textual content associated to the Response object
Fetch questions from the Kitsune url. :param category: the category of items to fetch :offset:
Fetch questions from the Kitsune url :param category: the category of items to fetch :param
Init client
Retrieve questions from older to newer updated starting offset
Retrieve all answers for a question from older to newer (updated)
Return the textual content associated to the Response object
Fetch items from the ReMo url. The method retrieves, from a ReMo URL, the set
Fetch items :param category: the category of items to fetch :param kwargs: backend arguments :returns:
Extracts the update time from a ReMo item. The timestamp is extracted from 'end' field.
Extracts the category from a ReMo item. This backend generates items types 'event', 'activity' or
Init client
Retrieve all items for category using pagination
The buffer list this instance operates on. Only available in mode != AIOBLOCK_MODE_POLL. Changes on
IO priority for this instance.
Cancels all pending IO blocks. Waits until all non-cancellable IO blocks finish. De-initialises AIO context.
Submits transfers. block_list (list of AIOBlock) The IO blocks to hand off to kernel. Returns
Cancel an IO block. block (AIOBlock) The IO block to cancel. Returns cancelled block's event
Cancel all submitted IO blocks. Blocks until all submitted transfers have been finalised. Submitting more
Returns a list of event data from submitted IO blocks. min_nr (int, None) When timeout
Fetch events from the MozillaClub URL. The method retrieves, from a MozillaClub URL, the events.
Fetch events :param category: the category of items to fetch :param kwargs: backend arguments :returns:
Init client
Retrieve all cells from the spreadsheet.
Parse the MozillaClub spreadsheet feed cells json.
Get the events fields (columns) from the cells received.
Return data files in directory *dirname*
Calculates the md5-hash of the file. :param file_path: full path to the file.
Shows file size. :param full_path: full path to the file.
Split the tuple (obtained from scan) to separate files. Alternately send full paths to the
Scan the directory and send the obtained tuple to calculate. :param tree: path to file
List of export formats.
Load default permission factory.
Flask application initialization. :param app: The Flask application.
Create Invenio-Records-UI blueprint. The factory installs one URL route per endpoint defined, and adds an
Create Werkzeug URL rule for a specific endpoint. The method takes care of creating a
Display record view. The two parameters ``resolver`` and ``template`` should not be included in the
r"""Display default view. Sends record_viewed signal and renders template. :param pid: PID object. :param record:
r"""Record serialization view. Serializes record with given format and renders record export template. :param pid:
Load test data fixture.
Send a Timer metric calculating duration of execution of the provided callable
Close the socket to free system resources. After the socket is closed, further operations with
Remove the client from the users of the socket. If there are no more clients
Increment a Counter metric
Send a Timer metric with the specified duration in milliseconds
Send a Timer metric calculating the duration from the start time
Send a Gauge metric with the specified value
Send a GaugeDelta metric to change a Gauge by the specified value
Send a Set metric with the specified unique value
Override parent by buffering the metric instead of sending now
Return a batch client with same settings of the client
Return a client with same settings of the batch client
Send buffered metrics in batch requests
My permission factory.
Return a TCP batch client with same settings of the TCP client
Send buffered metrics in batch requests over TCP
Return a TCPClient with same settings of the batch TCP client
Supposes that choices is sequence of two elements items, where first one is the probability
Returns random float >>> result = any_float(min_value=0, max_value=100, precision=2) >>> type(result) <type 'float'> >>> result
Return string with random content >>> result = any_string(letters = ascii_letters, min_length=3, max_length=100) >>> type(result)
Return random date from the [from_date, to_date] interval >>> result = any_date(from_date=date(1990,1,1), to_date=date(1990,1,3)) >>> type(result)
Return random datetime from the [from_date, to_date] interval >>> result = any_datetime(from_date=datetime(1990,1,1), to_date=datetime(1990,1,3)) >>> type(result)
Return random decimal from the [min_value, max_value] interval >>> result = any_decimal(min_value=0.999, max_value=3, decimal_places=3) >>>
Shortcut for creating Users Permissions could be a list of permission names If not specified,
tries to convert a Python object into an OpenMath object this is not a replacement
Converts a term into OpenMath, using either a converter or the interpretAsOpenMath method
Convert OpenMath object to Python
Convert Python object to OpenMath
Register a conversion from Python to OpenMath :param py_class: A Python class the conversion is
Register a conversion from OpenMath to Python This function has two forms. A three-arguments one:
This is a shorthand for: ``self.register_to_python(om_cd, om_name, to_py)`` ``self.register_to_openmath(py_class, to_om)``
Used to initialize redis with app object
Return list of choices's keys
django_any birds language parser
Register form field data function. Could be used as decorator
Lowest value generator. Separated from __call__, because it seems that python cache __call__ reference on
Returns tuple with form data and files
Sometimes return None if field is not required >>> result = any_form_field(forms.BooleanField(required=False)) >>> result in
Selection from field.choices
Return random value for CharField >>> result = any_form_field(forms.CharField(min_length=3, max_length=10)) >>> type(result) <type 'str'>
Return random value for DecimalField >>> result = any_form_field(forms.DecimalField(max_value=100, min_value=11, max_digits=4, decimal_places = 2)) >>>
Return random value for EmailField >>> result = any_form_field(forms.EmailField(min_length=10, max_length=30)) >>> type(result) <type 'str'> >>>
Return random value for DateField >>> result = any_form_field(forms.DateField()) >>> type(result) <type 'str'>
Return random value for DateTimeField >>> result = any_form_field(forms.DateTimeField()) >>> type(result) <type 'str'>
Return random value for FloatField >>> result = any_form_field(forms.FloatField(max_value=200, min_value=100)) >>> type(result) <type 'str'> >>>
Return random value for IntegerField >>> result = any_form_field(forms.IntegerField(max_value=200, min_value=100)) >>> type(result) <type 'str'> >>>
Return random value for IPAddressField >>> result = any_form_field(forms.IPAddressField()) >>> type(result) <type 'str'> >>> from
Return random value for SlugField >>> result = any_form_field(forms.SlugField()) >>> type(result) <type 'str'> >>> from
Return random value for TimeField >>> result = any_form_field(forms.TimeField()) >>> type(result) <type 'str'>
Return random value for ChoiceField >>> CHOICES = [('YNG', 'Child'), ('OLD', 'Parent')] >>> result =
Return random value for MultipleChoiceField >>> CHOICES = [('YNG', 'Child'), ('MIDDLE', 'Parent') ,('OLD', 'GrandParent')] >>>
Return one of first ten items for field queryset
Encodes an OpenMath object as an XML node. :param obj: OpenMath object (or related item)
Encodes an OpenMath element into a string. :param obj: Object to encode as string. :type
Decodes a stream into an OpenMath object. :param xml: XML to decode. :type xml: bytes
Decodes a stream into an OpenMath object. :param stream: Stream to decode. :type stream: Any
Decodes an XML element into an OpenMath object. :param elem: Element to decode. :type elem:
Deploy the app to PYPI. Args: msg (str, optional): Description
Deploy a version tag.
Sometimes return None if field could be blank
Selection from field.choices >>> CHOICES = [('YNG', 'Child'), ('OLD', 'Parent')] >>> result = any_field(models.CharField(max_length=3, choices=CHOICES))
Return random value for BigIntegerField >>> result = any_field(models.BigIntegerField()) >>> type(result) <type 'long'>
An positive integer >>> result = any_field(models.PositiveIntegerField()) >>> type(result) <type 'int'> >>> result > 0
Return random value for CharField >>> result = any_field(models.CharField(max_length=10)) >>> type(result) <type 'str'>
Return random value for CharField >>> result = any_field(models.CommaSeparatedIntegerField(max_length=10)) >>> type(result) <type 'str'> >>> [int(num)
Return random value for DateField, skips auto_now and auto_now_add fields >>> result = any_field(models.DateField()) >>>
Return random value for DateTimeField, skips auto_now and auto_now_add fields >>> result = any_field(models.DateTimeField()) >>>
Return random value for DecimalField >>> result = any_field(models.DecimalField(max_digits=5, decimal_places=2)) >>> type(result) <class 'decimal.Decimal'>
Return random value for EmailField >>> result = any_field(models.EmailField()) >>> type(result) <type 'str'> >>> re.match(r"(?:^|\s)[-a-z0-9_.]+@(?:[-a-z0-9]+\.)+[a-z]{2,6}(?:\s|$)",
Return random value for FloatField >>> result = any_field(models.FloatField()) >>> type(result) <type 'float'>
Lookup for nearest existing file
Lookup for nearest existing file
Return random value for IPAddressField >>> result = any_field(models.IPAddressField()) >>> type(result) <type 'str'> >>> from
Return random value for PositiveSmallIntegerField >>> result = any_field(models.PositiveSmallIntegerField()) >>> type(result) <type 'int'> >>> result
Return random value for SlugField >>> result = any_field(models.SlugField()) >>> type(result) <type 'str'> >>> from
Return random value for SmallIntegerValue >>> result = any_field(models.SmallIntegerField()) >>> type(result) <type 'int'> >>> result
Return random value for IntegerField >>> result = any_field(models.IntegerField()) >>> type(result) <type 'int'>
Return random value for URLField >>> result = any_field(models.URLField()) >>> from django.core.validators import URLValidator >>>
Return random value for TimeField >>> result = any_field(models.TimeField()) >>> type(result) <type 'datetime.time'>
Evaluate an OpenMath symbol describing a global Python object EXAMPLES:: >>> from openmath.convert_pickle import to_python
Apply the setstate protocol to initialize `inst` from `state`. INPUT: - ``inst`` -- a raw
r""" Helper function to build an OMS object EXAMPLES:: >>> from openmath.convert_pickle import PickleConverter >>>
Convert a list of OM objects into an OM object EXAMPLES:: >>> from openmath import
Convert a tuple of OM objects into an OM object EXAMPLES:: >>> from openmath import
Convert a dictionary (or list of items thereof) of OM objects into an OM object
Decodes a PackBit encoded data.
Encodes data using PackBits encoding.
Summary. Args: format (TYPE, optional): Description Returns: name (TYPE): Description
Check and normalise the value of precision (must be positive integer). Args: val (INT): must
Summary. Takes a string/array of strings, removes all formatting/cruft and returns the raw float value
Implementation that treats floats more like decimals. Fixes binary rounding issues (eg. (0.615).toFixed(2) === "0.61")
Format a given number. Format a number, with comma-separated thousands and custom precision/decimal places Localise
Format a number into currency. Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format) defaults: (0, "$",
Import a blosc array into a numpy array. Arguments: data: A blosc packed numpy array
Export a numpy array to a blosc array. Arguments: array: The numpy array to compress
Add a workspace entry in user config file.
Remove workspace from config file.
List all available workspaces.
Get workspace infos from name. Return None if workspace doesn't exists.
Return True if workspace contains repository name.
Synchronise workspace's repositories.
Clone a repository.
Tells you if you have an old version of ndio.
Converts an array to its voxel list. Arguments: array (numpy.ndarray): A numpy nd array. This
Converts a voxel list to an ndarray. Arguments: voxels (tuple[]): A list of coordinates indicating
Execute update subcommand.
Print repository update.
Set FileHandler
Set Console handler.
Execute command with os.popen and return output.
Import a png file into a numpy array. Arguments: png_filename (str): A string filename of
Export a numpy array to a png file. Arguments: filename (str): A filename to which
Export a numpy array to a set of png files, with each Z-index 2D array
Import all files matching the filename base given with `png_filename_base`. Images are ordered by alphabetical
Print workspace status.
Print repository status.
Gets the block-size for a given token at a given resolution. Arguments: token (str): The
Return a binary-encoded, decompressed 2d image. You should specify a 'token' and 'channel' pair. For
Get a RAMONVolume volumetric cutout from the neurodata server. Arguments: token (str): Token to identify
Get volumetric cutout data from the neurodata server. Arguments: token (str): Token to identify data
Post a cutout to the server. Arguments: token (str) channel (str) x_start (int) y_start (int)
Accepts data in zyx. !!!
Import a TIFF file into a numpy array. Arguments: tiff_filename: A string filename of a
Export a numpy array to a TIFF file. Arguments: tiff_filename: A filename to which to
Load a multipage tiff into a single variable in x,y,z format. Arguments: tiff_filename: Filename of
Write config in configuration file. Data must me a dict.
Clone repository from url.
Get version from package resources.
Mixing and matching positional args and keyword options.
Same as mix_and_match, but using the @option decorator.
Import a nifti file into a numpy array. TODO: Currently only transfers raw data for
Export a numpy array to a nifti file. TODO: currently using dummy headers and identity
Return the status-code of the API (estimated using the public-tokens lookup page). Arguments: suffix (str
Return a constructed URL, appending an optional suffix (uri path). Arguments: suffix (str : ""):
Requests a list of next-available-IDs from the server. Arguments: quantity (int): The number of IDs
Call the restful endpoint to merge two RAMON objects into one. Arguments: token (str): The
Creates channels given a dictionary in 'new_channels_data' , 'dataset' name, and 'token' (project) name. Arguments:
Kick off the propagate function on the remote server. Arguments: token (str): The token to
Get the propagate status for a token/channel pair. Arguments: token (str): The token to check
Creates a project with the given parameters. Arguments: project_name (str): Project name dataset_name (str): Dataset
Lists a set of projects related to a dataset. Arguments: dataset_name (str): Dataset name to
Creates a token with the given parameters. Arguments: project_name (str): Project name dataset_name (str): Dataset
Get a token with the given parameters. Arguments: project_name (str): Project name dataset_name (str): Dataset
Delete a token with the given parameters. Arguments: project_name (str): Project name dataset_name (str): Dataset
Lists a set of tokens that are public in Neurodata. Arguments: Returns: dict: Public tokens
Creates a dataset. Arguments: name (str): Name of dataset x_img_size (int): max x coordinate of
Returns info regarding a particular dataset. Arugments: name (str): Dataset name Returns: dict: Dataset information
Lists datasets in resources. Setting 'get_global_public' to 'True' will retrieve all public datasets in cloud.
Arguments: name (str): Name of dataset to delete Returns: bool: True if dataset deleted, False
Create a new channel on the Remote, using channel_data. Arguments: channel_name (str): Channel name project_name
Gets info about a channel given its name, name of its project , and name
Parse show subcommand.
Execute show subcommand.
Show specific workspace.
Show details for all workspaces.
Get the base URL of the Remote. Arguments: None Returns: `str` base URL
Ping the server to make sure that you can access the base URL. Arguments: None
Converts a dense annotation to a DAE, using Marching Cubes (PyMCubes). Arguments: filename (str): The
Converts a dense annotation to a obj, using Marching Cubes (PyMCubes). Arguments: filename (str): The
Converts a dense annotation to a .PLY, using Marching Cubes (PyMCubes). Arguments: filename (str): The
Guess the appropriate data type from file extension. Arguments: ext: The file extension (period optional)
Reads in a file from disk. Arguments: in_file: The name of the file to read
Converts in_file to out_file, guessing datatype in the absence of in_fmt and out_fmt. Arguments: in_file:
Builds a graph using the graph-services endpoint. Arguments: project (str): The project to use site
Compute invariants from an existing GraphML file using the remote grute graph services. Arguments: graph_file
Convert a graph from one GraphFormat to another. Arguments: graph_file (str): Filename of the file
Converts a RAMON object list to a JSON-style dictionary. Useful for going from an array
Converts RAMON objects into a JSON string which can be directly written out to a
Converts JSON to a python list of RAMON objects. if `cutout` is provided, the `cutout`
Converts an HDF5 file to a RAMON object. Returns an object that is a child-
Exports a RAMON object to an HDF5 file object. Arguments: ramon (RAMON): A subclass of
Takes str or int, returns class type
Return a binary-encoded, decompressed 2d image. You should specify a 'token' and 'channel' pair. For
Get a RAMONVolume volumetric cutout from the neurodata server. Arguments: token (str): Token to identify
Get volumetric cutout data from the neurodata server. Arguments: token (str): Token to identify data
Post a cutout to the server. Arguments: token (str) channel (str) x_start (int) y_start (int)
Creates a project with the given parameters. Arguments: project_name (str): Project name dataset_name (str): Dataset
Creates a token with the given parameters. Arguments: project_name (str): Project name dataset_name (str): Dataset
Get a token with the given parameters. Arguments: project_name (str): Project name dataset_name (str): Dataset
Delete a token with the given parameters. Arguments: project_name (str): Project name dataset_name (str): Dataset
Creates a dataset. Arguments: name (str): Name of dataset x_img_size (int): max x coordinate of
Create a new channel on the Remote, using channel_data. Arguments: channel_name (str): Channel name project_name
Gets info about a channel given its name, name of its project , and name
Deletes a channel given its name, name of its project , and name of its
Arguments: channel_name (str): Channel Name is the specific name of a specific series of data.
Arguments: project_name (str): Project name is the specific project within a dataset's name. If there
Add a new dataset to the ingest. Arguments: dataset_name (str): Dataset Name is the overarching
Genarate ND json object.
Generate the dataset dictionary
Generate the project dictionary.
Genarate the project dictionary.
Identify the image size using the data location and other parameters
Verify the path supplied.
Try to post data to the server.
Arguments: file_name (str): The file name of the json file to post (optional). If this
Arguments: file_name(str : '/tmp/ND.json'): The file name to store the json to Returns: None
Find path for given workspace and|or repository.
Get a list of public tokens available on this server. Arguments: None Returns: str[]: list
NOTE: VERY SLOW! Get a dictionary relating key:dataset to value:[tokens] that rely on that dataset.
Return the project info for a given token. Arguments: token (str): Token to return information
Return the size of the volume (3D). Convenient for when you want to download the
Insert new metadata into the OCP metadata database. Arguments: token (str): Token of the datum
Adds a new subvolume to a token/channel. Arguments: token (str): The token to write to
Get a response object for a given url. Arguments: url (str): The url make a
Returns a post resquest object taking in a url, user token, and possible json information.
Returns a delete resquest object taking in a url and user token. Arguments: url (str):
Ping the server to make sure that you can access the base URL. Arguments: None
Import a HDF5 file into a numpy array. Arguments: hdf5_filename: A string filename of a
Export a numpy array to a HDF5 file. Arguments: hdf5_filename (str): A filename to which
return values of execute are set as result of the task returned by ensure_future(), obtainable
Adds a character matrix to DendroPy tree and infers gaps using Fitch's algorithm. Infer gaps
calls `map` to shift the recover execution to flat_map_nvim_io
Read codeml file.
Always return a stripped string, localized if possible
Always return a stripped string, localized if possible
Install our gettext and ngettext functions into Jinja2's environment.
Override django's utils.translation.activate(). Django forces files to be named django.mo (http://code.djangoproject.com/ticket/6376). Since that's dumb and
We piggyback on jinja2's babel_extract() (really, Babel's extract_* functions) but they don't support some things
this is the central unsafe function, using a lock and updating the state in `guard`
Calculate a percentage.
Get stats info.
Get slabs info.
Add admin global context, for compatibility with Django 1.7
Return the status of all servers.
Show the dashboard.
Show server statistics.
Show server slabs.
Convert a byte value into a human-readable format.
Find a config in our children so we can fill in variables in our other
Add objects to the environment.
Replace any config tokens in the file's path with values from the config.
Get the path to the file relative to its parent.
Read and return the contents of the file.
Write data to the file. `data` is the data to write `mode` is the mode
Configure the Python logging module for this file.
Create the file. If the file already exists an exception will be raised
Replace any config tokens with values from the config.
Return the path to this directory.
Remove the directory.
Prepare the Directory for use in an Environment. This will create the directory if the
Clean up children and remove the directory. Directory will only be removed if the cleanup
Find the path to something inside this directory.
List the contents of the directory.
Write to a file in the directory.
Read a file from the directory.
Add objects to the directory.
Save the state to a file.
Load a saved state file.
Clean up the saved state.
Loads plugins from the specified directory. `directory` is the full path to a directory containing
Recursively merge values from a nested dictionary into another nested dictionary. For example: >>> target
Return a ConfigNode object representing a child node with the specified relative path.
Returns a tuple of a reference to the last container in the path, and the
Get the value represented by this node.
Update the configuration with new data. This can be passed either or both `data` and
Load the config and defaults from files.
Apply the config to a string.
View decorator to validate requests from Twilio per http://www.twilio.com/docs/security.
Build Twilio callback url for confirming message delivery status :type message: OutgoingSMS
Create :class:`OutgoingSMS` object and send SMS using Twilio.
\b Examples: $ moo README.md # live preview README.md $ moo -e *.md # export
Called when socket is read-ready
Called when socket is write-ready
Do connection-based processing (I/O and timers)
Caller factory
Send a message containing the RPC method call
Read from the network layer and processes all data read. Can support both blocking and
Write data to the network layer. Can support both blocking and non-blocking sockets. Returns the
Decorator that prevents callbacks from calling into link methods that are not reentrant
Return a map containing the settle modes as provided by the remote. Skip any default
Assign addresses, properties, etc.
Return the authorative source of the link.
Return the authorative target of the link.
Remote has closed the session used by this link.
See Link Reject, AMQP1.0 spec.
Check if the delivery can be processed.
See Link Reject, AMQP1.0 spec.
Check if the delivery can be processed.
Create a new sender link.
Create link from request for a sender.
Create a new receiver link.
Create link from request for a receiver.
Link has been destroyed.
Peer has closed its end of the session.
Called when the Proton Engine generates an endpoint state change event.
Modifies inline patterns.
Peer has closed its end of the link.
Protocol error occurred.
Parse the hostname and port out of the server_address.
Create a TCP connection to the server.
Create a TCP listening socket for a server.
Handle I/O and Timers on a single Connection.
A utility to help determine which connections need processing. Returns a triple of lists containing
Decorator that prevents callbacks from calling into methods that are not reentrant
Perform connection state processing.
Get a buffer of data that needs to be written to the network.
Factory method for Sender links.
Rejects the SenderLink, and destroys the handle.
Factory method for creating Receive links.
Clean up after connection failure detected.
Both ends of the Endpoint have become active.
The remote has closed its end of the endpoint.
The endpoint state machine failed due to protocol error.
This decorator provides several helpful shortcuts for writing Twilio views. - It ensures that only
Equality test
Adobe output string for defining colors
Select a font; size given in points
Get width of a string in the current font
Given a search path, find file with requested extension
May be used to compress PDF files. Code is more readable for testing and inspection
PDF objects #1 through #3 are typically saved for the Zeroth, Catalog, and Pages Objects.
The flag is a simple integer to force the placement of the object into position
Stores the pdf code in a buffer. If it is page related, provide the page
Creates a PDF text stream sandwich.
Helper function for PDFText, to have the document add a page, and retry adding a
Default color object is black letters & black lines.
Internal method to set the initial default font. Change the font using set_font method.
May generate and add a PDFPage separately, or use this to generate a default page.
Set the document font object, size given in points. If family, style, and/or size is
Convenience method for just changing font size.
Input text, short or long. Writes in order, within the defined page boundaries. Sequential add_text
Starts over again at the new line. If number is specified, it will leave multiple
Data type may be "raw" or "percent"
Called by the PDFLite object to prompt creating the page objects.
Returns a list of the pages that have orientation changes.
Called by the PDFLite object to prompt creating the font objects.
Creates reference images, that can be drawn throughout the document.
Prompts the creating of image objects.
Adjust the current transformation state of the current graphics state matrix. Not recommended for the
return the absolute position of x,y in user space w.r.t. default user space
Rotate current graphic state by the angle theta (in degrees).
Style should be a string, containing the letters 'B' for bold, 'U' for underline, or
Select a font; size given in points
Get width of a string in the current font
Edge coordinates of an hexagon centered in (x,y) having a side of d: [x-d/2, y+sqrt(3)*d/2]
Rotates a point relative to the mesh origin by the angle specified in the angle
Convenience function to add property info, can set any attribute and leave the others blank,
Set the default viewing options.
Prompt the objects to output pdf code, and save to file.
Standard first line in a PDF.
First, the Document object does the heavy-lifting for the individual page objects and content. Then,
Creates PDF reference to resource objects.
PDF Information object.
Catalog object.
Cross Reference Object, calculates the position in bytes to the start (first number) of each
Final Trailer calculations, and end-of-file reference.
Save to filepath specified on init. (Will throw an error if the document is already
Provides for escape characters and converting to pdf text object (pdf strings are in parantheses).
Floyd's Cycle Detector. See help(cycle_detector) for more context. Args: *args: Two iterators issueing the exact
Naive cycle detector See help(cycle_detector) for more context. Args: sequence: A sequence to detect cyles
Gosper's cycle detector See help(cycle_detector) for more context. Args: sequence: A sequence to detect cyles
Brent's Cycle Detector. See help(cycle_detector) for more context. Args: *args: Two iterators issueing the exact
Test to see if the line can has enough space for the given length.
Test to see if the page has enough space for the given text height.
Comparison for x coordinate
Comparison for y coordinate
Create a copy, and return it.
Mutable x addition. Defaults to set delta value.
Mutable y addition. Defaults to set delta value.
Valid choices: 'a3, 'a4', 'a5', 'letter', 'legal', '11x17'.
Don't use this, use document.draw_table
Creates a new label and returns the response :param name: The label name :type name:
Get all current labels :return: The Logentries API response :rtype: list of dict :raises: This
Get labels by name :param name: The label name, it must be an exact match.
Update a Label :param label: The data to update. Must include keys: * id (str)
Delete the specified label :param id: the label's ID :type id: str :raises: This will
Create a new tag :param label_id: The Label ID (the 'sn' key of the create
Get all current tags :return: All tags :rtype: list of dict :raises: This will raise
Get tags by a label's sn key :param label_sn: A corresponding label's ``sn`` key. :type
Create a hook :param name: The hook's name (should be the same as the tag)
Get all current hooks :return: All hooks :rtype: list of dict :raises: This will raise
Get hooks by name or tag_id. :param name_or_tag_id: The hook's name or associated tag['id'] :type
Update a hook :param hook: The data to update. Must include keys: * id (str)
Create a new alert :param alert_config: A list of AlertConfig classes (Ex: ``[EmailAlertConfig('me@mydomain.com')]``) :type alert_config:
Get alerts that match the alert type and args. :param alert_type: The type of the
Update an alert :param alert: The data to update. Must include keys: * id (str)
Initialize this Sphinx extension
Retrieve the location of the themes directory from the location of this package This is
A wrapper for posting things. :param request: The request type. Must be one of the
Get all log sets :return: Returns a dictionary where the key is the hostname or
Get a specific log or log set :param log_set: The log set or log to
Find a slider attacker Parameters ---------- dest_list : list To store the results. occ_bb :
The approximate transit duration for the general case of an eccentric orbit
Update the transit keyword arguments
Computes the light curve model
Bins the light curve model to the provided time array
Frees the memory used by all of the dynamically allocated C arrays.
Reads data from the socket. Raises: NNTPError: When connection times out or read from socket
Generator that reads a line of data from the server. It first attempts to read
Generator that reads a block of data from the server. It first attempts to read
Reads a command response status. If there is no response message then the returned status
Generator for the lines of an info (textual) response. When a terminating line (line containing
Generator for the lines of a compressed info (textual) response. Compressed responses are an extension
Generator for the lines of a compressed info (textual) response. Compressed responses are an extension
Dispatcher for the info generators. Determines which __info_*_gen() should be used based on the supplied
The complete content of an info response. This should only used for commands that return
Call a command on the server. If the user has not authenticated then authentication will
CAPABILITIES command. Determines the capabilities of the server. Although RFC3977 states that this is a
MODE READER command. Instructs a mode-switching server to switch modes. See <http://tools.ietf.org/html/rfc3977#section-5.3> Returns: Boolean value
QUIT command. Tells the server to close the connection. After the server acknowledges the request
DATE command. Coordinated Universal time from the perspective of the usenet server. It can be
HELP command. Provides a short summary of commands that are understood by the usenet server.
Generator for the NEWGROUPS command. Generates a list of newsgroups created on the server since
Generator for the NEWNEWS command. Generates a list of message-ids for articles created since the
NEWNEWS command. Retrieves a list of message-ids for articles created since the specified timestamp for
Generator for the LIST ACTIVE command. Generates a list of active newsgroups that match the
Generator for the LIST ACTIVE.TIMES command. Generates a list of newsgroups including the creation time
Generator for the LIST NEWSGROUPS command. Generates a list of newsgroups including the name and
Generator for the LIST OVERVIEW.FMT See list_overview_fmt() for more information. Yields: An element in the
Generator for the LIST EXTENSIONS command.
Generator for LIST command. See list() for more information. Yields: An element in the list
LIST command. A wrapper for all of the other list commands. The output of this
GROUP command.
NEXT command.
ARTICLE command.
HEAD command.
BODY command.
XGTITLE command.
XHDR command.
XZHDR command. Args: msgid_range: A message-id as a string, or an article number as an
Generator for the XOVER command. The XOVER command returns information from the overview database for
Generator for the XPAT command.
XPAT command.
XFEATURE COMPRESS GZIP command.
POST command. Args: headers: A dictionary of headers. body: A string or file like object
assumes that classes that inherit list, tuple or dict have a constructor that is compatible
The standard quadratic limb darkening law. :param ndarray r: The radius vector :param limbdark: A
Plots a light curve described by `kwargs` :param bool compact: Display the compact version of
Parse timezone to offset in seconds. Args: value: A timezone in the '+0000' format. An
Convert timestamp string to time in seconds since epoch. Timestamps strings like '18 Jun 2013
Convert timestamp string to a datetime object. Timestamps strings like '18 Jun 2013 12:00:00 GMT'
Convert timestamp string to time in seconds since epoch. Timestamps strings like 'Tue, 18 Jun
Convert timestamp string to a datetime object. Timestamps strings like 'Tue, 18 Jun 2013 22:00:00
Convert timestamp string to time in seconds since epoch. Timestamps strings like '20130618120000' are able
Convert timestamp string to a datetime object. Timestamps strings like '20130618120000' are able to be
Convert timestamp string to a datetime object. Timestamps strings like '1383470155' are able to be
Convert timestamp string to time in seconds since epoch. Wraps the datetime.datetime.strptime(). This is slow
Convert timestamp string to time in seconds since epoch. Most timestamps strings are supported in
Parse a datetime to a unix timestamp. Uses fast custom parsing for common datetime formats
Parse a datetime to a datetime object. Uses fast custom parsing for common datetime formats
Fix the alert config .args() dict for the correct key name
returns the payload the login page expects :rtype: dict
Convenience method for posting
Convenience method for deleting
Convenience method for getting
._login() makes three requests: * One to the /login/ page to get a CSRF cookie
List all scheduled_queries :return: A list of all scheduled query dicts :rtype: list of dict
List all tags for the account. The response differs from ``Hooks().list()``, in that tag dicts
Get alert by name or id :param name_or_id: The alert's name or id :type name_or_id:
Create an inactivity alert :param name: A name for the inactivity alert :type name: str
Delete the specified InactivityAlert :param tag_id: The tag ID to delete :type tag_id: str :raises:
Create the scheduled query
Create an anomaly alert. This call makes 2 requests, one to create a "scheduled_query", and
Delete a specified anomaly alert tag and its scheduled query This method makes 3 requests:
Unparse a range argument. Args: obj: An article range. There are a number of valid
Parse a newsgroup info line to python types. Args: line: An info response line containing
Parse a header line. Args: line: A header line as a string. Returns: None if
Parse a string a iterable object (including file like objects) to a python dictionary. Args:
Parse a dictionary of headers to a string. Args: hdrs: A dictionary of headers. Returns:
Handles the POST request sent by Boundary Url Action
Run the tests that are loaded by each of the strings provided. Arguments: tests (iterable):
Return a docstring from a list of defaults.
Decorator to append default kwargs to a function.
Load kwargs key,value pairs into __dict__
Add the default values to the class docstring
Set the value This invokes hooks for type-checking and bounds-checking that may be implemented by
Hook for type-checking, invoked during assignment. raises TypeError if neither value nor self.dtype are None
Return the current value. This first checks if the value is cached (i.e., if `self.__value__`
Hook for type-checking, invoked during assignment. Allows size 1 numpy arrays and lists, but raises
Return the symmertic error Similar to above, but zero implies no error estimate, and otherwise
Set free/fixed status
Set parameter error estimate
Set the value,bounds,free,errors based on corresponding kwargs The invokes hooks for type-checking and bounds-checking that
Load the metrics file from the given path
1) Get command line arguments 2) Read the JSON file 3) Parse into a dictionary
Create an instance using the result of the timezone() call in "pytz".
Extract required fields from an array
Apply the criteria to filter out on the metrics required
Extracts the specific arguments of this CLI
Extracts the specific arguments of this CLI
Make a call to the meter via JSON RPC
Extracts the specific arguments of this CLI
identifier = alpha_character | "_" . {alpha_character | "_" | digit} ;
expression = number , op_mult , expression | expression_terminal , op_mult , number , [operator
expression_terminal = identifier | terminal | option_group | repetition_group | grouping_group | special_handling ;
option_group = "[" , expression , "]" ;
terminal = '"' . (printable - '"') + . '"' | "'" . (printable -
operator = "|" | "." | "," | "-";
op_mult = "*" ;
op_add = "+" ;
Set the value (and bounds) of the named parameter. Parameters ---------- name : str The
Set a group of attributes (parameters and members). Calls `setp` directly, so kwargs can include
Loop through the list of Properties, extract the derived and required properties and do the
Return a list of Parameter objects Parameters ---------- pname : list or None If a
Return an array with the parameter values Parameters ---------- pname : list or None If
Return an array with the parameter errors Parameters ---------- pname : list of string or
Reset the value of all Derived properties to None This is called by setp (and
Extracts the specific arguments of this CLI
Before assigning the value validate that is in one of the HTTP methods we implement
Gets the configuration stored in environment variables
Encode URL parameters
Returns a metric definition identified by name :param enabled: Return only enabled metrics :param custom:
HTTP Get Request
HTTP Delete Request
HTTP Post Request
HTTP Put Request
Make an API call to get the metric definition
Extracts the specific arguments of this CLI
Run the steps to execute the CLI
Check scene name and whether remote file exists. Raises WrongSceneNameError if the scene name is
Gets satellite id
Gets the filesize of a remote file
Download remote .tar.bz file.
Validate bands parameter.
Connection to Earth explorer without proxy
Downloads large files in pieces
Make a callable returning True for names starting with the given prefix. The returned callable
Extracts the specific arguments of this CLI
r''' Return a datetime.tzinfo implementation for the given timezone >>> from datetime import datetime, timedelta
Correct the timezone information on the given datetime
Extracts the specific arguments of this CLI
Extracts the specific arguments of this CLI
Escape-aware text splitting: Split text on on a delimiter, recognizing escaped delimiters.
Join an iterable by a delimiter, replacing instances of delimiter in items with escape +
Returns a list of the positions in the text where all new lines occur. This
Given a list of newline positions, and an offset from the start of the source
Point to a position in source code. source is the text we're pointing in. position
Send output in textual format
Call back function to be implemented by the CLI.
Extracts the specific arguments of this CLI
Extract only the required fields for the create/update API call
Extracts the specific arguments of this CLI
Apply the criteria to filter out on the output required
Call back function to be implemented by the CLI.
Initialize based on a list of fortune files
Initialize based on a list of fortune files with set chances
virtue discovers and runs tests found in the given objects. Provide it with one or
grammar = {comment} , rule , {comment | rule} ;
comment = "(*" . {printable - "*" | "*" . printable - ")"} . "*)"
rule = identifier , "=" , expression , ";" ;
special_handling = "?" , identifier , "?" ;
number = digit - "0" . {digit} ;
Extracts the specific arguments of this CLI
Call back function to be implemented by the CLI.
The parse tree generated by the source.
The AST rules.
The AST comments.
The diretives parsed from the comments.
The python source of the parser generated from the input source.
Returns the python source code for the generated parser.
Reads the directives and generates source code for custom imports.
Builds the python source code for the Parser TokenType enum.
Builds the class definition of the parser.
Gets the entry_point value for the parser.
Generates the source code for a rule.
Gets the variable part of the source code for a rule.
The return value for each rule can be either retyped, compressed or left alone. This
Convert an expression to an Abstract Syntax Tree Node.
Convert a parse tree node into an absract syntax tree node.
Flattens a list of optree operands based on a pred. This is used to convert
Grouping groups are implied by optrees, this function hoists grouping group expressions up to their
Convert an abstract syntax tree to python source code.
Convert an abstract syntax operator tree to python source code.
Convert an AST terminal to python source code.
Convert an AST option group to python source code.
Convert an AST repetition group to python source code.
Convert an AST sepcial handling to python source code.
Convert an AST alternate op to python source code.
Convert an AST concatenate op to python source code.
Convert an AST exclude op to python source code.
Convert an AST multiply op to python source code.
Convert an AST repeat op to python source code.
Indent text by depth * self.indent. Text can be either a string, or a list
Finds all directives with a certain name, or that passes a predicate.
Custom flattening method for the parse tree.
A directive is a line in a comment that begins with '!'.
Turns a directive definition string into a directive object.
Extracts the specific arguments of this CLI
Extracts the specific arguments of this CLI
Extracts the specific arguments of this CLI
Handle the results of the API call
Returns a human-readable version of numerical modifiers and key. To make the key suitable for
Turns a string like "CTRL_ALT+K" into (3, 75). To get a global hotkey, try passing:
Get a new id if the provided one is None.
Adds a key to the control. control: The control that the accelerator should be added
Removes an accelerator from control. control: The control to affect. key: The key to remove.
Add a global hotkey bound to control via id that should call func. control: The
Remove a global hotkey. control - The control to affect key - The key to
Configure handling of command line arguments.
Configure logging based on command line options
CLIs get called back so that they can process any command line arguments that are
Validates the command line arguments passed to the CLI Derived classes that override need to
Run the steps to execute the CLI
Convert a list of nodes in infix order to a list of nodes in postfix
Convert a list of nodes in postfix order to an Optree.
Finds the first operator in the list, converts it and its operands to a OptreeNode,
Pretty print an optree, starting at root.
Extracts the specific arguments of this CLI
Transforms the command line properties into python dictionary :return:
Add the specific arguments of this CLI
Extracts the specific arguments of this CLI
Extracts the specific arguments of this CLI
Load the metrics file from the given path
Read the file and parse JSON into dictionary
Looks up the metric definition from the definitions from the API call
Prints out table header based on the size of the data in columns
Gets the maximum length of each column in the field table
Gets the maximum length of each column
Escape underscores so that the markdown is correct
Prints out table header based on the size of the data in columns
Prints out table rows based on the size of the data in columns
Prints out table rows based on the size of the data in columns
Sends the field definitions ot standard out
Sends the markdown of the metric definitions to standard out
Look up each of the metrics and then output in Markdown
Attempt to parse source code.
Keeps track of the furthest point in the source code the parser has reached to
Add specific command line arguments for this command
Extracts the specific arguments of this CLI
Attempt to parse the passed in string into a valid datetime. If we get a
Output results in CSV format
Output results in structured JSON format
Output results in raw JSON format
Output results in JSON format
Call back function to be implemented by the CLI.
The default predicate used in Node.trimmed.
Pretting print a parse tree.
Returns a partial of _get_repetition with bounds set to (0, None) that accepts only a
Returns a partial of _get_repetition with bounds set to (1, None) that accepts only a
Returns a partial of _get_repetition with bounds set to (times, times) that accepts only a
Returns a partial of _get_repetition that accepts only a text argument.
Checks the beginning of text for a value. If it is found, a terminal ParseNode
Returns a concatenation ParseNode whose children are the nodes returned by each of the methods
Tries each extractor on the given text and returns the 'best fit'. Best fit is
Tries to pull text with extractor repeatedly. Bounds is a 2-tuple of (lbound, ubound) where
Returns extractor's result if exclusion does not match. If exclusion raises DeadEnd (meaning it did
Return (leading whitespace, trailing text) if ignore_whitespace is true, or ("", text) if False.
Returns the number of characters at the beginning of text that are whitespace.
This method calls an extractor on some text. If extractor is just a string, it
Gets the position of the text the ParseNode processed. If the ParseNode does not have
Returns True if this node has no children, or if all of its children are
Add ignored text to the node. This will add the length of the ignored text
Returns True if node_type == value. If value is a tuple, node_type is checked against
Flattens nodes by hoisting children up to ancestor nodes. A node is hoisted if pred(node)
Trim a ParseTree. A node is trimmed if pred(node) returns True.
Returns a new ParseNode whose type is this node's type, and whose children are all
Returns a new node with the same contents as self, but with a new node_type.
Turns the node into a value node, whose single string child is the concatenation of
Extracts the specific arguments of this CLI
Return the list of all contained scope from global to local
Return the list of all contained scope from global to local
The current position of the cursor.
The index of the deepest character readed.
Puts the cursor on the next character.
Sets cursor as beginning of next line.
Sets cursor as end of previous line.
Usefull string to compute error message.
Increment the cursor to the next character.
Save current position.
Rollback to previous saved position.
Return an Fmt representation for pretty-printing
Return an Fmt representation for pretty-printing
Return a Fmt representation of Translator for pretty-printing
Return an Fmt representation for pretty-printing
Return an Fmt representation for pretty-printing
TODO: should_test_type??
You could set the name after construction
Count subtypes
Count var define by this scope
Count function define by this scope
Update internal counters
Update the Set with values of another Set
Create a new Set produce by the union of 2 Set
Update Set with common values of another Set
Create a new Set produce by the intersection of 2 Set
Remove values common with another Set
Create a new Set produce by a Set subtracted by another Set
Remove common values and Update specific values from another Set
Create a new Set with values present in only one Set
Add it to the Set
Remove it but raise KeyError if not found
Remove it only if present
Retrieve all values
Retrieve the first Signature ordered by mangling descendant
Retrieve the last Signature ordered by mangling descendant
Get a signature instance by its internal_name
Retrieve a Set of all signature by symbol name
Retrieve the unique Signature of a symbol. Fail if the Signature is not unique
Retrieve a Set of all signature by (return) type
For now, polymorphic return type are handle by symbol artefact. --> possible multi-polymorphic but with
Retrieve a Set of all signature that match the parameter list. Return a pair: pair[0]
If don't have injector call from parent
Find an arrow (->) aka a function able to translate something to t2
Normalize an AST nodes. all builtins containers are replace by referencable subclasses
Debug method, help detect cycle and/or other incoherence in a tree of Node
allow to completly mutate the node into any subclasses of Node
in order
in reversed order
Checks whether a hit (column/row) is masked or not. Array is 2D array with boolean
Set hit and cluster information of the cluster (e.g. number of hits in the cluster
Set hit and cluster information of the event (e.g. number of cluster in the event
Check if given hit is withing the limits.
Set array elemets to value for given number of elements (if size is negative number
Helper function to determine the difference of two values that can be np.uints. Works in
Main precompiled function that loopes over the hits and clusters them
Compute a signature Using resolution!!! TODO: discuss of relevance of a final generation for a
When we add a parent (from Symbol), don't forget to resolve.
Process the signature and find definition for type.
Use self.resolution to subsitute type_name. Allow to instanciate polymorphic type ?1, ?toto
Warning!!! Need to rethink it when global poly type
Return an Fmt representation for pretty-printing
Return the unique internal name
Deletes the specified file from the local filesystem.
Deletes the specified file from the given S3 bucket.
Deletes the specified file, either locally or from S3, depending on the file's storage type.
Saves the specified file to the local file system.
Saves the specified file to the configured S3 bucket.
Saves the specified file to either S3 or the local filesystem, depending on the currently
Finds files by licking an S3 bucket's contents by prefix.
Finds files at the specified path / prefix, either on S3 or on the local
Build an enum statement
Decorator to verify arguments and return types.
Add a mapping with key thing_name for callobject in chainmap with namespace handling.
Attach a method to a class.
Attach a method to a parsing class and register it as a parser hook. The
Attach a method to a parsing class and register it as a parser rule. The
Attach a class to a parsing class and register it as a parser directive. The
Attach a class to a parsing decorator and register it to the global decorator list.
Allow to alias a node to another name. Useful to bind a node to _
Return True if the parser can consume an EOL byte sequence.
read a hexadecimal number Read the following BNF rule else return False:: readHexInteger = [
read a double quoted string Read following BNF rule else return False:: '"' -> ['\\'
Push context variable to store rule nodes.
Pop context variable that store rule nodes
Return the text value of the node
Push a new Stream into the parser. All subsequent called functions will parse this new
Save the current index under the given name.
Extract the string between saved and current index.
Merge internal rules set with the given rules
Merge internal hooks set with the given hooks
Merge internal directives set with the given directives. For working directives, attach it only in
Evaluate a rule by name.
Evaluate the hook by its name
Same as readText but doesn't consume the stream.
Read one byte in stream
Consume the c head byte, increment current index and return True else return False. It
Consume the stream while the c byte is not read, else return false ex :
Consume all the stream. Same as EOF in BNF.
Consume a strlen(text) text at current position in the stream else return False. Same as
Consume head byte if it is >= begin and <= end else return false Same
Consume whitespace characters.
The Decorator call is the one that actually pushes/pops the decorator in the active decorators
Return the unique internal name
Tell the clusterizer the meaning of the field names. The hit_fields parameter is a dict,
Tell the clusterizer the meaning of the field names. The cluster_fields parameter is a dict,
Set the data type of the hits. Fields that are not mentioned here are NOT
Set the data type of the cluster. Parameters: ----------- cluster_dtype : numpy.dtype or equivalent Defines
Adds a field or a list of fields to the cluster result array. Has to
Adding function to module. This is maybe the only way to make the clusterizer to
Adding function to module. This is maybe the only way to make the clusterizer to
Cluster given hit array. The noisy_pixels and disabled_pixels parameters are iterables of column/row index pairs,
Takes the hit array and checks if the important data fields have the same data
Create a tree.{Complement, LookAhead, Neg, Until}
Create a tree.Rule
Attach a parser tree to the dict of rules
Add the rule name
Create a tree.Seq
Create a tree.Alt
Add a read_char/read_text primitive from simple quote string
Add a read_range primitive
Add a repeater to the previous sequence
Create a tree.Capture
Create a tree.Bind
Create a tree.Hook
Parse a int in parameter list
Parse a str in parameter list
Parse a char in parameter list
Parse a node name in parameter list
Parse a hook name
Parse a hook parameter
Add a directive in the sequence
Add a directive in the sequence
Parse the DSL and provide a dictionnaries of all resulting rules. Call by the MetaGrammar
Allow to get the YML string representation of a Node.:: from pyrser.passes import to_yml t
Consume comments and whitespace characters.
all state in the register have a uid
Provide a '.dot' representation of all State in the register.
write a '.dot' file.
write a '.png' file.
Provide a useful representation of the register.
Manage transition of state.
the str() of Values are stored internally for convenience
Only one Living State on the S0 of each StateRegister
Do inference. Write infos into diagnostic object, if this parameter is not provide and self
Do feedback. Write infos into diagnostic object, if this parameter is not provide and self
Infer type on block is to type each of is sub-element
Infer type on the subexpr
Infer type from an ID! - check if ID is declarated in the scope -
Infer type from an LITERAL! Type of literal depend of language. We adopt a basic
Dump tag,rule,id and value cache. For debug. example:: R = [ #dump_nodes ]
Return list containing URIs with base URI.
Return absolute path at which item content can be accessed. :param identifier: item identifier :returns:
Return list of overlay names.
Store the given key:value pair for the item associated with handle. :param handle: handle for
Return iterator over item handles.
Return dictionary containing all metadata associated with handle. In other words all the metadata added
Generates code for a rule. def rulename(self): <code for the rule> return True
Create the appropriate scope exiting statement. The documentation only shows one level and always uses
Normalize a test expression into a statements list. Statements list are returned as-is. Expression is
Generates python code calling the function. fn(*args)
Generates python code calling the function and returning True. lambda: fn(*args) or True
Generates python code calling a hook. self.evalHook('hookname', self.ruleNodes[-1])
Generates python code calling a rule. self.evalRule('rulename')
Generates python code to capture text consumed by a clause. #If all clauses can be
Generates python code for a scope. if not self.begin(): return False res = self.pt() if
Generates python code for alternatives. try: try: <code for clause> #raise AltFalse when alternative is
Generates python code for clauses. #Continuous clauses which can can be inlined are combined with
Generates python code for an optional clause. <code for the clause>
Generates python code for a clause repeated 0 or more times. #If all clauses can
Generates python code for a clause repeated 1 or more times. <code for the clause>
month format: YYYYMM
cat two strings but handle \n for tabulation
recurs into list for indentation
recurs into list for string computing
Print nodes. example:: R = [ In : node #echo("coucou", 12, node) ]
function that connect each other one sequence of MatchExpr.
function that create a state for all instance of MatchExpr in the given list and
main function for creating a bottom-up tree automata for a block of matching statements.
Test if a node set with setint or setstr equal a certain value example:: R
Create a Grammar from a string
Create a Grammar from a file
Parse source using the grammar
Parse filename using the grammar
Basically copy one node to another. usefull to transmit a node from a terminal rule
Set a node to a value captured from another node example:: R = [ In
get the value of subnode example:: R = [ __scope__:big getsomethingbig:>big #get(_, big, '.val') //
Default serializer for json.
Get list of depositions (as iterator). This is redefined Deposition.get_depositions classmethod without order-by for better
Get deposits.
Dump the deposition object as dictionary.
Get BibDocs for Invenio 1.
Get BibDocs for Invenio 2.
Import BibDocFile.
Dump all BibDoc metadata. :param docid: BibDoc ID :param from_date: Dump only BibDoc revisions newer
Get bibdocs to check.
Check bibdocs.
Dump the oauth2server tokens.
Get UserEXT objects.
Dump the UserEXt objects as a list of dictionaries. :param u: UserEXT to be dumped.
Get communities.
Dump the community object as dictionary. :param fc: Community featuring to be dumped. :type fc:
Get record ids for Invenio 1.
Get record ids for Invenio 2.
Get all restrictions for a given collection, users and fireroles.
Get record revisions.
Get all collections the record belong to.
Dump JSON of record.
Get recids matching query and with changes.
Dump MARCXML and JSON representation of a record. :param recid: Record identifier :param from_date: Dump
Dump the remote accounts as a list of dictionaries. :param ra: Remote account to be
Helper function for loading JSON data verbatim into model.
Collect entry points.
Initialize app context for Invenio 2.x.
Cache for heavy function calls.
Import ``run_sql``.
Get roles connected to an action.
Get action definitions to dump.
Get users.
Dump the remote tokens as a list of dictionaries. :param ra: Remote toekn to be
Load the oauth2server token from data dump.
Migrate a record from a migration dump. :param data: Dictionary for representing a single record
Import config var import path or use default value.
Flask application initialization.
Get users.
Dump the oauth2server Client.
Get user accounts Invenio 1.
Get user accounts from Invenio 2.
Get users.
Dump the users as a list of dictionaries. :param u: User to be dumped. :type
Load the raw JSON dump of the Deposition. Uses Record API in order to bypass
Create the deposit record metadata and persistent identifier. :param data: Raw JSON dump of the
Create deposit Bucket, Files and SIPs.
Dump the community object as dictionary. :param c: Community to be dumped. :type c: `invenio.modules.communities.models.Community`
Load a single record into the database. :param record_dump: Record dump. :type record_dump: dict :param
Load records migration dump.
Inspect records in a migration dump.
Common helper function for load simple objects. .. note:: Keyword arguments ``task_args`` and ``task_kwargs`` are
Load communities.
Load users.
Load deposit. Usage: invenio dumps loaddeposit ~/data/deposit_dump_*.json invenio dumps loaddeposit -d 12345 ~/data/deposit_dump_*.json
Return profiler statistics. :param str sort: dictionary key to sort by :param int|None count: the
Run as sample test server.
Return current profiler statistics.
Start a new profiler.
Dump current profiler statistics into a file.
Return current profiler statistics.
Clear profiler statistics.
Start a new profiler.
Stop the profiler.
Check if the profiler is running.
Disable timestamp update per method.
Load user from data dump. NOTE: This task takes into account the possible duplication of
Calculate image translations in parallel. Parameters ---------- images : ImageCollection Images as instance of ImageCollection.
Stitch regular spaced images. Parameters ---------- images : ImageCollection or list of tuple(path, row, column)
Adds a dimensions with ones to array.
Create record based on dump.
Create a new record from dump.
Update an existing record.
Create persistent identifiers.
Delete a record and it's persistent identifiers.
Create files. This method is currently limited to a single bucket per record.
Create a single file with all versions.
Delete the bucket.
Filter persistent identifiers.
Prepare data.
Get files from data dump.
Prepare persistent identifiers.
Check if record is deleted.
Load community from data dump. :param data: Dictionary containing community data. :type data: dict :param
Load community featuring from data dump. :param data: Dictionary containing community featuring data. :type data:
Dump data from Invenio legacy.
Check data in Invenio legacy.
Registers event handlers used by this widget, e.g. mouse click/motion and window resize. This will
Property that will always be a 2-tuple representing the position of the widget. Note that
Similar to :py:attr:`pos` but for the size instead.
Property used for determining if the widget should be clickable by the user. This is
Deletes resources of this widget that require manual cleanup. Currently removes all actions, event handlers
Draws the background and the widget itself. Subclasses should use ``super()`` to call this method,
Calculates the Cartesian coordinates from spherical coordinates. ``pos`` is a simple offset to offset the
Simple vector helper function returning the length of a vector. ``v`` may be any vector,
Normalizes the given vector. The vector given may have any number of dimensions.
Transforms the given texture coordinates using the internal texture coordinates. Currently, the dimensionality of the
Helper method ensuring per-entity bone data has been properly initialized. Should be called at the
Sets the rotation of this bone on the given entity. ``data`` is the entity to
Sets the length of this bone on the given entity. ``data`` is the entity to
Sets the parent of this bone for all entities. Note that this method must be
Sets the OpenGL state required for proper drawing of the model. Mostly rotates and translates
Returns the point this bone pivots around on the given entity. This method works recursively
Returns the vertices of this region already transformed and ready-to-use. Internally uses :py:meth:`Bone.transformVertices()`\ .
Returns the texture coordinates, if any, to accompany the vertices of this region already transformed.
Callback that is called to initialize this animation on a specific actor. Internally sets the
Callback that should be called regularly to update the animation. It is recommended to call
Sets the state required for this actor. Currently translates the matrix to the position of
Resets the state required for this actor to the default state. Currently resets the matrix
Sets the state required for this vertex region. Currently binds and enables the texture of
Resets the state required for this actor to the default state. Currently only disables the
Ensures that the given ``obj`` has been initialized to be used with this model. If
Initializes per-actor data on the given object for this model. If ``cache`` is set to
Cleans up any left over data structures, including vertex lists that reside in GPU memory.
Redraws the model of the given object. Note that currently this method probably won't change
Actually draws the model of the given object to the render target. Note that if
Sets the animation to be used by the object. See :py:meth:`Actor.setAnimation()` for more information.
Sets the model this actor should use when drawing. This method also automatically initializes the
Sets the animation the model of this actor should show. ``animation`` is the name of
Moves the actor using standard trigonometry along the current rotational vector. :param float dist: Distance
write the collection of reports to the given path
reserve a XML file for the slice at <relative_path>.xml - the relative path will be
convert test reports into an xml file
Sets up the OpenGL state. This method should be called once after the config has
Sets the fog system up. The specific options available are documented under :confval:`graphics.fogSettings`\ .
Runs the application in the current thread. This method should not be called directly, especially
Changes to the given menu. ``menu`` must be a valid menu name that is currently
Adds a menu to the list of menus.
Internal event handling method. This method extends the behavior inherited from :py:meth:`pyglet.window.Window.dispatch_event()` by calling the
Toggles mouse exclusivity via pyglet's :py:meth:`set_exclusive_mouse()` method. If ``override`` is given, it will be used
Configures OpenGL to draw in 2D. Note that wireframe mode is always disabled in 2D-Mode,
Configures OpenGL to draw in 3D. This method also applies the correct rotation and translation
Re-draws the text by calculating its position. Currently, the text will always be centered on
Re-draws the label by calculating its position. Currently, the label will always be centered on
Changes the submenu that is displayed. :raises ValueError: if the name was not previously registered
Draws the submenu and its background. Note that this leaves the OpenGL state set to
Deletes the widget by the given name. Note that this feature is currently experimental as
Sets the background of the submenu. The background may be a RGB or RGBA color
Helper function converting the actual widget position and size into a usable and offsetted form.
Overrideable function that generates the colors to be used by various borderstyles. Should return a
if not self.widget.pressed: self.vlist_cross.colors = 6*bg else: if self.borderstyle=="flat": c = [min(bg[0]+8,255),min(bg[1]+8,255),min(bg[2]+8,255)] elif self.borderstyle=="gradient": c
Re-calculates the position of the Label.
Adds a keybind to the internal registry. Keybind names should be of the format ``namespace:category.subcategory.name``\
Changes a keybind of a specific keybindname. :param str kbname: Same as kbname of :py:meth:`add()`
Helper method to simplify checking if a modifier is held. :param str modname: Name of
Handles a key combination and dispatches associated events. First, all keybind handlers registered via :py:meth:`add`
Registers needed keybinds and schedules the :py:meth:`update` Method. You can control what keybinds are used
Returns the movement vector according to held buttons and the rotation. :return: 3-Tuple of ``(dx,dy,dz)``
Registers the motion and drag handlers. Note that because of the way pyglet treats mouse
Registers the up and down handlers. Also registers a scheduled function every 60th of a
Should be called regularly to move the actor. This method does nothing if the :py:attr:`enabled`
Internal method used for moving the player. :param float dt: Time delta since the last
Called by the initializer to add all widgets. Widgets are discovered by searching through the
Adds the main label of the dialog. This widget can be triggered by setting the
Adds an OK button to allow the user to exit the dialog. This widget can
Helper method that exits the dialog. This method will cause the previously active submenu to
Adds a confirm button to let the user confirm whatever action they were presented with.
Adds a cancel button to let the user cancel whatever choice they were given. This
Updates the progressbar by re-calculating the label. It is not required to manually call this
Adds a progressbar and label displaying the progress within a certain task. This widget can
createWindow(cls=window.PengWindow, *args, **kwargs) Creates a new window using the supplied ``cls``\ . If ``cls`` is
Runs the application main loop. This method is blocking and needs to be called from
Handles a pyglet event. This method is called by :py:meth:`PengWindow.dispatch_event()` and handles all events. See
Registers an event handler. The specified callable handler will be called every time an event
Sends an event with attached data. ``event`` should be a string of format ``<namespace>:<category1>.<subcategory2>.<name>``\ .
Adds a handler to the given event. A event may have an arbitrary amount of
Removes the given handler from the given event. If the event does not exist, a
Sets the default language for all domains. For recommendations regarding the format of the language
Generates a list of languages based on files found on disk. The optional ``domain`` argument
Add the camera to the internal registry. Each camera name must be unique, or else
Adds the supplied :py:class:`WorldView()` object to the internal registry. The same restrictions as for cameras
Returns the view with name ``name``\ . Raises a :py:exc:`ValueError` if the view does not
Renders the world in 3d-mode. If you want to render custom terrain, you may override
Renders the world.
Sets the active camera. This method also calls the :py:meth:`Camera.on_activate() <peng3d.camera.Camera.on_activate>` event handler if the
Fake event handler, same as :py:meth:`WorldView.on_menu_enter()` but forces mouse exclusivity.
Fake event handler, same as :py:meth:`WorldView.on_menu_exit()` but force-disables mouse exclusivity.
Keyboard event handler handling only the escape key. If an escape key press is detected,
Handles mouse motion and rotates the attached camera accordingly. For more information about how to
Start a new step. returns a context manager which allows you to report an error
Converts the given resource name to a file path. A resource path is of the
Returns whether or not the resource with the given name and extension exists. This must
Adds a new texture category with the given name. If the category already exists, it
Gets the texture associated with the given name and category. ``category`` must have been created
Loads the texture of the given name and category. All textures currently must be PNG
Returns a texture to be used as a placeholder for missing textures. A default missing
Adds a new texture from the given image. ``img`` may be any object that supports
Gets the model object by the given name. If it was loaded previously, a cached
Loads the model of the given name. The model will also be inserted into the
Gets the model data associated with the given name. If it was loaded, a cached
Loads the model data of the given name. The model file must always be a
Sets the background of the Container. Similar to :py:meth:`peng3d.gui.SubMenu.setBackground()`\ , but only effects the region
Adds a widget to this container. Note that trying to add the Container to itself
Draws the submenu and its background. Note that this leaves the OpenGL state set to
Redraws the background and any child widgets.
Redraws the background and contents, including scrollbar. This method will also check the scrollbar for
AABB Collision checker that can be used for most axis-aligned collisions. Intended for use in
Adds a category with the given name. If the category already exists, a :py:exc:`KeyError` will
Smartly updates the given category. Only values that are given will be updated, others will
Deletes the category with the given name. If the category does not exist, a :py:exc:`KeyError`
Helper property containing the percentage this slider is "filled". This property is read-only.
Adds a new layer to the stack, optionally at the specified z-value. ``layer`` must be
Map a buffer region using this attribute as an accessor. The returned region can be
Draw vertices in the domain. If `vertex_list` is not specified, all vertices in the domain
Patches the :py:mod:`pyglet.graphics.vertexattribute`\ , :py:mod:`pyglet.graphics.vertexbuffer` and :py:mod:`pyglet.graphics.vertexdomain` modules. This patch is only needed with Python
Registers the given pyglet-style event handler for the given pyglet event. This function allows pyglet-style
Adds a callback to the specified action. All other positional and keyword arguments will be
Helper method that calls all callbacks registered for the given action.
Generates a new ID. If ``reuse_ids`` was false, the new ID will be read from
Registers a name to the registry. ``name`` is the name of the object and must
Takes in an object and normalizes it to its ID/integer representation. Currently, only integers and
Takes in an object and normalizes it to its name/string. Currently, only integers and strings
Sets the view used to the specified ``name``\ . The name must be known to
Sets up the attributes used by :py:class:`Layer3D()` and calls :py:meth:`Layer3D.predraw()`\ .
Adds the given layer at the given Z Index. If ``z_index`` is not given, the
Redraws the given layer. :raises ValueError: If there is no Layer with the given name.
Draws all layers of this LayeredWidget. This should normally be unneccessary, since it is recommended
Deletes all layers within this LayeredWidget before deleting itself. Recommended to call if you are
Called when the Layer should be redrawn. If a subclass uses the :py:meth:`initialize()` Method, it
Property to be used for setting and getting the border of the layer. Note that
Property to be used for setting and getting the offset of the layer. Note that
Returns the absolute position and size of the layer. This method is intended for use
Returns the size of the layer, with the border size already subtracted.
Adds an image to the internal registry. ``rsrc`` should be a 2-tuple of ``(resource_name,category)``\ .
Switches the active image to the given name. :raises ValueError: If there is no such
Re-draws the text by calculating its position. Currently, the text will always be centered on
Re-draws the text by calculating its position. Currently, the text will always be centered on
Overrideable function that generates the colors to be used by various styles. Should return a
Called to generate the vertices used by this layer. The length of the output of
DEPRECATED Reads a mesh saved in the HDF5 format.
Reads a GMSH MSH file and returns a :class:`Mesh` instance. :arg path: path to MSH
Reads Abaqus inp file
Dumps the mesh to XDMF format.
Exports the mesh to the INP format.
Connectivity builder using Numba for speed boost.
Returns a structured mesh. :arg shape: 2 or 3 integers (eg: shape = (10, 10,
r""" Sets the node data. :arg nlabels: node labels. Items be strictly positive and int
Sets the element data. :arg elabels: element labels. Items be strictly positive and int typed
Sets the fields.
Add the fields into the list of fields.
Checks element definitions.
Returns the dimension of the embedded space of each element.
Returns the number of vertices of eache element according to its type/
Returns the decomposition of the elements. Inputs: * into: must be in ['edges', 'faces', 'simplices',
Returns a dataframe containing volume and centroids of all the elements.
Returns the internal angles of all elements and the associated statistics
Returns the aspect ratio of all elements.
Returns mesh quality and geometric stats.
Makes a node set from an element set.
Converts a node set to surface.
Creates elements sets corresponding to a surface.
Returns the mesh as matplotlib polygon collection. (tested only for 2D meshes)
Returns the mesh as a matplotlib.tri.Triangulation instance. (2D only)
Returns fields metadata as a dataframe.
Returns metadata as a dataframe.
Checks if required directories exist and creates them if needed.
Runs the post-proc script.
Makes the mesh using gmsh.
Reads an history output report.
Reads a field output report.
Converts a list-like to string with given line width.
Returns an Abaqus INP formated string for a given linear equation.
Returns a set as inp string with unsorted option.
Parses the API response and raises appropriate errors if raise_errors was set to True :param
Builds the url for the specified method and arguments and returns the response as a
Returns the material definition as a string in Abaqus INP format.
Returns the material definition as a string in Abaqus INP format.
Calculates the plastic data
Calculates the plastic data
Returns the DNA/DNA melting temp using nearest-neighbor thermodynamics. This function returns better results than EMBOSS
Writes a xy_report based on xy data.
Writes a field report and rewrites it in a cleaner format.
Display a dashboard from the dashboard file(s) provided in the DASHBOARDS Paths and/or URLs for
View the output of the datafeeds and/or notifications used in your DASHBOARDS
List components that are available on your machine
Parses the section of configuration pertaining to a component :param config: dict of specific config
Return an error message for use in exceptions thrown by subclasses.
Return True if the last exception was thrown by a Descriptor instance.
This method will be called to set Series data
will get the axis mode for the current series
sets the graph ploting options
Create an __init__ method that sets all the attributes necessary for the function the Descriptor
Create the __set__ method for the descriptor.
Turn a funcs list element into a class object.
Cycles through notifications with latest results from data feeds.
Convert value to a numeric value or raise a ValueError if that isn't possible.
Convert str_value to an int or a float, depending on the numeric value represented by
Tag to plot graphs into the template
Try really really hard to get a Unicode copy of a string. First try :class:`BeautifulSoup.UnicodeDammit`
Get a clean text representation of presumed HTML. Treat `raw` as though it is HTML,
Takes a utf-8-encoded string of HTML as input and returns a new HTML string with
This implements the MIME-type matching logic for deciding whether to run `make_clean_html`
extract a lower-case, no-slashes domain name from a raw string that might be a URL
returns a list of strings created by splitting the domain on '.' and successively cutting
Get a Murmur hash and a normalized token. `tok` may be a :class:`unicode` string or
Collect all of the words to be indexed from a stream item. This scans `si`
Record index records for a single document. Which indexes this creates depends on the parameters
Get strings that correspond to some hash. No string will correspond to :data:`DOCUMENT_HASH_KEY`; use :data:`DOCUMENT_HASH_KEY_REPLACEMENT`
Get document frequencies for a list of hashes. This will return all zeros unless the
Get stream IDs for a single hash. This yields strings that can be retrieved using
Get stream IDs and term frequencies for a single hash. This yields pairs of strings
Given a spinn3r feed, produce a sequence of valid StreamItems. Because of goopy Python interactions,
Given a single spinn3r feed entry, produce a single StreamItem. Returns 'None' if a complete
Create a ContentItem from a node in the spinn3r data tree. The ContentItem is created
Read (up to) 'n' bytes from the underlying file. If any bytes have been pushed
Read exactly a varint out of the underlying file.
Read some protobuf-encoded object stored in a single block out of the file.
Parse the :class:`from_kvlayer` input string. This accepts two formats. In the textual format, it accepts
Retrieve a :class:`streamcorpus.StreamItem` from :mod:`kvlayer`. This function requires that `client` already be set up properly::
Construct a tuple(begin, end) of one-tuple kvlayer keys from a hexdigest doc_id.
Retrieve :class:`streamcorpus.StreamItem`s from :mod:`kvlayer`. Namely, it returns an iterator over all documents with the given
Retrieve stream ids from :mod:`kvlayer`. Namely, it returns an iterator over all stream ids with
Return packed bytes representation of StreamItem kvlayer key. The result is 20 bytes, 16 of
extract the parts of a StreamItem that go into a kvlayer key, convert StreamItem to
Change working directory and restore the previous on exit
Removes the prefix, if it's there, otherwise returns input string unchanged. If strict is True,
Removes the suffix, if it's there, otherwise returns input string unchanged. If strict is True,
Are all the elements of needle contained in haystack, and in the same order? There
Return an Ice application with a default home page. Create :class:`Ice` object, add a route
Run the application using a simple WSGI server. Arguments: host (str, optional): Host on which
Stop the simple WSGI server running the appliation.
Decorator to add route for a request with any HTTP method. Arguments: method (str): HTTP
Decorator to add a callback that generates error page. The *status* parameter specifies the HTTP
Send content of a static file as response. The path to the document root directory
Send content as attachment (downloadable file). The *content* is sent after setting Content-Disposition header such
Return an error page for the current response status.
Add a route. Arguments: method (str): HTTP method, e.g. GET, POST, etc. pattern (str): Pattern
Check if there is at least one handler for *method*. Arguments: method (str): HTTP method
Resolve a request to a route handler. Arguments: method (str): HTTP method, e.g. GET, POST,
Resolve a request to a wildcard or regex route handler. Arguments: method (str): HTTP method
Return a normalized form of the pattern. Normalize the pattern by removing pattern type prefix
Return route handler with arguments if path matches this route. Arguments: path (str): Request path
Return route handler with arguments if path matches this route. Arguments: path (str): Request path
Return the HTTP response body. Returns: bytes: HTTP response body as a sequence of bytes
Add an HTTP header to response object. Arguments: name (str): HTTP header field name value
Add a Set-Cookie header to response object. For a description about cookie attribute values, see
Return the HTTP response status line. The status line is determined from :attr:`status` code. For
Return the value of Content-Type header field. The value for the Content-Type header field is
Return the list of all values for the specified key. Arguments: key (object): Key default
remove all files and directories below path, including path itself; works even when shutil.rmtree fails
return list of open files for current process .. warning: will only work on UNIX-like
returns a kba.pipeline "transform" function that generates file type stats from the stream_items that it
get a rejester.WorkUnit with KBA s3 path, fetch it, and save some counts about it.
attempt a fetch and iteration over a work_unit.key path in s3
Return a list of non-empty lines from `file_path`.
Return a describer tuple in the form `(name, position)`, where position is either 'prefix' or
Return an ordered 2-tuple containing a species and a describer.
Return an ordered 2-tuple containing a species and a describer. The letter-count of the pair
Return a random adjective/species, separated by `sep`. The keyword arguments `maxlen` and `prevent_stutter` are the
Morphological analysis for Japanese.
Scoring the similarity of two words.
Convert the Japanese to Hiragana or Katakana.
Extract unique representation from sentence.
Summarize reviews into a short summary.
Extract "keywords" from an input document.
Extract expression expressing date and time and normalize its value
Create a pipeline stage. Instantiates `stage` with `config`. This essentially translates to ``stage(config)``, except that
Create a list of indirect stages. `name` should be the name of a config item
Create stages that are used for the pipeline. :param dict config: `streamcorpus_pipeline` configuration :return: tuple
Process a :class:`coordinate.WorkUnit`. The work unit's key is taken as the input file name. The
Run the pipeline. This runs all of the steps described in the pipeline constructor, reading
for the current output chunk (which should be open): 1. run batch transforms 2. run
Run all of the writers over some intermediate chunk. :param int start_count: index of the
Run transforms on stream item. Item may be discarded by some transform. Writes successful items
takes a chunk blob and obtains the date_hour, md5, num makes fields: i_str input_fname input_md5
Replace the top-level pipeline configurable object. This investigates a number of sources, including `external_stages_path` and
Make a WSGI app that has all the HTTPie pieces baked in.
assemble in-doc coref chains by mapping equiv_id to tokens and their cleansed name strings :param
For each name string in the target_mentions list, searches through all chain_mentions looking for any
For each name string (potentially consisting of multiple tokens) in the target_mentions list, searches through
For each name string in the target_mentions list, searches through all chain_mentions looking for any
Convert doc-level Rating object into a Label, and add that Label to all Token in
iterate through all tokens looking for matches of cleansed tokens or token regexes, skipping tokens
iterate through tokens looking for near-exact matches to strings in si.ratings...mentions
run tagger a child process to get XML output
iterate through ner_xml_path to fuse with i_chunk into o_chunk
send SIGTERM to the tagger child process
Returns a Pattern that matches exactly n repetitions of Pattern p.
Replace all angle bracket emails with a unique key.
generate strings identified as sentences
make a sortedcollection on body.labels
assemble Sentence and Token objects
Convert any HTML, XML, or numeric entities in the attribute values. For example '&amp;' becomes
:param text: tag-free UTF-8 string of free text :returns string: 32-character md5 hash in hexadecimal
make a temp file of cleansed text
run child process to get OWPL output
Convert a string of text into a lowercase string with no punctuation and only spaces
iterate through the i_chunk and tmp_ner_path to generate a new Chunk with body.ner
given a config dict with streamcorpus_pipeline as a key, find all keys under streamcorpus_pipeline that
Makes a hash from a dictionary, list, tuple or set to any level, that contains
setup the config and load external modules This updates 'config' as follows: * All paths
This _looks_ like a Chunk only in that it generates StreamItem instances when iterated upon.
Takes an HTML-like binary string as input and returns a binary string of the same
Takes an HTML-like Unicode string as input and returns a UTF-8 encoded string with all
generator that yields clean visible as it transitions through states in the raw `html`
Takes an HTML-like Unicode (or UTF-8 encoded) string as input and returns a Unicode string
make a temp file of clean_visible text
Convert a unicode string into a lowercase string with nopunctuation and only spaces for whitespace.Replace
manual test loop for make_clean_visible_from_raw
Try to load a stage into self, ignoring errors. If loading a module fails because
Add external stages from the Python module in `path`. `path` must be a path to
Add external stages from the Python module `mod`. If `mod` is a string, then it
Construct and configure a stage from known stages. `name` must be the name of one
iterates through idx_bytes until a byte in stop_bytes or a byte not in run_bytes. :rtype
called when idx_chars is just past "<a " inside an HTML anchor tag generates tuple(end_idx,
Test whether an href string meets criteria specified by configuration parameters 'require_abs_url', which means "does
simple, regex-based extractor of anchor tags, so we can compute LINE offsets for anchor texts
simple, regex-based extractor of anchor tags, so we can compute BYTE offsets for anchor texts
byte-based state machine extractor of anchor tags, so we can compute byte offsets for anchor
Make a list of Labels for 'author' and the filtered hrefs & anchors
yield all file paths under input_dir
Creates a column family of the name 'family' and sets any of the names in
Creates a column family of the name 'family' and sets any of the names in
generate the data objects for every task
get a random key out of the first max_iter rows
Iterate over <FILENAME> XML-like tags and tokenize with nltk
Iterate over <s> XML-like tags and tokenize with nltk
Instantiates a Token from self._input_string[start:end]
Tokenize all the words and preserve NER labels from ENAMEX tags
parse the sentences and tokens out of the XML
generate a list of tuples(new_base, list(paths to put there) where the files are found inside
Decorator for methods that need many retries, because of intermittent failures, such as AWS calls
return True if okay, raise Exception if not
This function is mostly about managing configuration, and then finally returns a boto.Bucket object. AWS
Given the raw data from s3, return a generator for the items contained in that
return Chunk object full of records bucket_name may be None
Convert a text stream ID to a kvlayer key. The return tuple can be used
Convert a kvlayer key to a text stream ID. `k` should be of the same
Get a kvlayer key from a stream item. The return tuple can be used directly
Serve up some ponies.
Build the parser that will have all available commands and options.
Mutably tag tokens with xpath offsets. Given some stream item, this will tag all tokens
Convert stream item sentences to character ``Offset``s.
Convert character ``Offset``s to character ranges.
Converts HTML and a sequence of char offsets to xpath offsets. Returns a generator of
Roundtrip all Xpath offsets in the given stream item. For every token that has both
Record that `tag` has been seen at this depth. If `tag` is :class:`TextElement`, it records
Get an XPath fragment for this location. It is of the form ``tag[n]`` where `tag`
Returns the one-based index of the current text node.
Returns a tuple of ``(xpath, character offset)``. The ``xpath`` returned *uniquely* identifies the end of
Yields all the elements descendant of elem in document order
Yields all the elements from the source source - if an element, yields all child
Yields all the elements with the given name source - if an element, starts with
Yields elements from the source whose name matches the given regular expression pattern source -
Yields elements from the source with the given value (accumulated child text) source - if
Yields elements from the source having the given attrivute, optionally with the given attribute value
Yields elements and text which have the same parent as elem, but come afterward in
Yield descendant nodes matching the given pattern specification pattern - tuple of steps, each of
Add text nodes as possible to all descendants of an element for spacing & indentation
Call inkscape CLI with arguments and returns its return value. Parameters ---------- args_string: list of
Call Inkscape to export the input_file to output_file using the specific export argument flag for
Transform SVG file to PDF file
Transform SVG file to PNG file
Return a Jinja2 environment for where file_path is. Parameters ---------- file_path: str Returns ------- jinja_env:
Setup self.template Parameters ---------- template_file_path: str Document template file path.
Fill the content of the document with the information in doc_contents. Parameters ---------- doc_contents: dict
Save the content of the .txt file in a text file. Parameters ---------- file_path: str
Factory function to create a specific document of the class given by the `command` or
Fill the content of the document with the information in doc_contents. This is different from
Save the content of the .svg file in the chosen rendered format. Parameters ---------- file_path:
Save the content of the .text file in the PDF. Parameters ---------- file_path: str Path
Convert XML 1.0 to MicroXML source - XML 1.0 input handler - MicroXML events handler
Start the optimisation/search using the supplied optimisation method with the supplied inputs for the supplied
Parse an input source with HTML text into an Amara 3 tree >>> from amara3.uxml
Parse a fragment if markup in HTML mode, and return a bindery node Warning: if
Insert data as text in the current node, positioned before the start of node insertBefore
Insert node as a child of the current node, before refNode in the list of
Return a shallow copy of the current node i.e. a node with the same name
A script that melody calls with each valid set of options. This script runs the
Create a vCard3.0 string with the given parameters. Reference: http://www.evenx.com/vcard-3-0-format-specification
XPath-like string value of node
Append a node as the last child child - the child to append. If a
Commandline options arguments parsing.
Get settings from config file.
Get google API credentials for user.
Create event start and end datetimes.
Create event in calendar with sms reminder.
Processing notification call main function.
Use docstamp to create documents from the content of a CSV file or a Google
Return the extension of fpath. Parameters ---------- fpath: string File name or path check_if_exists: bool
Add the extension ext to fpath if it doesn't have it. Parameters ---------- filepath: str
Return a temporary file with the given suffix within dirpath. If dirpath is None, will
Remove the files in workdir that have the given extension. Parameters ---------- workdir: Folder path
Convert a CSV file in `csv_filepath` into a JSON file in `json_filepath`. Parameters ---------- csv_filepath:
Write `content` inside the file in `file_path` with the given encoding. Parameters ---------- file_path: str
Modify the content of `filepath`, replacing `old` for `new`. Parameters ---------- filepath: str Path to
Remove the 'tmp*.aux', 'tmp*.out' and 'tmp*.log' files in `output_dir`. :param output_dir:
Run all parsing functions.
If next tag is link with same href, combine them.
See if span tag has italic style and wrap with em tag.
See if span tag has bold style and wrap with strong tag.
See if span tag has underline style and wrap with u tag.
Reject attributes not defined in ATTR_WHITELIST.
Remove non-self-closing tags with no children *and* no content.
get unicode string without any other content transformation. and clean extra spaces
Extract "real" URL from Google redirected url by getting `q` querystring parameter.
Parse attribute. Delegate to href parser for hrefs, otherwise return value.
Modify the keys in adict to the ones in translations. Be careful, this will modify
Convert data to json string representation. Returns: json representation as string.
Returns absolute paths of files that match the regex within folder_path and all its children
Quick query. Convenience for using the MicroXPath engine. Give it some XML and an expression
FunctionCall : NAME FormalArguments
Handles LiteralObjects as well as computable arguments
Handles LiteralObjects as well as computable arguments
Handles LiteralObjects as well as computable arguments
Yields one string a node name or the empty string, operating on the first item
Yields one string, derived from the argument literal (or the first item in the argument
Yields one string, concatenation of argument strings
Yields one boolean, whether the first string starts with the second
Yields one boolean, whether the first string contains the second
Yields one string
Yields one string
Yields one string
Yields one number
Yields one boolean, false if the argument sequence is empty, otherwise * false if the
Yields one float, derived from the first item in the argument sequence (unless empty in
Yields the result of applying an expression to each item in the input sequence. *
Yields a sequence of a single value, the result of looking up a value from
Replace known special characters to SVG code. Parameters ---------- svg_content: str Returns ------- corrected_svg: str
Try to read a SVG file if `svg_file` is a string. Raise an exception in
Merge `svg_file2` in `svg_file1` in the given positions `x_coord`, `y_coord` and `scale`. Parameters ---------- svg_file1:
Calls the `rsvg-convert` command, to convert a svg to a PDF (with unicode). Parameters ----------
Merge all the PDF files in `pdf_filepaths` in a new PDF file `out_filepath`. Parameters ----------
Return the ElementTree of the SVG content in `filepath` with the font content embedded.
Write ttf and otf font content from `font_files` in the svg file in `filepath` and
make some basic checks on the inputs to make sure they are valid
make some basic checks on the function to make sure it is valid
internal recursion routine called by the run method that generates all input combinations
create an input file using jinja2 by filling a template with the values from the
We work out all combinations using this internal recursion method
Cast an arbitrary object or sequence to a string type
Cast an arbitrary object or sequence to a number type
Cast an arbitrary sequence to a boolean type
Generate token strings which, when joined together, form a valid XPath serialization of the AST.
Modify the encoding entry in the XML file. Parameters ---------- filepath: str Path to the
Save `text` in a qrcode svg image file. Parameters ---------- text: str The string to
Save a `qrcode` object into `out_filepath`. Parameters ---------- qrcode: qrcode object out_filepath: str Path to
Return (result, new_position) tuple. Result is cdata string if possible and None if more input
Set the gromacs input data using the supplied input options, run gromacs and extract and
Call CLI command with arguments and returns its return value. Parameters ---------- cmd_name: str Command
Returns ------- filename: str
Write a MicroXML element node (yes, even one representign a whole document) elem - Amara
Call PDFLatex to convert TeX files to PDF. Parameters ---------- tex_file: str Path to the
Returns all potential loop fusion options for the psy object provided
Returns a transformed Geometry. Arguments: geom -- any coercible Geometry value or Envelope to_sref --
Returns an ogr.Geometry instance optionally created from a geojson str or dict. The spatial reference
Returns the envelope centroid as a (x, y) tuple.
Expands this envelope by the given Envelope or tuple. Arguments: other -- Envelope, two-tuple, or
Returns the intersection of this and another Envelope.
Returns true if this envelope intersects another. Arguments: other -- Envelope or tuple of (minX,
Returns a new envelope rescaled from center by the given factor(s). Arguments: xfactor -- int
Returns an OGR Geometry for this envelope.
Imports a mass table from a file
Imports a mass table from a file
Creates a table from arrays Z, N and M Example: ________ >>> Z = [82,
Export the contents to a file as comma separated values. Parameters ---------- path : string
Selects nuclei according to a condition on Z,N or M Parameters ---------- condition : function,
Return a selection of the Table at positions given by ``nuclei`` Parameters ---------- nuclei: list
Select nuclei which also belong to ``table`` Parameters ---------- table: Table, Table object Example: ----------
Select nuclei not in table Parameters ---------- table: Table, Table object from where nuclei should
Selects odd-odd nuclei from the table: >>> Table('FRDM95').odd_odd Out[13]: Z N 9 9 1.21 11
Selects odd-even nuclei from the table
Selects even-odd nuclei from the table
Selects even-even nuclei from the table
Calculate error difference Parameters ---------- relative_to : string, a valid mass table name. Example: ----------
Calculate root mean squared error Parameters ---------- relative_to : string, a valid mass table name.
Return binding energies instead of mass excesses
Return Q_alpha
Return Q_beta
Return 2 neutron separation energy
Return 1 neutron separation energy
Return 2 proton separation energy
Return 1 proton separation energy
Helper function for derived quantities
Calculates the derivative of the neutron separation energies: ds2n(Z,A) = s2n(Z,A) - s2n(Z,A+2)
Calculates the derivative of the neutron separation energies: ds2n(Z,A) = s2n(Z,A) - s2n(Z,A+2)
Plot a nuclear chart with (N,Z) as axis and the values of the Table as
Use as a decorator for operations on the database, to ensure connection setup and teardown.
Computes the key from the salt and the master password.
Initialize a database. :param database_path: The absolute path to the database to initialize.
Search the database for the given query. Will find partial matches.
Get the :class:`Domain <pwm.Domain>` object from a name. :param domain_name: The domain name to fetch
Modify an existing domain. :param domain_name: The name of the domain to modify. :param new_salt:
Create a new domain entry in the database. :param username: The username to associate with
Yields tile (x, y, z) tuples for a bounding box and zoom levels. Arguments: bbox
Returns a tuple of (longitude, latitude) from a map tile xyz coordinate. See http://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2 Arguments:
Returns a tuple of (xtile, ytile) from a (longitude, latitude) coordinate. See http://wiki.openstreetmap.org/wiki/Slippy_map_tilenames Arguments: lon
Extract messages from Handlebars templates. It returns an iterator yielding tuples in the following form
Returns a GDAL virtual filesystem prefixed path. Arguments: path -- file path as str
Returns the EPSG ID as int if it exists.
Main entry point for the CLI.
Initialize loggers.
Update the content of a single file.
Returns a dictionary of enabled GDAL Driver metadata keyed by the 'ShortName' attribute.
Returns the gdal.Driver for a path or None based on the file extension. Arguments: path
Converts an OGR polygon to a 2D NumPy array. Arguments: geom -- OGR Geometry size
Returns a Raster from layer features. Arguments: layer -- Layer to rasterize rast -- Raster
Returns a Raster instance. Arguments: path -- local or remote path as str or file-like
Returns an in-memory raster initialized from a pixel buffer. Arguments: data -- byte buffer of
Convert image pixel/line coordinates to georeferenced x/y, return a generator of two-tuples. Arguments: coords --
Transform from projection coordinates (Xp,Yp) space to pixel/line (P,L) raster space, based on the provided
Returns a copied Raster instance. Arguments: source -- the source Raster instance or filepath as
Calls Driver.Create() with optionally provided creation options as dict, or falls back to driver specific
Returns a dict of driver specific raster creation options. See GDAL format docs at http://www.gdal.org/formats_list.html
Returns a new Raster instance. gdal.Driver.Create() does not support all formats. Arguments: path -- file
Sets the affine transformation. Intercepts the gdal.Dataset call to ensure use as a property setter.
Returns an NDArray, optionally subset by spatial envelope. Keyword args: envelope -- coordinate extent tuple
Returns the minimum bounding rectangle as a tuple of min X, min Y, max X,
Returns a 4-tuple pixel window (x_offset, y_offset, x_size, y_size). Arguments: envelope -- coordinate extent tuple
Returns the underlying ImageDriver instance.
Derive new Raster instances. Keyword args: size -- tuple of image size (width, height) affine
Returns a MaskedArray using nodata values. Keyword args: geometry -- any geometry, envelope, or coordinate
Returns read only property for band nodata value, assuming single band rasters for now.
Returns raster data bytes for partial or full extent. Overrides gdal.Dataset.ReadRaster() with the full raster
Returns a new instance resampled to provided size. Arguments: size -- tuple of x,y image
Save this instance to the path and format provided. Arguments: to -- output path as
Sets the spatial reference. Intercepts the gdal.Dataset call to ensure use as a property setter.
Returns a tuple of row, column, (band count if multidimensional).
Returns a new reprojected instance. Arguments: to_sref -- spatial reference as a proj4 or wkt
computes the ideal conversion ratio for the given alphabet. A ratio is considered ideal when
retrieves a named charset or treats the input as a custom alphabet and use that
gets a chunk from the input data, converts it to a number and encodes that
encodes an integer of 8*self.chunklen[0] bits using the specified alphabet
parses a chunk of bytes to integer using big-endian representation
partition the data into chunks and retrieve the chunk at the given index
Cache result of function call.
Get a list of patterns from a file and make a regular expression.
Dates can be defined in many ways, but zipline use aware datetime objects only. Plus,
Get timezone as set by the system
>>> # Harmonize api endpoints >>> # __version__ should be like major.minor.fix >>> from my_app
>>> # Wrap api endpoints with more details >>> api_doc('/resource', secure=True, key='value') GET /resource?secure=true&key=value
Returns the model properties as a dict
Catch exceptions with a prompt for post-mortem analyzis
Clearer data printing
Use this function to list all coins with their data which are available on cryptocoincharts.
Use this function to query price and volume data for ONE trading pair. A list
Use this function to query price and volume data for MANY trading pairs. Usage: http://api.cryptocoincharts.info/tradingPairs/[currency1_currency2,currency2_currency3,...]
Wrapper method
Connects to the remote master and continuously receives calls, executes them, then returns a response
Starts an asyncio event loop to connect to the master and run jobs.
Runs a pool of workers which connect to a remote HighFive master and begin executing
Sets the classification of this CompanyDetailCompany. Classification of Company :param classification: The classification of this
Add message to queue and start processing the queue.
Create the message to turn light on.
Create the message to turn switch on.
Scale brightness from 0..255 to 1..32.
Create the message to turn light or switch off.
If the queue is not empty, process the queue.
Send msg to LightwaveRF hub.
Generates a wrapped adapter for the given object Parameters ---------- obj : list, buffer, array,
Sets the nature of this YearlyFinancials. Nature of the balancesheet :param nature: The nature of
Figure out a reasonable default with. Use os.environ['COLUMNS'] if possible, and failing that use 80.
Return a list of strings as a compact set of columns arranged horizontally or vertically.
Generates a new Minimal Perfect Hash (MPH) Parameters ---------- data : list, array-like, file-like The
Load a Minimal Perfect Hash (MPH) Given an input stream, this will load a minimal
Persist the Minimal Perfect Hash (MPH) to a stream Parameters ---------- output : file_like The
Generate hash code for a key from the Minimal Perfect Hash (MPH) Parameters ---------- Key
Update values of configuration section with dict. Args: sct_dict (dict): dict indexed with option names.
Restore default values of options in this section.
Use a dictionary to create a :class:`ConfigurationManager`. Args: conf_dict (dict of dict of :class:`ConfOpt`): the
Set the list of config files. Args: config_files (pathlike): path of config files, given in
Iterator over sections, option names, and option values. This iterator is also implemented at the
Iterator over sections, option names, and option metadata. This iterator is also implemented at the
Create config file. Create config file in :attr:`config_files_[index]`. Parameters: index(int): index of config file. update
Update values of configuration options with dict. Args: conf_dict (dict): dict of dict indexed with
Read a config file and set config values accordingly. Returns: dict: content of config file.
Read config files and set config values accordingly. Returns: (dict, list, list): respectively content of
For the given module file (usually found by: from package import __file__ as module_file in
List of cli strings for a given option.
List of config sections used by a command. Args: cmd (str): command name, set to
Scan options related to one command and enrich _opt_cmds.
Add options to a parser.
Build command line argument parser. Returns: :class:`argparse.ArgumentParser`: the command line argument parser. You probably won't
Parse arguments and update options accordingly. Args: arglist (list of str): list of arguments to
Write zsh _arguments compdef for a given command. Args: zcf (file): zsh compdef file. cmd
Write zsh compdef script. Args: path (path-like): desired path of the compdef script. cmd (str):
Build a list of all options for a given command. Args: cmd (str): command name,
Write bash complete script. Args: path (path-like): desired path of the complete script. cmd (str):
Try to guess zsh version, return (0, 0) on failure.
Starts a new HighFive master at the given host and port, and returns it.
Called when a remote worker connection has been found. Finishes setting up the protocol object.
Called when a chunk of data is received from the remote worker. These chunks are
Called when a complete line is found from the remote worker. Decodes a response object
Called when the connection to the remote worker is broken. Closes the worker.
Called when a job has been found for the worker to run. Sends the job's
Called when a response to a job RPC has been received. Decodes the response and
Closes the worker. No more jobs will be handled by the worker, and any running
Runs a job set which consists of the jobs in an iterable job list.
Starts closing the HighFive master. The server will be closed and all queued job sets
Called when a state change has occurred. Waiters are notified that a change has occurred.
Adds a new result.
Waits until the result set changes. Possible changes can be a result being added or
If there is still a job in the job iterator, loads it and increments the
Marks the job set as completed, and notifies all waiting tasks.
Gets a job from the job set if one is queued. The jobs_available() method should
Adds the result of a completed job to the result list, then decrements the active
Cancels the job set. The job set is immediately finished, and all queued jobs are
Waits until the job set is finished. Returns immediately if the job set is already
Distributes jobs from the active job set to any waiting get_job callbacks.
Adds a job set to the manager's queue. If there is no job set running,
Calls the given callback function when a job becomes available.
Returns a job to its source job set to be run again later.
Adds the result of a job to the results list of the job's source job
Called when a job set has been completed or cancelled. If the job set was
Closes the job manager. No more jobs will be assigned, no more job sets will
External entry point which calls main() and if Stop is raised, calls sys.exit()
Remove duplicates in a list.
Returns true if the regex matches the object, or a string in the object if
Lists all available instances. :param latest: If true, ignores the cache and grabs the latest
Use the environment to get the current region
Returns if the cache is valid (exists and modified within the interval). :return: Whether the
Reads the description cache, returning each instance's information. :return: A list of host entries. :rtype:
Filters a list of host entries according to the given filters. :param entries: A list
Prints the public dns name of `name`, if it exists. :param name: The instance name.
Deserialize a HostEntry from a dictionary. This is more or less the same as calling
Given an attribute name, looks it up on the entry. Names that start with ``tags.``
Lists all of the attributes to be found on an instance of this class. It
Sorts a list of entries by the given attribute.
Returns a representation of the host as a single line, with columns joined by ``sep``.
Loads a ``HostEntry`` from a boto instance. :param instance: A boto instance object. :type instance:
Returns whether the instance matches the given filter text. :param _filter: A regex filter. If
Returns the best name to display for this host. Uses the instance name if available;
Returns the "pretty name" (capitalized, etc) of an attribute, by looking it up in ``cls.COLUMN_NAMES``
Takes a string containing 0 or more {variables} and formats it according to this instance's
Pretty-prints a list of entries. If the window is wide enough to support printing as
Attach the event time, as unix epoch
Hivy formated logger
Configure and return a new logger for hivy modules
Implement celery workers using json and redis
Return status report
Stop and remove a worker
Reusable entry point. Arguments are parsed via the argparse-subcommands configured via each Command class found
Define a switchable ConfOpt. This creates a boolean option. If you use it in your
Define a configuration section handling config file. Returns: dict of ConfOpt: it defines the 'create',
Set options from a list of section.option=value string. Args: conf (:class:`~loam.manager.ConfigurationManager`): the conf to update.
Implement the behavior of a subcmd using config_conf_section Args: conf (:class:`~loam.manager.ConfigurationManager`): it should contain a
Create completion files for bash and zsh. Args: climan (:class:`~loam.cli.CLIManager`): CLI manager. path (path-like): directory
Renders a list of columns. :param columns: A list of columns, where each column is
Render the `num`th row of each column in `columns`. :param num: Which row to render.
Renders a table. A table is a list of rows, each of which is a
Transposes a table, turning rows into columns. :param table: A 2D string grid. :type table:
Prepare the rows so they're all strings, and all the same length. :param table: A
Gets the width of the table that would be printed. :rtype: ``int``
Returns a function that colors a string with a number from 0 to 255.
Hashes a string and returns a number between ``min`` and ``max``.
Returns a random color between min and max.
Reads stdin, exits with a message if interrupted, EOF, or a quit message. :return: The
Verify basic http authentification
Verify http header token authentification
Flask decorator protecting ressources using username/password scheme
Flask decorator protecting ressources using token scheme
`pgrep` returns an error code if no process was found
Take a string and return the corresponding module
Utility for logbook information injection
Makes the HTTP request using RESTClient.
Builds form parameters. :param post_params: Normal form parameters. :param files: File parameters. :return: Form parameters
Configure from cli and run the server
Include a hidden input to stored the serialized upload value.
Starts `command` in a subprocess. Prints every line the command prints, prefaced with `description`. :param
Takes a list of dictionaries with keys corresponding to ``stream_command`` arguments, and runs all concurrently.
Runs multiple commands, optionally in parallel. Each command should be a dictionary with a 'command'
Return the net work days according to RH's calendar.
Recursive dict merge. Inspired by :meth:``dict.update()``, instead of updating only top-level keys, dict_merge recurses down
Lets the user choose which instance to SSH into. :param entries: The list of host
Queries bash to find the path to a commmand on the system.
Uses hostname and other info to construct an SSH command.
Uses hostname and other info to construct an SCP command. :param hostname: The hostname of
Performs an SCP command where the remote_path is the target and the local_path is the
Performs an SCP command where the remote_path is the source and the local_path is a
Runs the given command over SSH in parallel on all hosts in `entries`. :param entries:
SSH into to a host. :param entry: The host entry to pull the hostname from.
Parse command-line arguments.
Loads the user's LSI profile, or provides a default.
Takes arguments parsed from argparse and returns a profile.
Recursive dict merge. Inspired by :meth:``dict.update()``, instead of updating only top-level keys, dict_merge recurses down
Relate this package component to the supplied part.
Return a list of parts related to this one via reltype.
Load relationships from source XML.
Add a part to the package. It will also add a content-type - by default
Load a part into this package based on its relationship type
Return all parts of this package that are instances of cls (where cls is passed
Get the correct content type for a given name
given an element, parse out the proper ContentType
Parses the given DSL string and returns parsed results. Args: input_string (str): DSL string prefix
Builds a final copy of the token using the given secret key. :param secret_key(string): The
Assigns force field parameters to Atoms in the AMPAL object. Parameters ---------- ampal_obj : AMPAL
Finds the maximum radius and npnp in the force field. Returns ------- (max_rad, max_npnp): (float,
Makes a dictionary containing PyAtomData for the force field. Returns ------- ff_params_struct_dict: dict Dictionary containing
Save this package to target, which should be a filename or open file stream. If
Return a zipped package as a readable stream
Return a generator yielding each of the segments who's names match name.
Copy objects from one directory in a bucket to another directory in the same bucket.
Open an S3 Bucket resource. Parameters ---------- bucket_name : `str` Name of the S3 bucket.
Upload a directory of files to S3. This function places the contents of the Sphinx
Upload a file to the S3 bucket. This function uses the mimetypes module to guess
Upload an arbitrary object to an S3 bucket. Parameters ---------- bucket_path : `str` Destination path
Create an S3 object representing a directory that's designed to redirect a browser (via Fastly)
List all file-type object names that exist at the root of this bucket directory. Parameters
List all names of directories that exist at the root of this bucket directory. Note
Make an absolute directory path in the bucker for dirname, which is is assumed relative
Delete a file from the bucket. Parameters ---------- filename : `str` Name of the file,
Delete a directory (and contents) from the bucket. Parameters ---------- dirname : `str` Name of
Ensure a token is in the Click context object or authenticate and obtain the token
Speak loudly! FIVE! Use upper case!
Replaced by a letter 5 right shift. e.g. a->f, b->g, . -> .
Delete all objects in the S3 bucket named ``bucket_name`` that are found in the ``root_path``
Get project's home URL based on settings.PROJECT_HOME_NAMESPACE. Returns None if PROJECT_HOME_NAMESPACE is not defined in
Decorator to silence template tags if 'PROJECT_HOME_NAMESPACE' is not defined in settings. Usage Example: from
A template tag to return the project's home URL and label formatted as a Bootstrap
A template tag to return the project's home URL and label formatted as a Bootstrap
Arggh matey
Rico Suave
pmxbot parle français
Zor supas! — !زۆر سوپاس
Danke schön!
schneier "facts"
Calculates the interaction energy between AMPAL objects. Parameters ---------- ampal_objs: [AMPAL Object] A list of
Calculates the internal energy of the AMPAL object. Parameters ---------- ampal_obj: AMPAL Object Any AMPAL
Get sample counts by file, and root thread function. (Useful for answering quesitons like "what
Get sample counts by line, and root thread function. (For one file, specified as a
Get lines sampled accross all threads, in order from most to least sampled.
return sampled stacks in form suitable for inclusion in a flame graph (https://github.com/brendangregg/FlameGraph)
Get a temporary auth token from LTD Keeper. Parameters ---------- host : `str` Hostname of
Upload a new site build to LSST the Docs.
Detect if the upload should be skipped based on the ``TRAVIS_EVENT_TYPE`` environment variable. Returns -------
Instant purge URLs with a given surrogate key from the Fastly caches. Parameters ---------- surrogate_key
Register a new build for a product on LSST the Docs. Wraps ``POST /products/{product}/builds/``. Parameters
Confirm a build upload is complete. Wraps ``PATCH /builds/{build}``. Parameters ---------- build_url : `str` URL
Deeply updates a dictionary. List values are concatenated. Args: d (dict): First dictionary which will
ltd is a command-line client for LSST the Docs. Use ltd to upload new site
Edit a part from an OOXML Package without unzipping it
List the contents of a subdirectory of a zipfile
recursively call os.path.split until we have all of the components of a pathname suitable for
Given a path to a part in a zip file, return a path to the
Give preference to an XML_EDITOR or EDITOR defined in the environment. Otherwise use notepad on
return (user, seckey) if url end point is in allowed entry point list
Process the astroid node stream.
Generates an html chart from either a pandas dataframe, a dictionnary, a list or an
Generate html from an Altair chart object and optionally write it to a file
Serialize to an Altair chart object from either a pandas dataframe, a dictionnary, a list
Patch the Altair generated json to the newest Vega Lite spec
Generates html from Vega lite data
Converts a dictionnary to a pandas dataframe
Writes a chart's html to a file
Get the right chart class from a string
Encode the fields in Altair format
Link to a GitHub user. Returns 2 part tuple containing list of nodes to insert
Returns the tarball URL inferred from an app.json, if present.
Brings up a Heroku app.
Brings down a Heroku app.
Decorator implementing Iterator interface with nicer manner. Example ------- @iter_attribute('my_attr'): class DecoratedClass: ... Warning: ========
check: 1, timestamp in reasonable range 2, api key exists 3, entry point allowed for
returns a random (fixed length) string :param length: string length :param choices: string containing all
returns a random (variable length) string. :param maxlength: maximum string length :param minlength: minimum string
returns a a random string that represent a binary representation :param length: number of bits
returns a string representing a random ip address :param not_valid: if passed must be a
returns a :class:`netaddr.IPAddress` instance with a random value :param private: if False does not return
Get a random date between two dates
Returns a prepared ``Session`` instance.
Sends an API request to Heroku. :param method: HTTP method. :param endpoint: API endpoint, e.g.
Creates an app-setups build. Returns response data as a dict. :param tarball_url: URL of a
Checks the status of an app-setups build. :param build_id: ID of the build to check.
generator that returns an unique string :param prefix: prefix of string :param cache: cache used
Used internally by memoize decorator to get/store function results
Decorator that stores function results in a dictionary to be used on the next time
wraps a function so that produce unique results :param func: :param num_args: >>> import random
Add any sub commands to the argument parser. :param parser: The argument parser object
Gets the root argument parser object.
Gets the description of the command. If its not supplied the first sentence of the
Gets the help text for the command. If its not supplied the doc string is
Runs the command passing in the parsed arguments. :param args: The arguments to run the
userfileter: when binding api key with user, filter some users if necessary
Encode wrapper for a dataset with maximum value Datasets can be one or two dimensional
Get all available athletes This method is cached to prevent unnecessary calls to GC.
Get all activity data for the last activity Keyword arguments:
Actually do the request for activity list This call is slow and therefore this method
Actually do the request for activity filename This call is slow and therefore this method
Construct athlete endpoint from host and athlete name Keyword arguments: athlete -- Full athlete name
Construct activity endpoint from host, athlete name and filename Keyword arguments: athlete -- Full athlete
Do actual GET request to GC REST API Also validates responses. Keyword arguments: endpoint --
Return package version as listed in `__version__` in `init.py`.
Creates a Heroku app-setup build. :param tarball_url: URL of a tarball containing an ``app.json``. :param
if view is string based, must be a full path
urlpattern: urlpattern object prefix?? : for multiple level urls defined in different urls.py files prefixre:
returns a random title .. code-block:: python >>> d.title() u'Mrs.' >>> d.title(['es']) u'El Sr.' >>>
returns a random tuple representing person information .. code-block:: python >>> d.person() (u'Derren', u'Powell', 'm')
return a random first name :return: >>> from mock import patch >>> with patch('%s._get_firstnamess' %
return a random last name >>> from mock import patch >>> with patch('%s._get_lastnames' % __name__,
Returns the hex color for any valid css color name >>> lookup_color('aliceblue') 'F0F8FF'
Color a list of arguments on particular indexes >>> c = color_args([None,'blue'], 1) >>> c.next()
Add tick marks in order of axes by width APIPARAM: chxtc <axis index>,<length of tick
Define the type of axes you wish to use atype must be one of x,t,y,r
Label each axes one at a time args are of the form <label 1>,...,<label n>
Set the range of each axis, one at a time args are of the form
Add style to your axis, one at a time args are of the form:: <axis
Render the axes data into the dict data
Reverse a chart URL or dict into a GChart instance >>> G = GChart.fromurl('http://chart.apis.google.com/chart?...') >>>
Creates a map of the defined geography with the given country/state codes Geography choices are
Scales the data down to the given size args must be of the form:: <data
Update the chart's dataset, can be two dimensional or contain string data
Defines markers one at a time for your graph args are of the form:: <marker
Set margins for chart area args are of the form:: <left margin>, <right margin>, <top
Called one at a time for each dataset args are of the form:: <data set
Apply a solid fill to your chart args are of the form <fill type>,<fill style>,...
Apply a grid to your chart args are of the form:: <x axis step size>,
Add a color for each dataset args are of the form <color 1>,...<color n> APIPARAM:
Add a simple label to your chart call each time for each dataset APIPARAM: chl
Define a position for your legend to occupy APIPARAM: chdlp
Add a title to your chart args are optional style params of the form <color>,<font
Set the size of the chart, args are width,height and can be tuple APIPARAM: chs
Renders the chart context and axes into the dict data
Check to see if the type is either in TYPES or fits type name Returns
Returns the rendered URL of the chart
Shows the chart URL in a webbrowser Other arguments passed to webbrowser.open
Download the chart from the URL into a filename as a PNG The filename defaults
Returns an XHTML <img/> tag of the chart kwargs can be other img tag attributes,
Grabs readable PNG file pointer
Returns a PngImageFile instance of the chart You must have PIL installed for this to
Writes out PNG image data in chunks to file pointer fp fp must support w
Returns the unique SHA1 hexdigest of the chart URL param parts good for unittesting...
>> get_codes() ISO ISO3 ISO-Numeric fips Country Capital Area(in sq km) Population Continent tld CurrencyCode
return a random floating number :param min: minimum value :param max: maximum value :param decimal_places:
Assign an entity name based on the class immediately inhering from Base. This is needed
Apply the less or equal algorithm on the ordered list of metadata statements :param orig:
This is both verified and self asserted information. As expected verified information beats self-asserted so
Build a JWKS from the signing keys belonging to the self signer :return: Dictionary
:param ms_dict: Metadata statement as a dictionary :param keyjar: A keyjar with the necessary FO
Starting with a signed JWT or a JSON document unpack and verify all the separate
Given a MetadataStatement instance create a signed JWT. :param metadata: Original metadata statement as a
Computes the resulting metadata statement from a compounded metadata statement. If something goes wrong during
Remove MS paths that are marked to be used for another usage :param metadata: Metadata
Add signed metadata statements to a request :param req: The request :param sms_dict: A dictionary
Parses command line args using argparse library
Add logging option to an ArgumentParser.
Apply logging options produced by LogLevelAction and LogFileAction. More often then not this function is
Log msg at 'verbose' level, debug < verbose < info
生成用于post的数据 :param echo: a int to check is response is write :type echo: int :param
登陆系统,返回一个requests的session对象 :return: session with login cookies :rtype: requests.sessions.Session
获取课表,返回一个列表,包含所有课表对象 :return: list of lessons :rtype: list[dict]
返回lessons,如果未调用过``get_lesson()``会自动调用 :return: list of lessons :rtype: list
个人信息,如果未调用过``get_detail()``会自动调用 :return: information of student :rtype: dict
个人信息,同时会把返回值保存在self.detail中 :return: information of student :rtype: dict
历年成绩查询的原始返回值,请使用get_past_score() :return: dict of the raw response of past score :rtype: dict
获取教学评估内所有需要课程 :return: 返回所以有需要进行教学评估的课程 :rtype: list
获取考试时间 :param xnxq: 学年学期 格式为 ``开始学年-结束学年-{1|2|3}`` 3为暑期学校 example:``2016-2017-2`` :type xnxq: str :return: list of exam
Creates a map of letter use in a word. Args: word: a string to create
Finds anagrams in word. Args: word: the string to base our search off of sowpods:
Returns the exception's name in an AMP Command friendly format. For example, given a class
Transforms a Go Metrics API metric result into a list of values for a given
Gets the most recent non-zero value for a .last metric or zero for empty data.
Validate the given 1-based page number.
Get a page from an interator, handling invalid input from the page number by defaulting
Executes the given command. returns a 2-tuple with returncode (integer) and OUTPUT (string)
Gzip a file returns a 3-tuple with returncode (integer), terminal output (string) and the new
Create a tar-file or a tar.gz at location: filename. params: gzip: if True - gzip
alternative to os.chown. wraps around unix chown example: chown('/tmp/test/', bob, bob) returns 2-tuple: exitcode and
alternative to os.
Call this method from within a try/except clause to generate a call to Stack Sentinel.
Sends error payload to Stack Sentinel API, returning a parsed JSON response. (Parsed as in,
Given configuration initiate an InternalSigningService instance :param config: The signing service configuration :param entity_id: The
Given configuration initiate a SigningService instance :param config: The signing service configuration :param entity_id: The
Creates a signed JWT :param req: Original metadata statement as a :py:class:`MetadataStatement` instance :param receiver:
Uses POST to send a first metadata statement signing request to a signing service. :param
Uses PUT to update an earlier accepted and signed metadata statement. :param location: A URL
Uses GET to get a newly signed metadata statement. :param location: A URL to which
Yield bundle contents from the given dict. Each item yielded will be either a string
Return a bundle initialised by the given dict.
Returns urls needed to include all assets of asset_type
Return html tags for urls of asset_type
Return all html tags for all asset_type
Uses re to pull out the assigned value to __version__ in filename.
Given a URL, check to see if there is an assocaited protocol. If not, set
Find the href destinations of all links at URL Arguments: - `url`: Return: list[str] Exceptions:
Connected to AMP server, start listening locally, and give the AMP client a reference to
Return the [section] option values as a list. The list items must be delimited with
Get modules by project_abspath and packages_scan. Traverse all files under folder packages_scan which set by
Import customer's service module.
This function takes a date string in various formats and converts it to a normalized
Expands a (possibly) incomplete date string to either the lowest or highest possible contained date
Take 'doc' and create a new doc using only keys from the 'fields' list. Supports
For all the datetime fields in "datemap" find that key in doc and map the
Output a cursor to a filename or stdout if filename is "-". fmt defines whether
Output all fields using the fieldNames list. for fields in the list datemap indicates the
Given a list of tasks to perform and a dependency graph, return the tasks that
Rotates a file. moves original file.ext to targetdir/file-YYYY-MM-DD-THH:MM:SS.ext deletes all older files matching the same
View decorator that handles JSON based API requests and responses consistently. :param methods: A list
Add or create the default departments for the given project :param project: the project that
Add or create the default assettypes for the given project :param project: the project that
Add or create the default sequences for the given project :param project: the project that
Add a rnd shot for every user in the project :param project: the project that
Post save receiver for when a Project is saved. Creates a rnd shot for every
Post save receiver for when a sequence is saved. creates a global shot. :param sender:
Create all tasks for the element :param element: The shot or asset that needs tasks
Return path :returns: path :rtype: str :raises: None
Set path :param value: The value for path :type value: str :raises: None
Reimplemented from :class:`models.Model`. Check if startframe is before endframe :returns: None :rtype: None :raises: ValidationError
Set path :param value: The value for path :type value: str :raises: None
Registers a type name so that it may be used to send and receive packages.
Opens the port. :param packet_received: Callback which is invoked when we received a packet. Is
Ensures that we have an open connection to the given peer. Returns the peer id.
Sends a packet to a peer.
Stop listing for new connections and close all open connections. :returns: Deferred that calls back
Read customer's config value by section and key. :param section: config file's section. i.e [default]
Nova annotation for adding function to process nova notification. if event_type include wildcard, will put
Cinder annotation for adding function to process cinder notification. if event_type include wildcard, will put
Neutron annotation for adding function to process neutron notification. if event_type include wildcard, will put
Glance annotation for adding function to process glance notification. if event_type include wildcard, will put
Swift annotation for adding function to process swift notification. if event_type include wildcard, will put
Swift annotation for adding function to process keystone notification. if event_type include wildcard, will put
Heat annotation for adding function to process heat notification. if event_type include wildcard, will put
Adds a factory. After calling this method, remote clients will be able to connect to
Removes a factory. After calling this method, remote clients will no longer be able to
Attempts to connect using a given factory. This will find the requested factory and use
Receives some data for the given protocol.
Disconnects the given protocol.
Shorthand for ``callRemote``. This uses the factory's connection to the AMP peer.
Create a multiplexed stream connection. Connect to the AMP server's multiplexed factory using the identifier
Stores a reference to the connection, registers this protocol on the factory as one related
Received some data from the local side. If we have set up the multiplexed connection,
Actually sends data over the wire.
If we already have an AMP connection registered on the factory, get rid of it.
Attempts to get a local protocol by connection identifier.
Some data was received from the remote end. Find the matching protocol and replay it.
The other side has asked us to disconnect.
Append `s` to the queue. Equivalent to:: queue += s if `queue` where a regular
Remove and return the first `n` characters from the queue. Throws an error if there
Removes `n` bytes from the beginning of the queue. Throws an error if there are
Return the first `n` characters from the queue without removing them. Throws an error if
Takes a string, centres it, and pads it on both sides
Takes a string, and prints it with the time right aligned
Ask a yes/no question via raw_input() and return their answer. "question" is a string that
Ask a yes/quit question via raw_input() and return their answer. "question" is a string that
Prints a timer with the format 0:00 to the console, and then clears the line
Takes the parts of a semantic version number, and returns a nicely formatted string.
Returns terminal dimensions :return: Returns ``(width, height)``. If there's no terminal to be found, we'll
Identify whether the user is requesting unit validation against astropy.units, pint, or quantities.
Check that a value has physical type consistent with user-specified units Note that this does
Apply standard padding. :Parameters: data_to_pad : byte string The data that needs to be padded.
Remove standard padding. :Parameters: padded_data : byte string A piece of data with padding that
Construct a :py:class:`fedoidcmsg.entity.FederationEntity` instance based on given configuration. :param config: Federation entity configuration :param eid:
Pick signed metadata statements based on ISS pattern matching :param pattern: A regular expression to
Pick signed metadata statements based on ISS pattern matching :param fo: Federation operators ID :param
Unpack and evaluate a compound metadata statement. Goes through the necessary three steps. * unpack
Sign the extended request. :param req: Request, a :py:class:`fedoidcmsg.MetadataStatement' instance :param receiver: The intended user
Update a metadata statement by: * adding signed metadata statements or uris pointing to signed
Update a request with signed metadata statements. :param req: The request :param federation: Federation Operator
Only gathers metadata statements and returns them. :param fos: Signed metadata statements from these Federation
Add signed metadata statements to the request :param req: The request so far :param federation:
Add signed metadata statements to the request :param req: The request so far :param federation:
Prints the anagram results sorted by score to stdout. Args: input_word: the base word we
Argparse logic, command line options. Args: args: sys.argv[1:], everything passed to the program after its
Main command line entry point.
Registers a type name so that it may be used to send and receive packages.
Do not overwrite this method. Instead implement `on_...` methods for the registered typenames to handle
Send a packet. :param typename: A previously registered typename. :param packet: String with the content
Invoked if a packet with an unregistered type was received. Default behaviour is to log
Creates a TCP based :class:`RPCSystem`. :param port_range: List of ports to try. If `[0]`, an
Opens the port. :returns: Deferred that callbacks when we are ready to make and receive
Stop listing for new connections and close all open connections. :returns: Deferred that calls back
Registers the given callable in the system (if it isn't already) and returns the URL
Create a callable that will invoke the given remote function. The stub will return a
Called every `ping_interval` seconds. Invokes `_ping()` remotely for every ongoing call.
Called from remote to ask if a call made to here is still in progress.
Wraps a WSGI app and handles uncaught exceptions and defined exception and outputs a the
Get command regex string and completer dict.
Defers to `amp.AmpList`, then gets the element from the list.
Wraps the object in a list, and then defers to ``amp.AmpList``.
Return the body of a signed JWT, without verifying the signature. :param jwt: A signed
Builds a keyJar instance based on the information in the 'signing_keys' claims in a list
Reads a file containing a JWKS and populates a :py:class:`oidcmsg.key_jar.KeyJar` from it. :param jwks_file: file
Verify that an item *a* is <= then an item *b* :param a: An item
Verifies that an instance of this class adheres to the given restrictions. :param kwargs: A
Parse simple JWKS or signed JWKS from the HTTP response. :param response: HTTP response from
Performs a pg_dump backup. It runs with the current systemuser's privileges, unless you specify username
returns a connected cursor to the database-server.
returns a list of all databases on this server
Returns a dictionary of all the files under a path.
Syncs a local directory with an S3 bucket. Currently does not delete files from S3
Syncs a list of folders to their assicated buckets. folders: A list of 2-tuples in
Decorator for views that checks that the user is logged in, redirecting to the log-in
Decorator for views that checks that the user is logged in, redirecting to the log-in
Ensure the user has the necessary tokens for the specified services
Displays the login form and handles the login action.
Build CLI dynamically based on the package structure.
Return an already closed read-only instance of Fridge. Arguments are the same as for the
Force reloading the data from the file. All data in the in-memory dictionary is discarded.
Force saving the dictionary to the file. All data in the file is discarded. This
Close the fridge. Calls :meth:`save` and closes the underlying file object unless an already open
Create a signed JWT containing a JWKS. The JWT is signed by one of the
Verify the signature of a signed JWT containing a JWKS. The JWT is signed by
A metadata statement signing request with 'signing_keys' signed by one of the keys in 'signing_keys'.
Verify that a JWT is signed with a key that is inside the JWT. :param
A decorator for providing a unittesting function/method with every card in a librarian card library
A decorator for providing a unittest with a library and have it called only once.
Descover and load greencard tests.
Command line entry point.
Returns the Scrabble score of a letter. Args: letter: a single character string Raises: TypeError
Checks the Scrabble score of a single word. Args: word: a string to check the
Searches a string for blank tile characters ("?" and "_"). Args: input_word: the user supplied
Opens the word list file. Args: sowpods: a boolean to declare using the sowpods list
Checks if the input word could be played with a full bag of tiles. Returns:
docstring for main
docstring for argparse
Handle a JSON AMP dialect request. First, the JSON is parsed. Then, all JSON dialect
Gets the command class and matching responder function for the given command name.
Parses all the values in the request that are in a form specific to the
Run the responser function. If it succeeds, add the _answer key. If it fails with
Serializes the response to JSON, and writes it to the transport.
Tells the box receiver to stop receiving boxes.
Builds a bridge and associates it with an AMP protocol instance.
Read a signed JWKS bundle from disc, verify the signature and instantiate a JWKSBundle instance
If the *key_file* file exists then read the keys from there, otherwise create the keys
Convert a JWKS to a KeyJar instance. :param jwks: String representation of a JWKS :return:
Create a signed JWT containing a dictionary with Issuer IDs as keys and JWKSs as
Upload a bundle from an unsigned JSON document :param jstr: A bundle as a dictionary
Return the bundle of keys as a dictionary with the issuer IDs as the keys
Input is a signed JWT with a JSON document representing the key bundle as body.
Convert a key bundle into a KeyJar instance. :return: An :py:class:`oidcmsg.key_jar.KeyJar` instance
return a function which runs the given cmd make_shortcut('ls') returns a function which executes envoy.run('ls
This function deal with the nova notification. First, find process from customer_process that not include
This function deal with the cinder notification. First, find process from customer_process that not include
This function deal with the neutron notification. First, find process from customer_process that not include
This function deal with the glance notification. First, find process from customer_process that not include
This function deal with the swift notification. First, find process from customer_process that not include
This function deal with the keystone notification. First, find process from customer_process that not include
This function deal with the heat notification. First, find process from customer_process that not include
Serve app using wsgiref or provided server. Args: - server (callable): An callable
Print 'msg' to stdout, and option 'log' at info level.
Print 'msg' to stderr, and option 'log' at info level.
A class decorator for Command classes to register in the default set.
A class decorator for Command classes to register.
Instantiate each registered command to a dict mapping name/alias to instance. Due to aliases, the
If all of the constraints are satisfied with the given value, defers to the composed
Converts the string to a value using the composed AMP argument, then checks all the
Merges ``cdict`` into ``completers``. In the event that a key in cdict already exists in
log.debug("------------------------------------------------------") log.debug(f"** WORD {self.WORD}") log.debug(f"** words {self.words}") log.debug(f"** word_before_cursor {word_before_cursor}")
Start ternya work. First, import customer's service modules. Second, init openstack mq. Third, keep a
Init connection and consumer with openstack mq.
Import customer's service modules.
Init openstack nova mq 1. Check if enable listening nova notification 2. Create consumer :param
Init openstack cinder mq 1. Check if enable listening cinder notification 2. Create consumer :param
Init openstack neutron mq 1. Check if enable listening neutron notification 2. Create consumer :param
Init openstack glance mq 1. Check if enable listening glance notification 2. Create consumer :param
Init openstack swift mq 1. Check if enable listening swift notification 2. Create consumer :param
Init openstack swift mq 1. Check if enable listening keystone notification 2. Create consumer :param
Init openstack heat mq 1. Check if enable listening heat notification 2. Create consumer :param
Check if customer enable openstack component notification. :param openstack_component: Openstack component type.
Get music info from baidu music api
process for downing music with multiple threads
Execute a code object The inputs and behavior of this function should match those of
Implementation of the LOAD_NAME operation
Pop the **n** topmost items from the stack and return them as a ``list``.
Implement ``builtins.__build_class__``. We must wrap all class member functions using :py:func:`function_wrapper`. This requires using a
Implement the CALL_FUNCTION_ operation. .. _CALL_FUNCTION: https://docs.python.org/3/library/dis.html#opcode-CALL_FUNCTION
Perfoms a mysqldump backup. Create a database dump for the given database. returns statuscode and
returns a connected cursor to the database-server.
Render ditaa code into a PNG output file.
Invoked in the 'finally' block of Application.run.
Run Application.main and exits with the return value.
Context manager that changes to directory `path` and return to CWD when exited.
Modified from shutil.copytree docs code sample, merges files rather than requiring dst to not exist.
If called in the context of an exception, calls post_mortem; otherwise set_trace. ``ipdb`` is preferred
Implements the dict.keys() method
Find the time this file was last modified. :param fname: File name :return: The last
Find out if this item has been modified since last :param item: A key :return:
Goes through the directory and builds a local cache based on the content of the
Implements the dict.items() method
Completely resets the database. This means that all information in the local cache and on
Implements the dict.update() method
x-->int / byte Returns-->BYTE (not str in python3) Behaves like PY2 chr() in PY2 or
x-->char (str of length 1) Returns-->int Behaves like PY2 ord() in PY2 or PY3 if
x-->bytes | bytearray Returns-->bytes: hex-encoded
x-->unicode string | bytearray | bytes Returns-->unicode string, with encoding=latin1
x-->unicode string | bytearray | bytes Returns-->bytes If x is unicode, MUST have encoding=latin1
encoding-->str: one of ENCODINGS avoid-->list of int: to void (unprintable chars etc) Returns-->int that can
encoding-->str: one of ENCODINGS l-->int: length of returned str avoid-->list of int: to void (unprintable
encoding-->str: one of ENCODINGS l-->int: length of unicode str avoid-->list of int: to void (unprintable
Parse argv for options and arguments, and start schema generation.
Rip the events from a given rss feed, normalize the data and store.
Download the image and return the local path to the image file.
Method to check if an image has changed since it was last downloaded. By making
Gets stolen bikes within a radius of a given postcode. :param request: The aiohttp request.
Returns a template.Node subclass.
This will setup logging for a single file but can be called more than once
This will setup logging for stdout and stderr :param formatter: :param log_level: str of the
This will setup logging for a single file but can be called more than once
:param log_filename: :param log_file_level str of the log level to use on this file :param
:param log_handler_level: str of the level to set for the handler :param handler: logging.Handler handler
This will raise the log level for the given modules in general this is used
Find the stack frame of the caller so that we can note the source file
get the C_C in which pe_pe is defined
Transform textual OAL actions of an *instance* to instances in the ooaofooa subsystems Value and
Transform textual OAL actions in a ooaofooa *metamodel* to instances in the subsystems Value and
Parse command line options and launch the prebuilder.
Find a symbol in the symbol table by name, kind, or both.
input: gdata ContactEntry and GroupEntry objects
Determine if a PE_PE is contained within a EP_PKG or a C_C.
Check if a PE_PE is globally defined, i.e. not inside a C_C
Get the BridgePoint component (C_C) that defines the packeable element *pe_pe*.
Get the base data type (S_DT) associated with a BridgePoint attribute.
Convert a BridgePoint data type to a pyxtuml meta model type.
The two lists of attributes which relates two classes in an association.
Create a named tuple from a BridgePoint enumeration.
Create a python function from a BridgePoint bridge.
Create a python object from a BridgePoint external entity with bridges realized as python member
Create a python function from a BridgePoint function.
Create a python value from a BridgePoint constant.
Create a python function that interprets that action of a BridgePoint class operation.
Create a python property that interprets that action of a BridgePoint derived attribute.
Create a pyxtuml class from a BridgePoint class.
Create a pyxtuml association from a simple association in BridgePoint.
Create pyxtuml associations from a linked association in BridgePoint.
Create pyxtuml associations from a sub/super association in BridgePoint.
Create a pyxtuml association from a R_REL in ooaofooa.
Create a pyxtuml meta model from a BridgePoint model. Optionally, restrict to classes and associations
Load and return a metamodel expressed in ooaofooa from a *resource*. The resource may be
Load and return a model from a *resource*. The resource may be either a filename,
Remove global instances, e.g. the core data type integer.
Open and read input from a *path or filename*, and parse its content. If the
Instantiate and build a component from ooaofooa named *name* as a pyxtuml model. Classes, associations,
The default malformed message handler for :class:`Worker`. It warns as a :exc:`MalformedMessage`.
Calls a function and send results to the collector. It supports all of function actions.
Sends ACCEPT reply.
Sends REJECT reply.
Sends RAISE reply.
Allocates a call id and emit.
Waits for the call is accepted by workers and starts to collect the results.
Dispatches the reply to the proper queue.
Guess the type name of a serialized value.
Deserialize a value of some type
Load and return a metamodel from a *resource*. The *resource* may be either a filename,
Parse *data* directly from a string. The *name* is used when reporting positional information if
Read and parse data from a *file object*, i.e. the type of object returned by
Populate a *metamodel* with classes previously encountered from input.
Populate a *metamodel* with associations previously encountered from input.
Populate a *metamodel* with class unique identifiers previously encountered from input.
Populate a *metamodel* with a class that matches the given *insert statement*.
Populate a *metamodel* with an instance previously encountered from input that was defined using positional
Populate a *metamodel* with an instance previously encountered from input that was defined using named
Populate a *metamodel* with instances previously encountered from input.
Populate links in a *metamodel* with connections between them.
Populate a *metamodel* with entities previously encountered from input.
Build and return a *xtuml.MetaModel* containing previously loaded input.
r',
r'(\d+)(\.\d+)
r'R[0-9]+
r'(1C)
r'[A-Za-z_][\w_]*
r'\(
r'-
r'[0-9]+
r'\)
r';
r'\"([^\\\n]|(\\.))*?\"
r'\n+
statement : create_table_statement SEMICOLON | insert_into_statement SEMICOLON | create_rop_statement SEMICOLON | create_index_statement SEMICOLON
create_rop_statement : CREATE ROP REF_ID RELID FROM association_end TO association_end
cardinality : NUMBER
cardinality : ID
Read key-value pair files with secrets. For example, .conf and .ini files. :return:
Search a path for known secrets, outputing text and file when found :return:
Encode id (bytes) as a Unicode string. The encoding is done such that lexicographic order
Decode id (Unicode string) as a bytes. The inverse of ``did`` is ``eid``.
Retrieve a feature collection. If a feature collection with the given id does not exist,
Returns an iterable of feature collections. This efficiently retrieves multiple FCs corresponding to the list
Adds feature collections to the store. This efficiently adds multiple FCs to the store. The
Deletes the corresponding feature collection. If the FC does not exist, then this is a
Deletes all feature collections. This does not destroy the ES index, but instead only deletes
Deletes the underlying ES index. Only use this if you know what you're doing. This
Scan for FCs in the given id ranges. :param key_ranges: ``key_ranges`` should be a list
Scan for ids only in the given id ranges. :param key_ranges: ``key_ranges`` should be a
Scan for FCs with a given prefix. :param str prefix: Identifier prefix. :param [str] feature_names:
Scan for ids with a given prefix. :param str prefix: Identifier prefix. :param [str] feature_names:
Fulltext search. Yields an iterable of triples (score, identifier, FC) corresponding to the search results
Fulltext search for identifiers. Yields an iterable of triples (score, identifier) corresponding to the search
Keyword scan for feature collections. This performs a keyword scan using the query given. A
Keyword scan for ids. This performs a keyword scan using the query given. A keyword
Low-level keyword index scan for ids. Retrieves identifiers of FCs that have a feature value
Maps feature names to ES's "_source" field.
Creates ES filters for key ranges used in scanning.
Create the index
Create the field type mapping.
Retrieve the field mappings. Useful for debugging.
Retrieve the field types. Useful for debugging.
Creates a disjunction for keyword scan queries.
Take a feature collection in dict form and count its size in bytes.
Count bytes of all feature collections whose key satisfies one of the predicates in ``filter_preds``.
construct a nice looking string for an FC
module_name-->str: module name to retrieve resource libpath-->str: shared library filename with optional path c_hdr-->str: C-style
libpath-->str: shared library filename with optional path c_hdr-->str: C-style header definitions for functions to wrap
Actual (lazy) dlopen() only when an attribute is accessed
Computes libpath based on whether module_name is set or not Returns-->list of str lib paths
Take care of command line options
Gets data from a postcode. :param request: The aiohttp request.
Gets wikipedia articles near a given postcode. :param request: The aiohttp request.
Escape the error, and wrap it in a span with class ``error-message``
Create a human-readable representation of a link on the 'TO'-side
Create a human-readable representation a unique identifier.
Check the model for uniqueness constraint violations.
Check the model for integrity violations on an association in a particular direction.
Check the model for integrity violations across a subtype association.
Check the model for integrity violations on association(s).
This will exclude all of the "modules" from the traceback :param modules: list of modules
This will exclude all modules from the traceback except these "modules" :param modules: list of
This will exclude all modules that start from this path :param paths: list of str
Returns a index creation function. Returns a valid index ``create`` function for the feature names
A basic transform for strings and integers.
x.lower().encode('utf-8') where x can be None, str, or unicode
Retrieve a feature collection from the store. This is the same as get_many([content_id]) If the
Yield (content_id, data) tuples for ids in list. As with :meth:`get`, if a content_id in
Add feature collections to the store. Given an iterable of tuples of the form ``(content_id,
Deletes all storage. This includes every content object and all index data.
Retrieve feature collections in a range of ids. Returns a generator of content objects corresponding
Retrieve content ids in a range of ids. Returns a generator of ``content_id`` corresponding to
Returns ids that match an indexed value. Returns a generator of content identifiers that have
Returns ids that match a prefix of an indexed value. Returns a generator of content
Returns ids that match a prefix of an indexed value, and the specific key that
Implementation for index_scan_prefix and index_scan_prefix_and_return_key, parameterized on return value function. retfunc gets passed a key
Add an index to this store instance. Adds an index transform to the current FC
Add new index values. Adds new index values for index ``idx_name`` for the pairs given.
Add new raw index values. Adds a new index key corresponding to ``(idx_name, transform(val), content_id)``.
Returns a generator of index triples. Returns a generator of index keys for the ``ids_and_fcs``
Returns index transforms for ``name``. :type name: unicode :rtype: ``{ create |--> function, transform |-->
Gets the twitter feed for a given handle. :param handle: The twitter handle. :return: A
Gets wikipedia articles near a given set of coordinates. :raise ApiError: When there was an
Execute shell command and return stdout txt :param command: :return:
If a task succeeds & is re-run and didn't change, we might not want to
Check if a package name exists on pypi. TODO: Document the Registry URL construction. It
Adds direction to the element :arguments: arg * rtl_only: Add the direction only in case
Gets a postcode object from the lat and long. :param lat: The latitude to look
get the xsd name of a S_DT
Get the the referred attribute.
Build an xsd simpleType out of a S_CDT.
Build an xsd simpleType out of a S_EDT.
Build an xsd complexType out of a S_SDT.
Build an xsd simpleType out of a S_UDT.
Build a partial xsd tree out of a S_DT and its sub types S_CDT, S_EDT,
Build an xsd complex element out of a O_OBJ, including its O_ATTR.
Build an xsd complex element out of a C_C, including its packaged S_DT and O_OBJ.
Build an xsd schema from a bridgepoint component.
Indent an xml string with four spaces, and add an additional line break after each
Gets the full list of bikes from the bikeregister site. The data is hidden behind
set positional information on a node
decorator for adding positional information to returning nodes
r'\/\/.*\n
r"\'[^\']*\
r'"[^"\n]*"
r"(?i)end[\s]+for
r"(?i)end[\s]+if
r"(?i)end[\s]+while
r"([0-9a-zA-Z_])+(?=::)
r"[a-zA-Z_][0-9a-zA-Z_]*|[a-zA-Z][0-9a-zA-Z_]*[0-9a-zA-Z_]+
r"::
r"\=\=
r"!\=
r"\-\>
r"\<\=
r"\>\=
r"\=
r"\.
r"\*
r":
r"\[
r"\]
r"\?
r"\<
r"\>
r"\+
r"/
r"%
statement_list : statement SEMICOLON statement_list
statement_list : statement SEMICOLON
statement : BRIDGE variable_access EQUAL implicit_invocation
statement : TRANSFORM variable_access EQUAL implicit_invocation
statement : SEND variable_access EQUAL implicit_invocation
statement : SEND namespace DOUBLECOLON identifier LPAREN parameter_list RPAREN TO expression
statement : CREATE EVENT INSTANCE variable_name OF event_specification TO identifier CLASS
statement : CREATE EVENT INSTANCE variable_name OF event_specification TO identifier ASSIGNER
statement : CREATE EVENT INSTANCE variable_name OF event_specification TO identifier CREATOR
statement : CREATE EVENT INSTANCE variable_name OF event_specification TO variable_access
statement : CREATE EVENT INSTANCE variable_name OF event_specification TO self_access
event_specification : identifier event_meaning event_data
event_specification : identifier TIMES event_meaning event_data
statement : FOR EACH variable_name IN variable_name block END_FOR
statement : IF expression block elif_list else_clause END_IF
statement : RELATE instance_name TO instance_name ACROSS rel_id
statement : RELATE instance_name TO instance_name ACROSS rel_id DOT phrase
statement : RELATE instance_name TO instance_name ACROSS rel_id USING instance_name
statement : UNRELATE instance_name FROM instance_name ACROSS rel_id
statement : UNRELATE instance_name FROM instance_name ACROSS rel_id DOT phrase
statement : UNRELATE instance_name FROM instance_name ACROSS rel_id USING instance_name
statement : SELECT ANY variable_name FROM INSTANCES OF identifier | SELECT MANY variable_name FROM INSTANCES
statement : SELECT ANY variable_name FROM identifier | SELECT MANY variable_name FROM identifier
statement : SELECT ANY variable_name FROM INSTANCES OF identifier WHERE expression | SELECT MANY variable_name
statement : SELECT ANY variable_name FROM identifier WHERE expression | SELECT MANY variable_name FROM identifier
statement : SELECT ONE variable_name RELATED BY navigation_hook navigation_chain | SELECT ANY variable_name RELATED BY
statement : SELECT ONE variable_name RELATED BY navigation_hook navigation_chain WHERE expression | SELECT ANY variable_name
navigation_step : ARROW identifier LSQBR identifier RSQBR
navigation_step : ARROW identifier LSQBR identifier DOT phrase RSQBR
implicit_invocation : namespace DOUBLECOLON identifier LPAREN parameter_list RPAREN
instance_invocation : structure DOT identifier LPAREN parameter_list RPAREN
expression : expression PLUS expression | expression MINUS expression | expression TIMES expression | expression
expression : expression LE expression | expression LESSTHAN expression | expression DOUBLEEQUAL expression | expression
Wraps exceptions in the context with :exc:`MalformedMessage`.
Gets the crime nearby to a given postcode. :param request: The aiohttp request. :return: A
Gets police data about a neighbourhood. :param request: The aiohttp request. :return: The police data
Create message content and properties to create queue with QMFv2 :param name: Name of queue
Create message content and properties to delete queue with QMFv2 :param name: Name of queue
Create message content and properties to list all queues with QMFv2 :returns: Tuple containing content
Create message content and properties to list all exchanges with QMFv2 :returns: Tuple containing content
Create message content and properties to purge queue with QMFv2 :param name: Name of queue
attachments should be a list of paths
Raises an exception as a :exc:`RemoteException`.
Returns the text from an image at a given url.
Returns true or false based on if the OCR process has read actual words. This
Gets the most recently cached bike from the database. :return: The bike that was cached
Parse command line options and launch the interpreter
Parse argv for options and arguments, and start schema generation.
See: http://nodotcom.org/python-facebook-tutorial.html
You can also skip the above if you get a page token: http://stackoverflow.com/questions/8231877 and make
Serialize a value from an xtuml metamodel instance.
Serialize an *instance* from a metamodel.
Serialize all instances in a *metamodel*.
Serialize an xtuml metamodel association.
Serialize an xtUML metamodel class.
Serialize all class and association definitions in a *metamodel*.
Serialize all instances, class definitions, association definitions, and unique identifiers in a *metamodel*.
Serialize some xtuml *resource*, e.g. an instance or a complete metamodel.
Persist all instances in a *metamodel* by serializing them and saving to a *path* on
Persist all class and association definitions in a *metamodel* by serializing them and saving to
Persist all unique identifiers in a *metamodel* by serializing them and saving to a *path*
Persist all instances, class definitions and association definitions in a *metamodel* by serializing them and
Save variable on given path using Pickle Args: variable: what to save path (str): path
Load variable from Pickle file Args: path (str): path of the file to load Returns:
Function for command line execution
Searches files satisfying query It first decompose the query in ngrams, then score each document
Partitions a list into two based on a condition.
Runs the CLI app. Tries to execute as many steps as possible to give the
Gets the neighbourhood from the fetch that is associated with the given postcode. :return: A
Gets crime for a given lat and long. :raise ApiError: When there was an error
Runs the program. Takes a list of postcodes or coordinates and returns various information about
Adds to the context BiDi related variables LANGUAGE_DIRECTION -- Direction of current language ('ltr' or
Determine if an attribute of an *instance* with a specific *name* is null.
Apply a series of query operators to a sequence of instances, e.g. where_eq(), order_by() or
Perform a navigation from *supertype* to its subtype across *rel_id*. The navigated association must be
Sort a *set of instances* in the order they appear across a conditional and reflexive
Find links that correspond to the given arguments.
Relate *from_instance* to *to_instance* across *rel_id*. For reflexive association, a *phrase* indicating the direction must
Unrelate *from_instance* from *to_instance* across *rel_id*. For reflexive associations, a *phrase* indicating the direction must
Get the metaclass for a *class_or_instance*.
Delete an *instance* from its metaclass instance pool and optionally *disconnect* it from any links
Formalize the association and expose referential attributes on instances.
Obtain the cardinality string. Example: '1C' for a conditional link with a single instance [0..1]
Connect an *instance* to *another_instance*. Optionally, disable any cardinality *check* that would prevent the two
Disconnect an *instance* from *another_instance*.
Compute the lookup key for an instance, i.e. a foreign key that can be used
Compute the index key that can be used to identify an instance on the link.
Obtain the type of an attribute.
Add a new link from *self* to *metaclass*.
Append an attribute with a given *name* and *type name* at the end of the
Insert an attribute with a given *name* and *type name* at some *index* in the
Delete an attribute with a given *name* from the list of attributes.
Obtain the default value for some *type name*.
Create and return a new instance.
Create a shallow clone of an *instance*. **Note:** the clone and the original instance **does
Delete an *instance* from the instance pool and optionally *disconnect* it from any links it
Select a single instance from the instance pool. Query operators such as where_eq(), order_by() or
Select several instances from the instance pool. Query operators such as where_eq(), order_by() or filter
Navigate across a link with some *rel_id* and *phrase* that yields instances of some *kind*.
Obtain a sequence of all instances in the metamodel.
Define a new class in the metamodel, and return its metaclass.
Find a metaclass of some *kind* in the metamodel.
Create and return a new instance in the metamodel of some *kind*. Optionally, initial attribute
Create a shallow clone of an *instance*. **Note:** the clone and the original instance **does
Define and return an association from one kind of class (the source kind) to some
Define a unique identifier for some *kind* of class based on its *named attributes*.
Query the metamodel for a set of instances of some *kind*. Query operators such as
Query the metamodel for a single instance of some *kind*. Query operators such as where_eq(),
Gets the twitter feed from a given handle. :return: The feed in json format.
Sends header, payload, and topics through a ZeroMQ socket. :param socket: a zmq socket. :param
Receives header, payload, and topics through a ZeroMQ socket. :param socket: a zmq socket. :param
This also finds code you are working on today!
Take a string or list of strings and try to extract all the emails
Marks a method as RPC.
Collects methods which are speced as RPC.
If there is a postcode in the url it validates and normalizes it.
Generates a string of object initialization code style. It is useful for custom __repr__ methods::
Calls a function. If an error of the given exception type with interrupted system call
The specialization of :func:`eintr_retry` by :exc:`zmq.ZMQError`.
Progress to the next identifier, and return the current one.
Tries to invoke a method matching the pattern *enter_<type name>*, where <type name> is the
Tries to invoke a method matching the pattern *leave_<type name>*, where <type name> is the
Invoke the visitors before and after decending down the tree. The walker will also try
The default accept behaviour is to decend into the iterable member *node.children* (if available).
Try to invoke a method matching the pattern *render_<type name>*, where <type name> is the
A System Model contains top-level packages
A Component contains packageable elements
A Package contains packageable elements
A background task that retrieves bike data. :param delta: The amount of time to wait
Checks the most recently cached bike and returns true if it either doesn't exist or
Gets stolen bikes from the database within a certain radius (km) of a given postcode.
Gets a random postcode object.. Acts as a middleware between us and the API, caching
Gets the postcode object for a given postcode string. Acts as a middleware between us
Gets a police neighbourhood from the database. Acts as a middleware between us and the
all args-->_cffi_backend.buffer Returns-->cdata (if a SINGLE argument was provided) LIST of cdata (if a args
all args-->_cffi_backend.CDataOwn Must be a pointer or an array Returns-->buffer (if a SINGLE argument was
all args-->_cffi_backend.CDataOwn Must be a pointer or an array Returns-->bytes (if a SINGLE argument was
Return the average brightness of the image.
Create a file with the specified name and write 'contents' (a sequence of strings without
Write `data` to `filename` (if not a dry run) after announcing it `what` is used
Write the file list in 'self.filelist' (presumably as filled in by 'add_defaults()' and 'read_template()') to
Indicate whether or not to enter a case suite. usage: ``` py for case in
Given a valid position in the text document, try to find the position of the
Convenience method for selecting a character.
Updates the document formatting based on the new cursor position.
Bottleneck to fix up IronPython string exceptions
Run tests in suite inside of suite fixtures.
Return the ancestry of the context (that is, all of the packages and modules containing
The complex case where there are tests that don't all share the same context. Groups
Register commandline options.
Create an input hook for running the Qt4 application event loop. Parameters ---------- mgr :
Return a Mapper instance with the given name. If the name already exist return its
Decorator for registering a path pattern. Args: pattern (str): Regex pattern to match a certain
Decorator for registering a simple path. Args: path (str): Path to be matched. method (str,
Function for registering a path pattern. Args: pattern (str): Regex pattern to match a certain
Function for registering a simple path. Args: path (str): Path to be matched. function (function):
Calls the first function matching the urls pattern and method. Args: url (str): Url for
Reimplemented to the store history.
Called when the up key is pressed. Returns whether to continue processing the event.
Called when the down key is pressed. Returns whether to continue processing the event.
If possible, set the input buffer to a previous history item. Parameters: ----------- substring :
If possible, set the input buffer to a subsequent history item. Parameters: ----------- substring :
Handles replies for code execution, here only session history length
Returns whether history movement is locked.
Retrieves a history item, possibly with temporary edits.
Replace the current history with a sequence of history items.
If there are edits to the current input buffer, store them.
r'[A-Za-z_][A-Za-z0-9_]*
r"'([^'\\]+|\\'|\\\\)*
postpositions : LIMIT NUMBER postpositions | ORDER BY colspec postpositions | empty
colspec : STAR | NAME | function | NAME COMMA colspec | function COMMA colspec
expression : value | expression AND expression | expression OR expression | expression EQUALS expression
Event handler for the button click.
Copy over all files in srcdir to tgtdir w/ native line endings Creates .upgrade_report in
Prepare process. Create temp directories, download and/or unpack files.
Clean up files, remove builds.
Install everything in this set (after having downloaded and unpacked the packages)
Generates an instance of Record() from a tuple of the form (index, pandas.Series) with associated
Generates a list of Record objects given a DataFrame. Each Record instance has a series
Converts a collection back into a pandas DataFrame parameters ---------- collection : list list of
Runs the full turntable process on a pandas DataFrame parameters ---------- df : pandas.DataFrame each
Initalizes the given argument structure as properties of the class to be used by name
Update our SUB socket's subscriptions.
Turn 'engine.0.INFO.extra' into (logging.INFO, 'engine.0.extra')
receive and parse a message, then log it.
Perform an N-way merge operation on sorted lists. @param list_of_lists: (really iterable of iterable) of
Return an iterator on an object living on a remote engine.
Convert a notebook to the v2 format. Parameters ---------- nb : NotebookNode The Python representation
Return this platform's maximum compatible version. distutils.util.get_platform() normally reports the minimum version of Mac OS
Retrieve a PEP 302 "importer" for the given path item If there is no importer,
Thunk to load the real StringIO on demand
Convert a version string to a chronologically-sortable key This is a rough cross between distutils'
Return True when distribute wants to override a setuptools dependency. We want to override when
Add `dist` to working set, associated with `entry` If `entry` is unspecified, it defaults to
List all distributions needed to (recursively) meet `requirements` `requirements` must be a sequence of ``Requirement``
Find all activatable distributions in `plugin_env` Example usage:: distributions, errors = working_set.find_plugins( Environment(plugin_dirlist) ) map(working_set.add,
Add `dist` if we ``can_add()`` it and it isn't already added
Return absolute location in cache for `archive_name` and `names` The parent directory of the resulting
Parse a single entry point from string `src` Entry point syntax follows the form:: name
Ensure distribution is importable on `path` (default=sys.path)
Insert self.location in path before its nearest parent directory
Parse and cache metadata
Recompute this distribution's dependencies.
Parse a notebook filename. This function takes a notebook filename and returns the notebook format
``Description`` header must preserve newlines; all others need not
Return map of named refs (branches or tags) to commit hashes.
Reimplemented to handle keyboard input and to auto-hide when the text edit loses focus.
Reimplemented to disconnect signal handlers and event filter.
Reimplemented to connect signal handlers and event filter.
Shows the completion widget with 'items' at the position specified by 'cursor'.
Perform the completion with the currently selected item.
Returns a cursor with text between the start position and the current position selected.
Updates the current item based on the current text.
Registers the models of the app with the given "appName" for the admin site
System virtual memory as a namedtuple.
Swap system memory as a (total, used, free, sin, sout) tuple.
Return disk usage associated with path.
Return disk partitions.
Return system CPU times as a named tuple.
Return system per-CPU times as a list of named tuples.
Return currently connected users as a list of namedtuples.
Win32 version of os.system() that works with network shares. Note that this implementation returns None,
Runs the process, using the provided functions for I/O. The function stdin_func should return strings
Use the raw Win32 handle of sys.stdin to do non-blocking reads
Use a blocking stdin read
Writes the string to stdout
Writes the string to stdout
Runs the process using the system standard I/O. IMPORTANT: stdin needs to be asynchronous, so
update visibility of the tabBar depending of the number of tab 0 or 1 tab,
create a new frontend attached to the same kernel as the current tab
Called when you need to try to close a tab. It takes the number of
insert a tab with a given frontend in the tab bar, and give it a
Try to return the frontend that owns the kernel attached to the given widget/tab. Only
return all the frontends that do not own the kernel attached to the given widget/tab.
Add action to menu as well as self So that when the menu bar is
Return a function `fun` that will execute `magic` on active frontend. Parameters ---------- magic :
Clean "All Magics..." menu and repopulate it with `listofmagic` Parameters ---------- listofmagic : string, repr()
return a submagic menu by name, and create it if needed parameters: ----------- menulabel :
Forward the close event to every tabs contained by the windows
Generate hashed password and salt for use in notebook configuration. In the notebook configuration, set
Verify that a given passphrase matches its hashed version. Parameters ---------- hashed_passphrase : str Hashed
Return HTML code for a nice representation of true/false.
Build an in-memory representation of the item tree, trying to keep database accesses down to
Generate a html snippet for showing a boolean value on the admin page. Item is
Convenience function: Assign the return value of this method to a variable of your ModelAdmin
Generate a short title for an object, indent it depending on the object's depth in
Collect all fields marked as editable booleans. We do not want the user to be
Handle an AJAX toggle_boolean request
Handle the changelist view, the django view for the model instances change list/actions page.
Implement a lookup for object level permissions. Basically the same as ModelAdmin.has_change_permission, but also passes
Implement a lookup for object level permissions. Basically the same as ModelAdmin.has_delete_permission, but also passes
Generate a random Directed Acyclic Graph (DAG) with a given number of nodes and edges.
Add children recursively to a binary tree.
Make a symmetrical binary tree with @levels
Submit jobs via client where G describes the time dependencies.
Validate that jobs executed after their dependencies.
Generate a random graph, submit jobs, then validate that the dependency order was enforced. Finally,
Build a set of color attributes in a class. Helper function for building the *TermColors
Return a full copy of the object, optionally renaming it.
Add a new color scheme to the table.
Set the currently active scheme. Names are by default compared in a case-insensitive way, but
Return the lib dir under the 'home' installation scheme
usage: ``` py @cache @property def name(self): pass ```
Initialize the completion machinery. This creates completion machinery that can be used by client code,
Run a complete IPython cell. Parameters ---------- cell : str The code (including IPython code
Method to procces subscribe channel's messages This method reads a message and processes the content
Method to capture raw_input
method to wait for a kernel to be ready
Closely emulate the interactive Python console.
Split ``text`` into (tokentype, text) pairs. Monkeypatched to store the final stack on the object
Sets the style to the specified Pygments style.
Returns a QTextCharFormat for token or None.
Returns a QTextCharFormat for token by
Returns a QTextCharFormat for token by reading a Pygments style.
Searches the PATH for the given command and returns its path
Convert a path to its canonical, case-normalized, absolute version.
Verify that namespace packages are valid
Verify that extras_require mapping is valid
Verify that entry_points map is parseable
If there were any non-global "display-only" options (--help-commands or the metadata display options) on the
Determine if the input source ends in a blank. A blank is either a newline
Determine if the input source ends in two blanks. A blank is either a newline
Indicate whether an input line has (i.e. ends in, or is) a comment. This uses
Handle the `files = !ls` syntax.
Handle the `a = %who` syntax.
Handle inputs that start with '>>> ' syntax.
Handle inputs that start classic IPython prompt syntax.
Prepares a pinfo(2)/psearch call from a target name and the escape (i.e. ? or ??)
Translate lines with ?/?? at the end
Reset the input buffer and associated state.
Push one or more lines of input. This stores the given lines and returns a
Return whether a block of interactive input can accept more input. This method is meant
Compute the new indentation level for a single line. Parameters ---------- line : str A
Store one or more lines of input. If input lines are not newline-terminated, a newline
Translate lines escaped with: !
Translate lines escaped with: ?/??
Translate lines escaped with: %
Translate lines escaped with: ,
Translate lines escaped with: /
Reset the input buffer and associated state.
Return input and raw source and perform a full reset.
Process lines when they start with %%, which marks cell magics.
Append new content for a cell magic in line mode.
Process and translate a cell of input.
Push one or more lines of IPython input. This stores the given lines and returns
Initialize observer storage
Post notification to all registered observers. The registered callback will be called as:: callback(ntype, sender,
Find all registered observers that should recieve notification
Add an observer callback to this notification center. The given callback will be called upon
Add a new background job and start it in a separate thread. There are two
Update the status of the job lists. This method moves finished jobs to one of
Report summary for a given job group. Return True if the group had any elements.
Flush a given job group Return True if the group had any elements.
Print the status of newly finished jobs. Return True if any new jobs are reported.
Print a status of all jobs currently being managed.
Remove a finished (completed or dead) job.
Flush all finished jobs (completed and dead) from lists. Running jobs are never flushed. It
result(N) -> return the result of job N.
Common initialization for all BackgroundJob objects
Inserts a value in the ``ListVariable`` at an appropriate index. :param idx: The index before
Retrieve a copy of the Environment. Note that this is a shallow copy.
Declare an environment variable as a special variable. This can be used even if the
Declare an environment variable as a list-like special variable. This can be used even if
Declare an environment variable as a set-like special variable. This can be used even if
A thin wrapper around ``subprocess.Popen``. Takes the same options as ``subprocess.Popen``, with the exception of
Change the working directory that processes should be executed in. :param value: The new path
Swaps two cities in the route. :type state: TSPState
Calculates the length of the route.
divide :type problem_data: dict
create an empty record
Ensure that an incorrect table doesn't exist If a bad (old) table does exist, return
Connect to the database and get new session number.
Inverse of dict_to_list
Turn a mongodb-style search dict into an SQL query.
Add a new Task Record, by msg_id.
Get a specific Task Record, by msg_id.
Update the data in an existing record.
Remove a record from the DB.
Find records matching a query dict, optionally extracting subset of keys. Returns list of matching
get all msg_ids, ordered by time submitted.
Standard warning printer. Gives formatting consistency. Output is sent to io.stderr (sys.stderr by default). Options:
Read a config_file, check the validity with a JSON Schema as specs and get default
Output a simple table with several columns.
Output a link tag.
Output a script tag to a js file.
Output a link tag to a css stylesheet.
Image tag helper.
Subtract the arg from the value.
Multiply the arg with the value.
Divide the arg by the value.
Return the modulo value.
Return the verbose name of a model. The obj argument can be either a Model
Use as a class decorator to add extra methods to your model manager. Example usage:
Main method where all logic is defined
Split user input into initial whitespace, escape character, function part and the rest.
Return a class name (string) if the current URL matches the route name specified in
:param path: str :param urlName: str :returns: bool.
Register command-line options.
Configure plugin.
Run tests in suite inside of suite fixtures.
Add a builtin and save the original.
Remove an added builtin and re-set the original.
Store ipython references in the __builtin__ namespace.
Remove any builtins which might have been added by add_builtins, or restore overwritten ones to
Finds the true URL name of a package, when the given name isn't quite correct.
Return an iterable of triples (pkg_resources_version_key, link, python_version) that can be extracted from the given
Yields all links with the given relations
Send a message to one more email address(s). With text content as primary and html
Send a message to one more email address(s). With html content as primary.
Returns a form that only contains a subset of the original fields (opcode: incude/exclude fields)
Turn a command-line argument into a list.
The main entry point to Coverage. This is installed as the script entry point.
Call optparse.parse_args, but return a triple: (ok, options, args)
Add a specialized option that is the action to execute.
Callback for an option that adds to the `actions` list.
The bulk of the command line interface to Coverage. `argv` is the argument list to
Display an error message, or the named topic.
Deal with help requests. Return True if it handled the request, False if not.
Check for conflicts and problems in the options. Returns True if everything is ok, or
Implementation of 'coverage run'.
Implementation of 'coverage debug'.
Serialize an object into a list of sendable buffers. Parameters ---------- obj : object The
reconstruct an object serialized by serialize_object from data buffers.
pack up a function, args, and kwargs to be sent over the wire as a
unpack f,args,kwargs from buffers packed by pack_apply_message() Returns: original f,args,kwargs
Set the hook.
decorator to log unhandled exceptions raised in a method. For use wrapping on_recv callbacks, so
boolean check for whether a string is a zmq url
validate a url for zeromq
validate a potentially nested collection of urls.
split a zmq url (tcp://ip:port) into ('tcp','ip','port').
turn multi-ip interfaces '0.0.0.0' and '*' into connectable ones, based on the location (default interpretation
turn multi-ip interfaces '0.0.0.0' and '*' into connectable ones, based on the location (default interpretation
helper method for implementing `client.pull` via `client.apply`
Selects and return n random ports that are available.
Relay interupt/term signals to children, for more solid process cleanup.
Turn a function into a remote function. This method can be used for map: In
Turn a function into a parallel remote function. This method can be used for map:
call a function on each element of a sequence remotely. This should behave very much
Get the last n items in readline history.
Set the autoindent flag, checking for readline support. If called with no arguments, it acts
Initialize logging in case it was requested at the command line.
Add a virtualenv to sys.path so the user can import modules from it. This isn't
Save the state of hooks in the sys module. This has to be called after
Restore the state of the sys module.
set_hook(name,hook) -> sets an internal IPython hook. IPython exposes some of its internal API as
Register a function for calling after code execution.
Return a new 'main' module object for user code execution.
Cache a main module's namespace. When scripts are executed via %run, we must keep a
Call the pydb/pdb debugger. Keywords: - force(False): by default, this routine checks the instance call_pdb
Prepare the module and namespace in which user code will be run. When IPython is
Initialize all user-visible namespaces to their minimum defaults. Certain history lists are also initialized here,
Get a list of references to all the namespace dictionaries in which IPython might store
Clear all internal namespaces, and attempt to release references to user objects. If new_session is
Delete a variable from the various namespaces, so that, as far as possible, we're not
Clear selective variables from internal namespaces based on a specified regular expression. Parameters ---------- regex
Inject a group of variables into the IPython user namespace. Parameters ---------- variables : dict,
Remove a dict of variables from the user namespace, if they are the same as
Find an object in the available namespaces. self._ofind(oname) -> dict with keys: found,obj,ospace,ismagic Has special
Second part of object finding, to look for property details.
Find an object and return a struct with info about it.
Generic interface to the inspector system. This function is meant to be called by pdef,
Sets up the command history, and starts regular autosaves.
set_custom_exc(exc_tuple,handler) Set a custom exception handler, which will be called if any of the exceptions
One more defense for GUI apps that call sys.excepthook. GUI frameworks like wxPython trap exceptions
get exc_info from a given tuple, sys.exc_info() or sys.last_type etc. Ensures sys.last_type,value,traceback hold the exc_info
Display the exception that just occurred. If nothing is known about the exception, this is
Actually show a traceback. Subclasses may override this method to put the traceback on a
Display the syntax error that just occurred. This doesn't display a stack trace because there
Command history completion/saving/reloading.
readline hook to be used at the start of each line. Currently it handles auto-indent
Initialize the completion machinery. This creates completion machinery that can be used by client code,
Return the completed text and a list of completions. Parameters ---------- text : string A
Adds a new custom completer function. The position argument (defaults to 0) is the index
Set the frame of the completer.
Execute the given line magic. Parameters ---------- magic_name : str Name of the desired magic
Execute the given cell magic. Parameters ---------- magic_name : str Name of the desired magic
Find and return a magic of the given type by name. Returns None if the
DEPRECATED. Use run_line_magic() instead. Call a magic function by name. Input: a string containing the
Define a new macro Parameters ---------- name : str The name of the macro. themacro
Call the given cmd in a subprocess using os.system Parameters ---------- cmd : str Command
Get output (possibly including stderr) from a subprocess. Parameters ---------- cmd : str Command to
Print to the screen the rewritten form of the user's command. This shows visual feedback
Get a list of variable names from the user's namespace. Parameters ---------- names : list
Evaluate a dict of expressions in the user's namespace. Parameters ---------- expressions : dict A
Execute a normal python statement in user namespace.
Evaluate python expression expr in user namespace. Returns the result of evaluation
A safe version of the builtin execfile(). This version will never throw an exception, but
Like safe_execfile, but for .ipy files with IPython syntax. Parameters ---------- fname : str The
A safe version of runpy.run_module(). This version will never throw an exception, but instead print
Special method to call a cell magic with the data stored in self.
Run a complete IPython cell. Parameters ---------- raw_cell : str The code (including IPython code
Run a sequence of AST nodes. The execution mode depends on the interactivity parameter. Parameters
Execute a code object. When an exception occurs, self.showtraceback() is called to display a traceback.
Activate pylab support at runtime. This turns on support for matplotlib, preloads into the interactive
Expand python variables in a string. The depth argument indicates how many frames above the
Make a new tempfile and return its filename. This makes a call to tempfile.mktemp, but
Return as a string a set of input history slices. Parameters ---------- range_str : string
Get a code string from history, file, url, or a string or macro. This is
This will be executed at the time of exit. Cleanup operations and saving of persistent
broadcast a message from one engine to all others.
send a message from one to one-or-more engines.
Make function raise SkipTest exception if a given condition is true. If the condition is
Make function raise KnownFailureTest exception if given condition is true. If the condition is a
Filter deprecation warnings while running the test suite. This decorator can be used to filter
list profiles in a given root directory
list profiles that are bundled with IPython.
Sandbox-bypassing version of ensure_directory()
Find a distribution matching requirement `req` If there is an active distribution for the requested
List all distributions needed to (recursively) meet `requirements` `requirements` must be a sequence of ``Requirement``
Validate text as a PEP 426 environment marker; return an exception if invalid or False
This function runs the given command; waits for it to finish; then returns all output
This takes a given filename; tries to find it in the environment path; then checks
This starts the given command in a child process. This does all the fork/exec type
This implements a substitute for the forkpty system call. This should be more portable than
This makes the pseudo-terminal the controlling tty. This should be more portable than the pty.fork()
This closes the connection with the child application. Note that calling close() more than once
This returns the terminal echo mode. This returns True if echo is on or False
This sets the terminal echo mode on or off. Note that anything the child sent
This reads at most size bytes from the child application. It includes a timeout. If
This reads at most "size" bytes from the file (less if the read hits EOF
This reads and returns one entire line. A trailing newline is kept in the string,
This is to support iterators over a file-like object.
This sends a string to the child process. This returns the number of bytes written.
This sends a control character to the child such as Ctrl-C or Ctrl-D. For example,
This sends an EOF to the child. This sends a character which causes the pending
This sends a SIGINT to the child. It does not require the SIGINT to be
This compiles a pattern-string or a list of pattern-strings. Patterns must be a StringType, EOF,
Recompile unicode regexes as bytes regexes. Overridden in subclass.
This seeks through the stream until a pattern is matched. The pattern is overloaded and
This takes a list of compiled regular expressions and returns the index into the pattern_list
This is similar to expect(), but uses plain string matching instead of compiled regular expressions
This is the common loop used inside expect. The 'searcher' should be an instance of
This returns the terminal window size of the child tty. The return value is a
This sets the terminal window size of the child tty. This will cause a SIGWINCH
This gives control of the child process to the interactive user (the human at the
This is used by the interact() method.
This is a wrapper around select.select() that ignores signals. If select.select raises a select.error exception
Recompile bytes regexes as unicode regexes.
This searches 'buffer' for the first occurence of one of the search strings. 'freshlen' must
This searches 'buffer' for the first occurence of one of the regular expressions. 'freshlen' must
Finish up all displayhook activities.
Progress Monitor listener that logs all updates to the given logger
Unpack" a directory, using the same interface as for archives Raises ``UnrecognizedFormat`` if `filename` is
Unpack tar/tar.gz/tar.bz2 `filename` to `extract_dir` Raises ``UnrecognizedFormat`` if `filename` is not a tarfile (as determined
Emit a message to the user. :param msg: The message to emit. If ``debug`` is
Interpret a template string. This returns a callable taking one argument--this context--and returning a string
Interpret an expression string. This returns a callable taking one argument--this context--and returning the result
Get the output of the last command exevuted.
Wrapper for subprocess.check_output.
Fake the interface of subprocess.call().
Unpack multidict and positional args into a list appropriate for subprocess. :param param_kwargs: ``ParamDict`` storing
Find the source for `filename`. Returns two values: the actual filename, and the source. The
Returns a sorted list of the arcs actually executed in the code.
Returns a sorted list of the arcs in the code not executed.
Returns a sorted list of the executed arcs missing from the code.
Returns a list of line numbers that have more than one exit.
How many total branches are there?
Return arcs that weren't executed from branch lines. Returns {l1:[l2a,l2b,...], ...}
Get stats about branches. Returns a dict mapping line numbers to a tuple: (total_exits, taken_exits).
Set the number of decimal places used to report percentages.
Returns a single percentage value for coverage.
Returns the percent covered, as a string, without a percent sign. Note that "0" is
Applies cls_name to all needles found in haystack.
Given an list of words, this function highlights the matched text in the given string.
Given an list of words, this function highlights the matched words in the given string.
Run a distutils setup script, sandboxed in its directory
Run 'func' under os sandboxing
Called for low-level os.open()
Remove a single pair of quotes from the endpoints of a string.
Similar to Perl's qw() operator, but with some more options. qw(words,flat=0,sep=' ',maxsplit=-1) -> words.split(sep,maxsplit) words
Simple minded grep-like function. grep(pat,list) returns occurrences of pat in list, None on failure. It
Return grep() on dir()+dir(__builtins__). A very common use of grep() when working interactively.
Indent a string a given number of spaces or tabstops. indent(str,nspaces=4,ntabs=0) -> indent str by
Convert (in-place) a file to line-ends native to the current OS. If the optional backup
Return the input string centered in a 'marquee'. :Examples: In [16]: marquee('A test',40) Out[16]: '****************
Format a string for screen printing. This removes some latex-type format codes.
Equivalent of textwrap.dedent that ignores unindented first line. This means it will still dedent strings
Wrap multiple paragraphs to fit a specified width. This is equivalent to textwrap.wrap, but with
Return the longest common substring in a list of strings. Credit: http://stackoverflow.com/questions/2892931/longest-common-substring-from-more-than-two-strings-python
Strip leading email quotation characters ('>'). Removes any combination of leading '>' interspersed with whitespace
Calculate optimal info to columnize a list of string
return list item number, or default if don't exist
Returns a nested list, and info to columnize items Parameters : ------------ items : list
Transform a list of strings into a single string with columns. Parameters ---------- items :
Return all strings matching 'pattern' (a regex or callable) This is case-insensitive. If prune is
Collect whitespace-separated fields from string list Allows quick awk-like usage of string lists. Example data
sort by specified fields (see fields()) Example:: a.sort(1, nums = True) Sorts a by second
Read a Python file, using the encoding declared inside the file. Parameters ---------- filename :
Read a Python file from a URL, using the encoding declared inside the file. Parameters
build argv to be passed to kernel subprocess
find the connection file, and load the info if found. The current working directory and
set up ssh tunnels, if needed.
Classes which mix this class in should call: IPythonConsoleApp.initialize(self,argv)
Return message as dict :return dict
Decode json string to dict. Validate against node name(targets) and protocol version :return dict |
:return boolean
Pretty print the object's representation.
Like `pretty` but print to stdout.
Get a reasonable method resolution order of a class and its superclasses for both old-style
The default print function. Used if an object does not provide one and it's none
Factory that returns a pprint function useful for sequences. Used by the default pprint for
Factory that returns a pprint function used by the default pprint of dicts and dict
The pprint for the super type.
The pprint function for regular expression patterns.
The pprint for classes and types.
Base pprint for all functions and builtin functions.
Base pprint for all exceptions.
Add a pretty printer for a given type.
Add a pretty printer for a type specified by the module and name of a
like begin_group / end_group but for the with statement.
Add literal text to the output.
Add a breakable separator to the output. This does not mean that it will automatically
Begin a group. If you want support for python < 2.5 which doesn't has the
End a group. See `begin_group` for more details.
Flush data that is left in the buffer.
Pretty print the given object.
Check if the given class is specified in the deferred type registry. Returns the printer
Return a color table with fields for exception reporting. The table is an instance of
As patterns() in django.
As url() in Django.
Prepare columns in new ods file, create new sheet for metadata, set columns color and
Write translations from po files into ods one file. Assumes a directory structure: <locale_root>/<lang>/<po_files_path>/<filename>.
Write row with translations to ods file into specified sheet and row_no.
Converts po file to csv GDocs spreadsheet readable format. :param languages: list of language codes
Converts csv files to one ods file :param trans_csv: path to csv file with translations
Get the current clipboard's text on Windows. Requires Mark Hammond's pywin32 extensions.
Get the clipboard's text on OS X.
Get the clipboard's text using Tkinter. This is the default on systems that are not
Returns a safe build_prefix
Find the subdomain rank (tuple) for each processor and determine the neighbor info.
Prepare the buffers to be used for later communications
Prepare the buffers to be used for later communications
update the inner boundary with the same send/recv pattern as the MPIPartitioner
Rekey a dict that has been forced to use str keys where there should be
extract ISO8601 dates from unpacked JSON
squash datetime objects into ISO8601 strings
default function for packing datetime objects in JSON.
b64-encodes images in a displaypub format dict Perhaps this should be handled in json_clean itself?
Clean an object to ensure it's safe to encode in JSON. Atomic, immutable objects are
Verify that self.install_dir is .pth-capable dir, if needed
Write an executable file to the scripts directory
simple function that takes args, prints a short message, sleeps for a time, and returns
Save the args and kwargs to get/post/put/delete for future use. These arguments are not saved
Set up any environment changes requested (e.g., Python path and Django settings), then run this
Create and return the ``ArgumentParser`` which will be used to parse the arguments to this
connect to peers. `peers` will be a 3-tuples, of the form: (location, north_addr, east_addr) as
convert .pyx extensions to .c
watch iopub channel, and print messages
decorator(caller) converts a caller function into a decorator; decorator(caller, func) decorates a function using a
Create a package finder appropriate to this install command. This method is meant to be
Method decorator for catching invalid config (Trait/ArgumentErrors) during init. On a TraitError (generally caused by
Helper for building basic --trait, --no-trait flags. Parameters ---------- name : str The name of
Adjust the log level when log_level is set.
Start logging for this application. The default is to log to stdout using a StreaHandler.
ensure flags dict is valid
Print the alias part of the help.
Print the flag part of the help.
Print the subcommand part of the help.
Print the help for each Configurable class in self.classes. If classes=False (the default), only flags
Print usage and examples. This usage string goes at the end of the command line
Fire the traits events when the config is updated.
Initialize a subcommand with argv.
flatten flags and aliases, so cl-args override as expected. This prevents issues such as an
Parse the command line arguments.
Load a .py based config file by filename and path.
generate default config file from Configurables
Choose k random elements of array.
Produce a sequence of formatted lines from info. `info` is a sequence of pairs (label,
Write a line of debug output.
Update all the class traits having ``config=True`` as metadata. For any class trait with a
Get the help string for this class in ReST format. If `inst` is given, it's
Get the help string for a single trait. If `inst` is given, it's current trait
Get the config class config section
Walk the cls.mro() for parent classes that are also singletons For use in instance()
unset _instance for this class and singleton parents.
Returns a global instance of this class. This method create a new instance if none
Configure plugin.
Add detail from traceback inspection to error message of a failure.
a light excepthook, adding a small message to the usual traceback
Return a string containing a crash report.
{% setvar <var_name> to <var_value> %}
Reimplemented to emit signals instead of making callbacks.
Reimplemented to emit signals instead of making callbacks.
Reimplemented to ensure that signals are dispatched immediately.
Reimplemented to emit signals instead of making callbacks.
Reimplemented for proper heartbeat management.
Reimplemented to emit signal.
Reimplemented for proper heartbeat management.
Restore bytes of image data from unicode-only formats. Base64 encoding is handled elsewhere. Bytes objects
join lines that have been written by splitlines() Has logic to protect against `splitlines()`, which
rejoin multiline text into strings For reversing effects of ``split_lines(nb)``. This only rejoins lines that
Restore all bytes objects in the notebook from base64-encoded strings. Note: This is never used
Base64 encode all bytes objects in the notebook. These will be b64-encoded unicode strings Note:
Read a notebook from a file like object
Write a notebook to a file like object
Return the list of mirrors from the last record found on the DNS entry:: >>>
Read from a pipe ignoring EINTR errors. This is necessary because when reading from pipes
Open a command in a shell subprocess and execute a callback. This function provides common
Return standard output of executing cmd in a shell. Accepts the same arguments as os.system().
Return (standard output, standard error) of executing cmd in a shell. Accepts the same arguments
Split a command line's arguments in a shell-like manner. This is a modified version of
TestSuite replacement entry point. Use anywhere you might use a unittest.TestSuite. The collector will, by
Compress a directory history into a new one with at most 20 entries. Return a
Class decorator for all subclasses of the main Magics class. Any class that subclasses Magics
Utility function to store a function as a magic of a specific kind. Parameters ----------
Decorator factory for methods in Magics subclasses.
Decorator factory for standalone functions.
Return dict of documentation of magic functions. The return dict has the keys 'line' and
Register one or more instances of Magics. Take one or more classes or instances of
Expose a standalone function as magic function for IPython. This will create an IPython magic
[Deprecated] Expose own function as magic function for IPython. Example:: def foo_impl(self, parameter_s=''): 'My very
Format a string for latex inclusion.
Parse options passed to an argument string. The interface is similar to that of getopt(),
Make an entry in the options_table for fn, with value optstr
Show a basic reference about the GUI Console.
Get a member from an object by (string) name
Return a live function from a full dotted path. Must be either a plain function
Factory function to create a properly initialized task.
Return task info dictionary from task label. Internal function, pretty much only used in migrations
Find and return a callable object from a task info dictionary
Internal task-runner class method, called by :py:func:`sisy.consumers.run_heartbeat`
Calculate next run time of this task
Internal instance method to submit this task for running immediately. Does not handle any iteration,
Internal instance method run by worker process to actually run the task callable.
Instance method to run this task immediately.
Class method to run a callable with a specified number of iterations
Class method to run a one-shot task, immediately.
Set the url file. Here we don't try to actually see if it exists for
load config from a JSON connector file, at a *lower* priority than command-line/config files.
Promote engine to listening kernel, accessible to frontends.
Check whether pid exists in the current process table.
Return disk usage associated with path.
Execute a test described by a YAML file. :param ctxt: A ``timid.context.Context`` object. :param test:
A ``cli_tools`` processor function that interfaces between the command line and the ``timid()`` function. This
>>> lang_instance = create_lang_instance() >>> lang_instance.aml_evaluate(lang_instance.aml_compile('1 = 1')) True >>> li = create_lang_instance() >>> c
Create an interrupt event handle. The parent process should use this static method for creating
Run the poll loop. This method never returns.
Function to initialize settings from command line and/or custom settings file :return: Returns str with
Return dictionaries mapping lower case typename (e.g. 'tuple') to type objects from the types package,
is_type(obj, typestr_or_type) verifies if obj is of a certain type. It can take strings or
Produce a dictionary of an object's attributes. Builds on dir2 by checking that a getattr()
Filter a namespace dictionary by name pattern and item type.
Return dictionary of all objects in a namespace dictionary that match type_pattern and filter.
Check for presence of mutually exclusive keys in a dict. Call: mutex_opts(dict,[[op1a,op1b],[op2a,op2b]...]
map_method(method,object_list,*args,**kw) -> list Return a list of the results of applying the methods to the
Return dct[key] and delete dct[key]. If default is given, return it if dct[key] doesn't exist,
Show all figures as SVG/PNG payloads sent to the IPython clients. Parameters ---------- close :
Is called after every pylab drawing command
Send all figures that changed This is meant to be called automatically and will call
Draw the given figure and send it as a PNG payload.
Load an IPython extension by its module name. If :func:`load_ipython_extension` returns anything, this function will
Unload an IPython extension by its module name. This function looks up the extension's name
Download and install an IPython extension. If filename is given, the file will be so
Find any 'svn:externals' directories
Generate a list of n random ports near the given port. The first 5 ports
initialize tornado webapp and httpserver
SIGINT handler spawns confirmation dialog
confirm shutdown on ^C A second ^C, or answering 'y' within 5s will cause shutdown,
shutdown all kernels The kernels will shutdown themselves when this process no longer exists, but
Price European and Asian options using a Monte Carlo method. Parameters ---------- S : float
Replace in 'text' all occurences of any key in the given dictionary by its corresponding
Return the last depth elements of the current working directory. $HOME is always replaced with
Return the last depth elements of the current working directory. $HOME is always replaced with
This is called when a prompt template is updated. It processes abbreviations used in the
Render but don't justify, or update the width or txtwidth attributes.
Render the ---> rewrite prompt.
Render the selected prompt. Parameters ---------- name : str Which prompt to render. One of
Generates a JSON config file, including the selection of random ports. Parameters ---------- fname :
Launches a localhost kernel, binding to the specified ports. Parameters ---------- code : str, A
This is the actual zest.releaser entry point Relevant items in the context dict: name Name
Fix the version in metadata.txt Relevant context dict item for both prerelease and postrelease: ``new_version``.
return whether an object is mappable or not.
Returns the pth partition of q partitions of seq.
Patch pexpect to prevent unhandled exceptions at VM teardown. Calling this function will monkeypatch the
Run as a command-line script.
Run the given file interactively. Inputs: -fname: name of the file to execute. See the
Run the given source code interactively. Inputs: - source: a string of code to be
Run as a command-line script.
Generate a Cobertura-compatible XML report for `morfs`. `morfs` is a list of modules or filenames.
Add to the XML report for a single file.
Compute the histogram of a remote array a. Parameters ---------- view IPython DirectView instance a
This will download a segment of pi from super-computing.org if the file is not already
Add up a list of freq counts to get the total counts.
Read digits of pi from a file and compute the n digit frequencies.
Yield the digits of pi read from a .txt file.
Consume digits of pi and compute 1 digit freq. counts.
Consume digits of pi and compute 2 digits freq. counts.
Consume digits of pi and compute n digits freq. counts. This should only be used
Plot two digits frequency counts using matplotlib.
Plot one digit frequency counts using matplotlib.
Extend a prefixed uri with the help of a specific dictionary of prefixes :param short:
Try to retrieve a model, and return None if it is not found. Useful if
Extract a set of variables by name from another frame. :Parameters: - `*names`: strings One
Extract a set of variables by name from another frame. Similar to extractVars(), but with
Print the value of an expression from the caller's frame. Takes an expression, evaluates it
Returns (module, locals) of the funciton `depth` frames away from the caller
User-friendly reverse. Pass arguments and keyword arguments to Django's `reverse` as `args` and `kwargs` arguments,
prefix, base -> true iff name prefix + "." + base is "private". Prefix may
Return the compiler-flags associated with the future features that have been imported into the given
Return the module specified by `module`. In particular: - If `module` is a module, then
Return a string containing a traceback message for the given exc_info tuple (as returned by
Test examples in the given object's docstring (`f`), using `globs` as globals. Optional argument `name`
A unittest suite for one or more doctest files. The path to each doctest file
Debug a single doctest docstring, in argument `src`
Debug a test script. `src` is the script, as a string.
Debug a single doctest docstring. Provide the module (or dotted name of the module) containing
Return True iff the actual output from an example (`got`) matches the expected output (`want`).
Return a string describing the differences between the expected output for a given example (`example`)
hashed set
Get all data contained in hashed category 'hashroot' as dict
Compress category 'hashroot', so hset is fast again hget will fail if fast_only is True
All keys in DB, or all keys matching a glob
Reimplemented to handle keyboard input and to auto-hide when the text edit loses focus.
Shows the completion widget with 'items' at the position specified by 'cursor'.
returns whether this record should be printed
return the bool of whether `record` starts with any item in `matchers`
Register commandline options.
Configure plugin.
Add captured log messages to error output.
Call this to embed IPython at the current point in your program. The first invocation
Embeds IPython into a running python program. Input: - header: An optional header message can
dir2(obj) -> list of strings Extended version of the Python builtin dir(), which does a
Get all po filenames from locale folder and return list of them. Assumes a directory
Prepare new csv writers, write title rows and return them.
Prepare locale dirs for writing po files. Create new directories if they doesn't exist.
Prepare polib file object for writing/reading from them. Create directories and write header if needed.
Write msgstr for every language with all needed metadata and comment. Metadata are parser from
Write header into po file for specific lang. Metadata are read from settings file.
Write new msgids which appeared in po files with empty msgstrs values and metadata. Look
Write new msgids which appeared in po files with empty msgstrs values and metadata. Look
Converts po file to csv GDocs spreadsheet readable format. Merges them if some msgid aren't
Converts GDocs spreadsheet generated csv file into po file. :param trans_csv_path: path to temporary file
method to subscribe a user to a service
method to send a message to a user Parameters: to -> recipient msg -> message
method to send a message to a user Parameters: to -> recipient msg -> message
query method to do HTTP POST/GET Parameters: url -> the url to POST/GET data ->
function to init option parser
main function
The same as s.rsplit(sep, 1), but works in 2.3
Run a python module, as though with ``python -m name args...``. `modulename` is the name
Run a python file as if it were the main program on the command line.
Get source from `filename` and make a code object of it.
Get a code object from a .pyc file.
returnr a string for an html table
set current cursor position
Reimplemented to handle keyboard input and to auto-hide when the text edit loses focus.
Cancel the completion should be called when the completer have to be dismissed This reset
Change the selection index, and make sure it stays in the right range A little
move cursor up
move cursor down
move cursor left
move cursor right
Shows the completion widget with 'items' at the position specified by 'cursor'.
update the list of completion and hilight the currently selected completion
Perform the completion with the currently selected item.
Return a dictionary of words and word counts in a string.
Print the n most common words and counts in the freqs dict.
Return the string representation of the job description XML.
Write the XML job description to a file.
Validate the given pin against the schema. :param dict pin: The pin to validate: :raises
Send a shared pin for the given topics. :param list topics: The list of topics.
Delete a shared pin. :param str pin_id: The id of the pin to delete. :raises
Send a user pin. :param str user_token: The token of the user. :param dict pin:
Delete a user pin. :param str user_token: The token of the user. :param str pin_id:
Subscribe a user to the given topic. :param str user_token: The token of the user.
Get the list of the topics which a user is subscribed to. :param str user_token:
Decorate a function to automatically begin and end a task on the progressmonitor. The function
Call before starting work on a monitor, specifying name and amount of work
Wrap code into a begin and end call on this monitor
Create a submonitor with the given units
What percentage (range 0-1) of work is done (including submonitors)
Increment the monitor with N units worked and an optional message
Create a sub monitor that stands for N units of work in this monitor The
Signal that this task is done. This is completely optional and will just call .update
Print a string, piping through a pager. This version ignores the screen_lines and pager_cmd arguments
Creates an InstallRequirement from a name, which might be a requirement, directory containing 'setup.py', filename,
If the build location was a temporary directory, this will move it to a new
Uninstall the distribution currently satisfying this requirement. Prompts before removing or modifying files unless ``auto_confirm``
Load multiple Python config files, merging each of them in turn. Parameters ========== config_files :
Load the config from a file and return it as a Struct.
Load the config file into self.config, with recursive loading.
execute self.config.<lhs> = <rhs> * expands ~ with expanduser * tries to assign with raw
update self.config from a flag, which can be a dict or Config
decode argv if bytes, using stin.encoding, falling back on default enc
Parse the configuration and generate the Config object. After loading, any arguments that are not
Parse command line arguments and return as a Config object. Parameters ---------- args : optional,
self.parser->self.parsed_data
self.parsed_data->self.config
self.parsed_data->self.config, parse unrecognized extra args via KVLoader.
imp.find_module variant that only return path of module. The `imp.find_module` returns a filehandle that we
Get __init__ file path for module directory Parameters ---------- dirname : str Find the __init__
Find module `module_name` on sys.path Return the path to module `module_name`. If `module_name` refers to
Register a callback to be called with this Launcher's stop_data when the process actually finishes.
Call this to trigger startup actions. This logs the process startup and sets the state
Call this to trigger process stop actions. This logs the process stopping and sets the
Send INT, wait a delay and then send KILL.
Start n engines by profile or profile_dir.
Build self.args using all the fields.
Start n instances of the program using mpiexec.
Start n engines by profile or profile_dir.
send a single file
send our files (called before start)
fetch a single file
fetch remote files (called after start)
turns /home/you/.ipython/profile_foo into .ipython/profile_foo
determine engine count from `engines` dict
Start engines by profile or profile_dir. `n` is ignored, and the `engines` config property is
Start n copies of the process using the Win HPC job scheduler.
load the default context with the default values for the basic keys because the _trait_changed
Take the output of the submit command and return the job id.
Instantiate and write the batch script to the work_dir.
Start n copies of the process using a batch system.
Start n copies of the process using LSF batch system. This cant inherit from the
Return True if 'file' matches ('permission') which should be entered in octal.
Reimplemented to return a custom context menu for images.
Append the Out[] prompt and make the output nicer Shared code for some the following
Overridden to handle rich data types, like SVG.
Overridden to handle rich data types, like SVG.
Append raw JPG data to the widget.
Append raw PNG data to the widget.
Append raw SVG data to the widget.
Adds the specified QImage to the document and returns a QTextImageFormat that references it.
Copies the ImageResource with 'name' to the clipboard.
Returns the QImage stored as the ImageResource with 'name'.
Return (X)HTML mark-up for the image-tag given by match. Parameters ---------- match : re.SRE_Match A
insert a raw image, jpg or png
Insert raw SVG data into the widet.
Shows a save dialog for the ImageResource with 'name'.
unicode(e) with various fallbacks. Used for exceptions, which may not be safe to call unicode()
stop eventloop when exit_now fires
Configure the user's environment.
Called to show the auto-rewritten input for autocall and friends. FIXME: this payload is currently
Engage the exit actions.
Send the specified text to the frontend to be presented at the next input cell.
CHECK if process (default=apache2) is not running
returns a list of listening ports for running process (default=apache2)
Read a filename as UTF-8 configuration data.
Read a list of strings. The value of `section` and `option` is treated as a
Read a list of full-line strings. The value of `section` and `option` is treated as
Read configuration from the `env_var` environment variable.
Read config values from `kwargs`.
Read configuration from a .rc file. `filename` is a file name to read.
Set an attribute on self if it exists in the ConfigParser.
Expand '~'-style usernames in strings. This is similar to :func:`os.path.expanduser`, but it computes and returns
Set the delimiters for line splitting.
Split a line of text with a cursor at the given position.
Compute matches when text is a simple name. Return a list of all keywords, built-in
Compute matches when text contains a dot. Assuming the text is of the form NAME.NAME....[NAME],
update the splitter and readline delims when greedy is changed
Match filenames, expanding ~USER type strings. Most of the seemingly convoluted logic in this completer
Match magics
Match internal system aliases
Match attributes or global python names
Return the list of default arguments of obj if it is callable, or empty list
Match named parameters (kwargs) of the last open function
Find completions for the given text and line context. This is called successively with state
Return the state-th possible completion for 'text'. This is called successively with state == 0,
Check if a specific record matches tests.
Find all the matches for a check dict.
extract subdict of keys
Add a new Task Record, by msg_id.
Get a specific Task Record, by msg_id.
Remove a record from the DB.
Find records matching a query dict, optionally extracting subset of keys. Returns dict keyed by
get all msg_ids, ordered by time submitted.
Should we silence the display hook because of ';'?
Write the output prompt. The default implementation simply writes the prompt to ``io.stdout``.
Write the format data dict to the frontend. This default version of this method simply
Update user_ns with various things like _, __, _1, etc.
Log the output.
Finish up all displayhook activities.
Load the extension in IPython.
raise `InvalidOperationException` if is freezed.
Convert a MySQL TIMESTAMP to a Timestamp object.
body_elements: <list> of etree.Elements or <None>
Embed and start an IPython kernel in a given scope. Parameters ---------- module : ModuleType,
schedule call to eventloop from IOLoop
dispatch control requests
dispatch shell requests
enter eventloop
register dispatchers for streams
step eventloop just once
Publish the code request on the pyin stream.
send status (busy/idle) on IOPub
handle an execute_request
abort a specifig msg by id
Clear our namespace.
prefixed topic for IOPub messages
Actions taken at shutdown by the kernel, called by python's atexit.
Enable GUI event loop integration, taking pylab into account.
Create equal sized slices of the file. The last slice may be larger than the
Same as `file.seek()` but for the slice. Returns a value between `self.start` and `self.size` inclusive.
Same as `file.read()` but for the slice. Does not read beyond `self.end`.
Same as `file.write()` but for the slice. raises: EOFError if the new seek position is
Same as `file.writelines()` but for the slice. raises: EOFError if the new seek position is
Configure plugin.
Copy sys.modules onto my mod stack
Pop my mod stack and restore sys.modules to the state it was in when mod
Return absolute, normalized path to directory, if it exists; None otherwise.
Return absolute, normalized path to file (optionally in directory where), or None if the file
A name is file-like if it is a path that exists, or it has a
Is obj a class? Inspect's isclass is too liberal and returns True for objects that
Is this path a package directory? >>> ispackage('nose') True >>> ispackage('unit_tests') False >>> ispackage('nose/plugins') True
Find the python source file for a package, relative to a particular directory (defaults to
Find the full dotted package name for a given python source file name. Returns None
Draw a 70-char-wide divider, with label in the middle. >>> ln('hello there') '---------------------------- hello there
Given a list of possible method names, try to run them with the provided object.
Find the python source file for a .pyc, .pyo or $py.class file on jython. Returns
Sort key function factory that puts items that match a regular expression last. >>> from
Convert a value that may be a list or a (possibly comma-separated) string into a
Make a function imported from module A appear as if it is located in module
Make a class appear to reside in `module`, rather than the module in which it
System virtual memory as a namedtuple.
Swap system memory as a (total, used, free, sin, sout) tuple.
Return system CPU times as a namedtuple.
Return system CPU times as a named tuple
Return process cmdline as a list of arguments.
Return a tuple with the process' RSS and VMS size.
Return a tuple with the process' RSS and VMS size.
Return files opened by process.
Return etwork connections opened by a process as a list of namedtuples.
Check if a user is in a certaing group. By default, the check is skipped
Load a class by a fully qualified class_path, eg. myapp.models.ModelName
Calculate percentage usage of 'used' against 'total'.
A simple memoize decorator for functions.
A decorator which can be used to mark functions as deprecated.
Same as os.path.isfile() but does not swallow EACCES / EPERM exceptions, see: http://mail.python.org/pipermail/python-dev/2012-June/120787.html
Pushes specified directory to git remote :param git_message: commit message :param git_repository: repository address :param
Checkouts branch to last commit :param git_branch: branch to checkout :param locale_root: locale folder path
Login into Google Docs with user authentication info.
Parse GDocs key from Spreadsheet url.
Make sure temp directory exists and create one if it does not.
Clear temp directory from created csv and ods files during communicator operations.
Download csv from GDoc. :return: returns resource if worksheets are present :except: raises PODocsError with
Uploads file to GDocs spreadsheet. Content type can be provided as argument, default is ods.
Download csv from GDoc. :return: returns resource if worksheets are present :except: raises PODocsError with
Synchronize local po files with translations on GDocs Spreadsheet. Downloads two csv files, merges them
Download csv files from GDocs and convert them into po files structure.
Upload all po files to GDocs ignoring conflicts. This method looks for all msgids in
Clear GDoc Spreadsheet by sending empty csv file.
start a new qtconsole connected to our kernel
Check whether the URL accessible and returns HTTP 200 OK or not if not raises
Check whether the HTML page contains the content or not and return boolean
Visit the URL and return the HTTP response code in 'int'
Compare the content type header of url param with content_type param and returns boolean @param
Compare the response code of url param with code param and returns boolean @param url
Publish data and metadata to all frontends. See the ``display_data`` message in the messaging documentation
Validate the display data. Parameters ---------- source : str The fully dotted name of the
Publish data and metadata to all frontends. See the ``display_data`` message in the messaging documentation
Clear the output of the cell receiving output.
Returns numerical gradient function of given input function Input: f, scalar function of one or
Returns numerical hessian function of given input function Input: f, scalar function of one or
Returns numerical gradient function of given input function Input: f, scalar function of an numpy
Returns numerical hessian function of given input function Input: f, scalar function of an numpy
Returns numerical gradient function of given class method with respect to a class attribute Input:
Returns numerical mixed Hessian function of given class method with respect to two class attributes
Find absolute path to executable cmd in a cross platform manner. This function tries to
r"""Take the path of a python command and return a list (argv-style). This only works
Return abbreviated version of cwd, e.g. d:mydir
Construct a list of CodeUnits from polymorphic inputs. `morfs` is a module or a filename,
A base for a flat filename to correspond to this code unit. Useful for writing
Return an open file for reading the source of the code unit.
Does it seem like this file should contain Python? This is used to decide if
timedelta.total_seconds was added in 2.7
Call spin() to sync state prior to calling the method.
Return the result when it arrives. If `timeout` is not ``None`` and the result does
Wait until the result is available or until `timeout` seconds pass. This method always returns
Get the results as a dict, keyed by engine_id. timeout behavior is described in `get()`.
abort my tasks.
compute the difference between two sets of timestamps The default behavior is to use the
the number of tasks which have been completed at this point. Fractional progress would be
elapsed time since initial submission
serial computation time of a parallel calculation Computed as the sum of (completed-started) of each
interactive wait, printing progress at regular intervals
republish individual displaypub content dicts
wait for the 'status=idle' message that indicates we have all outputs
republish the outputs of the computation Parameters ---------- groupby : str [default: type] if 'type':
iterator for results *as they arrive*, on FCFS basis, ignoring submission order.
wait for result to complete.
Return the absolute normalized form of `filename`.
Prepare the file patterns for use in a `FnmatchMatcher`. If a pattern starts with a
Find the path separator used in this string, or os.sep if none.
Yield all of the importable Python files in `dirname`, recursively. To be importable, the files
Return the relative form of `filename`. The filename will be relative to the current directory
Return a canonical filename for `filename`. An absolute path with no redundant components and normalized
Get data from `filename` if it is a zip file path. Returns the string data
Does `fpath` indicate a file in one of our trees?
Does `fpath` match one of our filename patterns?
Add the `pattern`/`result` pair to the list of aliases. `pattern` is an `fnmatch`-style pattern. `result`
Map `path` through the aliases. `path` is checked against all of the patterns. The first
Start a kernel with PyQt4 event loop integration.
Start a kernel with wx event loop support.
Start a kernel with the Tk event loop.
Start the kernel, coordinating with the GTK event loop
Start the kernel, coordinating with the Cocoa CFRunLoop event loop via the matplotlib MacOSX backend.
Enable integration with a given GUI
Creates an NxN element of the Gaussian Orthogonal Ensemble
Compute the eigvals of mat and then find the center eigval difference.
Return num eigenvalue diffs for the NxN GOE ensemble.
Initialize the item. This calls the class constructor with the appropriate arguments and returns the
Parse a YAML file containing test steps. :param ctxt: The context object. :param fname: The
Parse a step dictionary. :param ctxt: The context object. :param step_addr: The address of the
Create a crash handler, typically setting sys.excepthook to it.
this is sys.excepthook after init_crashhandler set self.verbose_crash=True to use our full crashhandler, instead of a
Load the config file. By default, errors in loading config are handled, and a warning
initialize the profile dir
[optionally] copy default config files into profile dir.
auto generate default config file, and stage it into the profile.
Read coverage data from the coverage data file (if it exists).
Write the collected coverage data to a file. `suffix` is a suffix to append to
Erase the data, both in this object, and from its file storage.
Return the map from filenames to lists of line numbers executed.
Return the map from filenames to lists of line number pairs.
Write the coverage data to `filename`.
Read the coverage data from `filename`.
Return the raw pickled data from `filename`.
Return the stored coverage data from the given file. Returns two values, suitable for assigning
Combine a number of data files together. Treat `self.filename` as a file prefix, and combine
Add executed line data. `line_data` is { filename: { lineno: None, ... }, ...}
Add measured arc data. `arc_data` is { filename: { (l1,l2): None, ... }, ...}
Contribute `filename`'s data to the Md5Hash `hasher`.
Return a dict summarizing the coverage data. Keys are based on the filenames, and values
Yield pasted lines until the user enters the given sentinel value.
Start the mainloop. If an optional banner argument is given, it will override the internally
Store multiple lines as a single entry in history
Closely emulate the interactive Python console.
Write a prompt and read a line. The returned line does not include the trailing
The bottom half of the syntax error handler called in the main loop. Loop until
Utility routine for edit_syntax_error
Handle interactive exit. This method calls the ask_exit callback.
Returns the correct repository URL and revision by parsing the given repository URL
register `exitable.__exit__()` into `atexit` module. return the `exitable` itself.
Create and return new frontend attached to new kernel, launched on localhost.
Create and return a new frontend attached to an existing kernel. Parameters ---------- current_widget :
Configure the coloring of the widget
return the connection info for this object's sockets.
connect to peers. `peers` will be a dict of 4-tuples, keyed by name. {peer :
Convert an object in R's namespace to one suitable for ipython's namespace. For a data.frame,
Return the entire source file and starting line number for an object. The argument may
Try to fix the filenames in each record from inspect.getinnerframes(). Particularly, modules loaded from within
Shorthand access to the color table scheme selector method.
Toggle between the currently active color scheme and NoColor.
Return formatted traceback. Subclasses may override this if they add extra arguments.
Return a color formatted string with the traceback info. Parameters ---------- etype : exception type
Format a list of traceback entry tuples for printing. Given a list of tuples as
Format the exception part of a traceback. The arguments are the exception type and value
Only print the exception type and message, without a traceback. Parameters ---------- etype : exception
Return a nice text document describing the traceback.
Call up the pdb debugger if desired, always clean up the tb reference. Keywords: -
Switch to the desired mode. If mode is not specified, cycles through the available modes.
View decorator for requiring a user group.
parent, name = get_parent(globals, level) Return the package that an import is being performed in.
mod, name, buf = load_next(mod, altmod, name, buf) altmod is either None or same as
m = import_submodule(mod, subname, fullname)
mod.{subname} = submod
Handle 'from module import a, b, c' imports.
Replacement for __import__()
Replacement for reload().
Recursively reload all modules used in the given module. Optionally takes a list of modules
Compute a (probably) unique name for code for caching. This now expects code to be
Parse code to an AST with the current compiler flags active. Arguments are exactly the
Make a name for a block of code, and cache the code. Parameters ---------- code
Call linecache.checkcache() safely protecting our cached values.
Add a line of source to the code. Don't include indentations or newlines.
Add a section, a sub-CodeBuilder.
Compile the code, and return the function `fn_name`.
Generate a Python expression for `expr`.
Render this template by applying it to `context`. `context` is a dictionary of values to
Evaluate dotted expressions at runtime.
A shortcut function to render a partial template with context and return the output.
Return a format data dict for an object. By default all format types will be
Activate the default formatters.
Return a format data dict for an object. By default all format types will be
Add a format function for a given type. Parameters ----------- typ : class The class
Add a format function for a type specified by the full dotted module and name
Check if the given class is specified in the deferred type registry. Returns the printer
float_precision changed, set float_format accordingly. float_precision can be set by int or str. This will
Return path to any existing user config files
Does the value look like an on/off flag?
Configure the nose running environment. Execute configure before collecting tests with nose.TestCollector to enable output
Configure logging for nose, or optionally other packages. Any logger name may be set with
Configure the working directory or directories for the test run.
Get the command line option parser.
Very dumb 'pager' in Python, for when nothing else works. Only moves forward, same interface
Attempt to work out the number of lines on the screen. This is called by
Print a string, piping through a pager after a certain length. The screen_lines parameter specifies
Page a file, using an optional pager command and starting line.
Return a pager command. Makes some attempts at finding an OS-correct one.
Return the string for paging files with an offset. This is the '+N' argument which
Print a string snipping the midsection to fit in width. print_full: mode control: - 0:
timings_out(reps,func,*args,**kw) -> (t_total,t_per_call,output) Execute a function reps times, return a tuple with the elapsed total
timings(reps,func,*args,**kw) -> (t_total,t_per_call) Execute a function reps times, return a tuple with the elapsed total
A function to pretty print sympy Basic objects.
A function to display sympy expression using inline style LaTeX in PNG.
A function to display sympy expression using display style LaTeX in PNG.
Return True if type o can be printed with LaTeX. If o is a container
A function to generate the latex representation of sympy expressions.
Load the extension in IPython.
Usage: {% with 'this, is a, string'|str2tokens:',' as token_list %}do something{% endwith %}
Usage: {% str2tokens 'a/b/c/d' '/' as token_list %}
Non-camel-case version of func name for backwards compatibility. .. warning :: DEPRECATED: Do not use
Register commandline options. Implement this method for normal options behavior with protection from OptionConflictErrors. If
Configure the plugin and system, based on selected options. The base plugin class sets the
Validate that the input is a list of strings. Raises ValueError if not.
Validate that the input is a dict with string keys and values. Raises ValueError if
Run my loop, ignoring EINTR events in the poller
Queue a message to be sent from the IOLoop's thread. Parameters ---------- msg : message
callback for stream.on_recv unpacks message, and calls handlers with it.
The thread's main activity. Call start() instead.
Execute code in the kernel. Parameters ---------- code : str A string of Python code.
Tab complete text in the kernel's namespace. Parameters ---------- text : str The text to
Get metadata information about an object. Parameters ---------- oname : str A string specifying the
Get entries from the history list. Parameters ---------- raw : bool If True, return the
Request an immediate kernel shutdown. Upon receipt of the (empty) reply, client code can safely
Immediately processes all pending messages on the SUB channel. Callers should use this method to
Send a string of raw input to the kernel.
poll for heartbeat replies until we reach self.time_to_dead Ignores interrupts, and returns the result of
The thread's main activity. Call start() instead.
Is the heartbeat running and responsive (and not paused).
Starts the channels for this kernel. This will create the channels if they do not
Stops all the running channels for this kernel.
Are any of the channels created and running?
cleanup connection file *if we wrote it* Will not raise if the connection file was
load connection info from JSON dict in self.connection_file
write connection info to JSON dict in self.connection_file
Starts a kernel process and configures the manager to use it. If random ports (port=0)
Attempts to the stop the kernel process cleanly. If the kernel cannot be stopped, it
Restarts a kernel with the arguments that were used to launch it. If the old
Kill the running kernel.
Interrupts the kernel. Unlike ``signal_kernel``, this operation is well supported on all platforms.
Sends a signal to the kernel. Note that since only SIGTERM is supported on Windows,
Is the kernel process still running?
Get the REQ socket channel object to make requests of the kernel.
Get the SUB socket channel object.
Get the REP socket channel object to handle stdin (raw_input).
Get the heartbeat socket channel object to check that the kernel is alive.
Bind an Engine's Kernel to be used as a full IPython kernel. This allows a
Emit a debugging message depending on the debugging level. :param level: The debugging level. :param
Retrieve the extension classes in priority order. :returns: A list of extension classes, in proper
Prepare all the extensions. Extensions are prepared during argument parser preparation. An extension implementing the
Initialize the extensions. This loops over each extension invoking its ``activate()`` method; those extensions that
Called after reading steps, prior to adding them to the list of test steps. Extensions
Called prior to executing a step. :param ctxt: An instance of ``timid.context.Context``. :param step: An
Called after executing a step. :param ctxt: An instance of ``timid.context.Context``. :param step: An instance
Called at the end of processing. This call allows extensions to emit any additional data,
Walk an unpacked egg's contents, skipping the metadata directory
Check whether module possibly uses unsafe-for-zipfile stuff
Create missing package __init__ files
Create and run the IPython controller
save a connection dict to json file.
load config from existing json connector files.
secondary config, loading from JSON and setting defaults
single decorator for adding script args
decorator for adding block/targets args for execution applied to %pxconfig and %%px
decorator for output-formatting args applied to %pxresult and %%px
configure default targets/blocking for %px magics
Print the result of the last asynchronous %px command. This lets you recall the results
implementation used by %px and %%parallel
Executes the cell in parallel. Examples -------- :: In [24]: %%px --noblock ....: a =
Enable %autopx mode by saving the original run_cell and installing pxrun_cell.
Disable %autopx by restoring the original InteractiveShell.run_cell.
drop-in replacement for InteractiveShell.run_cell. This executes code remotely, instead of in the local namespace. See
Internal ``CLOCK_CHANNEL`` consumer to process task runs
Internal ``RUN_TASK`` consumer to run the task's callable
Internal ``KILL_TASK`` consumer to remove retired tasks
Patch the protocol's makeConnection and connectionLost methods to make the protocol and its transport behave
Patch a method onto an object if it isn't already there.
Patch the three methods belonging to IPushProducer onto the transport if it doesn't already have
Patch abortConnection() onto the transport if it doesn't already have it. (`Agent` assumes its transport
Accept a pending connection.
Reject a pending connection.
Returns an IAgent that makes requests to this fake server.
Calls pre and post save hooks.
Calls pre and post delete hooks for DelteViews.
Supply user object as initial data for the specified user_field(s).
Use SaveHookMixin pre_save to set the user.
Writes a report summarizing coverage statistics per module. `outfile` is a file object to write
Official way to get the extension of compiled files (.pyc or .pyo)
Replace stuff in the __dict__ of a class, and upgrade method code objects
Check whether some modules need to be reloaded.
Open the default editor at the given filename and linenumber. This is IPython's default editor
Open the editor at the given filename, linenumber, column and show an error message. This
Get text from the clipboard.
Add a func to the cmd chain with given priority
Try to create a Distribution 'path_or_module'. o 'path_or_module' may be a module object. o If
Configure which kinds of exceptions trigger plugin.
Given a string representing an email address, returns a mailto link with rot13 JavaScript obfuscation.
given an number, this fuction rounds the number as the following examples: 87 -> 87,
Import and return bar given the string foo.bar.
Attempt to make an ssh connection without a password. This is mainly used for requiring
Try passwordless login with shell ssh command.
Try passwordless login with paramiko.
Connect a socket to an address via an ssh tunnel. This is a wrapper for
Open a tunneled connection from a 0MQ url. For use inside tunnel_connection. Returns ------- (url,
Create an ssh tunnel using command-line ssh that connects port lport on this machine to
launch a tunner with paramiko in a subprocess. This should only be used when shell
Function for actually starting a paramiko tunnel, to be passed to multiprocessing.Process(target=this), and not called
Call spin() to sync state prior to calling the method.
Update our engines dict and _ids from a dict of the form: {id:uuid}.
Stop scheduling tasks because an engine has been unregistered from a pure ZMQ scheduler.
Turn valid target IDs or 'all' into two lists: (int_ids, uuids).
setup all our socket connections to the cluster. This is called from __init__.
unwrap exception, and remap engine_id to int.
Register a new engine, and update our connection info.
Unregister an engine that has died.
Handle messages known to be on an engine when the engine unregisters. It is possible
Save the reply to an execute_request into our results. execute messages are never actually used.
Flush notifications of engine registrations waiting in ZMQ queue.
Flush task or queue results waiting in ZMQ queue.
Flush replies from the control channel waiting in the ZMQ queue. Currently: ignore them.
flush ignored control replies
Flush replies from the iopub channel waiting in the ZMQ queue.
Create a DirectView and register it with IPython magics Defines the magics `%px, %autopx, %pxresult,
target func for use in spin_thread
call Client.spin() in a background thread on some regular interval This helps ensure that messages
stop background spin_thread, if any
Flush any registration notifications and execution results waiting in the ZMQ queue.
waits on one or more `jobs`, for up to `timeout` seconds. Parameters ---------- jobs :
Clear the namespace in target(s).
Abort specific jobs from the execution queues of target(s). This is a mechanism to prevent
Terminates one or more engine processes, optionally including the hub. Parameters ---------- targets: list of
construct and send an apply message via a socket. This is the principal method with
construct and send an execute request via a socket.
construct a DirectView object. If no arguments are specified, create a LoadBalancedView using all engines.
construct a DirectView object. If no targets are specified, create a DirectView using all engines.
Retrieve a result by msg_id or history index, wrapped in an AsyncResult object. If the
Resubmit one or more tasks. in-flight tasks may not be resubmitted. Parameters ---------- indices_or_msg_ids :
Check on the status of the result(s) of the apply request with `msg_ids`. If status_only
Fetch the status of engine queues. Parameters ---------- targets : int/str/list of ints/strs the engines
Tell the Hub to forget results. Individual results can be purged by msg_id, or the
Get the Hub's history Just like the Client, the Hub has a history, which is
Query the Hub's TaskRecord database This will return a list of task record dicts that
Return a set of opcodes by the names in `names`.
Create a ByteParser on demand.
Find the lines matching one of a list of regexes. Returns a set of line
Parse the source to find the interesting facts about its lines. A handful of member
Return the first line number of the statement including `line`.
Map the line numbers in `lines` to the correct first line of the statement. Skip
Parse source text to find executable lines, excluded lines, etc. Return values are 1) a
Get information about the arcs available in the code. Returns a sorted list of line
Get a mapping from line numbers to count of exits from that line. Excluded lines
Iterate over all the code objects nested within this one. The iteration includes `self` as
Map byte offsets to line numbers in `code`. Uses co_lnotab described in Python/compile.c to map
Find the statements in `self.code`. Produce a sequence of line numbers that start statements. Recurses
Get a string version of `block_stack`, for debugging.
Split the code object into a list of `Chunk` objects. Each chunk is only entered
Validate the rule that chunks have a single entrance.
Find the executable arcs in the code. Yields pairs: (from,to). From and to are integer
Returns a list of `Chunk` objects for this code and its children. See `_split_into_chunks` for
Get the set of all arcs in this code object and its children. See `_arcs`
Add options to command line.
Configure plugin.
Begin recording coverage information.
Output code coverage report.
If inclusive coverage enabled, return true for all source files in wanted packages.
Generate alternative interpretations of a source distro name Note: if `location` is a filesystem filename,
A function compatible with Python 2.3-3.3 that will encode auth from a URL suitable for
Open a urllib2 request, handling HTTP authentication
Obtain a distribution suitable for fulfilling `requirement` `requirement` must be a ``pkg_resources.Requirement`` instance. If necessary,
customized `repr()`.
get parent from obj.
this is a property, in case the handler is created before the engine gets registered
Initialize a FakeModule instance __dict__. Kept as a standalone function and not a method so
renders context aware template
Configure plugin. Plugin is enabled by default.
Add captured output to error report.
Turn a list to list of list
Convert a notebook to the v3 format. Parameters ---------- nb : NotebookNode The Python representation
Convert a hex color to rgb integer tuple.
Construct the keys to be used building the base stylesheet from a templatee.
Use one of the base templates, and set bg/fg/select colors.
Return a font of the requested family, using fallback as alternative. If a fallback is
Reimplemented to support IPython's improved completion machinery.
Reimplemented to support prompt requests.
Implemented to handle history tail replies, which are only supported by the IPython kernel.
Reimplemented for IPython-style "display hook".
The base handler for the ``display_data`` message.
Reimplemented to make a history request and load %guiref.
Reimplemented to use the 'run' magic.
Reimplemented to support IPython's improved completion machinery.
Reimplemented for IPython-style traceback formatting.
Reimplemented to dispatch payloads to handler methods.
Reimplemented for IPython-style prompts.
Reimplemented for IPython-style prompts.
Sets the widget style to the class defaults. Parameters: ----------- colors : str, optional (default
Opens a Python script for editing. Parameters: ----------- filename : str A path to a
Given a prompt number, returns an HTML In prompt.
Given a plain text version of an In prompt, returns an HTML continuation prompt.
Set the style sheets of the underlying widgets.
Set the style for the syntax highlighter.
Async co-routine to perform requests to a CloudStackAPI. The parameters needs to include the command
Handles the response returned from the CloudStack API. Some CloudStack API are implemented asynchronous, which
According to the CloudStack documentation, each request needs to be signed in order to authenticate
Each CloudStack API call returns a nested dictionary structure. The first level contains only one
System virtual memory as a namedutple.
System swap memory as (total, used, free, sin, sout) namedtuple.
Return system per-CPU times as a named tuple
Return system CPU times as a named tuple
Return real, effective and saved user ids.
Return real, effective and saved group ids.
return a tuple containing process user/kernel time.
Return a tuple with the process' RSS and VMS size.
Return the number of threads belonging to the process.
Return files opened by process as a list of namedtuples.
Return the path to the connection file of an app Parameters ---------- app : KernelApp
find a connection file, and return its absolute path. The current working directory and the
Return the connection information for the current Kernel. Parameters ---------- connection_file : str [optional] The
Connect a qtconsole to the current kernel. This is useful for connecting a second qtconsole
tunnel connections to a kernel via ssh This will open four SSH tunnels from localhost
strip frontend-specific aliases and flags from an argument list For use primarily in frontend apps
Get short form of commit hash given directory `pkg_path` We get the commit hash from
Return dict describing the context of this package Parameters ---------- pkg_path : str path containing
Return useful information about IPython and the system, as a string. Example ------- In [2]:
Return the number of active CPUs on a Darwin system.
Return the effective number of CPUs in the system as an integer. This cross-platform function
[1, 2, 3, 4] {'accumulate': <built-in function max>}
Advance to the next result set. Returns None if there are no more result sets.
Execute a query. query -- string, query to execute on server args -- optional sequence
Execute a multi-row query. query -- string, query to execute on server args Sequence of
Execute stored procedure procname with args procname -- string, name of procedure to execute on
Fetches a single row from the cursor.
Fetch up to size rows from the cursor. Result set may be smaller than size.
Fetchs all available rows from the cursor.
Fetch several rows as a list of dictionaries. Deprecated: Use fetchmany() instead. Will be removed
this function will be called on the engines
Parse a string into a (nbformat, dict) tuple.
Parse a string into a (nbformat, string) tuple.
Read a JSON notebook from a string and return the NotebookNode object.
Read a .py notebook from a string and return the NotebookNode object.
Read a notebook from a string and return the NotebookNode object. This function properly handles
Write a notebook to a string in a given format in the current nbformat version.
Write a notebook to a file in a given format in the current nbformat version.
Convert to a notebook having notebook metadata.
try load value from dict. if key is not exists, mark as state unset.
Run the pyglet event loop by processing pending events only. This keeps processing pending events
Does the name match my requirements? To match, a name must match config.testMatch OR config.include
Is the class a wanted test class? A class must be a unittest.TestCase subclass, or
Is the directory a wanted test directory? All package directories match, so long as they
Is the file a wanted test file? The file must be a python source file
Is the function a test function?
Is the method a test method?
Is the module a test module? The tail of the module name must match test
Make new_fn have old_fn's doc string. This is particularly useful for the do_... commands that
Return the contents of a named file as a list of lines. This function never
List command to use if we have a newer pydb installed
The printing (as opposed to the parsing part of a 'list' command.
The debugger interface to magic_pdef
Check whether specified line seems to be executable. Return `lineno` if it is, 0 if
Generates a multiplying factor used to convert two currencies
Converts an amount of money from one currency to another on a specified date.
Compute the return of the currency between two dates
Generate a dataframe consisting of the currency prices (specified by symbols) from the start to
Sanitation checks
Return the given stream's encoding or a default. There are cases where sys.std* might not
Return IPython's guess for the default encoding for bytes as text. Asks for stdin.encoding first,
Gets the username / password from config. Uses the following rules: 1. If it is
load ip/port/hmac config from JSON connection file
write connection info to JSON file
start the heart beating
display connection info, and store ports
create our session object
redirects stdout/stderr to devnull if necessary
Redirect input streams and set a display hook.
Create the Kernel object itself
construct connection function, which handles tunnels.
send the registration_request
Converts html content to plain text
Converts markdown content to text
Converts uri parts to valid uri. Example: /memebers, ['profile', 'view'] => /memembers/profile/view
returns a fully qualified app domain name
Define the command line options for the plugin.
Configure plugin based on command line options
Check if directory is eligible for test discovery
Return true if 'ext' links to a dynamic lib in the same package
call each func from func list. return the last func value or None if func
call each func from reversed func list. return the last func value or None if
append func with given arguments and keywords.
insert func with given arguments and keywords.
ensure there is only one newline between usage and the first heading if there is
initialize the app
Create a .pid file in the pid_dir with my pid. This must be called after
Remove the pid file. This should be called at shutdown by registering a callback with
Get the pid from the pid file. If the pid file doesn't exist a :exc:`PIDFileError`
Construct an argument parser using the function decorations.
Find the real name of the magic.
Add this object's information to the parser.
Add this object's information to the parser.
Highlight a block of text. Reimplemented to highlight selectively.
Reimplemented to temporarily enable highlighting if disabled.
Reimplemented to highlight selectively.
Copy the currently selected text to the clipboard, removing prompts.
Returns whether 'source' can be completely processed and a new prompt created. When triggered by
Execute 'source'. If 'hidden', do not show any output. See parent class :meth:`execute` docstring for
Called immediately after a prompt is finished, i.e. when some input will be processed and
Called when the tab key is pressed. Returns whether to continue processing the event.
Reimplemented to add an action for raw copy.
Reimplemented for execution interruption and smart backspace.
Reimplemented for auto-indentation.
Handle replies for tab completion.
Silently execute `expr` in the kernel and call `callback` with reply the `expr` is evaluated
Execute `callback` corresponding to `msg` reply, after ``_silent_exec_callback`` Parameters ---------- msg : raw message send
Handles replies for code execution.
Handle requests for raw_input.
Handle the kernel's death by asking if the user wants to restart.
Handle replies for call tips.
Handle display hook output.
Handle stdout, stderr, and stdin.
Handle shutdown signal, only if from other console.
Attempts to execute file with 'path'. If 'hidden', no output is shown.
Attempts to interrupt the running kernel. Also unsets _reading flag, to avoid runtime errors if
Resets the widget to its initial state if ``clear`` parameter or ``clear_on_kernel_restart`` configuration setting is
Attempts to restart the running kernel.
Shows a call tip, if appropriate, at the current cursor location.
Performs completion at the current cursor location.
Gets the context for the specified cursor (or the current cursor if none is specified).
Process a reply for an execution request that resulted in an error.
Process a reply for a successful execution request.
Called whenever the document's content changes. Display a call tip if appropriate.
Add plugin to my list of plugins to call, if it has the attribute I'm
Call plugins in a chain, where the result of each plugin call is sent to
Call all plugins, yielding each item in each non-None result.
Call all plugins, returning the first non-None result.
extraplugins are maintained in a separate list and re-added by loadPlugins() to prevent their being
Configure the set of plugins with the given options and config instance. After configuration, disabled
Load plugins by iterating the `nose.plugins` entry point.
Load plugins in nose.plugins.builtin
Render a LaTeX string to PNG. Parameters ---------- s : str The raw string containing
Render LaTeX to HTML with embedded PNG data using data URIs. Parameters ---------- s :
Given a math expression, renders it in a closely-clipped bounding box to an image file.
Build wheels.
Parses svn+http://blahblah@rev#egg=Foobar into a requirement (Foobar) and a URL
Uninstall the distribution currently satisfying this requirement. Prompts before removing or modifying files unless ``auto_confirm``
Find an installed distribution that satisfies or conflicts with this requirement, and set self.satisfied_by or
Clean up files, remove builds.
Install everything in this set (after having downloaded and unpacked the packages)
Return a generator yielding a Process class instance for all running processes on the local
Return a float representing the current system-wide CPU utilization as a percentage. When interval is
Return system disk I/O statistics as a namedtuple including the following attributes: - read_count: number
Return network I/O statistics as a namedtuple including the following attributes: - bytes_sent: number of
Return the amount of total, used and free physical memory on the system in bytes
Utility method returning process information as a hashable dictionary. If 'attrs' is specified it must
The process name.
The process executable path. May also be an empty string.
The name of the user that owns the process. On UNIX this is calculated by
Return the children of this process as a list of Process objects. If recursive is
Return a float representing the current process CPU utilization as a percentage. When interval is
Compare physical system memory to process resident memory and calculate process memory utilization as a
Return process's mapped memory regions as a list of nameduples whose fields are variable depending
Return whether this process is running.
Send a signal to process (see signal module constants). On Windows only SIGTERM is valid
Suspend process execution.
Resume process execution.
Kill the current process.
Wait for process to terminate and, if process is a children of the current one
Get or set process niceness (priority). Deprecated, use get_nice() instead.
Initializes the kernel inside GTK. This is meant to run only once at startup, so
Hijack a few key functions in GTK for IPython integration. Modifies pyGTK's main and main_quit
Is the given identifier defined in one of the namespaces which shadow the alias and
Create the default transformers.
Register a transformer instance.
Unregister a transformer instance.
Create the default checkers.
Register a checker instance.
Unregister a checker instance.
Create the default handlers.
Register a handler instance by name with esc_strings.
Unregister a handler instance by name with esc_strings.
Prefilter a line that has been converted to a LineInfo object. This implements the checker/handler
Find a handler for the line_info by trying checkers.
Calls the enabled transformers in order of increasing priority.
Prefilter a single input line as text. This method prefilters a single line of text
Prefilter multiple input lines of text. This is the main entry point for prefiltering multiple
Instances of IPyAutocall in user_ns get autocalled immediately
Allow ! and !! in multi-line statements if multi_line_specials is on
Check for escape character and return either a handler to handle it, or None if
If the ifun is magic, and automagic is on, run it. Note: normal, non-auto magic
Check if the initital identifier on the line is an alias.
If the 'rest' of the line begins with a function call or pretty much any
Check if the initial word/function is callable and autocall is on.
Handle normal input lines. Use as a template for handlers.
Handle alias input lines.
Execute the line in a shell, empty return value
Execute magic functions.
Handle lines which can be auto-executed, quoting if requested.
Try to get some help for the object. obj? or ?obj -> basic information. obj??
Reimplemented to hide on certain key presses and on text edit focus changes.
Reimplemented to cancel the hide timer.
Reimplemented to paint the background panel.
Attempts to show the specified call line and docstring at the current cursor location. The
Attempts to show the specified tip at the current cursor location.
If 'forward' is True (resp. False), proceed forwards (resp. backwards) through the line that contains
Hides the tooltip after some time has passed (assuming the cursor is not over the
Updates the tip based on user cursor movement.
Create a property that proxies attribute ``proxied_attr`` through the local attribute ``local_attr``.
Canonicalizes a path relative to a given working directory. That is, the path, if not
Schema validation helper. Performs JSONSchema validation. If a schema validation error is encountered, an exception
Iterate over a priority dictionary. A priority dictionary is a dictionary keyed by integer priority,
Retrieve a read-only subordinate mapping. All values are stringified, and sensitive values are masked. The
Build a file path from *paths* and return the contents.
Return True if in a venv and no system site packages.
Parallel word frequency counter. view - An IPython DirectView fnames - The filenames containing the
Convert a function based decorator into a class based decorator usable on class based Views.
Return list of shell aliases to auto-define.
Define an alias, but don't raise on an AliasError.
Define a new alias after validating it. This will raise an :exc:`AliasError` if there are
Validate an alias and return the its number of arguments.
Call an alias given its name and the rest of the line.
Transform alias to system command string.
Expand an alias in the command line Returns the provided command line, possibly with the
Expand multiple levels of aliases: if: alias foo bar /tmp alias baz foo then: baz
Quote an argument for later parsing by shlex.split()
produces rst from nose help
Reset graphics attributs to their default values.
Yields substrings for which the same escape code applies.
Set attributes based on CSI (Control Sequence Introducer) code. Parameters ---------- command : str The
Set attributes based on OSC (Operating System Command) parameters. Parameters ---------- params : sequence of
Set attributes based on SGR (Select Graphic Rendition) codes. Parameters ---------- params : sequence of
Returns a QColor for a given color code, or None if one cannot be constructed.
Returns a QTextCharFormat that encodes the current style attributes.
Given a background color (a QColor), attempt to set a color map that will be
Generate a one-time jwt with an age in seconds
use a thread lock on current method, if self.lock is defined
Run by housekeeper thread
has this jwt been used?
is this token valid?
split likely multiline text into lists of strings For file output more friendly to line-based
Write a notebook to a file like object
use `Semaphore` to keep func access thread-safety. example: ``` py @semaphore(3) def func(): pass ```
Run the pyglet event loop by processing pending events only. This keeps processing pending events
Get common prefix for completions Return the longest common prefix of a list of strings,
Reimplemented to ensure a console-like behavior in the underlying text widgets.
Reimplemented to suggest a size that is 80 characters wide and 25 lines high.
Returns whether text can be cut to the clipboard.
Returns whether text can be pasted from the clipboard.
Clear the console. Parameters: ----------- keep_input : bool, optional (default True) If set, restores the
Copy the currently selected text to the clipboard and delete it if it's inside the
Executes source or the input buffer, possibly prompting for more input. Parameters: ----------- source :
The text that the user has entered entered at the current prompt. If the console
Sets the text in the input buffer. If the console is currently executing, this call
Sets the base font for the ConsoleWidget to the specified QFont.
Paste the contents of the clipboard into the input region. Parameters: ----------- mode : QClipboard::Mode,
Print the contents of the ConsoleWidget to the specified QPrinter.
Moves the prompt to the top of the viewport.
Sets the font to the default fixed-width font for this platform.
Change the font size by the specified amount (in points).
Sets the width (in terms of space characters) for tab characters.
A low-level method for appending content to the end of the buffer. If 'before_prompt' is
Appends HTML at the end of the console buffer.
Appends HTML, then returns the plain text version of it.
Appends plain text, processing ANSI codes if enabled.
Clears the "temporary text" buffer, i.e. all the text following the prompt region.
Performs completion with 'items' at the specified cursor location.
fill the area below the active editting zone with text
Creates a context menu for the given QPoint (in widget coordinates).
Given a KeyboardModifiers flags object, return whether the Control key is down. Parameters: ----------- include_command
Creates and connects the underlying text widget.
Creates and connects the underlying paging widget.
Filter key events for the underlying text widget to create a console-like interface.
Filter key events for the paging widget to create console-like interface.
Transform a list of strings into a single string with columns. Parameters ---------- items :
Given a QTextBlock, return its unformatted text.
Convenience method that returns a cursor for the last character.
Returns the column of the cursor in the input buffer, excluding the contribution by the
Returns the text of the line of the input buffer that contains the cursor, or
Returns the (plain text) prompt for line of the input buffer that contains the cursor,
Convenience method that returns a cursor for the prompt position.
Convenience method that returns a cursor with text selected between the positions 'start' and 'end'.
Find the start of the word to the left the given position. If a sequence
Find the end of the word to the right the given position. If a sequence
Inserts new continuation prompt using the specified cursor.
Inserts HTML using the specified cursor in such a way that future formatting is unaffected.
Inserts HTML using the specified cursor, then returns its plain text version.
Inserts plain text using the specified cursor, processing ANSI codes if enabled.
Inserts text into the input buffer using the specified cursor (which must be in the
Returns whether the current cursor (or, if specified, a position) is inside the editing region.
Ensures that the cursor is inside the editing region. Returns whether the cursor was moved.
Cancels the current editing task ala Ctrl-G in Emacs.
Displays text using the pager if it exceeds the height of the viewport. Parameters: -----------
Called immediately after a new prompt is displayed.
Reads one line of input from the user. Parameters ---------- prompt : str, optional The
Sets the continuation prompt. Parameters ---------- prompt : str The prompt to show when more
Scrolls the viewport so that the specified cursor is at the top.
Writes a new prompt at the end of the buffer. Parameters ---------- prompt : str,
Expands the vertical scrollbar beyond the range set by Qt.
Shows a context menu at the given QPoint (in widget coordinates).
Return True if given Distribution is installed in user site.
Print the informations from installed distributions found.
Entry point for pkginfo tool
Assuming the cursor is at the end of the specified string, get the context (a
Copy a default config file into the active profile directory. Default configuration files are kept
Create a profile dir by profile name and path. Parameters ---------- path : unicode The
Find an existing profile dir by profile name, return its ProfileDir. This searches through a
Find/create a profile dir and return its ProfileDir. This will create the profile directory if
Convert a cmp= function into a key= function
Read a file and close it. Returns the file source.
Read a file and close it. Returns the file source using readlines().
Take multiple lines of input. A list with each line of input as a separate
Similar to raw_input(), but accepts extended lines if input ends with \\.
Asks a question and returns a boolean (y/n) answer. If default is given (one of
Make a temporary python file, return filename and filehandle. Parameters ---------- src : string or
Raw print to sys.__stdout__, otherwise identical interface to print().
Raw print to sys.__stderr__, otherwise identical interface to print().
Close the file and restore the channel.
Write data to both channels.
write my output to sys.stdout/err as appropriate
add a new handler for new hearts
add a new handler for heart failure
a heart just beat
try: retrun fcn(*args, **kwargs) except: print traceback if 'spit' in kwargs.keys(): return kwargs['spit'] Parameters ----------
Converts a list into a list of lists with equal batch_size. Parameters ---------- sequence :
http://stackoverflow.com/questions/7900944/read-write-classes-to-files-in-an-efficent-way
Takes a path filename string and returns the split between the path and the filename
Tries to create a new directory in the given path. **create_dir** can also create subfolders
Generator for walking a directory tree. Starts at specified root folder, returning files that match
Runs a loop over the :doc:`Walk<relpy.utils.Walk>` Generator to find all file paths in the root
Displays time if verbose is true and count is within the display amount
calculates unit of time to display
Tracks the time in a loop. The estimated time to completion can be calculated and
Ensure that the path, or the root of the current package (if path is in
Import a dotted-name package whose tail is at path. In other words, given foo.bar and
Import a module *only* from path, ignoring sys.path and reloading if the version in sys.modules
Extract configuration data from a bdist_wininst .exe Returns a ConfigParser.RawConfigParser, or None
Create a #! line, getting options (if any) from script_text
Ensure that the importer caches dont have stale info for `path`
Determine if the specified executable is a .sh (contains a #! line)
Quote a command line argument according to Windows parsing rules
Yield write_script() argument tuples for a distribution's entrypoints
Return a pseudo-tempname base in the install directory. This code is intentionally naive; if a
Generate a legacy script wrapper and install it
Verify that there are no conflicting "old-style" packages
When easy_install is about to run bdist_egg on a source dist, that source dist might
Create directories under ~.
Return True if `name` is a considered as an archive file.
return a mutable proxy for the `obj`. all modify on the proxy will not apply
return a readonly proxy for the `obj`. all modify on the proxy will not apply
Create a new code cell with input and output
Create a new code cell with input and output
Create a new text cell.
Create a new section cell with a given integer level.
Create a notebook by name, id and a list of worksheets.
Create a new metadata node.
Create a new author.
Embed and start an IPython kernel in a given scope. Parameters ---------- module : ModuleType,
Whether `path` is a directory, to which the user has write access.
On Windows, remove leading and trailing quotes from filenames.
Return a valid python filename in the current directory. If the given name is not
Find a file by looking through a sequence of paths. This iterates through a sequence
Return the 'home' directory, as a unicode string. * First, check for frozen env in
Return the XDG_CONFIG_HOME, if it is defined and exists, else None. This is only for
Get the IPython directory for this platform and user. This uses the logic in `get_home_dir`
Get the base directory where IPython itself is installed.
Find the path to an IPython module in this version of IPython. This will always
Find the path to the folder associated with a given profile. I.e. find $IPYTHONDIR/profile_whatever.
Expand $VARS and ~names in a string, like a shell :Examples: In [2]: os.environ['FOO']='test' In
Determine whether a target is out of date. target_outdated(target,deps) -> 1/0 deps: list of filenames
Make an MD5 hash of a file, ignoring any differences in line ending characters.
Check for old config files, and present a warning if they exist. A link to
Return the absolute path of a security file given by filename and profile This allows
Updates the suggestions' dictionary for an object upon visiting its page
Gets a list with a certain size of suggestions for an object
Gets a list of all suggestions for an object
Return this path as a relative path, based from the current working directory.
Return a list of path objects that match the pattern. pattern - a path relative
r""" Open this file, read all lines, return them in a list. Optional arguments: encoding
Calculate the md5 hash for this file. This reads through the entire file.
Register commandline options.
Create profile stats file and load profiler.
Configure plugin.
Output profiler report.
Clean up stats file, if configured to do so.
Handle CLI command
Enable event loop integration with wxPython. Parameters ---------- app : WX Application, optional. Running application
Disable event loop integration with wxPython. This merely sets PyOS_InputHook to NULL.
Enable event loop integration with PyQt4. Parameters ---------- app : Qt Application, optional. Running application
Disable event loop integration with PyQt4. This merely sets PyOS_InputHook to NULL.
Enable event loop integration with PyGTK. Parameters ---------- app : ignored Ignored, it's only a
Enable event loop integration with Tk. Parameters ---------- app : toplevel :class:`Tkinter.Tk` widget, optional. Running
Enable event loop integration with pyglet. Parameters ---------- app : ignored Ignored, it's only a
Enable event loop integration with Gtk3 (gir bindings). Parameters ---------- app : ignored Ignored, it's
create a partitioner in the engine namespace
save the wave log
Turn a string of history ranges into 3-tuples of (session, start, stop). Examples -------- list(extract_input_ranges("~8/5-~7/4
Connect to the database, and create tables if necessary.
Prepares and runs an SQL query for the history database. Parameters ---------- sql : str
get info about a session Parameters ---------- session : int Session number to retrieve. The
Get the last n lines from the history database. Parameters ---------- n : int The
Search the database using unix glob-style matching (wildcards * and ?). Parameters ---------- pattern :
Retrieve input by session. Parameters ---------- session : int Session number to retrieve. start :
Get lines of history from a string of ranges, as used by magic commands %hist,
Get default history file name based on the Shell's profile. The profile parameter is ignored,
Get a new session number.
Close the database session, filling in the end time and line count.
Give the current session a name in the history database.
Clear the session history, releasing all object references, and optionally open a new session.
Get input and output history from the current session. Called by get_range, and takes similar
Retrieve input by session. Parameters ---------- session : int Session number to retrieve. The current
Store source and raw input in history and create input cache variables _i*. Parameters ----------
If database output logging is enabled, this saves all the outputs from the indicated prompt
Write any entries in the cache to the database.
This can be called from the main thread to safely stop this thread. Note that
Return system boot time (epoch in seconds)
Return the number of CPUs on the system
Return a named tuple representing the following CPU times: user, nice, system, idle, iowait, irq,
Return a list of namedtuple representing the CPU times for every CPU available on the
Return mounted disk partitions as a list of nameduples
Return currently connected users as a list of namedtuples.
Returns a list of PIDs currently running on the system.
Return network I/O statistics for every network interface installed on the system as a dict
Return disk I/O statistics for every disk installed on the system as a dict of
Call callable into a try/except clause and translate ENOENT, EACCES and EPERM in NoSuchProcess or
Return process's mapped memory regions as a list of nameduples. Fields are explained in 'man
Return connections opened by process as a list of namedtuples. The kind parameter filters for
Accept an "ip:port" address as displayed in /proc/net/* and convert it into a human readable
Make a nice string representation of a pair of numbers. If the numbers are equal,
Nicely format a list of line numbers. Format a list of line numbers for printing
Return a string summarizing the call stack.
A decorator to cache the result of an expensive operation. Only applies to methods with
Combine a list of regexes into one that matches any of them.
Remove a file, and don't get annoyed if it doesn't exist.
Add `v` to the hash, recursively if needed.
List all profiles in the ipython_dir and cwd.
Start a cluster for a given profile.
Stop a cluster for a given profile.
Ensure self.url contains full transport://interface:port
Find the full path to a .bat or .exe using the win32api module.
Callback for _system.
Win32 version of os.system() that works with network shares. Note that this implementation returns None,
Return standard output of executing cmd in a shell. Accepts the same arguments as os.system().
create a partitioner in the engine namespace
Returns a list of (code, translation) tuples for codes
Returns a sorted list of (code, translation) tuples for codes
Returns a list of (code, translation) tuples for priority, codes
Find the code units we'll report on. `morfs` is a list of modules or filenames.
Run a reporting function on a number of morfs. `report_fn` is called for each relative
Wraps a test decorator so as to properly replicate metadata of the decorated function, including
Test must raise one of expected exceptions to pass. Example use:: @raises(TypeError, ValueError) def test_raises_type_error():
Call pdb.set_trace in the calling frame, first restoring sys.stdout to the real output stream. Note
Test must finish within specified time limit to pass. Example use:: @timed(.1) def test_that_fails(): time.sleep(.2)
Decorator to add setup and/or teardown methods to a test function:: @with_setup(setup, teardown) def test_something():
Enable GUI event loop integration, taking pylab into account.
Load all IPython extensions in IPythonApp.extensions. This uses the :meth:`ExtensionManager.load_extensions` to load all the extensions
run the pre-flight code, specified via exec_lines
Run lines of code in IPythonApp.exec_lines in the user's namespace.
Run files from profile startup directory
Run files from IPythonApp.exec_files
Run code or file specified at the command-line
Run module specified at the command-line.
Create a simple generic function
Return the path to a data file of ours. The file is searched for on
Return the contents of a data file of ours.
HTML-escape the text in `t`.
Generate an HTML report for `morfs`. `morfs` is a list of modules or filenames.
Make local instances of static files for HTML report.
Write `html` to `fname`, properly encoded.
Compute a hash that changes if the file needs to be re-reported.
Generate an HTML file for one source file.
Write the index.html file for this report.
Read the last status in `directory`.
Write the current status to `directory`.
uniq_stable(elems) -> list Return from an iterable, a list of all the unique elements in
Sort and compare two lists. By default it does it in place, thus modifying the
Takes a list of (key,value) pairs and turns it into a dict.
Takes a list and turns it into a dict. Much slower than list2dict, but more
Get a slice of a sequence with variable step. Specify start,stop,step.
Chop a sequence into chunks of the given size.
Read configuration from setup.cfg.
Read existing configuration from MANIFEST.in. We use that to ignore anything the MANIFEST.in ignores.
Compile a glob pattern into a regexp. We need to do this because fnmatch allows
Does this filename match any of the patterns?
List all files versioned by git in the current directory.
Start a new kernel.
Shutdown a kernel by its kernel uuid. Parameters ========== kernel_id : uuid The id of
Kill a kernel by its kernel uuid. Parameters ========== kernel_id : uuid The id of
Get the single KernelManager object for a kernel by its uuid. Parameters ========== kernel_id :
Return a dictionary of ports for a kernel. Parameters ========== kernel_id : uuid The id
Return the notebook_id for a kernel_id or None.
Remove the kernel/notebook mapping for kernel_id.
Start a kernel for a notebok an return its kernel_id. Parameters ---------- notebook_id : uuid
Shutdown a kernel and remove its notebook association.
Interrupt a kernel.
Restart a kernel while keeping clients connected.
Create a new iopub stream.
Create a new shell stream.
Create a new hb stream.
Configure plugin.
Reset all OneTimeProperty attributes that may have fired already.
Generate integers from start to (and including!) stop, with increment of inc. Alternative to range/xrange.
Export the contents of the ConsoleWidget as HTML. Parameters: ----------- html : str, A utf-8
Export the contents of the ConsoleWidget as XHTML with inline SVGs. Parameters: ----------- html :
wrapper for ensuring image_tag returns utf8-encoded str on Python 2
Transforms a Qt-generated HTML string into a standards-compliant one. Parameters: ----------- html : str, A
Displays a dialog for exporting HTML generated by Qt's rich text system. Returns ------- The
Returns a unique instance of `klass` or None
Returns a tuple of (instance, created), where `instance` is the retrieved or created instance of
Tokenize the input string and return two lists, exclude list is for words that start
Builds a query for included terms in a text search.
Builds a query for both included & excluded terms in a text search.
Query for if date_field is within number of "days" ago.
Query for if date_field is within number of "days" from now.
Query for null or blank field.
Converts queries to case insensitive for special fields.
Decorator that adds attributes to classes or functions for use with the Attribute (-a) plugin.
Look up an attribute on a method/ function. If the attribute isn't found there, looking
Register command line options
Configure the plugin and system, based on selected options. attr and eval_attr may each be
Verify whether a method has the required attributes The method is considered a match if
Accept the method if its attributes match.
Rotate the kill ring, then yank back the new top.
backport a few patches from newer pyzmq These can be removed as we bump our
returns: API version number <str> raises: <VersionNotFound> NOTE: relies on presence of comment tags in
XML doc may have several prefix:namespace_url pairs, can also specify a namespace_url as default, tags
returns: API version number <str> raises: <VersionNotFound> NOTE: relies on presence of documentation node in
Returns an XSD-schema-enabled lxml parser from a WSDL or XSD `schema_url` can of course be
Ask a question to STDOUT and return answer from STDIN Args: question: A string question
authenticate this page *unless* readonly view is active. In read-only mode, the notebook list and
websocket url matching the current request turns http[s]://host[:port] into ws[s]://host[:port]
Reserialize a reply message using JSON. This takes the msg list from the ZMQ socket,
Inject the first message, which is the document cookie, for authentication.
Start the heartbeating and call the callback if the kernel dies.
callback for delayed heartbeat start Only start the hb loop if we haven't been closed
Stop the heartbeating and cancel all related callbacks.
Load file object.
Reload source from disk and initialize state.
Get the current block index, validating and checking status. Returns None if the demo is
Move the current seek pointer to the given block. You can use negative indices to
Edit a block. If no number is given, use the last block executed. This edits
Show a single block on screen
Show entire demo on screen, block by block
Reload source from disk and initialize state.
Processes a collection in series Parameters ---------- collection : list list of Record objects method
Processes a collection in parallel batches, each batch processes in series on a single process.
sets up the threadpool with map for parallel processing
Processes a collection in parallel. Parameters ---------- collection : list i.e. list of Record objects
Download and install MathJax for offline use. This will install mathjax to the 'static' dir
wrap `with obj` out of func. example: ``` py @with_it(Lock()) def func(): pass ```
wrap `with getattr(self, name)` out of func. usage: ``` py class A: def __init__(self): self._lock
like `with_objattr` but enter context one by one.
Inspect a traceback and its frame, returning source for the expression where the exception was
Get source from a traceback object. A tuple of two things is returned: a list
Find lines in home that are inspectable. Walk back from the err line up to
Create a countdown.
Cleanup routine to shut down all subprocesses we opened.
A modifier hook function. This is called in priority order prior to invoking the ``Action``
A modifier hook function. This is called in reverse-priority order after invoking the ``Action`` for
Keep our history and outstanding attributes up to date after a method call.
sync relevant results from self.client to our results attribute.
call spin after the method.
Add a new Task Record, by msg_id.
Get a specific Task Record, by msg_id.
Update the data in an existing record.
Find records matching a query dict, optionally extracting subset of keys. Returns list of matching
get all msg_ids, ordered by time submitted.
Get all messages that are currently ready.
Gets a message if there is one that is ready.
`prop` is a sugar for `property`. ``` py @prop def value(self): pass # equals: @property
`get_onlys` is a sugar for multi-`property`. ``` py name, age = get_onlys('_name', '_age') # equals:
Parses a database URL.
Return the list containing the names of the modules available in the given folder.
Returns a list containing the names of all the modules available in the folders of
Easily create a trivial completer for a command. Takes either a list of completions, or
Returns a list containing the completion possibilities for an import line. The line looks like
Complete files that end in .py or .ipy for the %run command.
Completer function for cd, which only returns directories.
This should call display(Javascript(jscode)).
Escape an XML attribute. Value can be unicode.
Configures the xunit plugin.
Writes an Xunit-formatted XML file The file includes a report of test errors and failures.
Add error output to Xunit report.
Add failure output to Xunit report.
Add success output to Xunit report.
Pick two at random, use the LRU of the two. The content of loads is
Pick two at random using inverse load as weight. Return the less loaded of the
dispatch register/unregister events.
New engine with ident `uid` became available.
Existing engine with ident `uid` became unavailable.
Deal with jobs resident in an engine that died.
Dispatch job submission to appropriate handlers.
Audit all waiting tasks for expired timeouts.
a task has become unreachable, send a reply with an ImpossibleDependency error.
check location dependencies, and run if they are met.
Save a message for later submission when its dependencies are met.
Submit a task to any of a subset of our targets.
dispatch method for result replies
handle a real task result, either success or failure
handle an unmet dependency
dep_id just finished. Update our dependency graph and submit any jobs that just became runable.
Called after self.targets[idx] just got the job with header. Override with subclasses. The default ordering
Generate a new log-file with a default header. Raises RuntimeError if the log has already
Switch logging on/off. val should be ONLY a boolean.
Print a status message about the logger.
Write the sources to a log. Inputs: - line_mod: possibly modified input, such as the
Write data to the log file, if active
Fully stop logging and close log file. In order to start logging again, a new
Create a worksheet by name with with a list of cells.
Create a notebook by name, id and a list of worksheets.
Adds a target 'string' for dispatching
Adds a target regexp for dispatching
Get a seq of Commandchain objects that match key
Yield all 'value' targets, without priority
do a bit of validation of the notebook dir
List all notebooks in the notebook dir. This returns a list of dicts of the
Generate a new notebook_id for a name and store its mappings.
Delete a notebook's id only. This doesn't delete the actual notebook.
Does a notebook exist?
Return a full path to a notebook given its notebook_id.
Return a full path to a notebook given its name.
Get the representation of a notebook in format by notebook_id.
Get the NotebookNode representation of a notebook by notebook_id.
Save a new notebook and return its notebook_id. If a name is passed in, it
Save an existing notebook by notebook_id.
Save an existing notebook object by notebook_id.
Delete notebook by notebook_id.
Return a non-used filename of the form basename<int>. This searches through the filenames (basename0, basename1,
Create a new notebook and return its notebook_id.
Copy an existing notebook and return its notebook_id.
Return all physical tokens, even line continuations. tokenize.generate_tokens() doesn't return a token for the backslash
Generate a series of lines, one for each line in `source`. Each line is a
Determine the encoding for `source` (a string), according to PEP 263. Returns a string, the
Load the default config file from the default ipython_dir. This is useful for embedded shells.
Return a string containing a crash report.
This has to be in a method, for TerminalIPythonApp to be available.
override to allow old '-pylab' flag with deprecation warning
Do actions after construct, but before starting the app.
initialize the InteractiveShell instance
optionally display the banner
Replace --pylab='inline' with --pylab='auto
Returns a string containing the class name of an object with the correct indefinite article
Return a string representation of a value and its type for readable error messages.
Convert the name argument to a list of names. Examples -------- >>> parse_notifier_name('a') ['a'] >>>
Set the default value on a per instance basis. This method is called by :meth:`instance_init`
Setup a handler to be called when a trait changes. This is used to setup
Get a list of all the traits of this class. This method is just like
Get metadata values for trait by key.
Validates that the value is a valid object instance.
Returns a description of the trait.
Instantiate a default value instance. This is called when the containing HasTraits classes' :meth:`__new__` method
Returns a description of the trait.
Helper for @require decorator.
Simple decorator for requiring names to be importable. Examples -------- In [1]: @require('numpy') ...: def
check whether our dependencies have been met.
return whether this dependency has become impossible.
Represent this dependency as a dict. For json compatibility.
Returns a Solver instance
Returns a Solver instance
construct {child:parent} dict representation of a binary tree keys are the nodes in the tree,
construct {parent:[children]} dict from {child:parent} keys are the nodes in the tree, and values are
get depth of an element in the tree
print a binary tree
accept either IP address or dns name, and return IP
connect to peers. `peers` will be a dict of 4-tuples, keyed by name. {peer :
parallel reduce on binary tree if flat: value is an entry in the sequence else:
parallel reduce followed by broadcast of the result
construct
turn any valid targets argument into a list of integer ids
all ME and Task queue messages come through here, as well as IOPub traffic.
Route registration requests and queries from clients.
handler to attach to heartbeater. Called when a new heart starts to beat. Triggers completion
handler to attach to heartbeater. called when a previously registered heart fails to respond to
Save the submission of a task.
save the result of a completed task.
save an iopub message into the db
Reply with connection addresses for clients.
Register a new engine.
Unregister an engine that explicitly requested to leave.
Handle messages known to be on an engine when the engine unregisters. It is possible
Second half of engine registration, called after our HeartMonitor has received a beat from the
handle shutdown request.
Return the Queue status of one or more targets. if verbose: return the msg_ids else:
Purge results from memory. This method is more valuable before we move to a DB
Resubmit one or more tasks.
decompose a TaskRecord dict into subsection of reply for get_result
Get the result of 1 or more messages.
Get a list of all msg_ids in our DB records
Perform a raw query on the task record database.
go to the path
return a standard message
subprocess run on here
Execute R script
Disconnect from the current kernel manager (if any) and set a new kernel manager.
Calls the frontend handler associated with the message type of the given message.
Returns whether a reply from the kernel originated from a request from this frontend.
Run the report. See `coverage.report()` for arguments.
Annotate a single file. `cu` is the CodeUnit for the file to annotate.
returns a list of tuples (package_name, description) for apt-cache search results
returns installed package version and None if package is not installed
coerce unicode back to bytestrings.
Set the default behavior for a config environment to be secure. If Session.key/keyfile have not
Given a message or header, return the header.
check packers for binary data and datetime support.
Return the nested message dict. This format is different from what is sent over the
Sign a message with HMAC digest. If no auth, return b''. Parameters ---------- msg_list :
Serialize the message components to bytes. This is roughly the inverse of unserialize. The serialize/unserialize
Build and send a message via stream or socket. The message format used by this
Send a raw message via ident path. This method is used to send a already
Receive and unpack a message. Parameters ---------- socket : ZMQStream or Socket The socket or
Split the identities from the rest of the message. Feed until DELIM is reached, then
Unserialize a msg_list to a nested message dict. This is roughly the inverse of serialize.
Prompts the user to save an SVG document to disk. Parameters: ----------- string : basestring
Copy a SVG document to the clipboard. Parameters: ----------- string : basestring A Python string
Convert a SVG document to a QImage. Parameters: ----------- string : basestring A Python string
Make an object info dict with all fields present.
Stable wrapper around inspect.getdoc. This can't crash because of attribute problems. It also attempts to
Wrapper around inspect.getsource. This can be modified by other projects to provide customized source extraction.
Get the names and default values of a function's arguments. A tuple of four things
Extract call tip data from an oinfo dict. Parameters ---------- oinfo : dict format_call :
Find the absolute path to the file where an object was defined. This is essentially
Find the line number in a file where an object was defined. This is essentially
Return the definition header for any callable object. If any exception is generated, None is
Return a header string with proper colors.
Generic message when no information is found.
Print the definition header for any callable object. If the object is a class, print
Print the docstring for any object. Optional: -formatter: a function to run the docstring through
Print the source code for an object.
Show the whole file where an object was defined.
Formats a list of fields for display. Parameters ---------- fields : list A list of
Show detailed information about an object. Optional arguments: - oname: name of the variable pointing
Compute a dict with detailed information about an object. Optional arguments: - oname: name of
Search namespaces with wildcards for objects. Arguments: - pattern: string containing shell-like wildcards to use
Start the Twisted reactor in a separate thread, if not already done. Returns the reactor.
Stop the reactor and join the reactor thread until it stops. Call this function in
By wrapping a test function with this decorator, you can return a twisted Deferred and
Return best matching substring of corpus. Parameters ---------- query : str corpus : str step
Return a function to the `name` method on a singleton `coverage` object. The singleton object
Encodes the stored ``data`` to XML and returns a ``string``. Setting ``indent`` to ``False`` will
Encodes the stored ``data`` to XML and returns an ``lxml.etree`` value.
Recursively loads all modules from a package object, or set of package objects :param package_or_set_of_packages:
Helper function for merge. Takes a dictionary whose values are lists and returns a dict
Merge two Structs with customizable conflict resolution. This is similar to :meth:`update`, but much more
like `vars()` but support `__slots__`.
convert object to primitive type so we can serialize it to data format like python.
Run as a command-line script: colorize a python file or stdin using ANSI color escapes
Parse and send the colored source. If out and scheme are not specified, the defaults
Get a list of matplotlib figures by figure numbers. If no arguments are given, all
Convert a figure to svg or png for inline display.
Factory to return a matplotlib-enabled runner for %run. Parameters ---------- safe_execfile : function This must
Select figure format for inline backend, either 'png' or 'svg'. Using this method ensures only
Given a gui string return the gui and mpl backend. Parameters ---------- gui : str
Activate the given backend and set interactive to True.
Import the standard pylab symbols into user_ns.
Configure an IPython shell object for matplotlib use. Parameters ---------- shell : InteractiveShell instance backend
Activate pylab mode in the user's namespace. Loads and initializes numpy, matplotlib and friends for
The trace function passed to sys.settrace.
Start this Tracer. Return a Python function suitable for use with sys.settrace().
Stop this Tracer.
Start a new Tracer object, and store it in self.tracers.
Called on new threads, installs the real tracer.
Start collecting trace information.
Stop collecting trace information.
Pause tracing, but be prepared to `resume`.
Resume tracing after a `pause`.
Return the line data collected. Data is { filename: { lineno: None, ...}, ...}
Create a new code cell with input and output
Create a new text cell.
Create a notebook by name, id and a list of worksheets.
Shorthand for 'assert a == b, "%r != %r" % (a, b)
check a result dict for errors, and raise CompositeError if any exist. Passthrough otherwise.
render one or all of my tracebacks to a list of lines
Call this at Python startup to perhaps measure coverage. If the environment variable COVERAGE_PROCESS_START is
Return the canonical directory of the module or file `morf`.
Return the source file for `filename`.
Decide whether to trace execution in `filename`, with a reason. This function is called from
Decide whether to trace execution in `filename`. Calls `_should_trace_with_reason`, and returns just the decision.
Use `msg` as a warning.
Update the source_match matcher with latest imported packages.
Start measuring code coverage. Coverage measurement actually occurs in functions called after `start` is invoked.
Clean up on process shutdown.
Exclude source lines from execution consideration. A number of lists of regular expressions are maintained.
Return a compiled regex for the given exclusion list.
Save the collected coverage data to the data file.
Combine together a number of similarly-named coverage data files. All coverage data files whose name
Get the collected data and reset the collector. Also warn about various problems collecting data.
Like `analysis2` but doesn't return excluded line numbers.
Analyze a module. `morf` is a module or a filename. It will be analyzed to
Analyze a single morf or code unit. Returns an `Analysis` object.
Write a summary report to `file`. Each module in `morfs` is listed, with counts of
Annotate a list of modules. Each module in `morfs` is annotated. The source is written
Generate an HTML report. The HTML is written to `directory`. The file "index.html" is the
Generate an XML report of coverage results. The report is compatible with Cobertura reports. Each
Return a list of (key, value) pairs showing internal information.
Display a Python object in all frontends. By default all representations will be computed and
Display the pretty (default) representation of an object. Parameters ---------- objs : tuple of objects
Display the HTML representation of an object. Parameters ---------- objs : tuple of objects The
Display the SVG representation of an object. Parameters ---------- objs : tuple of objects The
Display the PNG representation of an object. Parameters ---------- objs : tuple of objects The
Display the JPEG representation of an object. Parameters ---------- objs : tuple of objects The
Display the LaTeX representation of an object. Parameters ---------- objs : tuple of objects The
Display the JSON representation of an object. Note that not many frontends support displaying JSON.
Display the Javascript representation of an object. Parameters ---------- objs : tuple of objects The
Clear the output of the current cell receiving output. Optionally, each of stdout/stderr or other
Reload the raw data from file or URL.
Check for an update for pip. Limit the frequency of checks to once per week.
Find the full path to a command using which.
Run a command and return its stdout/stderr as a string. Parameters ---------- cmd : str
Execute a command in a subshell. Parameters ---------- cmd : str A command to be
Forward read events from an FD over a socket. This method wraps a file in
Loop through lines in self.fd, and send them over self.sock.
Return a launcher for a given clsname and kind. Parameters ========== clsname : str The
Start the app for the stop subcommand.
import and instantiate a Launcher based on importstring
Start the app for the engines subcommand.
Start the app for the start subcommand.
Create a new wx app or return an exiting one.
Is the wx event loop running.
Start the wx event loop in a consistent manner.
Create a new qt4 app or return an existing one.
Is the qt4 event loop running.
Start the qt4 event loop in a consistent manner.
Check namespace packages' __init__ for declare_namespace
Return a blank canvas to annotate. :param width: xdim (int) :param height: ydim (int) :returns:
Draw a cross on the canvas. :param position: (row, col) tuple :param color: RGB tuple
Draw a line between pos1 and pos2 on the canvas. :param pos1: position 1 (row,
Write text at x, y top left corner position. By default the x and y
Return a canvas from a grayscale image. :param im: single channel image :channels_on: channels to
Returns a unique ID of a given length. User `version=2` for cross-systems uniqueness.
Converts a dict to an encoded URL. Example: given data = {'a': 1, 'b': 2},
Converts an encoded URL to a dict. Example: given string = 'a=1&b=2' it returns {'a':
Build a unique key from get data
Given a decimal number, returns a string bitfield of length = len Example: given deci_num
Validates and email address. Note: valid emails must follow the <name>@<domain><.extension> patterns.
Returns domain name portion of a URL
Returns a dictionary from a URL params